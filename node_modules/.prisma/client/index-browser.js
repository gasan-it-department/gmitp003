
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.LineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  password: 'password',
  barangayId: 'barangayId',
  municipalId: 'municipalId',
  provinceId: 'provinceId',
  regionId: 'regionId',
  createdAt: 'createdAt',
  status: 'status',
  adminProfileId: 'adminProfileId'
};

exports.Prisma.InvitationLinkScalarFieldEnum = {
  id: 'id',
  code: 'code',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  used: 'used',
  url: 'url',
  lineId: 'lineId'
};

exports.Prisma.AssetsScalarFieldEnum = {
  id: 'id',
  url: 'url',
  fileSize: 'fileSize',
  fileType: 'fileType',
  fileName: 'fileName',
  createdAt: 'createdAt',
  suppliesId: 'suppliesId'
};

exports.Prisma.ProfilePictureScalarFieldEnum = {
  id: 'id',
  assetsId: 'assetsId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.InventoryBoxScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  createdAt: 'createdAt',
  lineId: 'lineId',
  userId: 'userId',
  departmentId: 'departmentId'
};

exports.Prisma.ContainerAllowedUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  inventoryBoxId: 'inventoryBoxId',
  grantByUserId: 'grantByUserId',
  timestamp: 'timestamp'
};

exports.Prisma.InventoryAccessLogsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  timestamp: 'timestamp',
  inventoryBoxId: 'inventoryBoxId',
  action: 'action',
  suppliesId: 'suppliesId'
};

exports.Prisma.SuppliesScalarFieldEnum = {
  id: 'id',
  code: 'code',
  consumable: 'consumable',
  item: 'item',
  description: 'description',
  quantity: 'quantity',
  notifyAtStockOf: 'notifyAtStockOf',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lineId: 'lineId',
  userId: 'userId',
  condition: 'condition',
  status: 'status',
  suppliesCategoryId: 'suppliesCategoryId',
  suppliesQualityId: 'suppliesQualityId',
  suppliesDataSetId: 'suppliesDataSetId'
};

exports.Prisma.SupplyBatchScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  title: 'title',
  inventoryBoxId: 'inventoryBoxId',
  suppliesDataSetId: 'suppliesDataSetId'
};

exports.Prisma.SupplyBatchItemScalarFieldEnum = {
  id: 'id',
  supplyBatchId: 'supplyBatchId',
  suppliesId: 'suppliesId',
  timestamp: 'timestamp'
};

exports.Prisma.SupplyBatchOrderScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  title: 'title',
  userId: 'userId',
  status: 'status',
  lineId: 'lineId',
  inventoryBoxId: 'inventoryBoxId'
};

exports.Prisma.SupplyOrderSupportFileScalarFieldEnum = {
  id: 'id',
  assetsId: 'assetsId',
  supplyBatchOrderId: 'supplyBatchOrderId'
};

exports.Prisma.SupplyOrderScalarFieldEnum = {
  id: 'id',
  supplyBatchOrderId: 'supplyBatchOrderId',
  suppliesId: 'suppliesId',
  quantity: 'quantity',
  status: 'status',
  suppliesQualityId: 'suppliesQualityId'
};

exports.Prisma.SuppliesDataSetScalarFieldEnum = {
  id: 'id',
  title: 'title',
  timestamp: 'timestamp',
  lineId: 'lineId',
  inventoryBoxId: 'inventoryBoxId'
};

exports.Prisma.SuppliesQualityScalarFieldEnum = {
  id: 'id',
  quality: 'quality',
  perQuality: 'perQuality',
  suppliesDataSetId: 'suppliesDataSetId'
};

exports.Prisma.SupplyPriceTrackScalarFieldEnum = {
  id: 'id',
  value: 'value',
  suppliesId: 'suppliesId',
  timestamp: 'timestamp'
};

exports.Prisma.SupplyStockTrackScalarFieldEnum = {
  id: 'id',
  stock: 'stock',
  suppliesId: 'suppliesId',
  timestamp: 'timestamp'
};

exports.Prisma.SuppliesCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.SupplieRecieveHistoryScalarFieldEnum = {
  id: 'id',
  suppliesId: 'suppliesId',
  userId: 'userId',
  timestamp: 'timestamp',
  quantity: 'quantity',
  condition: 'condition'
};

exports.Prisma.TransferredSuppliesScalarFieldEnum = {
  id: 'id',
  suppliesId: 'suppliesId',
  userId: 'userId',
  transferredToId: 'transferredToId',
  timestamp: 'timestamp',
  condition: 'condition'
};

exports.Prisma.SuppliesRecordScalarFieldEnum = {
  id: 'id',
  suppliesId: 'suppliesId',
  timestamp: 'timestamp',
  userId: 'userId',
  action: 'action',
  status: 'status',
  description: 'description',
  modifiedId: 'modifiedId'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  positionId: 'positionId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  headId: 'headId',
  idCode: 'idCode',
  lineId: 'lineId'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  departmentId: 'departmentId',
  name: 'name',
  createdAt: 'createdAt',
  lineId: 'lineId',
  userId: 'userId'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password'
};

exports.Prisma.AdminProfileScalarFieldEnum = {
  id: 'id',
  username: 'username'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  status: 'status',
  role: 'role',
  active: 'active',
  lineId: 'lineId'
};

exports.Prisma.PrivilegeScalarFieldEnum = {
  id: 'id',
  humanResources: 'humanResources',
  inventory: 'inventory',
  super: 'super'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  middleName: 'middleName',
  suffix: 'suffix',
  birthDate: 'birthDate',
  email: 'email',
  username: 'username',
  gender: 'gender',
  profilePicture: 'profilePicture',
  createdAt: 'createdAt',
  level: 'level',
  type: 'type',
  step: 'step',
  status: 'status',
  departmentId: 'departmentId',
  positionId: 'positionId',
  salaryGradeId: 'salaryGradeId',
  accountId: 'accountId',
  regionId: 'regionId',
  municipalId: 'municipalId',
  provinceId: 'provinceId',
  barangayId: 'barangayId',
  lineId: 'lineId',
  privilegeId: 'privilegeId',
  groupId: 'groupId'
};

exports.Prisma.LogRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  timestamp: 'timestamp'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  recipientId: 'recipientId',
  senderId: 'senderId',
  path: 'path',
  isRead: 'isRead'
};

exports.Prisma.PositionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  max: 'max',
  createdAt: 'createdAt',
  itemNumber: 'itemNumber',
  salaryGradeId: 'salaryGradeId',
  plantilla: 'plantilla',
  lineId: 'lineId',
  departmentId: 'departmentId'
};

exports.Prisma.PositionSlotScalarFieldEnum = {
  id: 'id',
  positionId: 'positionId',
  salaryGradeId: 'salaryGradeId',
  userId: 'userId'
};

exports.Prisma.SalaryGradeScalarFieldEnum = {
  id: 'id',
  grade: 'grade',
  amount: 'amount',
  createdAt: 'createdAt',
  lineId: 'lineId'
};

exports.Prisma.SalaryGradeHistoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  salaryGradeId: 'salaryGradeId',
  effectiveDate: 'effectiveDate',
  createdAt: 'createdAt',
  amount: 'amount'
};

exports.Prisma.LeaveScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  startDate: 'startDate',
  endDate: 'endDate',
  reason: 'reason',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.AnnouncementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  authorId: 'authorId',
  lineId: 'lineId',
  path: 'path',
  important: 'important',
  departmentId: 'departmentId'
};

exports.Prisma.PromotionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  timestamp: 'timestamp',
  positionId: 'positionId'
};

exports.Prisma.BirthdayNoticeResponseScalarFieldEnum = {
  id: 'id',
  message: 'message',
  like: 'like',
  timestamp: 'timestamp',
  senderId: 'senderId',
  recipientId: 'recipientId',
  lineId: 'lineId'
};

exports.Prisma.RegionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProvinceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  regionId: 'regionId'
};

exports.Prisma.MunicipalScalarFieldEnum = {
  id: 'id',
  name: 'name',
  provinceId: 'provinceId'
};

exports.Prisma.BarangayScalarFieldEnum = {
  id: 'id',
  name: 'name',
  municipalId: 'municipalId'
};

exports.Prisma.AccomplishmentScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  userId: 'userId',
  start: 'start',
  end: 'end',
  task: 'task'
};

exports.Prisma.AccomplishmentResponseScalarFieldEnum = {
  id: 'id',
  headId: 'headId',
  accomplishmentId: 'accomplishmentId',
  message: 'message',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Line: 'Line',
  InvitationLink: 'InvitationLink',
  Assets: 'Assets',
  ProfilePicture: 'ProfilePicture',
  InventoryBox: 'InventoryBox',
  ContainerAllowedUser: 'ContainerAllowedUser',
  InventoryAccessLogs: 'InventoryAccessLogs',
  Supplies: 'Supplies',
  SupplyBatch: 'SupplyBatch',
  SupplyBatchItem: 'SupplyBatchItem',
  SupplyBatchOrder: 'SupplyBatchOrder',
  SupplyOrderSupportFile: 'SupplyOrderSupportFile',
  SupplyOrder: 'SupplyOrder',
  SuppliesDataSet: 'SuppliesDataSet',
  SuppliesQuality: 'SuppliesQuality',
  SupplyPriceTrack: 'SupplyPriceTrack',
  SupplyStockTrack: 'SupplyStockTrack',
  SuppliesCategory: 'SuppliesCategory',
  SupplieRecieveHistory: 'SupplieRecieveHistory',
  TransferredSupplies: 'TransferredSupplies',
  SuppliesRecord: 'SuppliesRecord',
  Application: 'Application',
  Department: 'Department',
  Group: 'Group',
  Admin: 'Admin',
  AdminProfile: 'AdminProfile',
  Account: 'Account',
  Privilege: 'Privilege',
  User: 'User',
  LogRecord: 'LogRecord',
  Notification: 'Notification',
  Position: 'Position',
  PositionSlot: 'PositionSlot',
  SalaryGrade: 'SalaryGrade',
  SalaryGradeHistory: 'SalaryGradeHistory',
  Leave: 'Leave',
  Announcement: 'Announcement',
  Promotion: 'Promotion',
  BirthdayNoticeResponse: 'BirthdayNoticeResponse',
  Region: 'Region',
  Province: 'Province',
  Municipal: 'Municipal',
  Barangay: 'Barangay',
  Accomplishment: 'Accomplishment',
  AccomplishmentResponse: 'AccomplishmentResponse'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
