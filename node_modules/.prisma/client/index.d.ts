
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Line
 * 
 */
export type Line = $Result.DefaultSelection<Prisma.$LinePayload>
/**
 * Model InvitationLink
 * 
 */
export type InvitationLink = $Result.DefaultSelection<Prisma.$InvitationLinkPayload>
/**
 * Model Assets
 * 
 */
export type Assets = $Result.DefaultSelection<Prisma.$AssetsPayload>
/**
 * Model ProfilePicture
 * 
 */
export type ProfilePicture = $Result.DefaultSelection<Prisma.$ProfilePicturePayload>
/**
 * Model InventoryBox
 * 
 */
export type InventoryBox = $Result.DefaultSelection<Prisma.$InventoryBoxPayload>
/**
 * Model ContainerAllowedUser
 * 
 */
export type ContainerAllowedUser = $Result.DefaultSelection<Prisma.$ContainerAllowedUserPayload>
/**
 * Model InventoryAccessLogs
 * 
 */
export type InventoryAccessLogs = $Result.DefaultSelection<Prisma.$InventoryAccessLogsPayload>
/**
 * Model Supplies
 * 
 */
export type Supplies = $Result.DefaultSelection<Prisma.$SuppliesPayload>
/**
 * Model SupplyBatch
 * 
 */
export type SupplyBatch = $Result.DefaultSelection<Prisma.$SupplyBatchPayload>
/**
 * Model SupplyBatchItem
 * 
 */
export type SupplyBatchItem = $Result.DefaultSelection<Prisma.$SupplyBatchItemPayload>
/**
 * Model SupplyBatchOrder
 * 
 */
export type SupplyBatchOrder = $Result.DefaultSelection<Prisma.$SupplyBatchOrderPayload>
/**
 * Model SupplyOrderSupportFile
 * 
 */
export type SupplyOrderSupportFile = $Result.DefaultSelection<Prisma.$SupplyOrderSupportFilePayload>
/**
 * Model SupplyOrder
 * 
 */
export type SupplyOrder = $Result.DefaultSelection<Prisma.$SupplyOrderPayload>
/**
 * Model SuppliesDataSet
 * 
 */
export type SuppliesDataSet = $Result.DefaultSelection<Prisma.$SuppliesDataSetPayload>
/**
 * Model SuppliesQuality
 * 
 */
export type SuppliesQuality = $Result.DefaultSelection<Prisma.$SuppliesQualityPayload>
/**
 * Model SupplyPriceTrack
 * 
 */
export type SupplyPriceTrack = $Result.DefaultSelection<Prisma.$SupplyPriceTrackPayload>
/**
 * Model SupplyStockTrack
 * 
 */
export type SupplyStockTrack = $Result.DefaultSelection<Prisma.$SupplyStockTrackPayload>
/**
 * Model SuppliesCategory
 * 
 */
export type SuppliesCategory = $Result.DefaultSelection<Prisma.$SuppliesCategoryPayload>
/**
 * Model SupplieRecieveHistory
 * 
 */
export type SupplieRecieveHistory = $Result.DefaultSelection<Prisma.$SupplieRecieveHistoryPayload>
/**
 * Model TransferredSupplies
 * 
 */
export type TransferredSupplies = $Result.DefaultSelection<Prisma.$TransferredSuppliesPayload>
/**
 * Model SuppliesRecord
 * 
 */
export type SuppliesRecord = $Result.DefaultSelection<Prisma.$SuppliesRecordPayload>
/**
 * Model Application
 * 
 */
export type Application = $Result.DefaultSelection<Prisma.$ApplicationPayload>
/**
 * Model Department
 * 
 */
export type Department = $Result.DefaultSelection<Prisma.$DepartmentPayload>
/**
 * Model Group
 * 
 */
export type Group = $Result.DefaultSelection<Prisma.$GroupPayload>
/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model AdminProfile
 * 
 */
export type AdminProfile = $Result.DefaultSelection<Prisma.$AdminProfilePayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Privilege
 * 
 */
export type Privilege = $Result.DefaultSelection<Prisma.$PrivilegePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model LogRecord
 * 
 */
export type LogRecord = $Result.DefaultSelection<Prisma.$LogRecordPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Position
 * 
 */
export type Position = $Result.DefaultSelection<Prisma.$PositionPayload>
/**
 * Model PositionSlot
 * 
 */
export type PositionSlot = $Result.DefaultSelection<Prisma.$PositionSlotPayload>
/**
 * Model SalaryGrade
 * 
 */
export type SalaryGrade = $Result.DefaultSelection<Prisma.$SalaryGradePayload>
/**
 * Model SalaryGradeHistory
 * 
 */
export type SalaryGradeHistory = $Result.DefaultSelection<Prisma.$SalaryGradeHistoryPayload>
/**
 * Model Leave
 * 
 */
export type Leave = $Result.DefaultSelection<Prisma.$LeavePayload>
/**
 * Model Announcement
 * 
 */
export type Announcement = $Result.DefaultSelection<Prisma.$AnnouncementPayload>
/**
 * Model Promotion
 * 
 */
export type Promotion = $Result.DefaultSelection<Prisma.$PromotionPayload>
/**
 * Model BirthdayNoticeResponse
 * 
 */
export type BirthdayNoticeResponse = $Result.DefaultSelection<Prisma.$BirthdayNoticeResponsePayload>
/**
 * Model Region
 * 
 */
export type Region = $Result.DefaultSelection<Prisma.$RegionPayload>
/**
 * Model Province
 * 
 */
export type Province = $Result.DefaultSelection<Prisma.$ProvincePayload>
/**
 * Model Municipal
 * 
 */
export type Municipal = $Result.DefaultSelection<Prisma.$MunicipalPayload>
/**
 * Model Barangay
 * 
 */
export type Barangay = $Result.DefaultSelection<Prisma.$BarangayPayload>
/**
 * Model Accomplishment
 * 
 */
export type Accomplishment = $Result.DefaultSelection<Prisma.$AccomplishmentPayload>
/**
 * Model AccomplishmentResponse
 * 
 */
export type AccomplishmentResponse = $Result.DefaultSelection<Prisma.$AccomplishmentResponsePayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Lines
 * const lines = await prisma.line.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Lines
   * const lines = await prisma.line.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.line`: Exposes CRUD operations for the **Line** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lines
    * const lines = await prisma.line.findMany()
    * ```
    */
  get line(): Prisma.LineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invitationLink`: Exposes CRUD operations for the **InvitationLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvitationLinks
    * const invitationLinks = await prisma.invitationLink.findMany()
    * ```
    */
  get invitationLink(): Prisma.InvitationLinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.assets`: Exposes CRUD operations for the **Assets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Assets
    * const assets = await prisma.assets.findMany()
    * ```
    */
  get assets(): Prisma.AssetsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profilePicture`: Exposes CRUD operations for the **ProfilePicture** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProfilePictures
    * const profilePictures = await prisma.profilePicture.findMany()
    * ```
    */
  get profilePicture(): Prisma.ProfilePictureDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryBox`: Exposes CRUD operations for the **InventoryBox** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryBoxes
    * const inventoryBoxes = await prisma.inventoryBox.findMany()
    * ```
    */
  get inventoryBox(): Prisma.InventoryBoxDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.containerAllowedUser`: Exposes CRUD operations for the **ContainerAllowedUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ContainerAllowedUsers
    * const containerAllowedUsers = await prisma.containerAllowedUser.findMany()
    * ```
    */
  get containerAllowedUser(): Prisma.ContainerAllowedUserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventoryAccessLogs`: Exposes CRUD operations for the **InventoryAccessLogs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InventoryAccessLogs
    * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findMany()
    * ```
    */
  get inventoryAccessLogs(): Prisma.InventoryAccessLogsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplies`: Exposes CRUD operations for the **Supplies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Supplies
    * const supplies = await prisma.supplies.findMany()
    * ```
    */
  get supplies(): Prisma.SuppliesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyBatch`: Exposes CRUD operations for the **SupplyBatch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyBatches
    * const supplyBatches = await prisma.supplyBatch.findMany()
    * ```
    */
  get supplyBatch(): Prisma.SupplyBatchDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyBatchItem`: Exposes CRUD operations for the **SupplyBatchItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyBatchItems
    * const supplyBatchItems = await prisma.supplyBatchItem.findMany()
    * ```
    */
  get supplyBatchItem(): Prisma.SupplyBatchItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyBatchOrder`: Exposes CRUD operations for the **SupplyBatchOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyBatchOrders
    * const supplyBatchOrders = await prisma.supplyBatchOrder.findMany()
    * ```
    */
  get supplyBatchOrder(): Prisma.SupplyBatchOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyOrderSupportFile`: Exposes CRUD operations for the **SupplyOrderSupportFile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyOrderSupportFiles
    * const supplyOrderSupportFiles = await prisma.supplyOrderSupportFile.findMany()
    * ```
    */
  get supplyOrderSupportFile(): Prisma.SupplyOrderSupportFileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyOrder`: Exposes CRUD operations for the **SupplyOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyOrders
    * const supplyOrders = await prisma.supplyOrder.findMany()
    * ```
    */
  get supplyOrder(): Prisma.SupplyOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suppliesDataSet`: Exposes CRUD operations for the **SuppliesDataSet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SuppliesDataSets
    * const suppliesDataSets = await prisma.suppliesDataSet.findMany()
    * ```
    */
  get suppliesDataSet(): Prisma.SuppliesDataSetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suppliesQuality`: Exposes CRUD operations for the **SuppliesQuality** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SuppliesQualities
    * const suppliesQualities = await prisma.suppliesQuality.findMany()
    * ```
    */
  get suppliesQuality(): Prisma.SuppliesQualityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyPriceTrack`: Exposes CRUD operations for the **SupplyPriceTrack** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyPriceTracks
    * const supplyPriceTracks = await prisma.supplyPriceTrack.findMany()
    * ```
    */
  get supplyPriceTrack(): Prisma.SupplyPriceTrackDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplyStockTrack`: Exposes CRUD operations for the **SupplyStockTrack** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplyStockTracks
    * const supplyStockTracks = await prisma.supplyStockTrack.findMany()
    * ```
    */
  get supplyStockTrack(): Prisma.SupplyStockTrackDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suppliesCategory`: Exposes CRUD operations for the **SuppliesCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SuppliesCategories
    * const suppliesCategories = await prisma.suppliesCategory.findMany()
    * ```
    */
  get suppliesCategory(): Prisma.SuppliesCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplieRecieveHistory`: Exposes CRUD operations for the **SupplieRecieveHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupplieRecieveHistories
    * const supplieRecieveHistories = await prisma.supplieRecieveHistory.findMany()
    * ```
    */
  get supplieRecieveHistory(): Prisma.SupplieRecieveHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transferredSupplies`: Exposes CRUD operations for the **TransferredSupplies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransferredSupplies
    * const transferredSupplies = await prisma.transferredSupplies.findMany()
    * ```
    */
  get transferredSupplies(): Prisma.TransferredSuppliesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suppliesRecord`: Exposes CRUD operations for the **SuppliesRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SuppliesRecords
    * const suppliesRecords = await prisma.suppliesRecord.findMany()
    * ```
    */
  get suppliesRecord(): Prisma.SuppliesRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.application`: Exposes CRUD operations for the **Application** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Applications
    * const applications = await prisma.application.findMany()
    * ```
    */
  get application(): Prisma.ApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.department`: Exposes CRUD operations for the **Department** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departments
    * const departments = await prisma.department.findMany()
    * ```
    */
  get department(): Prisma.DepartmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.group`: Exposes CRUD operations for the **Group** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups
    * const groups = await prisma.group.findMany()
    * ```
    */
  get group(): Prisma.GroupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adminProfile`: Exposes CRUD operations for the **AdminProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdminProfiles
    * const adminProfiles = await prisma.adminProfile.findMany()
    * ```
    */
  get adminProfile(): Prisma.AdminProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.privilege`: Exposes CRUD operations for the **Privilege** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Privileges
    * const privileges = await prisma.privilege.findMany()
    * ```
    */
  get privilege(): Prisma.PrivilegeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.logRecord`: Exposes CRUD operations for the **LogRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LogRecords
    * const logRecords = await prisma.logRecord.findMany()
    * ```
    */
  get logRecord(): Prisma.LogRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.position`: Exposes CRUD operations for the **Position** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Positions
    * const positions = await prisma.position.findMany()
    * ```
    */
  get position(): Prisma.PositionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.positionSlot`: Exposes CRUD operations for the **PositionSlot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PositionSlots
    * const positionSlots = await prisma.positionSlot.findMany()
    * ```
    */
  get positionSlot(): Prisma.PositionSlotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salaryGrade`: Exposes CRUD operations for the **SalaryGrade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalaryGrades
    * const salaryGrades = await prisma.salaryGrade.findMany()
    * ```
    */
  get salaryGrade(): Prisma.SalaryGradeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salaryGradeHistory`: Exposes CRUD operations for the **SalaryGradeHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalaryGradeHistories
    * const salaryGradeHistories = await prisma.salaryGradeHistory.findMany()
    * ```
    */
  get salaryGradeHistory(): Prisma.SalaryGradeHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leave`: Exposes CRUD operations for the **Leave** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leaves
    * const leaves = await prisma.leave.findMany()
    * ```
    */
  get leave(): Prisma.LeaveDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.announcement`: Exposes CRUD operations for the **Announcement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Announcements
    * const announcements = await prisma.announcement.findMany()
    * ```
    */
  get announcement(): Prisma.AnnouncementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotion`: Exposes CRUD operations for the **Promotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotion.findMany()
    * ```
    */
  get promotion(): Prisma.PromotionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.birthdayNoticeResponse`: Exposes CRUD operations for the **BirthdayNoticeResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BirthdayNoticeResponses
    * const birthdayNoticeResponses = await prisma.birthdayNoticeResponse.findMany()
    * ```
    */
  get birthdayNoticeResponse(): Prisma.BirthdayNoticeResponseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.region`: Exposes CRUD operations for the **Region** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Regions
    * const regions = await prisma.region.findMany()
    * ```
    */
  get region(): Prisma.RegionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.province`: Exposes CRUD operations for the **Province** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provinces
    * const provinces = await prisma.province.findMany()
    * ```
    */
  get province(): Prisma.ProvinceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.municipal`: Exposes CRUD operations for the **Municipal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Municipals
    * const municipals = await prisma.municipal.findMany()
    * ```
    */
  get municipal(): Prisma.MunicipalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.barangay`: Exposes CRUD operations for the **Barangay** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Barangays
    * const barangays = await prisma.barangay.findMany()
    * ```
    */
  get barangay(): Prisma.BarangayDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.accomplishment`: Exposes CRUD operations for the **Accomplishment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accomplishments
    * const accomplishments = await prisma.accomplishment.findMany()
    * ```
    */
  get accomplishment(): Prisma.AccomplishmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.accomplishmentResponse`: Exposes CRUD operations for the **AccomplishmentResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AccomplishmentResponses
    * const accomplishmentResponses = await prisma.accomplishmentResponse.findMany()
    * ```
    */
  get accomplishmentResponse(): Prisma.AccomplishmentResponseDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Line: 'Line',
    InvitationLink: 'InvitationLink',
    Assets: 'Assets',
    ProfilePicture: 'ProfilePicture',
    InventoryBox: 'InventoryBox',
    ContainerAllowedUser: 'ContainerAllowedUser',
    InventoryAccessLogs: 'InventoryAccessLogs',
    Supplies: 'Supplies',
    SupplyBatch: 'SupplyBatch',
    SupplyBatchItem: 'SupplyBatchItem',
    SupplyBatchOrder: 'SupplyBatchOrder',
    SupplyOrderSupportFile: 'SupplyOrderSupportFile',
    SupplyOrder: 'SupplyOrder',
    SuppliesDataSet: 'SuppliesDataSet',
    SuppliesQuality: 'SuppliesQuality',
    SupplyPriceTrack: 'SupplyPriceTrack',
    SupplyStockTrack: 'SupplyStockTrack',
    SuppliesCategory: 'SuppliesCategory',
    SupplieRecieveHistory: 'SupplieRecieveHistory',
    TransferredSupplies: 'TransferredSupplies',
    SuppliesRecord: 'SuppliesRecord',
    Application: 'Application',
    Department: 'Department',
    Group: 'Group',
    Admin: 'Admin',
    AdminProfile: 'AdminProfile',
    Account: 'Account',
    Privilege: 'Privilege',
    User: 'User',
    LogRecord: 'LogRecord',
    Notification: 'Notification',
    Position: 'Position',
    PositionSlot: 'PositionSlot',
    SalaryGrade: 'SalaryGrade',
    SalaryGradeHistory: 'SalaryGradeHistory',
    Leave: 'Leave',
    Announcement: 'Announcement',
    Promotion: 'Promotion',
    BirthdayNoticeResponse: 'BirthdayNoticeResponse',
    Region: 'Region',
    Province: 'Province',
    Municipal: 'Municipal',
    Barangay: 'Barangay',
    Accomplishment: 'Accomplishment',
    AccomplishmentResponse: 'AccomplishmentResponse'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "line" | "invitationLink" | "assets" | "profilePicture" | "inventoryBox" | "containerAllowedUser" | "inventoryAccessLogs" | "supplies" | "supplyBatch" | "supplyBatchItem" | "supplyBatchOrder" | "supplyOrderSupportFile" | "supplyOrder" | "suppliesDataSet" | "suppliesQuality" | "supplyPriceTrack" | "supplyStockTrack" | "suppliesCategory" | "supplieRecieveHistory" | "transferredSupplies" | "suppliesRecord" | "application" | "department" | "group" | "admin" | "adminProfile" | "account" | "privilege" | "user" | "logRecord" | "notification" | "position" | "positionSlot" | "salaryGrade" | "salaryGradeHistory" | "leave" | "announcement" | "promotion" | "birthdayNoticeResponse" | "region" | "province" | "municipal" | "barangay" | "accomplishment" | "accomplishmentResponse"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Line: {
        payload: Prisma.$LinePayload<ExtArgs>
        fields: Prisma.LineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          findFirst: {
            args: Prisma.LineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          findMany: {
            args: Prisma.LineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>[]
          }
          create: {
            args: Prisma.LineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          createMany: {
            args: Prisma.LineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>[]
          }
          delete: {
            args: Prisma.LineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          update: {
            args: Prisma.LineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          deleteMany: {
            args: Prisma.LineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LineUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>[]
          }
          upsert: {
            args: Prisma.LineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinePayload>
          }
          aggregate: {
            args: Prisma.LineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLine>
          }
          groupBy: {
            args: Prisma.LineGroupByArgs<ExtArgs>
            result: $Utils.Optional<LineGroupByOutputType>[]
          }
          count: {
            args: Prisma.LineCountArgs<ExtArgs>
            result: $Utils.Optional<LineCountAggregateOutputType> | number
          }
        }
      }
      InvitationLink: {
        payload: Prisma.$InvitationLinkPayload<ExtArgs>
        fields: Prisma.InvitationLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvitationLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvitationLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          findFirst: {
            args: Prisma.InvitationLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvitationLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          findMany: {
            args: Prisma.InvitationLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>[]
          }
          create: {
            args: Prisma.InvitationLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          createMany: {
            args: Prisma.InvitationLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvitationLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>[]
          }
          delete: {
            args: Prisma.InvitationLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          update: {
            args: Prisma.InvitationLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          deleteMany: {
            args: Prisma.InvitationLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvitationLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvitationLinkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>[]
          }
          upsert: {
            args: Prisma.InvitationLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationLinkPayload>
          }
          aggregate: {
            args: Prisma.InvitationLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvitationLink>
          }
          groupBy: {
            args: Prisma.InvitationLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvitationLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvitationLinkCountArgs<ExtArgs>
            result: $Utils.Optional<InvitationLinkCountAggregateOutputType> | number
          }
        }
      }
      Assets: {
        payload: Prisma.$AssetsPayload<ExtArgs>
        fields: Prisma.AssetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssetsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssetsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          findFirst: {
            args: Prisma.AssetsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssetsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          findMany: {
            args: Prisma.AssetsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>[]
          }
          create: {
            args: Prisma.AssetsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          createMany: {
            args: Prisma.AssetsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssetsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>[]
          }
          delete: {
            args: Prisma.AssetsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          update: {
            args: Prisma.AssetsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          deleteMany: {
            args: Prisma.AssetsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssetsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssetsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>[]
          }
          upsert: {
            args: Prisma.AssetsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetsPayload>
          }
          aggregate: {
            args: Prisma.AssetsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssets>
          }
          groupBy: {
            args: Prisma.AssetsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssetsCountArgs<ExtArgs>
            result: $Utils.Optional<AssetsCountAggregateOutputType> | number
          }
        }
      }
      ProfilePicture: {
        payload: Prisma.$ProfilePicturePayload<ExtArgs>
        fields: Prisma.ProfilePictureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfilePictureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfilePictureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          findFirst: {
            args: Prisma.ProfilePictureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfilePictureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          findMany: {
            args: Prisma.ProfilePictureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>[]
          }
          create: {
            args: Prisma.ProfilePictureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          createMany: {
            args: Prisma.ProfilePictureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfilePictureCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>[]
          }
          delete: {
            args: Prisma.ProfilePictureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          update: {
            args: Prisma.ProfilePictureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          deleteMany: {
            args: Prisma.ProfilePictureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfilePictureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfilePictureUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>[]
          }
          upsert: {
            args: Prisma.ProfilePictureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePicturePayload>
          }
          aggregate: {
            args: Prisma.ProfilePictureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfilePicture>
          }
          groupBy: {
            args: Prisma.ProfilePictureGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfilePictureGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfilePictureCountArgs<ExtArgs>
            result: $Utils.Optional<ProfilePictureCountAggregateOutputType> | number
          }
        }
      }
      InventoryBox: {
        payload: Prisma.$InventoryBoxPayload<ExtArgs>
        fields: Prisma.InventoryBoxFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryBoxFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryBoxFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          findFirst: {
            args: Prisma.InventoryBoxFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryBoxFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          findMany: {
            args: Prisma.InventoryBoxFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>[]
          }
          create: {
            args: Prisma.InventoryBoxCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          createMany: {
            args: Prisma.InventoryBoxCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryBoxCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>[]
          }
          delete: {
            args: Prisma.InventoryBoxDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          update: {
            args: Prisma.InventoryBoxUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          deleteMany: {
            args: Prisma.InventoryBoxDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryBoxUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryBoxUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>[]
          }
          upsert: {
            args: Prisma.InventoryBoxUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryBoxPayload>
          }
          aggregate: {
            args: Prisma.InventoryBoxAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryBox>
          }
          groupBy: {
            args: Prisma.InventoryBoxGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryBoxGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryBoxCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryBoxCountAggregateOutputType> | number
          }
        }
      }
      ContainerAllowedUser: {
        payload: Prisma.$ContainerAllowedUserPayload<ExtArgs>
        fields: Prisma.ContainerAllowedUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContainerAllowedUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContainerAllowedUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          findFirst: {
            args: Prisma.ContainerAllowedUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContainerAllowedUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          findMany: {
            args: Prisma.ContainerAllowedUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>[]
          }
          create: {
            args: Prisma.ContainerAllowedUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          createMany: {
            args: Prisma.ContainerAllowedUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContainerAllowedUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>[]
          }
          delete: {
            args: Prisma.ContainerAllowedUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          update: {
            args: Prisma.ContainerAllowedUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          deleteMany: {
            args: Prisma.ContainerAllowedUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContainerAllowedUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContainerAllowedUserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>[]
          }
          upsert: {
            args: Prisma.ContainerAllowedUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContainerAllowedUserPayload>
          }
          aggregate: {
            args: Prisma.ContainerAllowedUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContainerAllowedUser>
          }
          groupBy: {
            args: Prisma.ContainerAllowedUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContainerAllowedUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContainerAllowedUserCountArgs<ExtArgs>
            result: $Utils.Optional<ContainerAllowedUserCountAggregateOutputType> | number
          }
        }
      }
      InventoryAccessLogs: {
        payload: Prisma.$InventoryAccessLogsPayload<ExtArgs>
        fields: Prisma.InventoryAccessLogsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventoryAccessLogsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventoryAccessLogsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          findFirst: {
            args: Prisma.InventoryAccessLogsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventoryAccessLogsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          findMany: {
            args: Prisma.InventoryAccessLogsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>[]
          }
          create: {
            args: Prisma.InventoryAccessLogsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          createMany: {
            args: Prisma.InventoryAccessLogsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventoryAccessLogsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>[]
          }
          delete: {
            args: Prisma.InventoryAccessLogsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          update: {
            args: Prisma.InventoryAccessLogsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          deleteMany: {
            args: Prisma.InventoryAccessLogsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventoryAccessLogsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventoryAccessLogsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>[]
          }
          upsert: {
            args: Prisma.InventoryAccessLogsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventoryAccessLogsPayload>
          }
          aggregate: {
            args: Prisma.InventoryAccessLogsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventoryAccessLogs>
          }
          groupBy: {
            args: Prisma.InventoryAccessLogsGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventoryAccessLogsGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventoryAccessLogsCountArgs<ExtArgs>
            result: $Utils.Optional<InventoryAccessLogsCountAggregateOutputType> | number
          }
        }
      }
      Supplies: {
        payload: Prisma.$SuppliesPayload<ExtArgs>
        fields: Prisma.SuppliesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SuppliesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SuppliesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          findFirst: {
            args: Prisma.SuppliesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SuppliesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          findMany: {
            args: Prisma.SuppliesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>[]
          }
          create: {
            args: Prisma.SuppliesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          createMany: {
            args: Prisma.SuppliesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SuppliesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>[]
          }
          delete: {
            args: Prisma.SuppliesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          update: {
            args: Prisma.SuppliesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          deleteMany: {
            args: Prisma.SuppliesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SuppliesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SuppliesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>[]
          }
          upsert: {
            args: Prisma.SuppliesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesPayload>
          }
          aggregate: {
            args: Prisma.SuppliesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplies>
          }
          groupBy: {
            args: Prisma.SuppliesGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuppliesGroupByOutputType>[]
          }
          count: {
            args: Prisma.SuppliesCountArgs<ExtArgs>
            result: $Utils.Optional<SuppliesCountAggregateOutputType> | number
          }
        }
      }
      SupplyBatch: {
        payload: Prisma.$SupplyBatchPayload<ExtArgs>
        fields: Prisma.SupplyBatchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyBatchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyBatchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          findFirst: {
            args: Prisma.SupplyBatchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyBatchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          findMany: {
            args: Prisma.SupplyBatchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>[]
          }
          create: {
            args: Prisma.SupplyBatchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          createMany: {
            args: Prisma.SupplyBatchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyBatchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>[]
          }
          delete: {
            args: Prisma.SupplyBatchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          update: {
            args: Prisma.SupplyBatchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          deleteMany: {
            args: Prisma.SupplyBatchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyBatchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyBatchUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>[]
          }
          upsert: {
            args: Prisma.SupplyBatchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchPayload>
          }
          aggregate: {
            args: Prisma.SupplyBatchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyBatch>
          }
          groupBy: {
            args: Prisma.SupplyBatchGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyBatchCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchCountAggregateOutputType> | number
          }
        }
      }
      SupplyBatchItem: {
        payload: Prisma.$SupplyBatchItemPayload<ExtArgs>
        fields: Prisma.SupplyBatchItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyBatchItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyBatchItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          findFirst: {
            args: Prisma.SupplyBatchItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyBatchItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          findMany: {
            args: Prisma.SupplyBatchItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>[]
          }
          create: {
            args: Prisma.SupplyBatchItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          createMany: {
            args: Prisma.SupplyBatchItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyBatchItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>[]
          }
          delete: {
            args: Prisma.SupplyBatchItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          update: {
            args: Prisma.SupplyBatchItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          deleteMany: {
            args: Prisma.SupplyBatchItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyBatchItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyBatchItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>[]
          }
          upsert: {
            args: Prisma.SupplyBatchItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchItemPayload>
          }
          aggregate: {
            args: Prisma.SupplyBatchItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyBatchItem>
          }
          groupBy: {
            args: Prisma.SupplyBatchItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyBatchItemCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchItemCountAggregateOutputType> | number
          }
        }
      }
      SupplyBatchOrder: {
        payload: Prisma.$SupplyBatchOrderPayload<ExtArgs>
        fields: Prisma.SupplyBatchOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyBatchOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyBatchOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          findFirst: {
            args: Prisma.SupplyBatchOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyBatchOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          findMany: {
            args: Prisma.SupplyBatchOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>[]
          }
          create: {
            args: Prisma.SupplyBatchOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          createMany: {
            args: Prisma.SupplyBatchOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyBatchOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>[]
          }
          delete: {
            args: Prisma.SupplyBatchOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          update: {
            args: Prisma.SupplyBatchOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          deleteMany: {
            args: Prisma.SupplyBatchOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyBatchOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyBatchOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>[]
          }
          upsert: {
            args: Prisma.SupplyBatchOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyBatchOrderPayload>
          }
          aggregate: {
            args: Prisma.SupplyBatchOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyBatchOrder>
          }
          groupBy: {
            args: Prisma.SupplyBatchOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyBatchOrderCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyBatchOrderCountAggregateOutputType> | number
          }
        }
      }
      SupplyOrderSupportFile: {
        payload: Prisma.$SupplyOrderSupportFilePayload<ExtArgs>
        fields: Prisma.SupplyOrderSupportFileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyOrderSupportFileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyOrderSupportFileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          findFirst: {
            args: Prisma.SupplyOrderSupportFileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyOrderSupportFileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          findMany: {
            args: Prisma.SupplyOrderSupportFileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>[]
          }
          create: {
            args: Prisma.SupplyOrderSupportFileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          createMany: {
            args: Prisma.SupplyOrderSupportFileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyOrderSupportFileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>[]
          }
          delete: {
            args: Prisma.SupplyOrderSupportFileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          update: {
            args: Prisma.SupplyOrderSupportFileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          deleteMany: {
            args: Prisma.SupplyOrderSupportFileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyOrderSupportFileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyOrderSupportFileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>[]
          }
          upsert: {
            args: Prisma.SupplyOrderSupportFileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderSupportFilePayload>
          }
          aggregate: {
            args: Prisma.SupplyOrderSupportFileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyOrderSupportFile>
          }
          groupBy: {
            args: Prisma.SupplyOrderSupportFileGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyOrderSupportFileGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyOrderSupportFileCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyOrderSupportFileCountAggregateOutputType> | number
          }
        }
      }
      SupplyOrder: {
        payload: Prisma.$SupplyOrderPayload<ExtArgs>
        fields: Prisma.SupplyOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          findFirst: {
            args: Prisma.SupplyOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          findMany: {
            args: Prisma.SupplyOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>[]
          }
          create: {
            args: Prisma.SupplyOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          createMany: {
            args: Prisma.SupplyOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>[]
          }
          delete: {
            args: Prisma.SupplyOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          update: {
            args: Prisma.SupplyOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          deleteMany: {
            args: Prisma.SupplyOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>[]
          }
          upsert: {
            args: Prisma.SupplyOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyOrderPayload>
          }
          aggregate: {
            args: Prisma.SupplyOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyOrder>
          }
          groupBy: {
            args: Prisma.SupplyOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyOrderCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyOrderCountAggregateOutputType> | number
          }
        }
      }
      SuppliesDataSet: {
        payload: Prisma.$SuppliesDataSetPayload<ExtArgs>
        fields: Prisma.SuppliesDataSetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SuppliesDataSetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SuppliesDataSetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          findFirst: {
            args: Prisma.SuppliesDataSetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SuppliesDataSetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          findMany: {
            args: Prisma.SuppliesDataSetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>[]
          }
          create: {
            args: Prisma.SuppliesDataSetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          createMany: {
            args: Prisma.SuppliesDataSetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SuppliesDataSetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>[]
          }
          delete: {
            args: Prisma.SuppliesDataSetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          update: {
            args: Prisma.SuppliesDataSetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          deleteMany: {
            args: Prisma.SuppliesDataSetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SuppliesDataSetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SuppliesDataSetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>[]
          }
          upsert: {
            args: Prisma.SuppliesDataSetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesDataSetPayload>
          }
          aggregate: {
            args: Prisma.SuppliesDataSetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuppliesDataSet>
          }
          groupBy: {
            args: Prisma.SuppliesDataSetGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuppliesDataSetGroupByOutputType>[]
          }
          count: {
            args: Prisma.SuppliesDataSetCountArgs<ExtArgs>
            result: $Utils.Optional<SuppliesDataSetCountAggregateOutputType> | number
          }
        }
      }
      SuppliesQuality: {
        payload: Prisma.$SuppliesQualityPayload<ExtArgs>
        fields: Prisma.SuppliesQualityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SuppliesQualityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SuppliesQualityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          findFirst: {
            args: Prisma.SuppliesQualityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SuppliesQualityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          findMany: {
            args: Prisma.SuppliesQualityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>[]
          }
          create: {
            args: Prisma.SuppliesQualityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          createMany: {
            args: Prisma.SuppliesQualityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SuppliesQualityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>[]
          }
          delete: {
            args: Prisma.SuppliesQualityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          update: {
            args: Prisma.SuppliesQualityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          deleteMany: {
            args: Prisma.SuppliesQualityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SuppliesQualityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SuppliesQualityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>[]
          }
          upsert: {
            args: Prisma.SuppliesQualityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesQualityPayload>
          }
          aggregate: {
            args: Prisma.SuppliesQualityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuppliesQuality>
          }
          groupBy: {
            args: Prisma.SuppliesQualityGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuppliesQualityGroupByOutputType>[]
          }
          count: {
            args: Prisma.SuppliesQualityCountArgs<ExtArgs>
            result: $Utils.Optional<SuppliesQualityCountAggregateOutputType> | number
          }
        }
      }
      SupplyPriceTrack: {
        payload: Prisma.$SupplyPriceTrackPayload<ExtArgs>
        fields: Prisma.SupplyPriceTrackFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyPriceTrackFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyPriceTrackFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          findFirst: {
            args: Prisma.SupplyPriceTrackFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyPriceTrackFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          findMany: {
            args: Prisma.SupplyPriceTrackFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>[]
          }
          create: {
            args: Prisma.SupplyPriceTrackCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          createMany: {
            args: Prisma.SupplyPriceTrackCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyPriceTrackCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>[]
          }
          delete: {
            args: Prisma.SupplyPriceTrackDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          update: {
            args: Prisma.SupplyPriceTrackUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          deleteMany: {
            args: Prisma.SupplyPriceTrackDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyPriceTrackUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyPriceTrackUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>[]
          }
          upsert: {
            args: Prisma.SupplyPriceTrackUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyPriceTrackPayload>
          }
          aggregate: {
            args: Prisma.SupplyPriceTrackAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyPriceTrack>
          }
          groupBy: {
            args: Prisma.SupplyPriceTrackGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyPriceTrackGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyPriceTrackCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyPriceTrackCountAggregateOutputType> | number
          }
        }
      }
      SupplyStockTrack: {
        payload: Prisma.$SupplyStockTrackPayload<ExtArgs>
        fields: Prisma.SupplyStockTrackFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplyStockTrackFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplyStockTrackFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          findFirst: {
            args: Prisma.SupplyStockTrackFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplyStockTrackFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          findMany: {
            args: Prisma.SupplyStockTrackFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>[]
          }
          create: {
            args: Prisma.SupplyStockTrackCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          createMany: {
            args: Prisma.SupplyStockTrackCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplyStockTrackCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>[]
          }
          delete: {
            args: Prisma.SupplyStockTrackDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          update: {
            args: Prisma.SupplyStockTrackUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          deleteMany: {
            args: Prisma.SupplyStockTrackDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplyStockTrackUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplyStockTrackUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>[]
          }
          upsert: {
            args: Prisma.SupplyStockTrackUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplyStockTrackPayload>
          }
          aggregate: {
            args: Prisma.SupplyStockTrackAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplyStockTrack>
          }
          groupBy: {
            args: Prisma.SupplyStockTrackGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplyStockTrackGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplyStockTrackCountArgs<ExtArgs>
            result: $Utils.Optional<SupplyStockTrackCountAggregateOutputType> | number
          }
        }
      }
      SuppliesCategory: {
        payload: Prisma.$SuppliesCategoryPayload<ExtArgs>
        fields: Prisma.SuppliesCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SuppliesCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SuppliesCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          findFirst: {
            args: Prisma.SuppliesCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SuppliesCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          findMany: {
            args: Prisma.SuppliesCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>[]
          }
          create: {
            args: Prisma.SuppliesCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          createMany: {
            args: Prisma.SuppliesCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SuppliesCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>[]
          }
          delete: {
            args: Prisma.SuppliesCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          update: {
            args: Prisma.SuppliesCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          deleteMany: {
            args: Prisma.SuppliesCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SuppliesCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SuppliesCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>[]
          }
          upsert: {
            args: Prisma.SuppliesCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesCategoryPayload>
          }
          aggregate: {
            args: Prisma.SuppliesCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuppliesCategory>
          }
          groupBy: {
            args: Prisma.SuppliesCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuppliesCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SuppliesCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<SuppliesCategoryCountAggregateOutputType> | number
          }
        }
      }
      SupplieRecieveHistory: {
        payload: Prisma.$SupplieRecieveHistoryPayload<ExtArgs>
        fields: Prisma.SupplieRecieveHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplieRecieveHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplieRecieveHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          findFirst: {
            args: Prisma.SupplieRecieveHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplieRecieveHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          findMany: {
            args: Prisma.SupplieRecieveHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>[]
          }
          create: {
            args: Prisma.SupplieRecieveHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          createMany: {
            args: Prisma.SupplieRecieveHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupplieRecieveHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>[]
          }
          delete: {
            args: Prisma.SupplieRecieveHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          update: {
            args: Prisma.SupplieRecieveHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          deleteMany: {
            args: Prisma.SupplieRecieveHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplieRecieveHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupplieRecieveHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>[]
          }
          upsert: {
            args: Prisma.SupplieRecieveHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplieRecieveHistoryPayload>
          }
          aggregate: {
            args: Prisma.SupplieRecieveHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplieRecieveHistory>
          }
          groupBy: {
            args: Prisma.SupplieRecieveHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplieRecieveHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplieRecieveHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<SupplieRecieveHistoryCountAggregateOutputType> | number
          }
        }
      }
      TransferredSupplies: {
        payload: Prisma.$TransferredSuppliesPayload<ExtArgs>
        fields: Prisma.TransferredSuppliesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransferredSuppliesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransferredSuppliesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          findFirst: {
            args: Prisma.TransferredSuppliesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransferredSuppliesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          findMany: {
            args: Prisma.TransferredSuppliesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>[]
          }
          create: {
            args: Prisma.TransferredSuppliesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          createMany: {
            args: Prisma.TransferredSuppliesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransferredSuppliesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>[]
          }
          delete: {
            args: Prisma.TransferredSuppliesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          update: {
            args: Prisma.TransferredSuppliesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          deleteMany: {
            args: Prisma.TransferredSuppliesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransferredSuppliesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransferredSuppliesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>[]
          }
          upsert: {
            args: Prisma.TransferredSuppliesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferredSuppliesPayload>
          }
          aggregate: {
            args: Prisma.TransferredSuppliesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransferredSupplies>
          }
          groupBy: {
            args: Prisma.TransferredSuppliesGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransferredSuppliesGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransferredSuppliesCountArgs<ExtArgs>
            result: $Utils.Optional<TransferredSuppliesCountAggregateOutputType> | number
          }
        }
      }
      SuppliesRecord: {
        payload: Prisma.$SuppliesRecordPayload<ExtArgs>
        fields: Prisma.SuppliesRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SuppliesRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SuppliesRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          findFirst: {
            args: Prisma.SuppliesRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SuppliesRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          findMany: {
            args: Prisma.SuppliesRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>[]
          }
          create: {
            args: Prisma.SuppliesRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          createMany: {
            args: Prisma.SuppliesRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SuppliesRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>[]
          }
          delete: {
            args: Prisma.SuppliesRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          update: {
            args: Prisma.SuppliesRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          deleteMany: {
            args: Prisma.SuppliesRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SuppliesRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SuppliesRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>[]
          }
          upsert: {
            args: Prisma.SuppliesRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SuppliesRecordPayload>
          }
          aggregate: {
            args: Prisma.SuppliesRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuppliesRecord>
          }
          groupBy: {
            args: Prisma.SuppliesRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuppliesRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.SuppliesRecordCountArgs<ExtArgs>
            result: $Utils.Optional<SuppliesRecordCountAggregateOutputType> | number
          }
        }
      }
      Application: {
        payload: Prisma.$ApplicationPayload<ExtArgs>
        fields: Prisma.ApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findFirst: {
            args: Prisma.ApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findMany: {
            args: Prisma.ApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          create: {
            args: Prisma.ApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          createMany: {
            args: Prisma.ApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          delete: {
            args: Prisma.ApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          update: {
            args: Prisma.ApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          aggregate: {
            args: Prisma.ApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplication>
          }
          groupBy: {
            args: Prisma.ApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationCountAggregateOutputType> | number
          }
        }
      }
      Department: {
        payload: Prisma.$DepartmentPayload<ExtArgs>
        fields: Prisma.DepartmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findFirst: {
            args: Prisma.DepartmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findMany: {
            args: Prisma.DepartmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          create: {
            args: Prisma.DepartmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          createMany: {
            args: Prisma.DepartmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          delete: {
            args: Prisma.DepartmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          update: {
            args: Prisma.DepartmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          deleteMany: {
            args: Prisma.DepartmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepartmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DepartmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          upsert: {
            args: Prisma.DepartmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          aggregate: {
            args: Prisma.DepartmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartment>
          }
          groupBy: {
            args: Prisma.DepartmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartmentCountArgs<ExtArgs>
            result: $Utils.Optional<DepartmentCountAggregateOutputType> | number
          }
        }
      }
      Group: {
        payload: Prisma.$GroupPayload<ExtArgs>
        fields: Prisma.GroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          findFirst: {
            args: Prisma.GroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          findMany: {
            args: Prisma.GroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>[]
          }
          create: {
            args: Prisma.GroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          createMany: {
            args: Prisma.GroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GroupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>[]
          }
          delete: {
            args: Prisma.GroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          update: {
            args: Prisma.GroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          deleteMany: {
            args: Prisma.GroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GroupUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>[]
          }
          upsert: {
            args: Prisma.GroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroupPayload>
          }
          aggregate: {
            args: Prisma.GroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroup>
          }
          groupBy: {
            args: Prisma.GroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.GroupCountArgs<ExtArgs>
            result: $Utils.Optional<GroupCountAggregateOutputType> | number
          }
        }
      }
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      AdminProfile: {
        payload: Prisma.$AdminProfilePayload<ExtArgs>
        fields: Prisma.AdminProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          findFirst: {
            args: Prisma.AdminProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          findMany: {
            args: Prisma.AdminProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>[]
          }
          create: {
            args: Prisma.AdminProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          createMany: {
            args: Prisma.AdminProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>[]
          }
          delete: {
            args: Prisma.AdminProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          update: {
            args: Prisma.AdminProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          deleteMany: {
            args: Prisma.AdminProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>[]
          }
          upsert: {
            args: Prisma.AdminProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminProfilePayload>
          }
          aggregate: {
            args: Prisma.AdminProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdminProfile>
          }
          groupBy: {
            args: Prisma.AdminProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminProfileCountArgs<ExtArgs>
            result: $Utils.Optional<AdminProfileCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Privilege: {
        payload: Prisma.$PrivilegePayload<ExtArgs>
        fields: Prisma.PrivilegeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PrivilegeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PrivilegeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          findFirst: {
            args: Prisma.PrivilegeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PrivilegeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          findMany: {
            args: Prisma.PrivilegeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>[]
          }
          create: {
            args: Prisma.PrivilegeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          createMany: {
            args: Prisma.PrivilegeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PrivilegeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>[]
          }
          delete: {
            args: Prisma.PrivilegeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          update: {
            args: Prisma.PrivilegeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          deleteMany: {
            args: Prisma.PrivilegeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PrivilegeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PrivilegeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>[]
          }
          upsert: {
            args: Prisma.PrivilegeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrivilegePayload>
          }
          aggregate: {
            args: Prisma.PrivilegeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrivilege>
          }
          groupBy: {
            args: Prisma.PrivilegeGroupByArgs<ExtArgs>
            result: $Utils.Optional<PrivilegeGroupByOutputType>[]
          }
          count: {
            args: Prisma.PrivilegeCountArgs<ExtArgs>
            result: $Utils.Optional<PrivilegeCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      LogRecord: {
        payload: Prisma.$LogRecordPayload<ExtArgs>
        fields: Prisma.LogRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LogRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LogRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          findFirst: {
            args: Prisma.LogRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LogRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          findMany: {
            args: Prisma.LogRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>[]
          }
          create: {
            args: Prisma.LogRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          createMany: {
            args: Prisma.LogRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LogRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>[]
          }
          delete: {
            args: Prisma.LogRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          update: {
            args: Prisma.LogRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          deleteMany: {
            args: Prisma.LogRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LogRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LogRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>[]
          }
          upsert: {
            args: Prisma.LogRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogRecordPayload>
          }
          aggregate: {
            args: Prisma.LogRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLogRecord>
          }
          groupBy: {
            args: Prisma.LogRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<LogRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.LogRecordCountArgs<ExtArgs>
            result: $Utils.Optional<LogRecordCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Position: {
        payload: Prisma.$PositionPayload<ExtArgs>
        fields: Prisma.PositionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PositionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PositionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          findFirst: {
            args: Prisma.PositionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PositionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          findMany: {
            args: Prisma.PositionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>[]
          }
          create: {
            args: Prisma.PositionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          createMany: {
            args: Prisma.PositionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PositionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>[]
          }
          delete: {
            args: Prisma.PositionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          update: {
            args: Prisma.PositionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          deleteMany: {
            args: Prisma.PositionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PositionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PositionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>[]
          }
          upsert: {
            args: Prisma.PositionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionPayload>
          }
          aggregate: {
            args: Prisma.PositionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosition>
          }
          groupBy: {
            args: Prisma.PositionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PositionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PositionCountArgs<ExtArgs>
            result: $Utils.Optional<PositionCountAggregateOutputType> | number
          }
        }
      }
      PositionSlot: {
        payload: Prisma.$PositionSlotPayload<ExtArgs>
        fields: Prisma.PositionSlotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PositionSlotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PositionSlotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          findFirst: {
            args: Prisma.PositionSlotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PositionSlotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          findMany: {
            args: Prisma.PositionSlotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>[]
          }
          create: {
            args: Prisma.PositionSlotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          createMany: {
            args: Prisma.PositionSlotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PositionSlotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>[]
          }
          delete: {
            args: Prisma.PositionSlotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          update: {
            args: Prisma.PositionSlotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          deleteMany: {
            args: Prisma.PositionSlotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PositionSlotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PositionSlotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>[]
          }
          upsert: {
            args: Prisma.PositionSlotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PositionSlotPayload>
          }
          aggregate: {
            args: Prisma.PositionSlotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePositionSlot>
          }
          groupBy: {
            args: Prisma.PositionSlotGroupByArgs<ExtArgs>
            result: $Utils.Optional<PositionSlotGroupByOutputType>[]
          }
          count: {
            args: Prisma.PositionSlotCountArgs<ExtArgs>
            result: $Utils.Optional<PositionSlotCountAggregateOutputType> | number
          }
        }
      }
      SalaryGrade: {
        payload: Prisma.$SalaryGradePayload<ExtArgs>
        fields: Prisma.SalaryGradeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalaryGradeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalaryGradeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          findFirst: {
            args: Prisma.SalaryGradeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalaryGradeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          findMany: {
            args: Prisma.SalaryGradeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>[]
          }
          create: {
            args: Prisma.SalaryGradeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          createMany: {
            args: Prisma.SalaryGradeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SalaryGradeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>[]
          }
          delete: {
            args: Prisma.SalaryGradeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          update: {
            args: Prisma.SalaryGradeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          deleteMany: {
            args: Prisma.SalaryGradeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalaryGradeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SalaryGradeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>[]
          }
          upsert: {
            args: Prisma.SalaryGradeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradePayload>
          }
          aggregate: {
            args: Prisma.SalaryGradeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalaryGrade>
          }
          groupBy: {
            args: Prisma.SalaryGradeGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalaryGradeGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalaryGradeCountArgs<ExtArgs>
            result: $Utils.Optional<SalaryGradeCountAggregateOutputType> | number
          }
        }
      }
      SalaryGradeHistory: {
        payload: Prisma.$SalaryGradeHistoryPayload<ExtArgs>
        fields: Prisma.SalaryGradeHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalaryGradeHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalaryGradeHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          findFirst: {
            args: Prisma.SalaryGradeHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalaryGradeHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          findMany: {
            args: Prisma.SalaryGradeHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>[]
          }
          create: {
            args: Prisma.SalaryGradeHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          createMany: {
            args: Prisma.SalaryGradeHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SalaryGradeHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>[]
          }
          delete: {
            args: Prisma.SalaryGradeHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          update: {
            args: Prisma.SalaryGradeHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          deleteMany: {
            args: Prisma.SalaryGradeHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalaryGradeHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SalaryGradeHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>[]
          }
          upsert: {
            args: Prisma.SalaryGradeHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalaryGradeHistoryPayload>
          }
          aggregate: {
            args: Prisma.SalaryGradeHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalaryGradeHistory>
          }
          groupBy: {
            args: Prisma.SalaryGradeHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalaryGradeHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalaryGradeHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<SalaryGradeHistoryCountAggregateOutputType> | number
          }
        }
      }
      Leave: {
        payload: Prisma.$LeavePayload<ExtArgs>
        fields: Prisma.LeaveFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeaveFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeaveFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          findFirst: {
            args: Prisma.LeaveFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeaveFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          findMany: {
            args: Prisma.LeaveFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>[]
          }
          create: {
            args: Prisma.LeaveCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          createMany: {
            args: Prisma.LeaveCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeaveCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>[]
          }
          delete: {
            args: Prisma.LeaveDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          update: {
            args: Prisma.LeaveUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          deleteMany: {
            args: Prisma.LeaveDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeaveUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LeaveUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>[]
          }
          upsert: {
            args: Prisma.LeaveUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeavePayload>
          }
          aggregate: {
            args: Prisma.LeaveAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeave>
          }
          groupBy: {
            args: Prisma.LeaveGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeaveGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeaveCountArgs<ExtArgs>
            result: $Utils.Optional<LeaveCountAggregateOutputType> | number
          }
        }
      }
      Announcement: {
        payload: Prisma.$AnnouncementPayload<ExtArgs>
        fields: Prisma.AnnouncementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnnouncementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnnouncementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          findFirst: {
            args: Prisma.AnnouncementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnnouncementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          findMany: {
            args: Prisma.AnnouncementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>[]
          }
          create: {
            args: Prisma.AnnouncementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          createMany: {
            args: Prisma.AnnouncementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AnnouncementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>[]
          }
          delete: {
            args: Prisma.AnnouncementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          update: {
            args: Prisma.AnnouncementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          deleteMany: {
            args: Prisma.AnnouncementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AnnouncementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AnnouncementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>[]
          }
          upsert: {
            args: Prisma.AnnouncementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          aggregate: {
            args: Prisma.AnnouncementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnnouncement>
          }
          groupBy: {
            args: Prisma.AnnouncementGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnnouncementGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnnouncementCountArgs<ExtArgs>
            result: $Utils.Optional<AnnouncementCountAggregateOutputType> | number
          }
        }
      }
      Promotion: {
        payload: Prisma.$PromotionPayload<ExtArgs>
        fields: Prisma.PromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findFirst: {
            args: Prisma.PromotionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findMany: {
            args: Prisma.PromotionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          create: {
            args: Prisma.PromotionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          createMany: {
            args: Prisma.PromotionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          delete: {
            args: Prisma.PromotionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          update: {
            args: Prisma.PromotionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          deleteMany: {
            args: Prisma.PromotionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PromotionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          upsert: {
            args: Prisma.PromotionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          aggregate: {
            args: Prisma.PromotionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotion>
          }
          groupBy: {
            args: Prisma.PromotionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionCountAggregateOutputType> | number
          }
        }
      }
      BirthdayNoticeResponse: {
        payload: Prisma.$BirthdayNoticeResponsePayload<ExtArgs>
        fields: Prisma.BirthdayNoticeResponseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BirthdayNoticeResponseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BirthdayNoticeResponseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          findFirst: {
            args: Prisma.BirthdayNoticeResponseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BirthdayNoticeResponseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          findMany: {
            args: Prisma.BirthdayNoticeResponseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>[]
          }
          create: {
            args: Prisma.BirthdayNoticeResponseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          createMany: {
            args: Prisma.BirthdayNoticeResponseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BirthdayNoticeResponseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>[]
          }
          delete: {
            args: Prisma.BirthdayNoticeResponseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          update: {
            args: Prisma.BirthdayNoticeResponseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          deleteMany: {
            args: Prisma.BirthdayNoticeResponseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BirthdayNoticeResponseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BirthdayNoticeResponseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>[]
          }
          upsert: {
            args: Prisma.BirthdayNoticeResponseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BirthdayNoticeResponsePayload>
          }
          aggregate: {
            args: Prisma.BirthdayNoticeResponseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBirthdayNoticeResponse>
          }
          groupBy: {
            args: Prisma.BirthdayNoticeResponseGroupByArgs<ExtArgs>
            result: $Utils.Optional<BirthdayNoticeResponseGroupByOutputType>[]
          }
          count: {
            args: Prisma.BirthdayNoticeResponseCountArgs<ExtArgs>
            result: $Utils.Optional<BirthdayNoticeResponseCountAggregateOutputType> | number
          }
        }
      }
      Region: {
        payload: Prisma.$RegionPayload<ExtArgs>
        fields: Prisma.RegionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findFirst: {
            args: Prisma.RegionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findMany: {
            args: Prisma.RegionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          create: {
            args: Prisma.RegionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          createMany: {
            args: Prisma.RegionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          delete: {
            args: Prisma.RegionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          update: {
            args: Prisma.RegionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          deleteMany: {
            args: Prisma.RegionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          upsert: {
            args: Prisma.RegionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          aggregate: {
            args: Prisma.RegionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegion>
          }
          groupBy: {
            args: Prisma.RegionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegionCountArgs<ExtArgs>
            result: $Utils.Optional<RegionCountAggregateOutputType> | number
          }
        }
      }
      Province: {
        payload: Prisma.$ProvincePayload<ExtArgs>
        fields: Prisma.ProvinceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProvinceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProvinceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          findFirst: {
            args: Prisma.ProvinceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProvinceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          findMany: {
            args: Prisma.ProvinceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>[]
          }
          create: {
            args: Prisma.ProvinceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          createMany: {
            args: Prisma.ProvinceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProvinceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>[]
          }
          delete: {
            args: Prisma.ProvinceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          update: {
            args: Prisma.ProvinceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          deleteMany: {
            args: Prisma.ProvinceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProvinceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProvinceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>[]
          }
          upsert: {
            args: Prisma.ProvinceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvincePayload>
          }
          aggregate: {
            args: Prisma.ProvinceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvince>
          }
          groupBy: {
            args: Prisma.ProvinceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvinceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProvinceCountArgs<ExtArgs>
            result: $Utils.Optional<ProvinceCountAggregateOutputType> | number
          }
        }
      }
      Municipal: {
        payload: Prisma.$MunicipalPayload<ExtArgs>
        fields: Prisma.MunicipalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MunicipalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MunicipalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          findFirst: {
            args: Prisma.MunicipalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MunicipalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          findMany: {
            args: Prisma.MunicipalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>[]
          }
          create: {
            args: Prisma.MunicipalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          createMany: {
            args: Prisma.MunicipalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MunicipalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>[]
          }
          delete: {
            args: Prisma.MunicipalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          update: {
            args: Prisma.MunicipalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          deleteMany: {
            args: Prisma.MunicipalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MunicipalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MunicipalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>[]
          }
          upsert: {
            args: Prisma.MunicipalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalPayload>
          }
          aggregate: {
            args: Prisma.MunicipalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMunicipal>
          }
          groupBy: {
            args: Prisma.MunicipalGroupByArgs<ExtArgs>
            result: $Utils.Optional<MunicipalGroupByOutputType>[]
          }
          count: {
            args: Prisma.MunicipalCountArgs<ExtArgs>
            result: $Utils.Optional<MunicipalCountAggregateOutputType> | number
          }
        }
      }
      Barangay: {
        payload: Prisma.$BarangayPayload<ExtArgs>
        fields: Prisma.BarangayFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BarangayFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BarangayFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          findFirst: {
            args: Prisma.BarangayFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BarangayFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          findMany: {
            args: Prisma.BarangayFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>[]
          }
          create: {
            args: Prisma.BarangayCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          createMany: {
            args: Prisma.BarangayCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BarangayCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>[]
          }
          delete: {
            args: Prisma.BarangayDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          update: {
            args: Prisma.BarangayUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          deleteMany: {
            args: Prisma.BarangayDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BarangayUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BarangayUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>[]
          }
          upsert: {
            args: Prisma.BarangayUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarangayPayload>
          }
          aggregate: {
            args: Prisma.BarangayAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBarangay>
          }
          groupBy: {
            args: Prisma.BarangayGroupByArgs<ExtArgs>
            result: $Utils.Optional<BarangayGroupByOutputType>[]
          }
          count: {
            args: Prisma.BarangayCountArgs<ExtArgs>
            result: $Utils.Optional<BarangayCountAggregateOutputType> | number
          }
        }
      }
      Accomplishment: {
        payload: Prisma.$AccomplishmentPayload<ExtArgs>
        fields: Prisma.AccomplishmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccomplishmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccomplishmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          findFirst: {
            args: Prisma.AccomplishmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccomplishmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          findMany: {
            args: Prisma.AccomplishmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>[]
          }
          create: {
            args: Prisma.AccomplishmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          createMany: {
            args: Prisma.AccomplishmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccomplishmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>[]
          }
          delete: {
            args: Prisma.AccomplishmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          update: {
            args: Prisma.AccomplishmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          deleteMany: {
            args: Prisma.AccomplishmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccomplishmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccomplishmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>[]
          }
          upsert: {
            args: Prisma.AccomplishmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentPayload>
          }
          aggregate: {
            args: Prisma.AccomplishmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccomplishment>
          }
          groupBy: {
            args: Prisma.AccomplishmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccomplishmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccomplishmentCountArgs<ExtArgs>
            result: $Utils.Optional<AccomplishmentCountAggregateOutputType> | number
          }
        }
      }
      AccomplishmentResponse: {
        payload: Prisma.$AccomplishmentResponsePayload<ExtArgs>
        fields: Prisma.AccomplishmentResponseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccomplishmentResponseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccomplishmentResponseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          findFirst: {
            args: Prisma.AccomplishmentResponseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccomplishmentResponseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          findMany: {
            args: Prisma.AccomplishmentResponseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>[]
          }
          create: {
            args: Prisma.AccomplishmentResponseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          createMany: {
            args: Prisma.AccomplishmentResponseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccomplishmentResponseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>[]
          }
          delete: {
            args: Prisma.AccomplishmentResponseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          update: {
            args: Prisma.AccomplishmentResponseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          deleteMany: {
            args: Prisma.AccomplishmentResponseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccomplishmentResponseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccomplishmentResponseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>[]
          }
          upsert: {
            args: Prisma.AccomplishmentResponseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccomplishmentResponsePayload>
          }
          aggregate: {
            args: Prisma.AccomplishmentResponseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccomplishmentResponse>
          }
          groupBy: {
            args: Prisma.AccomplishmentResponseGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccomplishmentResponseGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccomplishmentResponseCountArgs<ExtArgs>
            result: $Utils.Optional<AccomplishmentResponseCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    line?: LineOmit
    invitationLink?: InvitationLinkOmit
    assets?: AssetsOmit
    profilePicture?: ProfilePictureOmit
    inventoryBox?: InventoryBoxOmit
    containerAllowedUser?: ContainerAllowedUserOmit
    inventoryAccessLogs?: InventoryAccessLogsOmit
    supplies?: SuppliesOmit
    supplyBatch?: SupplyBatchOmit
    supplyBatchItem?: SupplyBatchItemOmit
    supplyBatchOrder?: SupplyBatchOrderOmit
    supplyOrderSupportFile?: SupplyOrderSupportFileOmit
    supplyOrder?: SupplyOrderOmit
    suppliesDataSet?: SuppliesDataSetOmit
    suppliesQuality?: SuppliesQualityOmit
    supplyPriceTrack?: SupplyPriceTrackOmit
    supplyStockTrack?: SupplyStockTrackOmit
    suppliesCategory?: SuppliesCategoryOmit
    supplieRecieveHistory?: SupplieRecieveHistoryOmit
    transferredSupplies?: TransferredSuppliesOmit
    suppliesRecord?: SuppliesRecordOmit
    application?: ApplicationOmit
    department?: DepartmentOmit
    group?: GroupOmit
    admin?: AdminOmit
    adminProfile?: AdminProfileOmit
    account?: AccountOmit
    privilege?: PrivilegeOmit
    user?: UserOmit
    logRecord?: LogRecordOmit
    notification?: NotificationOmit
    position?: PositionOmit
    positionSlot?: PositionSlotOmit
    salaryGrade?: SalaryGradeOmit
    salaryGradeHistory?: SalaryGradeHistoryOmit
    leave?: LeaveOmit
    announcement?: AnnouncementOmit
    promotion?: PromotionOmit
    birthdayNoticeResponse?: BirthdayNoticeResponseOmit
    region?: RegionOmit
    province?: ProvinceOmit
    municipal?: MunicipalOmit
    barangay?: BarangayOmit
    accomplishment?: AccomplishmentOmit
    accomplishmentResponse?: AccomplishmentResponseOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type LineCountOutputType
   */

  export type LineCountOutputType = {
    Department: number
    Account: number
    User: number
    Position: number
    SalaryGrade: number
    Announcement: number
    BirthdayNoticeResponse: number
    InvitationLink: number
    Supplies: number
    SupplyBatchOrder: number
    Group: number
    InventoryBox: number
    SuppliesDataSet: number
  }

  export type LineCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Department?: boolean | LineCountOutputTypeCountDepartmentArgs
    Account?: boolean | LineCountOutputTypeCountAccountArgs
    User?: boolean | LineCountOutputTypeCountUserArgs
    Position?: boolean | LineCountOutputTypeCountPositionArgs
    SalaryGrade?: boolean | LineCountOutputTypeCountSalaryGradeArgs
    Announcement?: boolean | LineCountOutputTypeCountAnnouncementArgs
    BirthdayNoticeResponse?: boolean | LineCountOutputTypeCountBirthdayNoticeResponseArgs
    InvitationLink?: boolean | LineCountOutputTypeCountInvitationLinkArgs
    Supplies?: boolean | LineCountOutputTypeCountSuppliesArgs
    SupplyBatchOrder?: boolean | LineCountOutputTypeCountSupplyBatchOrderArgs
    Group?: boolean | LineCountOutputTypeCountGroupArgs
    InventoryBox?: boolean | LineCountOutputTypeCountInventoryBoxArgs
    SuppliesDataSet?: boolean | LineCountOutputTypeCountSuppliesDataSetArgs
  }

  // Custom InputTypes
  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LineCountOutputType
     */
    select?: LineCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountDepartmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountAccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountPositionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountSalaryGradeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalaryGradeWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountBirthdayNoticeResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BirthdayNoticeResponseWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountInvitationLinkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationLinkWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountSupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchOrderWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroupWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountInventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryBoxWhereInput
  }

  /**
   * LineCountOutputType without action
   */
  export type LineCountOutputTypeCountSuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesDataSetWhereInput
  }


  /**
   * Count Type AssetsCountOutputType
   */

  export type AssetsCountOutputType = {
    ProfilePicture: number
    SupplyOrderSupport: number
  }

  export type AssetsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProfilePicture?: boolean | AssetsCountOutputTypeCountProfilePictureArgs
    SupplyOrderSupport?: boolean | AssetsCountOutputTypeCountSupplyOrderSupportArgs
  }

  // Custom InputTypes
  /**
   * AssetsCountOutputType without action
   */
  export type AssetsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetsCountOutputType
     */
    select?: AssetsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AssetsCountOutputType without action
   */
  export type AssetsCountOutputTypeCountProfilePictureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfilePictureWhereInput
  }

  /**
   * AssetsCountOutputType without action
   */
  export type AssetsCountOutputTypeCountSupplyOrderSupportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderSupportFileWhereInput
  }


  /**
   * Count Type InventoryBoxCountOutputType
   */

  export type InventoryBoxCountOutputType = {
    batch: number
    InventoryAccessLogs: number
    SupplyBatch: number
    ContainerAllowedUser: number
    SuppliesDataSet: number
  }

  export type InventoryBoxCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batch?: boolean | InventoryBoxCountOutputTypeCountBatchArgs
    InventoryAccessLogs?: boolean | InventoryBoxCountOutputTypeCountInventoryAccessLogsArgs
    SupplyBatch?: boolean | InventoryBoxCountOutputTypeCountSupplyBatchArgs
    ContainerAllowedUser?: boolean | InventoryBoxCountOutputTypeCountContainerAllowedUserArgs
    SuppliesDataSet?: boolean | InventoryBoxCountOutputTypeCountSuppliesDataSetArgs
  }

  // Custom InputTypes
  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBoxCountOutputType
     */
    select?: InventoryBoxCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeCountBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchOrderWhereInput
  }

  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeCountInventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAccessLogsWhereInput
  }

  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeCountSupplyBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchWhereInput
  }

  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeCountContainerAllowedUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContainerAllowedUserWhereInput
  }

  /**
   * InventoryBoxCountOutputType without action
   */
  export type InventoryBoxCountOutputTypeCountSuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesDataSetWhereInput
  }


  /**
   * Count Type SuppliesCountOutputType
   */

  export type SuppliesCountOutputType = {
    SuppliesRecord: number
    asset: number
    TransferredSupplies: number
    SupplieRecieveHistory: number
    InventoryAccessLogs: number
    SupplyOrder: number
    SupplyPriceTrack: number
    SupplyStockTrack: number
  }

  export type SuppliesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SuppliesRecord?: boolean | SuppliesCountOutputTypeCountSuppliesRecordArgs
    asset?: boolean | SuppliesCountOutputTypeCountAssetArgs
    TransferredSupplies?: boolean | SuppliesCountOutputTypeCountTransferredSuppliesArgs
    SupplieRecieveHistory?: boolean | SuppliesCountOutputTypeCountSupplieRecieveHistoryArgs
    InventoryAccessLogs?: boolean | SuppliesCountOutputTypeCountInventoryAccessLogsArgs
    SupplyOrder?: boolean | SuppliesCountOutputTypeCountSupplyOrderArgs
    SupplyPriceTrack?: boolean | SuppliesCountOutputTypeCountSupplyPriceTrackArgs
    SupplyStockTrack?: boolean | SuppliesCountOutputTypeCountSupplyStockTrackArgs
  }

  // Custom InputTypes
  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCountOutputType
     */
    select?: SuppliesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountSuppliesRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesRecordWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountAssetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetsWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountTransferredSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferredSuppliesWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountSupplieRecieveHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplieRecieveHistoryWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountInventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAccessLogsWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountSupplyOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountSupplyPriceTrackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyPriceTrackWhereInput
  }

  /**
   * SuppliesCountOutputType without action
   */
  export type SuppliesCountOutputTypeCountSupplyStockTrackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyStockTrackWhereInput
  }


  /**
   * Count Type SupplyBatchCountOutputType
   */

  export type SupplyBatchCountOutputType = {
    SupplyBatchItem: number
  }

  export type SupplyBatchCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SupplyBatchItem?: boolean | SupplyBatchCountOutputTypeCountSupplyBatchItemArgs
  }

  // Custom InputTypes
  /**
   * SupplyBatchCountOutputType without action
   */
  export type SupplyBatchCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchCountOutputType
     */
    select?: SupplyBatchCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupplyBatchCountOutputType without action
   */
  export type SupplyBatchCountOutputTypeCountSupplyBatchItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchItemWhereInput
  }


  /**
   * Count Type SupplyBatchOrderCountOutputType
   */

  export type SupplyBatchOrderCountOutputType = {
    order: number
    files: number
  }

  export type SupplyBatchOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | SupplyBatchOrderCountOutputTypeCountOrderArgs
    files?: boolean | SupplyBatchOrderCountOutputTypeCountFilesArgs
  }

  // Custom InputTypes
  /**
   * SupplyBatchOrderCountOutputType without action
   */
  export type SupplyBatchOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrderCountOutputType
     */
    select?: SupplyBatchOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupplyBatchOrderCountOutputType without action
   */
  export type SupplyBatchOrderCountOutputTypeCountOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderWhereInput
  }

  /**
   * SupplyBatchOrderCountOutputType without action
   */
  export type SupplyBatchOrderCountOutputTypeCountFilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderSupportFileWhereInput
  }


  /**
   * Count Type SuppliesDataSetCountOutputType
   */

  export type SuppliesDataSetCountOutputType = {
    unit: number
    list: number
    supplies: number
  }

  export type SuppliesDataSetCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    unit?: boolean | SuppliesDataSetCountOutputTypeCountUnitArgs
    list?: boolean | SuppliesDataSetCountOutputTypeCountListArgs
    supplies?: boolean | SuppliesDataSetCountOutputTypeCountSuppliesArgs
  }

  // Custom InputTypes
  /**
   * SuppliesDataSetCountOutputType without action
   */
  export type SuppliesDataSetCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSetCountOutputType
     */
    select?: SuppliesDataSetCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SuppliesDataSetCountOutputType without action
   */
  export type SuppliesDataSetCountOutputTypeCountUnitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesQualityWhereInput
  }

  /**
   * SuppliesDataSetCountOutputType without action
   */
  export type SuppliesDataSetCountOutputTypeCountListArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchWhereInput
  }

  /**
   * SuppliesDataSetCountOutputType without action
   */
  export type SuppliesDataSetCountOutputTypeCountSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
  }


  /**
   * Count Type SuppliesQualityCountOutputType
   */

  export type SuppliesQualityCountOutputType = {
    supplies: number
    SupplyOrder: number
  }

  export type SuppliesQualityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplies?: boolean | SuppliesQualityCountOutputTypeCountSuppliesArgs
    SupplyOrder?: boolean | SuppliesQualityCountOutputTypeCountSupplyOrderArgs
  }

  // Custom InputTypes
  /**
   * SuppliesQualityCountOutputType without action
   */
  export type SuppliesQualityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQualityCountOutputType
     */
    select?: SuppliesQualityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SuppliesQualityCountOutputType without action
   */
  export type SuppliesQualityCountOutputTypeCountSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
  }

  /**
   * SuppliesQualityCountOutputType without action
   */
  export type SuppliesQualityCountOutputTypeCountSupplyOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderWhereInput
  }


  /**
   * Count Type SuppliesCategoryCountOutputType
   */

  export type SuppliesCategoryCountOutputType = {
    supplies: number
  }

  export type SuppliesCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplies?: boolean | SuppliesCategoryCountOutputTypeCountSuppliesArgs
  }

  // Custom InputTypes
  /**
   * SuppliesCategoryCountOutputType without action
   */
  export type SuppliesCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategoryCountOutputType
     */
    select?: SuppliesCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SuppliesCategoryCountOutputType without action
   */
  export type SuppliesCategoryCountOutputTypeCountSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
  }


  /**
   * Count Type DepartmentCountOutputType
   */

  export type DepartmentCountOutputType = {
    users: number
    Position: number
    Announcement: number
    Group: number
    InventoryBox: number
  }

  export type DepartmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | DepartmentCountOutputTypeCountUsersArgs
    Position?: boolean | DepartmentCountOutputTypeCountPositionArgs
    Announcement?: boolean | DepartmentCountOutputTypeCountAnnouncementArgs
    Group?: boolean | DepartmentCountOutputTypeCountGroupArgs
    InventoryBox?: boolean | DepartmentCountOutputTypeCountInventoryBoxArgs
  }

  // Custom InputTypes
  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartmentCountOutputType
     */
    select?: DepartmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountPositionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroupWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountInventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryBoxWhereInput
  }


  /**
   * Count Type GroupCountOutputType
   */

  export type GroupCountOutputType = {
    users: number
  }

  export type GroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | GroupCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * GroupCountOutputType without action
   */
  export type GroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroupCountOutputType
     */
    select?: GroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GroupCountOutputType without action
   */
  export type GroupCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type AdminProfileCountOutputType
   */

  export type AdminProfileCountOutputType = {
    line: number
  }

  export type AdminProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | AdminProfileCountOutputTypeCountLineArgs
  }

  // Custom InputTypes
  /**
   * AdminProfileCountOutputType without action
   */
  export type AdminProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfileCountOutputType
     */
    select?: AdminProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdminProfileCountOutputType without action
   */
  export type AdminProfileCountOutputTypeCountLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    sentNotifications: number
    receivedNotifications: number
    Leave: number
    Announcement: number
    Promotions: number
    bdaySender: number
    bdayRecipient: number
    Accomplishment: number
    headResponse: number
    Supplies: number
    SuppliesRecord: number
    LogRecord: number
    transferTo: number
    TransferredSupplies: number
    Application: number
    SupplyBatchOrder: number
    chief: number
    InventoryBox: number
    InventoryAccessLogs: number
    ContainerAllowedUser: number
    GrantContainer: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sentNotifications?: boolean | UserCountOutputTypeCountSentNotificationsArgs
    receivedNotifications?: boolean | UserCountOutputTypeCountReceivedNotificationsArgs
    Leave?: boolean | UserCountOutputTypeCountLeaveArgs
    Announcement?: boolean | UserCountOutputTypeCountAnnouncementArgs
    Promotions?: boolean | UserCountOutputTypeCountPromotionsArgs
    bdaySender?: boolean | UserCountOutputTypeCountBdaySenderArgs
    bdayRecipient?: boolean | UserCountOutputTypeCountBdayRecipientArgs
    Accomplishment?: boolean | UserCountOutputTypeCountAccomplishmentArgs
    headResponse?: boolean | UserCountOutputTypeCountHeadResponseArgs
    Supplies?: boolean | UserCountOutputTypeCountSuppliesArgs
    SuppliesRecord?: boolean | UserCountOutputTypeCountSuppliesRecordArgs
    LogRecord?: boolean | UserCountOutputTypeCountLogRecordArgs
    transferTo?: boolean | UserCountOutputTypeCountTransferToArgs
    TransferredSupplies?: boolean | UserCountOutputTypeCountTransferredSuppliesArgs
    Application?: boolean | UserCountOutputTypeCountApplicationArgs
    SupplyBatchOrder?: boolean | UserCountOutputTypeCountSupplyBatchOrderArgs
    chief?: boolean | UserCountOutputTypeCountChiefArgs
    InventoryBox?: boolean | UserCountOutputTypeCountInventoryBoxArgs
    InventoryAccessLogs?: boolean | UserCountOutputTypeCountInventoryAccessLogsArgs
    ContainerAllowedUser?: boolean | UserCountOutputTypeCountContainerAllowedUserArgs
    GrantContainer?: boolean | UserCountOutputTypeCountGrantContainerArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLeaveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeaveWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBdaySenderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BirthdayNoticeResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBdayRecipientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BirthdayNoticeResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccomplishmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccomplishmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountHeadResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccomplishmentResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSuppliesRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLogRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LogRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransferToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferredSuppliesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransferredSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferredSuppliesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchOrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChiefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroupWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryBoxWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAccessLogsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountContainerAllowedUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContainerAllowedUserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountGrantContainerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContainerAllowedUserWhereInput
  }


  /**
   * Count Type PositionCountOutputType
   */

  export type PositionCountOutputType = {
    users: number
    Promotion: number
    PositionSlot: number
    Application: number
  }

  export type PositionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | PositionCountOutputTypeCountUsersArgs
    Promotion?: boolean | PositionCountOutputTypeCountPromotionArgs
    PositionSlot?: boolean | PositionCountOutputTypeCountPositionSlotArgs
    Application?: boolean | PositionCountOutputTypeCountApplicationArgs
  }

  // Custom InputTypes
  /**
   * PositionCountOutputType without action
   */
  export type PositionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionCountOutputType
     */
    select?: PositionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PositionCountOutputType without action
   */
  export type PositionCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * PositionCountOutputType without action
   */
  export type PositionCountOutputTypeCountPromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * PositionCountOutputType without action
   */
  export type PositionCountOutputTypeCountPositionSlotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionSlotWhereInput
  }

  /**
   * PositionCountOutputType without action
   */
  export type PositionCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * Count Type SalaryGradeCountOutputType
   */

  export type SalaryGradeCountOutputType = {
    users: number
    SalaryGradeHistory: number
    positions: number
    PositionSlot: number
  }

  export type SalaryGradeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | SalaryGradeCountOutputTypeCountUsersArgs
    SalaryGradeHistory?: boolean | SalaryGradeCountOutputTypeCountSalaryGradeHistoryArgs
    positions?: boolean | SalaryGradeCountOutputTypeCountPositionsArgs
    PositionSlot?: boolean | SalaryGradeCountOutputTypeCountPositionSlotArgs
  }

  // Custom InputTypes
  /**
   * SalaryGradeCountOutputType without action
   */
  export type SalaryGradeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeCountOutputType
     */
    select?: SalaryGradeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalaryGradeCountOutputType without action
   */
  export type SalaryGradeCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * SalaryGradeCountOutputType without action
   */
  export type SalaryGradeCountOutputTypeCountSalaryGradeHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalaryGradeHistoryWhereInput
  }

  /**
   * SalaryGradeCountOutputType without action
   */
  export type SalaryGradeCountOutputTypeCountPositionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionWhereInput
  }

  /**
   * SalaryGradeCountOutputType without action
   */
  export type SalaryGradeCountOutputTypeCountPositionSlotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionSlotWhereInput
  }


  /**
   * Count Type RegionCountOutputType
   */

  export type RegionCountOutputType = {
    provices: number
    User: number
    Line: number
  }

  export type RegionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provices?: boolean | RegionCountOutputTypeCountProvicesArgs
    User?: boolean | RegionCountOutputTypeCountUserArgs
    Line?: boolean | RegionCountOutputTypeCountLineArgs
  }

  // Custom InputTypes
  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegionCountOutputType
     */
    select?: RegionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountProvicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinceWhereInput
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
  }


  /**
   * Count Type ProvinceCountOutputType
   */

  export type ProvinceCountOutputType = {
    municipals: number
    User: number
    Line: number
  }

  export type ProvinceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipals?: boolean | ProvinceCountOutputTypeCountMunicipalsArgs
    User?: boolean | ProvinceCountOutputTypeCountUserArgs
    Line?: boolean | ProvinceCountOutputTypeCountLineArgs
  }

  // Custom InputTypes
  /**
   * ProvinceCountOutputType without action
   */
  export type ProvinceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinceCountOutputType
     */
    select?: ProvinceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvinceCountOutputType without action
   */
  export type ProvinceCountOutputTypeCountMunicipalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipalWhereInput
  }

  /**
   * ProvinceCountOutputType without action
   */
  export type ProvinceCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * ProvinceCountOutputType without action
   */
  export type ProvinceCountOutputTypeCountLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
  }


  /**
   * Count Type MunicipalCountOutputType
   */

  export type MunicipalCountOutputType = {
    barangays: number
    User: number
    Line: number
  }

  export type MunicipalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barangays?: boolean | MunicipalCountOutputTypeCountBarangaysArgs
    User?: boolean | MunicipalCountOutputTypeCountUserArgs
    Line?: boolean | MunicipalCountOutputTypeCountLineArgs
  }

  // Custom InputTypes
  /**
   * MunicipalCountOutputType without action
   */
  export type MunicipalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MunicipalCountOutputType
     */
    select?: MunicipalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MunicipalCountOutputType without action
   */
  export type MunicipalCountOutputTypeCountBarangaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BarangayWhereInput
  }

  /**
   * MunicipalCountOutputType without action
   */
  export type MunicipalCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * MunicipalCountOutputType without action
   */
  export type MunicipalCountOutputTypeCountLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
  }


  /**
   * Count Type BarangayCountOutputType
   */

  export type BarangayCountOutputType = {
    User: number
    Line: number
  }

  export type BarangayCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | BarangayCountOutputTypeCountUserArgs
    Line?: boolean | BarangayCountOutputTypeCountLineArgs
  }

  // Custom InputTypes
  /**
   * BarangayCountOutputType without action
   */
  export type BarangayCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarangayCountOutputType
     */
    select?: BarangayCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BarangayCountOutputType without action
   */
  export type BarangayCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * BarangayCountOutputType without action
   */
  export type BarangayCountOutputTypeCountLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
  }


  /**
   * Count Type AccomplishmentCountOutputType
   */

  export type AccomplishmentCountOutputType = {
    AccomplishmentResponse: number
  }

  export type AccomplishmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AccomplishmentResponse?: boolean | AccomplishmentCountOutputTypeCountAccomplishmentResponseArgs
  }

  // Custom InputTypes
  /**
   * AccomplishmentCountOutputType without action
   */
  export type AccomplishmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentCountOutputType
     */
    select?: AccomplishmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AccomplishmentCountOutputType without action
   */
  export type AccomplishmentCountOutputTypeCountAccomplishmentResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccomplishmentResponseWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Line
   */

  export type AggregateLine = {
    _count: LineCountAggregateOutputType | null
    _avg: LineAvgAggregateOutputType | null
    _sum: LineSumAggregateOutputType | null
    _min: LineMinAggregateOutputType | null
    _max: LineMaxAggregateOutputType | null
  }

  export type LineAvgAggregateOutputType = {
    status: number | null
  }

  export type LineSumAggregateOutputType = {
    status: number | null
  }

  export type LineMinAggregateOutputType = {
    id: string | null
    name: string | null
    password: string | null
    barangayId: string | null
    municipalId: string | null
    provinceId: string | null
    regionId: string | null
    createdAt: Date | null
    status: number | null
    adminProfileId: string | null
  }

  export type LineMaxAggregateOutputType = {
    id: string | null
    name: string | null
    password: string | null
    barangayId: string | null
    municipalId: string | null
    provinceId: string | null
    regionId: string | null
    createdAt: Date | null
    status: number | null
    adminProfileId: string | null
  }

  export type LineCountAggregateOutputType = {
    id: number
    name: number
    password: number
    barangayId: number
    municipalId: number
    provinceId: number
    regionId: number
    createdAt: number
    status: number
    adminProfileId: number
    _all: number
  }


  export type LineAvgAggregateInputType = {
    status?: true
  }

  export type LineSumAggregateInputType = {
    status?: true
  }

  export type LineMinAggregateInputType = {
    id?: true
    name?: true
    password?: true
    barangayId?: true
    municipalId?: true
    provinceId?: true
    regionId?: true
    createdAt?: true
    status?: true
    adminProfileId?: true
  }

  export type LineMaxAggregateInputType = {
    id?: true
    name?: true
    password?: true
    barangayId?: true
    municipalId?: true
    provinceId?: true
    regionId?: true
    createdAt?: true
    status?: true
    adminProfileId?: true
  }

  export type LineCountAggregateInputType = {
    id?: true
    name?: true
    password?: true
    barangayId?: true
    municipalId?: true
    provinceId?: true
    regionId?: true
    createdAt?: true
    status?: true
    adminProfileId?: true
    _all?: true
  }

  export type LineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Line to aggregate.
     */
    where?: LineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lines to fetch.
     */
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Lines
    **/
    _count?: true | LineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LineAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LineSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LineMaxAggregateInputType
  }

  export type GetLineAggregateType<T extends LineAggregateArgs> = {
        [P in keyof T & keyof AggregateLine]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLine[P]>
      : GetScalarType<T[P], AggregateLine[P]>
  }




  export type LineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LineWhereInput
    orderBy?: LineOrderByWithAggregationInput | LineOrderByWithAggregationInput[]
    by: LineScalarFieldEnum[] | LineScalarFieldEnum
    having?: LineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LineCountAggregateInputType | true
    _avg?: LineAvgAggregateInputType
    _sum?: LineSumAggregateInputType
    _min?: LineMinAggregateInputType
    _max?: LineMaxAggregateInputType
  }

  export type LineGroupByOutputType = {
    id: string
    name: string
    password: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt: Date
    status: number
    adminProfileId: string | null
    _count: LineCountAggregateOutputType | null
    _avg: LineAvgAggregateOutputType | null
    _sum: LineSumAggregateOutputType | null
    _min: LineMinAggregateOutputType | null
    _max: LineMaxAggregateOutputType | null
  }

  type GetLineGroupByPayload<T extends LineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LineGroupByOutputType[P]>
            : GetScalarType<T[P], LineGroupByOutputType[P]>
        }
      >
    >


  export type LineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    password?: boolean
    barangayId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    regionId?: boolean
    createdAt?: boolean
    status?: boolean
    adminProfileId?: boolean
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    Department?: boolean | Line$DepartmentArgs<ExtArgs>
    Account?: boolean | Line$AccountArgs<ExtArgs>
    User?: boolean | Line$UserArgs<ExtArgs>
    Position?: boolean | Line$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | Line$SalaryGradeArgs<ExtArgs>
    Announcement?: boolean | Line$AnnouncementArgs<ExtArgs>
    BirthdayNoticeResponse?: boolean | Line$BirthdayNoticeResponseArgs<ExtArgs>
    InvitationLink?: boolean | Line$InvitationLinkArgs<ExtArgs>
    Supplies?: boolean | Line$SuppliesArgs<ExtArgs>
    SupplyBatchOrder?: boolean | Line$SupplyBatchOrderArgs<ExtArgs>
    Group?: boolean | Line$GroupArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
    InventoryBox?: boolean | Line$InventoryBoxArgs<ExtArgs>
    SuppliesDataSet?: boolean | Line$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | LineCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["line"]>

  export type LineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    password?: boolean
    barangayId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    regionId?: boolean
    createdAt?: boolean
    status?: boolean
    adminProfileId?: boolean
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
  }, ExtArgs["result"]["line"]>

  export type LineSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    password?: boolean
    barangayId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    regionId?: boolean
    createdAt?: boolean
    status?: boolean
    adminProfileId?: boolean
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
  }, ExtArgs["result"]["line"]>

  export type LineSelectScalar = {
    id?: boolean
    name?: boolean
    password?: boolean
    barangayId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    regionId?: boolean
    createdAt?: boolean
    status?: boolean
    adminProfileId?: boolean
  }

  export type LineOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "password" | "barangayId" | "municipalId" | "provinceId" | "regionId" | "createdAt" | "status" | "adminProfileId", ExtArgs["result"]["line"]>
  export type LineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    Department?: boolean | Line$DepartmentArgs<ExtArgs>
    Account?: boolean | Line$AccountArgs<ExtArgs>
    User?: boolean | Line$UserArgs<ExtArgs>
    Position?: boolean | Line$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | Line$SalaryGradeArgs<ExtArgs>
    Announcement?: boolean | Line$AnnouncementArgs<ExtArgs>
    BirthdayNoticeResponse?: boolean | Line$BirthdayNoticeResponseArgs<ExtArgs>
    InvitationLink?: boolean | Line$InvitationLinkArgs<ExtArgs>
    Supplies?: boolean | Line$SuppliesArgs<ExtArgs>
    SupplyBatchOrder?: boolean | Line$SupplyBatchOrderArgs<ExtArgs>
    Group?: boolean | Line$GroupArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
    InventoryBox?: boolean | Line$InventoryBoxArgs<ExtArgs>
    SuppliesDataSet?: boolean | Line$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | LineCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
  }
  export type LineIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    barangay?: boolean | BarangayDefaultArgs<ExtArgs>
    municipal?: boolean | MunicipalDefaultArgs<ExtArgs>
    province?: boolean | ProvinceDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    AdminProfile?: boolean | Line$AdminProfileArgs<ExtArgs>
  }

  export type $LinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Line"
    objects: {
      barangay: Prisma.$BarangayPayload<ExtArgs>
      municipal: Prisma.$MunicipalPayload<ExtArgs>
      province: Prisma.$ProvincePayload<ExtArgs>
      region: Prisma.$RegionPayload<ExtArgs>
      Department: Prisma.$DepartmentPayload<ExtArgs>[]
      Account: Prisma.$AccountPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
      Position: Prisma.$PositionPayload<ExtArgs>[]
      SalaryGrade: Prisma.$SalaryGradePayload<ExtArgs>[]
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      BirthdayNoticeResponse: Prisma.$BirthdayNoticeResponsePayload<ExtArgs>[]
      InvitationLink: Prisma.$InvitationLinkPayload<ExtArgs>[]
      Supplies: Prisma.$SuppliesPayload<ExtArgs>[]
      SupplyBatchOrder: Prisma.$SupplyBatchOrderPayload<ExtArgs>[]
      Group: Prisma.$GroupPayload<ExtArgs>[]
      AdminProfile: Prisma.$AdminProfilePayload<ExtArgs> | null
      InventoryBox: Prisma.$InventoryBoxPayload<ExtArgs>[]
      SuppliesDataSet: Prisma.$SuppliesDataSetPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      password: string | null
      barangayId: string
      municipalId: string
      provinceId: string
      regionId: string
      createdAt: Date
      status: number
      adminProfileId: string | null
    }, ExtArgs["result"]["line"]>
    composites: {}
  }

  type LineGetPayload<S extends boolean | null | undefined | LineDefaultArgs> = $Result.GetResult<Prisma.$LinePayload, S>

  type LineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LineCountAggregateInputType | true
    }

  export interface LineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Line'], meta: { name: 'Line' } }
    /**
     * Find zero or one Line that matches the filter.
     * @param {LineFindUniqueArgs} args - Arguments to find a Line
     * @example
     * // Get one Line
     * const line = await prisma.line.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LineFindUniqueArgs>(args: SelectSubset<T, LineFindUniqueArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Line that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LineFindUniqueOrThrowArgs} args - Arguments to find a Line
     * @example
     * // Get one Line
     * const line = await prisma.line.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LineFindUniqueOrThrowArgs>(args: SelectSubset<T, LineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Line that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineFindFirstArgs} args - Arguments to find a Line
     * @example
     * // Get one Line
     * const line = await prisma.line.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LineFindFirstArgs>(args?: SelectSubset<T, LineFindFirstArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Line that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineFindFirstOrThrowArgs} args - Arguments to find a Line
     * @example
     * // Get one Line
     * const line = await prisma.line.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LineFindFirstOrThrowArgs>(args?: SelectSubset<T, LineFindFirstOrThrowArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Lines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lines
     * const lines = await prisma.line.findMany()
     * 
     * // Get first 10 Lines
     * const lines = await prisma.line.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lineWithIdOnly = await prisma.line.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LineFindManyArgs>(args?: SelectSubset<T, LineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Line.
     * @param {LineCreateArgs} args - Arguments to create a Line.
     * @example
     * // Create one Line
     * const Line = await prisma.line.create({
     *   data: {
     *     // ... data to create a Line
     *   }
     * })
     * 
     */
    create<T extends LineCreateArgs>(args: SelectSubset<T, LineCreateArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Lines.
     * @param {LineCreateManyArgs} args - Arguments to create many Lines.
     * @example
     * // Create many Lines
     * const line = await prisma.line.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LineCreateManyArgs>(args?: SelectSubset<T, LineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lines and returns the data saved in the database.
     * @param {LineCreateManyAndReturnArgs} args - Arguments to create many Lines.
     * @example
     * // Create many Lines
     * const line = await prisma.line.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lines and only return the `id`
     * const lineWithIdOnly = await prisma.line.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LineCreateManyAndReturnArgs>(args?: SelectSubset<T, LineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Line.
     * @param {LineDeleteArgs} args - Arguments to delete one Line.
     * @example
     * // Delete one Line
     * const Line = await prisma.line.delete({
     *   where: {
     *     // ... filter to delete one Line
     *   }
     * })
     * 
     */
    delete<T extends LineDeleteArgs>(args: SelectSubset<T, LineDeleteArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Line.
     * @param {LineUpdateArgs} args - Arguments to update one Line.
     * @example
     * // Update one Line
     * const line = await prisma.line.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LineUpdateArgs>(args: SelectSubset<T, LineUpdateArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Lines.
     * @param {LineDeleteManyArgs} args - Arguments to filter Lines to delete.
     * @example
     * // Delete a few Lines
     * const { count } = await prisma.line.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LineDeleteManyArgs>(args?: SelectSubset<T, LineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lines
     * const line = await prisma.line.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LineUpdateManyArgs>(args: SelectSubset<T, LineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lines and returns the data updated in the database.
     * @param {LineUpdateManyAndReturnArgs} args - Arguments to update many Lines.
     * @example
     * // Update many Lines
     * const line = await prisma.line.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Lines and only return the `id`
     * const lineWithIdOnly = await prisma.line.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LineUpdateManyAndReturnArgs>(args: SelectSubset<T, LineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Line.
     * @param {LineUpsertArgs} args - Arguments to update or create a Line.
     * @example
     * // Update or create a Line
     * const line = await prisma.line.upsert({
     *   create: {
     *     // ... data to create a Line
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Line we want to update
     *   }
     * })
     */
    upsert<T extends LineUpsertArgs>(args: SelectSubset<T, LineUpsertArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineCountArgs} args - Arguments to filter Lines to count.
     * @example
     * // Count the number of Lines
     * const count = await prisma.line.count({
     *   where: {
     *     // ... the filter for the Lines we want to count
     *   }
     * })
    **/
    count<T extends LineCountArgs>(
      args?: Subset<T, LineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Line.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LineAggregateArgs>(args: Subset<T, LineAggregateArgs>): Prisma.PrismaPromise<GetLineAggregateType<T>>

    /**
     * Group by Line.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LineGroupByArgs['orderBy'] }
        : { orderBy?: LineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Line model
   */
  readonly fields: LineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Line.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    barangay<T extends BarangayDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BarangayDefaultArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    municipal<T extends MunicipalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MunicipalDefaultArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    province<T extends ProvinceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProvinceDefaultArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    region<T extends RegionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegionDefaultArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Department<T extends Line$DepartmentArgs<ExtArgs> = {}>(args?: Subset<T, Line$DepartmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Account<T extends Line$AccountArgs<ExtArgs> = {}>(args?: Subset<T, Line$AccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Line$UserArgs<ExtArgs> = {}>(args?: Subset<T, Line$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Position<T extends Line$PositionArgs<ExtArgs> = {}>(args?: Subset<T, Line$PositionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SalaryGrade<T extends Line$SalaryGradeArgs<ExtArgs> = {}>(args?: Subset<T, Line$SalaryGradeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Announcement<T extends Line$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, Line$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    BirthdayNoticeResponse<T extends Line$BirthdayNoticeResponseArgs<ExtArgs> = {}>(args?: Subset<T, Line$BirthdayNoticeResponseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InvitationLink<T extends Line$InvitationLinkArgs<ExtArgs> = {}>(args?: Subset<T, Line$InvitationLinkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Supplies<T extends Line$SuppliesArgs<ExtArgs> = {}>(args?: Subset<T, Line$SuppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SupplyBatchOrder<T extends Line$SupplyBatchOrderArgs<ExtArgs> = {}>(args?: Subset<T, Line$SupplyBatchOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Group<T extends Line$GroupArgs<ExtArgs> = {}>(args?: Subset<T, Line$GroupArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AdminProfile<T extends Line$AdminProfileArgs<ExtArgs> = {}>(args?: Subset<T, Line$AdminProfileArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    InventoryBox<T extends Line$InventoryBoxArgs<ExtArgs> = {}>(args?: Subset<T, Line$InventoryBoxArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesDataSet<T extends Line$SuppliesDataSetArgs<ExtArgs> = {}>(args?: Subset<T, Line$SuppliesDataSetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Line model
   */
  interface LineFieldRefs {
    readonly id: FieldRef<"Line", 'String'>
    readonly name: FieldRef<"Line", 'String'>
    readonly password: FieldRef<"Line", 'String'>
    readonly barangayId: FieldRef<"Line", 'String'>
    readonly municipalId: FieldRef<"Line", 'String'>
    readonly provinceId: FieldRef<"Line", 'String'>
    readonly regionId: FieldRef<"Line", 'String'>
    readonly createdAt: FieldRef<"Line", 'DateTime'>
    readonly status: FieldRef<"Line", 'Int'>
    readonly adminProfileId: FieldRef<"Line", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Line findUnique
   */
  export type LineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter, which Line to fetch.
     */
    where: LineWhereUniqueInput
  }

  /**
   * Line findUniqueOrThrow
   */
  export type LineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter, which Line to fetch.
     */
    where: LineWhereUniqueInput
  }

  /**
   * Line findFirst
   */
  export type LineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter, which Line to fetch.
     */
    where?: LineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lines to fetch.
     */
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lines.
     */
    cursor?: LineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lines.
     */
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Line findFirstOrThrow
   */
  export type LineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter, which Line to fetch.
     */
    where?: LineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lines to fetch.
     */
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lines.
     */
    cursor?: LineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lines.
     */
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Line findMany
   */
  export type LineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter, which Lines to fetch.
     */
    where?: LineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lines to fetch.
     */
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Lines.
     */
    cursor?: LineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lines.
     */
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Line create
   */
  export type LineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * The data needed to create a Line.
     */
    data: XOR<LineCreateInput, LineUncheckedCreateInput>
  }

  /**
   * Line createMany
   */
  export type LineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Lines.
     */
    data: LineCreateManyInput | LineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Line createManyAndReturn
   */
  export type LineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * The data used to create many Lines.
     */
    data: LineCreateManyInput | LineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Line update
   */
  export type LineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * The data needed to update a Line.
     */
    data: XOR<LineUpdateInput, LineUncheckedUpdateInput>
    /**
     * Choose, which Line to update.
     */
    where: LineWhereUniqueInput
  }

  /**
   * Line updateMany
   */
  export type LineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Lines.
     */
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyInput>
    /**
     * Filter which Lines to update
     */
    where?: LineWhereInput
    /**
     * Limit how many Lines to update.
     */
    limit?: number
  }

  /**
   * Line updateManyAndReturn
   */
  export type LineUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * The data used to update Lines.
     */
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyInput>
    /**
     * Filter which Lines to update
     */
    where?: LineWhereInput
    /**
     * Limit how many Lines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Line upsert
   */
  export type LineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * The filter to search for the Line to update in case it exists.
     */
    where: LineWhereUniqueInput
    /**
     * In case the Line found by the `where` argument doesn't exist, create a new Line with this data.
     */
    create: XOR<LineCreateInput, LineUncheckedCreateInput>
    /**
     * In case the Line was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LineUpdateInput, LineUncheckedUpdateInput>
  }

  /**
   * Line delete
   */
  export type LineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    /**
     * Filter which Line to delete.
     */
    where: LineWhereUniqueInput
  }

  /**
   * Line deleteMany
   */
  export type LineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lines to delete
     */
    where?: LineWhereInput
    /**
     * Limit how many Lines to delete.
     */
    limit?: number
  }

  /**
   * Line.Department
   */
  export type Line$DepartmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    cursor?: DepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Line.Account
   */
  export type Line$AccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Line.User
   */
  export type Line$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Line.Position
   */
  export type Line$PositionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    where?: PositionWhereInput
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    cursor?: PositionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * Line.SalaryGrade
   */
  export type Line$SalaryGradeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    where?: SalaryGradeWhereInput
    orderBy?: SalaryGradeOrderByWithRelationInput | SalaryGradeOrderByWithRelationInput[]
    cursor?: SalaryGradeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalaryGradeScalarFieldEnum | SalaryGradeScalarFieldEnum[]
  }

  /**
   * Line.Announcement
   */
  export type Line$AnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * Line.BirthdayNoticeResponse
   */
  export type Line$BirthdayNoticeResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    where?: BirthdayNoticeResponseWhereInput
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * Line.InvitationLink
   */
  export type Line$InvitationLinkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    where?: InvitationLinkWhereInput
    orderBy?: InvitationLinkOrderByWithRelationInput | InvitationLinkOrderByWithRelationInput[]
    cursor?: InvitationLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationLinkScalarFieldEnum | InvitationLinkScalarFieldEnum[]
  }

  /**
   * Line.Supplies
   */
  export type Line$SuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    cursor?: SuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * Line.SupplyBatchOrder
   */
  export type Line$SupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    where?: SupplyBatchOrderWhereInput
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    cursor?: SupplyBatchOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * Line.Group
   */
  export type Line$GroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    where?: GroupWhereInput
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    cursor?: GroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * Line.AdminProfile
   */
  export type Line$AdminProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    where?: AdminProfileWhereInput
  }

  /**
   * Line.InventoryBox
   */
  export type Line$InventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    where?: InventoryBoxWhereInput
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    cursor?: InventoryBoxWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * Line.SuppliesDataSet
   */
  export type Line$SuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    where?: SuppliesDataSetWhereInput
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    cursor?: SuppliesDataSetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesDataSetScalarFieldEnum | SuppliesDataSetScalarFieldEnum[]
  }

  /**
   * Line without action
   */
  export type LineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
  }


  /**
   * Model InvitationLink
   */

  export type AggregateInvitationLink = {
    _count: InvitationLinkCountAggregateOutputType | null
    _min: InvitationLinkMinAggregateOutputType | null
    _max: InvitationLinkMaxAggregateOutputType | null
  }

  export type InvitationLinkMinAggregateOutputType = {
    id: string | null
    code: string | null
    createdAt: Date | null
    expiresAt: Date | null
    used: boolean | null
    url: string | null
    lineId: string | null
  }

  export type InvitationLinkMaxAggregateOutputType = {
    id: string | null
    code: string | null
    createdAt: Date | null
    expiresAt: Date | null
    used: boolean | null
    url: string | null
    lineId: string | null
  }

  export type InvitationLinkCountAggregateOutputType = {
    id: number
    code: number
    createdAt: number
    expiresAt: number
    used: number
    url: number
    lineId: number
    _all: number
  }


  export type InvitationLinkMinAggregateInputType = {
    id?: true
    code?: true
    createdAt?: true
    expiresAt?: true
    used?: true
    url?: true
    lineId?: true
  }

  export type InvitationLinkMaxAggregateInputType = {
    id?: true
    code?: true
    createdAt?: true
    expiresAt?: true
    used?: true
    url?: true
    lineId?: true
  }

  export type InvitationLinkCountAggregateInputType = {
    id?: true
    code?: true
    createdAt?: true
    expiresAt?: true
    used?: true
    url?: true
    lineId?: true
    _all?: true
  }

  export type InvitationLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvitationLink to aggregate.
     */
    where?: InvitationLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvitationLinks to fetch.
     */
    orderBy?: InvitationLinkOrderByWithRelationInput | InvitationLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvitationLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvitationLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvitationLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvitationLinks
    **/
    _count?: true | InvitationLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvitationLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvitationLinkMaxAggregateInputType
  }

  export type GetInvitationLinkAggregateType<T extends InvitationLinkAggregateArgs> = {
        [P in keyof T & keyof AggregateInvitationLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvitationLink[P]>
      : GetScalarType<T[P], AggregateInvitationLink[P]>
  }




  export type InvitationLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationLinkWhereInput
    orderBy?: InvitationLinkOrderByWithAggregationInput | InvitationLinkOrderByWithAggregationInput[]
    by: InvitationLinkScalarFieldEnum[] | InvitationLinkScalarFieldEnum
    having?: InvitationLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvitationLinkCountAggregateInputType | true
    _min?: InvitationLinkMinAggregateInputType
    _max?: InvitationLinkMaxAggregateInputType
  }

  export type InvitationLinkGroupByOutputType = {
    id: string
    code: string
    createdAt: Date
    expiresAt: Date | null
    used: boolean
    url: string
    lineId: string
    _count: InvitationLinkCountAggregateOutputType | null
    _min: InvitationLinkMinAggregateOutputType | null
    _max: InvitationLinkMaxAggregateOutputType | null
  }

  type GetInvitationLinkGroupByPayload<T extends InvitationLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvitationLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvitationLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvitationLinkGroupByOutputType[P]>
            : GetScalarType<T[P], InvitationLinkGroupByOutputType[P]>
        }
      >
    >


  export type InvitationLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    used?: boolean
    url?: boolean
    lineId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitationLink"]>

  export type InvitationLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    used?: boolean
    url?: boolean
    lineId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitationLink"]>

  export type InvitationLinkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    used?: boolean
    url?: boolean
    lineId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitationLink"]>

  export type InvitationLinkSelectScalar = {
    id?: boolean
    code?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    used?: boolean
    url?: boolean
    lineId?: boolean
  }

  export type InvitationLinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "createdAt" | "expiresAt" | "used" | "url" | "lineId", ExtArgs["result"]["invitationLink"]>
  export type InvitationLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
  }
  export type InvitationLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
  }
  export type InvitationLinkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
  }

  export type $InvitationLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvitationLink"
    objects: {
      line: Prisma.$LinePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      createdAt: Date
      expiresAt: Date | null
      used: boolean
      url: string
      lineId: string
    }, ExtArgs["result"]["invitationLink"]>
    composites: {}
  }

  type InvitationLinkGetPayload<S extends boolean | null | undefined | InvitationLinkDefaultArgs> = $Result.GetResult<Prisma.$InvitationLinkPayload, S>

  type InvitationLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvitationLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvitationLinkCountAggregateInputType | true
    }

  export interface InvitationLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvitationLink'], meta: { name: 'InvitationLink' } }
    /**
     * Find zero or one InvitationLink that matches the filter.
     * @param {InvitationLinkFindUniqueArgs} args - Arguments to find a InvitationLink
     * @example
     * // Get one InvitationLink
     * const invitationLink = await prisma.invitationLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvitationLinkFindUniqueArgs>(args: SelectSubset<T, InvitationLinkFindUniqueArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InvitationLink that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvitationLinkFindUniqueOrThrowArgs} args - Arguments to find a InvitationLink
     * @example
     * // Get one InvitationLink
     * const invitationLink = await prisma.invitationLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvitationLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, InvitationLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvitationLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkFindFirstArgs} args - Arguments to find a InvitationLink
     * @example
     * // Get one InvitationLink
     * const invitationLink = await prisma.invitationLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvitationLinkFindFirstArgs>(args?: SelectSubset<T, InvitationLinkFindFirstArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvitationLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkFindFirstOrThrowArgs} args - Arguments to find a InvitationLink
     * @example
     * // Get one InvitationLink
     * const invitationLink = await prisma.invitationLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvitationLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, InvitationLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InvitationLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvitationLinks
     * const invitationLinks = await prisma.invitationLink.findMany()
     * 
     * // Get first 10 InvitationLinks
     * const invitationLinks = await prisma.invitationLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invitationLinkWithIdOnly = await prisma.invitationLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvitationLinkFindManyArgs>(args?: SelectSubset<T, InvitationLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InvitationLink.
     * @param {InvitationLinkCreateArgs} args - Arguments to create a InvitationLink.
     * @example
     * // Create one InvitationLink
     * const InvitationLink = await prisma.invitationLink.create({
     *   data: {
     *     // ... data to create a InvitationLink
     *   }
     * })
     * 
     */
    create<T extends InvitationLinkCreateArgs>(args: SelectSubset<T, InvitationLinkCreateArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InvitationLinks.
     * @param {InvitationLinkCreateManyArgs} args - Arguments to create many InvitationLinks.
     * @example
     * // Create many InvitationLinks
     * const invitationLink = await prisma.invitationLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvitationLinkCreateManyArgs>(args?: SelectSubset<T, InvitationLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvitationLinks and returns the data saved in the database.
     * @param {InvitationLinkCreateManyAndReturnArgs} args - Arguments to create many InvitationLinks.
     * @example
     * // Create many InvitationLinks
     * const invitationLink = await prisma.invitationLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvitationLinks and only return the `id`
     * const invitationLinkWithIdOnly = await prisma.invitationLink.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvitationLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, InvitationLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InvitationLink.
     * @param {InvitationLinkDeleteArgs} args - Arguments to delete one InvitationLink.
     * @example
     * // Delete one InvitationLink
     * const InvitationLink = await prisma.invitationLink.delete({
     *   where: {
     *     // ... filter to delete one InvitationLink
     *   }
     * })
     * 
     */
    delete<T extends InvitationLinkDeleteArgs>(args: SelectSubset<T, InvitationLinkDeleteArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InvitationLink.
     * @param {InvitationLinkUpdateArgs} args - Arguments to update one InvitationLink.
     * @example
     * // Update one InvitationLink
     * const invitationLink = await prisma.invitationLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvitationLinkUpdateArgs>(args: SelectSubset<T, InvitationLinkUpdateArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InvitationLinks.
     * @param {InvitationLinkDeleteManyArgs} args - Arguments to filter InvitationLinks to delete.
     * @example
     * // Delete a few InvitationLinks
     * const { count } = await prisma.invitationLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvitationLinkDeleteManyArgs>(args?: SelectSubset<T, InvitationLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvitationLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvitationLinks
     * const invitationLink = await prisma.invitationLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvitationLinkUpdateManyArgs>(args: SelectSubset<T, InvitationLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvitationLinks and returns the data updated in the database.
     * @param {InvitationLinkUpdateManyAndReturnArgs} args - Arguments to update many InvitationLinks.
     * @example
     * // Update many InvitationLinks
     * const invitationLink = await prisma.invitationLink.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InvitationLinks and only return the `id`
     * const invitationLinkWithIdOnly = await prisma.invitationLink.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvitationLinkUpdateManyAndReturnArgs>(args: SelectSubset<T, InvitationLinkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InvitationLink.
     * @param {InvitationLinkUpsertArgs} args - Arguments to update or create a InvitationLink.
     * @example
     * // Update or create a InvitationLink
     * const invitationLink = await prisma.invitationLink.upsert({
     *   create: {
     *     // ... data to create a InvitationLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvitationLink we want to update
     *   }
     * })
     */
    upsert<T extends InvitationLinkUpsertArgs>(args: SelectSubset<T, InvitationLinkUpsertArgs<ExtArgs>>): Prisma__InvitationLinkClient<$Result.GetResult<Prisma.$InvitationLinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InvitationLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkCountArgs} args - Arguments to filter InvitationLinks to count.
     * @example
     * // Count the number of InvitationLinks
     * const count = await prisma.invitationLink.count({
     *   where: {
     *     // ... the filter for the InvitationLinks we want to count
     *   }
     * })
    **/
    count<T extends InvitationLinkCountArgs>(
      args?: Subset<T, InvitationLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvitationLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvitationLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvitationLinkAggregateArgs>(args: Subset<T, InvitationLinkAggregateArgs>): Prisma.PrismaPromise<GetInvitationLinkAggregateType<T>>

    /**
     * Group by InvitationLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvitationLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvitationLinkGroupByArgs['orderBy'] }
        : { orderBy?: InvitationLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvitationLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvitationLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvitationLink model
   */
  readonly fields: InvitationLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvitationLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvitationLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvitationLink model
   */
  interface InvitationLinkFieldRefs {
    readonly id: FieldRef<"InvitationLink", 'String'>
    readonly code: FieldRef<"InvitationLink", 'String'>
    readonly createdAt: FieldRef<"InvitationLink", 'DateTime'>
    readonly expiresAt: FieldRef<"InvitationLink", 'DateTime'>
    readonly used: FieldRef<"InvitationLink", 'Boolean'>
    readonly url: FieldRef<"InvitationLink", 'String'>
    readonly lineId: FieldRef<"InvitationLink", 'String'>
  }
    

  // Custom InputTypes
  /**
   * InvitationLink findUnique
   */
  export type InvitationLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter, which InvitationLink to fetch.
     */
    where: InvitationLinkWhereUniqueInput
  }

  /**
   * InvitationLink findUniqueOrThrow
   */
  export type InvitationLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter, which InvitationLink to fetch.
     */
    where: InvitationLinkWhereUniqueInput
  }

  /**
   * InvitationLink findFirst
   */
  export type InvitationLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter, which InvitationLink to fetch.
     */
    where?: InvitationLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvitationLinks to fetch.
     */
    orderBy?: InvitationLinkOrderByWithRelationInput | InvitationLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvitationLinks.
     */
    cursor?: InvitationLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvitationLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvitationLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvitationLinks.
     */
    distinct?: InvitationLinkScalarFieldEnum | InvitationLinkScalarFieldEnum[]
  }

  /**
   * InvitationLink findFirstOrThrow
   */
  export type InvitationLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter, which InvitationLink to fetch.
     */
    where?: InvitationLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvitationLinks to fetch.
     */
    orderBy?: InvitationLinkOrderByWithRelationInput | InvitationLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvitationLinks.
     */
    cursor?: InvitationLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvitationLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvitationLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvitationLinks.
     */
    distinct?: InvitationLinkScalarFieldEnum | InvitationLinkScalarFieldEnum[]
  }

  /**
   * InvitationLink findMany
   */
  export type InvitationLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter, which InvitationLinks to fetch.
     */
    where?: InvitationLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvitationLinks to fetch.
     */
    orderBy?: InvitationLinkOrderByWithRelationInput | InvitationLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvitationLinks.
     */
    cursor?: InvitationLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvitationLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvitationLinks.
     */
    skip?: number
    distinct?: InvitationLinkScalarFieldEnum | InvitationLinkScalarFieldEnum[]
  }

  /**
   * InvitationLink create
   */
  export type InvitationLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a InvitationLink.
     */
    data: XOR<InvitationLinkCreateInput, InvitationLinkUncheckedCreateInput>
  }

  /**
   * InvitationLink createMany
   */
  export type InvitationLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvitationLinks.
     */
    data: InvitationLinkCreateManyInput | InvitationLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InvitationLink createManyAndReturn
   */
  export type InvitationLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * The data used to create many InvitationLinks.
     */
    data: InvitationLinkCreateManyInput | InvitationLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvitationLink update
   */
  export type InvitationLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a InvitationLink.
     */
    data: XOR<InvitationLinkUpdateInput, InvitationLinkUncheckedUpdateInput>
    /**
     * Choose, which InvitationLink to update.
     */
    where: InvitationLinkWhereUniqueInput
  }

  /**
   * InvitationLink updateMany
   */
  export type InvitationLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvitationLinks.
     */
    data: XOR<InvitationLinkUpdateManyMutationInput, InvitationLinkUncheckedUpdateManyInput>
    /**
     * Filter which InvitationLinks to update
     */
    where?: InvitationLinkWhereInput
    /**
     * Limit how many InvitationLinks to update.
     */
    limit?: number
  }

  /**
   * InvitationLink updateManyAndReturn
   */
  export type InvitationLinkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * The data used to update InvitationLinks.
     */
    data: XOR<InvitationLinkUpdateManyMutationInput, InvitationLinkUncheckedUpdateManyInput>
    /**
     * Filter which InvitationLinks to update
     */
    where?: InvitationLinkWhereInput
    /**
     * Limit how many InvitationLinks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvitationLink upsert
   */
  export type InvitationLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the InvitationLink to update in case it exists.
     */
    where: InvitationLinkWhereUniqueInput
    /**
     * In case the InvitationLink found by the `where` argument doesn't exist, create a new InvitationLink with this data.
     */
    create: XOR<InvitationLinkCreateInput, InvitationLinkUncheckedCreateInput>
    /**
     * In case the InvitationLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvitationLinkUpdateInput, InvitationLinkUncheckedUpdateInput>
  }

  /**
   * InvitationLink delete
   */
  export type InvitationLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
    /**
     * Filter which InvitationLink to delete.
     */
    where: InvitationLinkWhereUniqueInput
  }

  /**
   * InvitationLink deleteMany
   */
  export type InvitationLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvitationLinks to delete
     */
    where?: InvitationLinkWhereInput
    /**
     * Limit how many InvitationLinks to delete.
     */
    limit?: number
  }

  /**
   * InvitationLink without action
   */
  export type InvitationLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationLink
     */
    select?: InvitationLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvitationLink
     */
    omit?: InvitationLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationLinkInclude<ExtArgs> | null
  }


  /**
   * Model Assets
   */

  export type AggregateAssets = {
    _count: AssetsCountAggregateOutputType | null
    _min: AssetsMinAggregateOutputType | null
    _max: AssetsMaxAggregateOutputType | null
  }

  export type AssetsMinAggregateOutputType = {
    id: string | null
    url: string | null
    fileSize: string | null
    fileType: string | null
    fileName: string | null
    createdAt: Date | null
    suppliesId: string | null
  }

  export type AssetsMaxAggregateOutputType = {
    id: string | null
    url: string | null
    fileSize: string | null
    fileType: string | null
    fileName: string | null
    createdAt: Date | null
    suppliesId: string | null
  }

  export type AssetsCountAggregateOutputType = {
    id: number
    url: number
    fileSize: number
    fileType: number
    fileName: number
    createdAt: number
    suppliesId: number
    _all: number
  }


  export type AssetsMinAggregateInputType = {
    id?: true
    url?: true
    fileSize?: true
    fileType?: true
    fileName?: true
    createdAt?: true
    suppliesId?: true
  }

  export type AssetsMaxAggregateInputType = {
    id?: true
    url?: true
    fileSize?: true
    fileType?: true
    fileName?: true
    createdAt?: true
    suppliesId?: true
  }

  export type AssetsCountAggregateInputType = {
    id?: true
    url?: true
    fileSize?: true
    fileType?: true
    fileName?: true
    createdAt?: true
    suppliesId?: true
    _all?: true
  }

  export type AssetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Assets to aggregate.
     */
    where?: AssetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetsOrderByWithRelationInput | AssetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Assets
    **/
    _count?: true | AssetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssetsMaxAggregateInputType
  }

  export type GetAssetsAggregateType<T extends AssetsAggregateArgs> = {
        [P in keyof T & keyof AggregateAssets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssets[P]>
      : GetScalarType<T[P], AggregateAssets[P]>
  }




  export type AssetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetsWhereInput
    orderBy?: AssetsOrderByWithAggregationInput | AssetsOrderByWithAggregationInput[]
    by: AssetsScalarFieldEnum[] | AssetsScalarFieldEnum
    having?: AssetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssetsCountAggregateInputType | true
    _min?: AssetsMinAggregateInputType
    _max?: AssetsMaxAggregateInputType
  }

  export type AssetsGroupByOutputType = {
    id: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt: Date
    suppliesId: string | null
    _count: AssetsCountAggregateOutputType | null
    _min: AssetsMinAggregateOutputType | null
    _max: AssetsMaxAggregateOutputType | null
  }

  type GetAssetsGroupByPayload<T extends AssetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssetsGroupByOutputType[P]>
            : GetScalarType<T[P], AssetsGroupByOutputType[P]>
        }
      >
    >


  export type AssetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    fileSize?: boolean
    fileType?: boolean
    fileName?: boolean
    createdAt?: boolean
    suppliesId?: boolean
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
    ProfilePicture?: boolean | Assets$ProfilePictureArgs<ExtArgs>
    SupplyOrderSupport?: boolean | Assets$SupplyOrderSupportArgs<ExtArgs>
    _count?: boolean | AssetsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assets"]>

  export type AssetsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    fileSize?: boolean
    fileType?: boolean
    fileName?: boolean
    createdAt?: boolean
    suppliesId?: boolean
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
  }, ExtArgs["result"]["assets"]>

  export type AssetsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    fileSize?: boolean
    fileType?: boolean
    fileName?: boolean
    createdAt?: boolean
    suppliesId?: boolean
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
  }, ExtArgs["result"]["assets"]>

  export type AssetsSelectScalar = {
    id?: boolean
    url?: boolean
    fileSize?: boolean
    fileType?: boolean
    fileName?: boolean
    createdAt?: boolean
    suppliesId?: boolean
  }

  export type AssetsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "fileSize" | "fileType" | "fileName" | "createdAt" | "suppliesId", ExtArgs["result"]["assets"]>
  export type AssetsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
    ProfilePicture?: boolean | Assets$ProfilePictureArgs<ExtArgs>
    SupplyOrderSupport?: boolean | Assets$SupplyOrderSupportArgs<ExtArgs>
    _count?: boolean | AssetsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AssetsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
  }
  export type AssetsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Supplies?: boolean | Assets$SuppliesArgs<ExtArgs>
  }

  export type $AssetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Assets"
    objects: {
      Supplies: Prisma.$SuppliesPayload<ExtArgs> | null
      ProfilePicture: Prisma.$ProfilePicturePayload<ExtArgs>[]
      SupplyOrderSupport: Prisma.$SupplyOrderSupportFilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      fileSize: string
      fileType: string
      fileName: string
      createdAt: Date
      suppliesId: string | null
    }, ExtArgs["result"]["assets"]>
    composites: {}
  }

  type AssetsGetPayload<S extends boolean | null | undefined | AssetsDefaultArgs> = $Result.GetResult<Prisma.$AssetsPayload, S>

  type AssetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssetsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssetsCountAggregateInputType | true
    }

  export interface AssetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Assets'], meta: { name: 'Assets' } }
    /**
     * Find zero or one Assets that matches the filter.
     * @param {AssetsFindUniqueArgs} args - Arguments to find a Assets
     * @example
     * // Get one Assets
     * const assets = await prisma.assets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssetsFindUniqueArgs>(args: SelectSubset<T, AssetsFindUniqueArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Assets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssetsFindUniqueOrThrowArgs} args - Arguments to find a Assets
     * @example
     * // Get one Assets
     * const assets = await prisma.assets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssetsFindUniqueOrThrowArgs>(args: SelectSubset<T, AssetsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Assets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsFindFirstArgs} args - Arguments to find a Assets
     * @example
     * // Get one Assets
     * const assets = await prisma.assets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssetsFindFirstArgs>(args?: SelectSubset<T, AssetsFindFirstArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Assets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsFindFirstOrThrowArgs} args - Arguments to find a Assets
     * @example
     * // Get one Assets
     * const assets = await prisma.assets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssetsFindFirstOrThrowArgs>(args?: SelectSubset<T, AssetsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Assets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Assets
     * const assets = await prisma.assets.findMany()
     * 
     * // Get first 10 Assets
     * const assets = await prisma.assets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assetsWithIdOnly = await prisma.assets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssetsFindManyArgs>(args?: SelectSubset<T, AssetsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Assets.
     * @param {AssetsCreateArgs} args - Arguments to create a Assets.
     * @example
     * // Create one Assets
     * const Assets = await prisma.assets.create({
     *   data: {
     *     // ... data to create a Assets
     *   }
     * })
     * 
     */
    create<T extends AssetsCreateArgs>(args: SelectSubset<T, AssetsCreateArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Assets.
     * @param {AssetsCreateManyArgs} args - Arguments to create many Assets.
     * @example
     * // Create many Assets
     * const assets = await prisma.assets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssetsCreateManyArgs>(args?: SelectSubset<T, AssetsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Assets and returns the data saved in the database.
     * @param {AssetsCreateManyAndReturnArgs} args - Arguments to create many Assets.
     * @example
     * // Create many Assets
     * const assets = await prisma.assets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Assets and only return the `id`
     * const assetsWithIdOnly = await prisma.assets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssetsCreateManyAndReturnArgs>(args?: SelectSubset<T, AssetsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Assets.
     * @param {AssetsDeleteArgs} args - Arguments to delete one Assets.
     * @example
     * // Delete one Assets
     * const Assets = await prisma.assets.delete({
     *   where: {
     *     // ... filter to delete one Assets
     *   }
     * })
     * 
     */
    delete<T extends AssetsDeleteArgs>(args: SelectSubset<T, AssetsDeleteArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Assets.
     * @param {AssetsUpdateArgs} args - Arguments to update one Assets.
     * @example
     * // Update one Assets
     * const assets = await prisma.assets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssetsUpdateArgs>(args: SelectSubset<T, AssetsUpdateArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Assets.
     * @param {AssetsDeleteManyArgs} args - Arguments to filter Assets to delete.
     * @example
     * // Delete a few Assets
     * const { count } = await prisma.assets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssetsDeleteManyArgs>(args?: SelectSubset<T, AssetsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Assets
     * const assets = await prisma.assets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssetsUpdateManyArgs>(args: SelectSubset<T, AssetsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assets and returns the data updated in the database.
     * @param {AssetsUpdateManyAndReturnArgs} args - Arguments to update many Assets.
     * @example
     * // Update many Assets
     * const assets = await prisma.assets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Assets and only return the `id`
     * const assetsWithIdOnly = await prisma.assets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssetsUpdateManyAndReturnArgs>(args: SelectSubset<T, AssetsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Assets.
     * @param {AssetsUpsertArgs} args - Arguments to update or create a Assets.
     * @example
     * // Update or create a Assets
     * const assets = await prisma.assets.upsert({
     *   create: {
     *     // ... data to create a Assets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Assets we want to update
     *   }
     * })
     */
    upsert<T extends AssetsUpsertArgs>(args: SelectSubset<T, AssetsUpsertArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsCountArgs} args - Arguments to filter Assets to count.
     * @example
     * // Count the number of Assets
     * const count = await prisma.assets.count({
     *   where: {
     *     // ... the filter for the Assets we want to count
     *   }
     * })
    **/
    count<T extends AssetsCountArgs>(
      args?: Subset<T, AssetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssetsAggregateArgs>(args: Subset<T, AssetsAggregateArgs>): Prisma.PrismaPromise<GetAssetsAggregateType<T>>

    /**
     * Group by Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssetsGroupByArgs['orderBy'] }
        : { orderBy?: AssetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Assets model
   */
  readonly fields: AssetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Assets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Supplies<T extends Assets$SuppliesArgs<ExtArgs> = {}>(args?: Subset<T, Assets$SuppliesArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ProfilePicture<T extends Assets$ProfilePictureArgs<ExtArgs> = {}>(args?: Subset<T, Assets$ProfilePictureArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SupplyOrderSupport<T extends Assets$SupplyOrderSupportArgs<ExtArgs> = {}>(args?: Subset<T, Assets$SupplyOrderSupportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Assets model
   */
  interface AssetsFieldRefs {
    readonly id: FieldRef<"Assets", 'String'>
    readonly url: FieldRef<"Assets", 'String'>
    readonly fileSize: FieldRef<"Assets", 'String'>
    readonly fileType: FieldRef<"Assets", 'String'>
    readonly fileName: FieldRef<"Assets", 'String'>
    readonly createdAt: FieldRef<"Assets", 'DateTime'>
    readonly suppliesId: FieldRef<"Assets", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Assets findUnique
   */
  export type AssetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where: AssetsWhereUniqueInput
  }

  /**
   * Assets findUniqueOrThrow
   */
  export type AssetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where: AssetsWhereUniqueInput
  }

  /**
   * Assets findFirst
   */
  export type AssetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where?: AssetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetsOrderByWithRelationInput | AssetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assets.
     */
    cursor?: AssetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assets.
     */
    distinct?: AssetsScalarFieldEnum | AssetsScalarFieldEnum[]
  }

  /**
   * Assets findFirstOrThrow
   */
  export type AssetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where?: AssetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetsOrderByWithRelationInput | AssetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assets.
     */
    cursor?: AssetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assets.
     */
    distinct?: AssetsScalarFieldEnum | AssetsScalarFieldEnum[]
  }

  /**
   * Assets findMany
   */
  export type AssetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where?: AssetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetsOrderByWithRelationInput | AssetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Assets.
     */
    cursor?: AssetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    distinct?: AssetsScalarFieldEnum | AssetsScalarFieldEnum[]
  }

  /**
   * Assets create
   */
  export type AssetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * The data needed to create a Assets.
     */
    data: XOR<AssetsCreateInput, AssetsUncheckedCreateInput>
  }

  /**
   * Assets createMany
   */
  export type AssetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Assets.
     */
    data: AssetsCreateManyInput | AssetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Assets createManyAndReturn
   */
  export type AssetsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * The data used to create many Assets.
     */
    data: AssetsCreateManyInput | AssetsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Assets update
   */
  export type AssetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * The data needed to update a Assets.
     */
    data: XOR<AssetsUpdateInput, AssetsUncheckedUpdateInput>
    /**
     * Choose, which Assets to update.
     */
    where: AssetsWhereUniqueInput
  }

  /**
   * Assets updateMany
   */
  export type AssetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Assets.
     */
    data: XOR<AssetsUpdateManyMutationInput, AssetsUncheckedUpdateManyInput>
    /**
     * Filter which Assets to update
     */
    where?: AssetsWhereInput
    /**
     * Limit how many Assets to update.
     */
    limit?: number
  }

  /**
   * Assets updateManyAndReturn
   */
  export type AssetsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * The data used to update Assets.
     */
    data: XOR<AssetsUpdateManyMutationInput, AssetsUncheckedUpdateManyInput>
    /**
     * Filter which Assets to update
     */
    where?: AssetsWhereInput
    /**
     * Limit how many Assets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Assets upsert
   */
  export type AssetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * The filter to search for the Assets to update in case it exists.
     */
    where: AssetsWhereUniqueInput
    /**
     * In case the Assets found by the `where` argument doesn't exist, create a new Assets with this data.
     */
    create: XOR<AssetsCreateInput, AssetsUncheckedCreateInput>
    /**
     * In case the Assets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssetsUpdateInput, AssetsUncheckedUpdateInput>
  }

  /**
   * Assets delete
   */
  export type AssetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    /**
     * Filter which Assets to delete.
     */
    where: AssetsWhereUniqueInput
  }

  /**
   * Assets deleteMany
   */
  export type AssetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Assets to delete
     */
    where?: AssetsWhereInput
    /**
     * Limit how many Assets to delete.
     */
    limit?: number
  }

  /**
   * Assets.Supplies
   */
  export type Assets$SuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
  }

  /**
   * Assets.ProfilePicture
   */
  export type Assets$ProfilePictureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    where?: ProfilePictureWhereInput
    orderBy?: ProfilePictureOrderByWithRelationInput | ProfilePictureOrderByWithRelationInput[]
    cursor?: ProfilePictureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfilePictureScalarFieldEnum | ProfilePictureScalarFieldEnum[]
  }

  /**
   * Assets.SupplyOrderSupport
   */
  export type Assets$SupplyOrderSupportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    where?: SupplyOrderSupportFileWhereInput
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyOrderSupportFileScalarFieldEnum | SupplyOrderSupportFileScalarFieldEnum[]
  }

  /**
   * Assets without action
   */
  export type AssetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
  }


  /**
   * Model ProfilePicture
   */

  export type AggregateProfilePicture = {
    _count: ProfilePictureCountAggregateOutputType | null
    _min: ProfilePictureMinAggregateOutputType | null
    _max: ProfilePictureMaxAggregateOutputType | null
  }

  export type ProfilePictureMinAggregateOutputType = {
    id: string | null
    assetsId: string | null
    userId: string | null
    createdAt: Date | null
  }

  export type ProfilePictureMaxAggregateOutputType = {
    id: string | null
    assetsId: string | null
    userId: string | null
    createdAt: Date | null
  }

  export type ProfilePictureCountAggregateOutputType = {
    id: number
    assetsId: number
    userId: number
    createdAt: number
    _all: number
  }


  export type ProfilePictureMinAggregateInputType = {
    id?: true
    assetsId?: true
    userId?: true
    createdAt?: true
  }

  export type ProfilePictureMaxAggregateInputType = {
    id?: true
    assetsId?: true
    userId?: true
    createdAt?: true
  }

  export type ProfilePictureCountAggregateInputType = {
    id?: true
    assetsId?: true
    userId?: true
    createdAt?: true
    _all?: true
  }

  export type ProfilePictureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProfilePicture to aggregate.
     */
    where?: ProfilePictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfilePictures to fetch.
     */
    orderBy?: ProfilePictureOrderByWithRelationInput | ProfilePictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfilePictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfilePictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfilePictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProfilePictures
    **/
    _count?: true | ProfilePictureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfilePictureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfilePictureMaxAggregateInputType
  }

  export type GetProfilePictureAggregateType<T extends ProfilePictureAggregateArgs> = {
        [P in keyof T & keyof AggregateProfilePicture]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfilePicture[P]>
      : GetScalarType<T[P], AggregateProfilePicture[P]>
  }




  export type ProfilePictureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfilePictureWhereInput
    orderBy?: ProfilePictureOrderByWithAggregationInput | ProfilePictureOrderByWithAggregationInput[]
    by: ProfilePictureScalarFieldEnum[] | ProfilePictureScalarFieldEnum
    having?: ProfilePictureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfilePictureCountAggregateInputType | true
    _min?: ProfilePictureMinAggregateInputType
    _max?: ProfilePictureMaxAggregateInputType
  }

  export type ProfilePictureGroupByOutputType = {
    id: string
    assetsId: string
    userId: string
    createdAt: Date
    _count: ProfilePictureCountAggregateOutputType | null
    _min: ProfilePictureMinAggregateOutputType | null
    _max: ProfilePictureMaxAggregateOutputType | null
  }

  type GetProfilePictureGroupByPayload<T extends ProfilePictureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfilePictureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfilePictureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfilePictureGroupByOutputType[P]>
            : GetScalarType<T[P], ProfilePictureGroupByOutputType[P]>
        }
      >
    >


  export type ProfilePictureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    userId?: boolean
    createdAt?: boolean
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profilePicture"]>

  export type ProfilePictureSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    userId?: boolean
    createdAt?: boolean
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profilePicture"]>

  export type ProfilePictureSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    userId?: boolean
    createdAt?: boolean
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profilePicture"]>

  export type ProfilePictureSelectScalar = {
    id?: boolean
    assetsId?: boolean
    userId?: boolean
    createdAt?: boolean
  }

  export type ProfilePictureOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetsId" | "userId" | "createdAt", ExtArgs["result"]["profilePicture"]>
  export type ProfilePictureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfilePictureIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfilePictureIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetsDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProfilePicturePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProfilePicture"
    objects: {
      asset: Prisma.$AssetsPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetsId: string
      userId: string
      createdAt: Date
    }, ExtArgs["result"]["profilePicture"]>
    composites: {}
  }

  type ProfilePictureGetPayload<S extends boolean | null | undefined | ProfilePictureDefaultArgs> = $Result.GetResult<Prisma.$ProfilePicturePayload, S>

  type ProfilePictureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfilePictureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfilePictureCountAggregateInputType | true
    }

  export interface ProfilePictureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProfilePicture'], meta: { name: 'ProfilePicture' } }
    /**
     * Find zero or one ProfilePicture that matches the filter.
     * @param {ProfilePictureFindUniqueArgs} args - Arguments to find a ProfilePicture
     * @example
     * // Get one ProfilePicture
     * const profilePicture = await prisma.profilePicture.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfilePictureFindUniqueArgs>(args: SelectSubset<T, ProfilePictureFindUniqueArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProfilePicture that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfilePictureFindUniqueOrThrowArgs} args - Arguments to find a ProfilePicture
     * @example
     * // Get one ProfilePicture
     * const profilePicture = await prisma.profilePicture.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfilePictureFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfilePictureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProfilePicture that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureFindFirstArgs} args - Arguments to find a ProfilePicture
     * @example
     * // Get one ProfilePicture
     * const profilePicture = await prisma.profilePicture.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfilePictureFindFirstArgs>(args?: SelectSubset<T, ProfilePictureFindFirstArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProfilePicture that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureFindFirstOrThrowArgs} args - Arguments to find a ProfilePicture
     * @example
     * // Get one ProfilePicture
     * const profilePicture = await prisma.profilePicture.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfilePictureFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfilePictureFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProfilePictures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProfilePictures
     * const profilePictures = await prisma.profilePicture.findMany()
     * 
     * // Get first 10 ProfilePictures
     * const profilePictures = await prisma.profilePicture.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profilePictureWithIdOnly = await prisma.profilePicture.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfilePictureFindManyArgs>(args?: SelectSubset<T, ProfilePictureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProfilePicture.
     * @param {ProfilePictureCreateArgs} args - Arguments to create a ProfilePicture.
     * @example
     * // Create one ProfilePicture
     * const ProfilePicture = await prisma.profilePicture.create({
     *   data: {
     *     // ... data to create a ProfilePicture
     *   }
     * })
     * 
     */
    create<T extends ProfilePictureCreateArgs>(args: SelectSubset<T, ProfilePictureCreateArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProfilePictures.
     * @param {ProfilePictureCreateManyArgs} args - Arguments to create many ProfilePictures.
     * @example
     * // Create many ProfilePictures
     * const profilePicture = await prisma.profilePicture.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfilePictureCreateManyArgs>(args?: SelectSubset<T, ProfilePictureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProfilePictures and returns the data saved in the database.
     * @param {ProfilePictureCreateManyAndReturnArgs} args - Arguments to create many ProfilePictures.
     * @example
     * // Create many ProfilePictures
     * const profilePicture = await prisma.profilePicture.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProfilePictures and only return the `id`
     * const profilePictureWithIdOnly = await prisma.profilePicture.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfilePictureCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfilePictureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProfilePicture.
     * @param {ProfilePictureDeleteArgs} args - Arguments to delete one ProfilePicture.
     * @example
     * // Delete one ProfilePicture
     * const ProfilePicture = await prisma.profilePicture.delete({
     *   where: {
     *     // ... filter to delete one ProfilePicture
     *   }
     * })
     * 
     */
    delete<T extends ProfilePictureDeleteArgs>(args: SelectSubset<T, ProfilePictureDeleteArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProfilePicture.
     * @param {ProfilePictureUpdateArgs} args - Arguments to update one ProfilePicture.
     * @example
     * // Update one ProfilePicture
     * const profilePicture = await prisma.profilePicture.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfilePictureUpdateArgs>(args: SelectSubset<T, ProfilePictureUpdateArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProfilePictures.
     * @param {ProfilePictureDeleteManyArgs} args - Arguments to filter ProfilePictures to delete.
     * @example
     * // Delete a few ProfilePictures
     * const { count } = await prisma.profilePicture.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfilePictureDeleteManyArgs>(args?: SelectSubset<T, ProfilePictureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProfilePictures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProfilePictures
     * const profilePicture = await prisma.profilePicture.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfilePictureUpdateManyArgs>(args: SelectSubset<T, ProfilePictureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProfilePictures and returns the data updated in the database.
     * @param {ProfilePictureUpdateManyAndReturnArgs} args - Arguments to update many ProfilePictures.
     * @example
     * // Update many ProfilePictures
     * const profilePicture = await prisma.profilePicture.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProfilePictures and only return the `id`
     * const profilePictureWithIdOnly = await prisma.profilePicture.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfilePictureUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfilePictureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProfilePicture.
     * @param {ProfilePictureUpsertArgs} args - Arguments to update or create a ProfilePicture.
     * @example
     * // Update or create a ProfilePicture
     * const profilePicture = await prisma.profilePicture.upsert({
     *   create: {
     *     // ... data to create a ProfilePicture
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProfilePicture we want to update
     *   }
     * })
     */
    upsert<T extends ProfilePictureUpsertArgs>(args: SelectSubset<T, ProfilePictureUpsertArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProfilePictures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureCountArgs} args - Arguments to filter ProfilePictures to count.
     * @example
     * // Count the number of ProfilePictures
     * const count = await prisma.profilePicture.count({
     *   where: {
     *     // ... the filter for the ProfilePictures we want to count
     *   }
     * })
    **/
    count<T extends ProfilePictureCountArgs>(
      args?: Subset<T, ProfilePictureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfilePictureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProfilePicture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfilePictureAggregateArgs>(args: Subset<T, ProfilePictureAggregateArgs>): Prisma.PrismaPromise<GetProfilePictureAggregateType<T>>

    /**
     * Group by ProfilePicture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfilePictureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfilePictureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfilePictureGroupByArgs['orderBy'] }
        : { orderBy?: ProfilePictureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfilePictureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfilePictureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProfilePicture model
   */
  readonly fields: ProfilePictureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProfilePicture.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfilePictureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetsDefaultArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProfilePicture model
   */
  interface ProfilePictureFieldRefs {
    readonly id: FieldRef<"ProfilePicture", 'String'>
    readonly assetsId: FieldRef<"ProfilePicture", 'String'>
    readonly userId: FieldRef<"ProfilePicture", 'String'>
    readonly createdAt: FieldRef<"ProfilePicture", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProfilePicture findUnique
   */
  export type ProfilePictureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter, which ProfilePicture to fetch.
     */
    where: ProfilePictureWhereUniqueInput
  }

  /**
   * ProfilePicture findUniqueOrThrow
   */
  export type ProfilePictureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter, which ProfilePicture to fetch.
     */
    where: ProfilePictureWhereUniqueInput
  }

  /**
   * ProfilePicture findFirst
   */
  export type ProfilePictureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter, which ProfilePicture to fetch.
     */
    where?: ProfilePictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfilePictures to fetch.
     */
    orderBy?: ProfilePictureOrderByWithRelationInput | ProfilePictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProfilePictures.
     */
    cursor?: ProfilePictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfilePictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfilePictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProfilePictures.
     */
    distinct?: ProfilePictureScalarFieldEnum | ProfilePictureScalarFieldEnum[]
  }

  /**
   * ProfilePicture findFirstOrThrow
   */
  export type ProfilePictureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter, which ProfilePicture to fetch.
     */
    where?: ProfilePictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfilePictures to fetch.
     */
    orderBy?: ProfilePictureOrderByWithRelationInput | ProfilePictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProfilePictures.
     */
    cursor?: ProfilePictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfilePictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfilePictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProfilePictures.
     */
    distinct?: ProfilePictureScalarFieldEnum | ProfilePictureScalarFieldEnum[]
  }

  /**
   * ProfilePicture findMany
   */
  export type ProfilePictureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter, which ProfilePictures to fetch.
     */
    where?: ProfilePictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfilePictures to fetch.
     */
    orderBy?: ProfilePictureOrderByWithRelationInput | ProfilePictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProfilePictures.
     */
    cursor?: ProfilePictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfilePictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfilePictures.
     */
    skip?: number
    distinct?: ProfilePictureScalarFieldEnum | ProfilePictureScalarFieldEnum[]
  }

  /**
   * ProfilePicture create
   */
  export type ProfilePictureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * The data needed to create a ProfilePicture.
     */
    data: XOR<ProfilePictureCreateInput, ProfilePictureUncheckedCreateInput>
  }

  /**
   * ProfilePicture createMany
   */
  export type ProfilePictureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProfilePictures.
     */
    data: ProfilePictureCreateManyInput | ProfilePictureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProfilePicture createManyAndReturn
   */
  export type ProfilePictureCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * The data used to create many ProfilePictures.
     */
    data: ProfilePictureCreateManyInput | ProfilePictureCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProfilePicture update
   */
  export type ProfilePictureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * The data needed to update a ProfilePicture.
     */
    data: XOR<ProfilePictureUpdateInput, ProfilePictureUncheckedUpdateInput>
    /**
     * Choose, which ProfilePicture to update.
     */
    where: ProfilePictureWhereUniqueInput
  }

  /**
   * ProfilePicture updateMany
   */
  export type ProfilePictureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProfilePictures.
     */
    data: XOR<ProfilePictureUpdateManyMutationInput, ProfilePictureUncheckedUpdateManyInput>
    /**
     * Filter which ProfilePictures to update
     */
    where?: ProfilePictureWhereInput
    /**
     * Limit how many ProfilePictures to update.
     */
    limit?: number
  }

  /**
   * ProfilePicture updateManyAndReturn
   */
  export type ProfilePictureUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * The data used to update ProfilePictures.
     */
    data: XOR<ProfilePictureUpdateManyMutationInput, ProfilePictureUncheckedUpdateManyInput>
    /**
     * Filter which ProfilePictures to update
     */
    where?: ProfilePictureWhereInput
    /**
     * Limit how many ProfilePictures to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProfilePicture upsert
   */
  export type ProfilePictureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * The filter to search for the ProfilePicture to update in case it exists.
     */
    where: ProfilePictureWhereUniqueInput
    /**
     * In case the ProfilePicture found by the `where` argument doesn't exist, create a new ProfilePicture with this data.
     */
    create: XOR<ProfilePictureCreateInput, ProfilePictureUncheckedCreateInput>
    /**
     * In case the ProfilePicture was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfilePictureUpdateInput, ProfilePictureUncheckedUpdateInput>
  }

  /**
   * ProfilePicture delete
   */
  export type ProfilePictureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    /**
     * Filter which ProfilePicture to delete.
     */
    where: ProfilePictureWhereUniqueInput
  }

  /**
   * ProfilePicture deleteMany
   */
  export type ProfilePictureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProfilePictures to delete
     */
    where?: ProfilePictureWhereInput
    /**
     * Limit how many ProfilePictures to delete.
     */
    limit?: number
  }

  /**
   * ProfilePicture without action
   */
  export type ProfilePictureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
  }


  /**
   * Model InventoryBox
   */

  export type AggregateInventoryBox = {
    _count: InventoryBoxCountAggregateOutputType | null
    _avg: InventoryBoxAvgAggregateOutputType | null
    _sum: InventoryBoxSumAggregateOutputType | null
    _min: InventoryBoxMinAggregateOutputType | null
    _max: InventoryBoxMaxAggregateOutputType | null
  }

  export type InventoryBoxAvgAggregateOutputType = {
    code: number | null
  }

  export type InventoryBoxSumAggregateOutputType = {
    code: number | null
  }

  export type InventoryBoxMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: number | null
    createdAt: Date | null
    lineId: string | null
    userId: string | null
    departmentId: string | null
  }

  export type InventoryBoxMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: number | null
    createdAt: Date | null
    lineId: string | null
    userId: string | null
    departmentId: string | null
  }

  export type InventoryBoxCountAggregateOutputType = {
    id: number
    name: number
    code: number
    createdAt: number
    lineId: number
    userId: number
    departmentId: number
    _all: number
  }


  export type InventoryBoxAvgAggregateInputType = {
    code?: true
  }

  export type InventoryBoxSumAggregateInputType = {
    code?: true
  }

  export type InventoryBoxMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    createdAt?: true
    lineId?: true
    userId?: true
    departmentId?: true
  }

  export type InventoryBoxMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    createdAt?: true
    lineId?: true
    userId?: true
    departmentId?: true
  }

  export type InventoryBoxCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    createdAt?: true
    lineId?: true
    userId?: true
    departmentId?: true
    _all?: true
  }

  export type InventoryBoxAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryBox to aggregate.
     */
    where?: InventoryBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryBoxes to fetch.
     */
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryBoxes
    **/
    _count?: true | InventoryBoxCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventoryBoxAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventoryBoxSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryBoxMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryBoxMaxAggregateInputType
  }

  export type GetInventoryBoxAggregateType<T extends InventoryBoxAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryBox]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryBox[P]>
      : GetScalarType<T[P], AggregateInventoryBox[P]>
  }




  export type InventoryBoxGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryBoxWhereInput
    orderBy?: InventoryBoxOrderByWithAggregationInput | InventoryBoxOrderByWithAggregationInput[]
    by: InventoryBoxScalarFieldEnum[] | InventoryBoxScalarFieldEnum
    having?: InventoryBoxScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryBoxCountAggregateInputType | true
    _avg?: InventoryBoxAvgAggregateInputType
    _sum?: InventoryBoxSumAggregateInputType
    _min?: InventoryBoxMinAggregateInputType
    _max?: InventoryBoxMaxAggregateInputType
  }

  export type InventoryBoxGroupByOutputType = {
    id: string
    name: string
    code: number
    createdAt: Date
    lineId: string
    userId: string
    departmentId: string | null
    _count: InventoryBoxCountAggregateOutputType | null
    _avg: InventoryBoxAvgAggregateOutputType | null
    _sum: InventoryBoxSumAggregateOutputType | null
    _min: InventoryBoxMinAggregateOutputType | null
    _max: InventoryBoxMaxAggregateOutputType | null
  }

  type GetInventoryBoxGroupByPayload<T extends InventoryBoxGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryBoxGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryBoxGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryBoxGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryBoxGroupByOutputType[P]>
        }
      >
    >


  export type InventoryBoxSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    departmentId?: boolean
    batch?: boolean | InventoryBox$batchArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
    InventoryAccessLogs?: boolean | InventoryBox$InventoryAccessLogsArgs<ExtArgs>
    SupplyBatch?: boolean | InventoryBox$SupplyBatchArgs<ExtArgs>
    ContainerAllowedUser?: boolean | InventoryBox$ContainerAllowedUserArgs<ExtArgs>
    SuppliesDataSet?: boolean | InventoryBox$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | InventoryBoxCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryBox"]>

  export type InventoryBoxSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    departmentId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryBox"]>

  export type InventoryBoxSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    departmentId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryBox"]>

  export type InventoryBoxSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    departmentId?: boolean
  }

  export type InventoryBoxOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "createdAt" | "lineId" | "userId" | "departmentId", ExtArgs["result"]["inventoryBox"]>
  export type InventoryBoxInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batch?: boolean | InventoryBox$batchArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
    InventoryAccessLogs?: boolean | InventoryBox$InventoryAccessLogsArgs<ExtArgs>
    SupplyBatch?: boolean | InventoryBox$SupplyBatchArgs<ExtArgs>
    ContainerAllowedUser?: boolean | InventoryBox$ContainerAllowedUserArgs<ExtArgs>
    SuppliesDataSet?: boolean | InventoryBox$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | InventoryBoxCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventoryBoxIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
  }
  export type InventoryBoxIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | InventoryBox$unitArgs<ExtArgs>
  }

  export type $InventoryBoxPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryBox"
    objects: {
      batch: Prisma.$SupplyBatchOrderPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs>
      unit: Prisma.$DepartmentPayload<ExtArgs> | null
      InventoryAccessLogs: Prisma.$InventoryAccessLogsPayload<ExtArgs>[]
      SupplyBatch: Prisma.$SupplyBatchPayload<ExtArgs>[]
      ContainerAllowedUser: Prisma.$ContainerAllowedUserPayload<ExtArgs>[]
      SuppliesDataSet: Prisma.$SuppliesDataSetPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: number
      createdAt: Date
      lineId: string
      userId: string
      departmentId: string | null
    }, ExtArgs["result"]["inventoryBox"]>
    composites: {}
  }

  type InventoryBoxGetPayload<S extends boolean | null | undefined | InventoryBoxDefaultArgs> = $Result.GetResult<Prisma.$InventoryBoxPayload, S>

  type InventoryBoxCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryBoxFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryBoxCountAggregateInputType | true
    }

  export interface InventoryBoxDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryBox'], meta: { name: 'InventoryBox' } }
    /**
     * Find zero or one InventoryBox that matches the filter.
     * @param {InventoryBoxFindUniqueArgs} args - Arguments to find a InventoryBox
     * @example
     * // Get one InventoryBox
     * const inventoryBox = await prisma.inventoryBox.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryBoxFindUniqueArgs>(args: SelectSubset<T, InventoryBoxFindUniqueArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryBox that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryBoxFindUniqueOrThrowArgs} args - Arguments to find a InventoryBox
     * @example
     * // Get one InventoryBox
     * const inventoryBox = await prisma.inventoryBox.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryBoxFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryBoxFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryBox that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxFindFirstArgs} args - Arguments to find a InventoryBox
     * @example
     * // Get one InventoryBox
     * const inventoryBox = await prisma.inventoryBox.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryBoxFindFirstArgs>(args?: SelectSubset<T, InventoryBoxFindFirstArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryBox that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxFindFirstOrThrowArgs} args - Arguments to find a InventoryBox
     * @example
     * // Get one InventoryBox
     * const inventoryBox = await prisma.inventoryBox.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryBoxFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryBoxFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryBoxes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryBoxes
     * const inventoryBoxes = await prisma.inventoryBox.findMany()
     * 
     * // Get first 10 InventoryBoxes
     * const inventoryBoxes = await prisma.inventoryBox.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryBoxWithIdOnly = await prisma.inventoryBox.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryBoxFindManyArgs>(args?: SelectSubset<T, InventoryBoxFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryBox.
     * @param {InventoryBoxCreateArgs} args - Arguments to create a InventoryBox.
     * @example
     * // Create one InventoryBox
     * const InventoryBox = await prisma.inventoryBox.create({
     *   data: {
     *     // ... data to create a InventoryBox
     *   }
     * })
     * 
     */
    create<T extends InventoryBoxCreateArgs>(args: SelectSubset<T, InventoryBoxCreateArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryBoxes.
     * @param {InventoryBoxCreateManyArgs} args - Arguments to create many InventoryBoxes.
     * @example
     * // Create many InventoryBoxes
     * const inventoryBox = await prisma.inventoryBox.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryBoxCreateManyArgs>(args?: SelectSubset<T, InventoryBoxCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryBoxes and returns the data saved in the database.
     * @param {InventoryBoxCreateManyAndReturnArgs} args - Arguments to create many InventoryBoxes.
     * @example
     * // Create many InventoryBoxes
     * const inventoryBox = await prisma.inventoryBox.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryBoxes and only return the `id`
     * const inventoryBoxWithIdOnly = await prisma.inventoryBox.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryBoxCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryBoxCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryBox.
     * @param {InventoryBoxDeleteArgs} args - Arguments to delete one InventoryBox.
     * @example
     * // Delete one InventoryBox
     * const InventoryBox = await prisma.inventoryBox.delete({
     *   where: {
     *     // ... filter to delete one InventoryBox
     *   }
     * })
     * 
     */
    delete<T extends InventoryBoxDeleteArgs>(args: SelectSubset<T, InventoryBoxDeleteArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryBox.
     * @param {InventoryBoxUpdateArgs} args - Arguments to update one InventoryBox.
     * @example
     * // Update one InventoryBox
     * const inventoryBox = await prisma.inventoryBox.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryBoxUpdateArgs>(args: SelectSubset<T, InventoryBoxUpdateArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryBoxes.
     * @param {InventoryBoxDeleteManyArgs} args - Arguments to filter InventoryBoxes to delete.
     * @example
     * // Delete a few InventoryBoxes
     * const { count } = await prisma.inventoryBox.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryBoxDeleteManyArgs>(args?: SelectSubset<T, InventoryBoxDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryBoxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryBoxes
     * const inventoryBox = await prisma.inventoryBox.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryBoxUpdateManyArgs>(args: SelectSubset<T, InventoryBoxUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryBoxes and returns the data updated in the database.
     * @param {InventoryBoxUpdateManyAndReturnArgs} args - Arguments to update many InventoryBoxes.
     * @example
     * // Update many InventoryBoxes
     * const inventoryBox = await prisma.inventoryBox.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryBoxes and only return the `id`
     * const inventoryBoxWithIdOnly = await prisma.inventoryBox.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryBoxUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryBoxUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryBox.
     * @param {InventoryBoxUpsertArgs} args - Arguments to update or create a InventoryBox.
     * @example
     * // Update or create a InventoryBox
     * const inventoryBox = await prisma.inventoryBox.upsert({
     *   create: {
     *     // ... data to create a InventoryBox
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryBox we want to update
     *   }
     * })
     */
    upsert<T extends InventoryBoxUpsertArgs>(args: SelectSubset<T, InventoryBoxUpsertArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryBoxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxCountArgs} args - Arguments to filter InventoryBoxes to count.
     * @example
     * // Count the number of InventoryBoxes
     * const count = await prisma.inventoryBox.count({
     *   where: {
     *     // ... the filter for the InventoryBoxes we want to count
     *   }
     * })
    **/
    count<T extends InventoryBoxCountArgs>(
      args?: Subset<T, InventoryBoxCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryBoxCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryBox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryBoxAggregateArgs>(args: Subset<T, InventoryBoxAggregateArgs>): Prisma.PrismaPromise<GetInventoryBoxAggregateType<T>>

    /**
     * Group by InventoryBox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryBoxGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryBoxGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryBoxGroupByArgs['orderBy'] }
        : { orderBy?: InventoryBoxGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryBoxGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryBoxGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryBox model
   */
  readonly fields: InventoryBoxFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryBox.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryBoxClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    batch<T extends InventoryBox$batchArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$batchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unit<T extends InventoryBox$unitArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$unitArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    InventoryAccessLogs<T extends InventoryBox$InventoryAccessLogsArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$InventoryAccessLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SupplyBatch<T extends InventoryBox$SupplyBatchArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$SupplyBatchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ContainerAllowedUser<T extends InventoryBox$ContainerAllowedUserArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$ContainerAllowedUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesDataSet<T extends InventoryBox$SuppliesDataSetArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBox$SuppliesDataSetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryBox model
   */
  interface InventoryBoxFieldRefs {
    readonly id: FieldRef<"InventoryBox", 'String'>
    readonly name: FieldRef<"InventoryBox", 'String'>
    readonly code: FieldRef<"InventoryBox", 'Int'>
    readonly createdAt: FieldRef<"InventoryBox", 'DateTime'>
    readonly lineId: FieldRef<"InventoryBox", 'String'>
    readonly userId: FieldRef<"InventoryBox", 'String'>
    readonly departmentId: FieldRef<"InventoryBox", 'String'>
  }
    

  // Custom InputTypes
  /**
   * InventoryBox findUnique
   */
  export type InventoryBoxFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter, which InventoryBox to fetch.
     */
    where: InventoryBoxWhereUniqueInput
  }

  /**
   * InventoryBox findUniqueOrThrow
   */
  export type InventoryBoxFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter, which InventoryBox to fetch.
     */
    where: InventoryBoxWhereUniqueInput
  }

  /**
   * InventoryBox findFirst
   */
  export type InventoryBoxFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter, which InventoryBox to fetch.
     */
    where?: InventoryBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryBoxes to fetch.
     */
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryBoxes.
     */
    cursor?: InventoryBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryBoxes.
     */
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * InventoryBox findFirstOrThrow
   */
  export type InventoryBoxFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter, which InventoryBox to fetch.
     */
    where?: InventoryBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryBoxes to fetch.
     */
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryBoxes.
     */
    cursor?: InventoryBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryBoxes.
     */
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * InventoryBox findMany
   */
  export type InventoryBoxFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter, which InventoryBoxes to fetch.
     */
    where?: InventoryBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryBoxes to fetch.
     */
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryBoxes.
     */
    cursor?: InventoryBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryBoxes.
     */
    skip?: number
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * InventoryBox create
   */
  export type InventoryBoxCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryBox.
     */
    data: XOR<InventoryBoxCreateInput, InventoryBoxUncheckedCreateInput>
  }

  /**
   * InventoryBox createMany
   */
  export type InventoryBoxCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryBoxes.
     */
    data: InventoryBoxCreateManyInput | InventoryBoxCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryBox createManyAndReturn
   */
  export type InventoryBoxCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryBoxes.
     */
    data: InventoryBoxCreateManyInput | InventoryBoxCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryBox update
   */
  export type InventoryBoxUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryBox.
     */
    data: XOR<InventoryBoxUpdateInput, InventoryBoxUncheckedUpdateInput>
    /**
     * Choose, which InventoryBox to update.
     */
    where: InventoryBoxWhereUniqueInput
  }

  /**
   * InventoryBox updateMany
   */
  export type InventoryBoxUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryBoxes.
     */
    data: XOR<InventoryBoxUpdateManyMutationInput, InventoryBoxUncheckedUpdateManyInput>
    /**
     * Filter which InventoryBoxes to update
     */
    where?: InventoryBoxWhereInput
    /**
     * Limit how many InventoryBoxes to update.
     */
    limit?: number
  }

  /**
   * InventoryBox updateManyAndReturn
   */
  export type InventoryBoxUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * The data used to update InventoryBoxes.
     */
    data: XOR<InventoryBoxUpdateManyMutationInput, InventoryBoxUncheckedUpdateManyInput>
    /**
     * Filter which InventoryBoxes to update
     */
    where?: InventoryBoxWhereInput
    /**
     * Limit how many InventoryBoxes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryBox upsert
   */
  export type InventoryBoxUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryBox to update in case it exists.
     */
    where: InventoryBoxWhereUniqueInput
    /**
     * In case the InventoryBox found by the `where` argument doesn't exist, create a new InventoryBox with this data.
     */
    create: XOR<InventoryBoxCreateInput, InventoryBoxUncheckedCreateInput>
    /**
     * In case the InventoryBox was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryBoxUpdateInput, InventoryBoxUncheckedUpdateInput>
  }

  /**
   * InventoryBox delete
   */
  export type InventoryBoxDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    /**
     * Filter which InventoryBox to delete.
     */
    where: InventoryBoxWhereUniqueInput
  }

  /**
   * InventoryBox deleteMany
   */
  export type InventoryBoxDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryBoxes to delete
     */
    where?: InventoryBoxWhereInput
    /**
     * Limit how many InventoryBoxes to delete.
     */
    limit?: number
  }

  /**
   * InventoryBox.batch
   */
  export type InventoryBox$batchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    where?: SupplyBatchOrderWhereInput
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    cursor?: SupplyBatchOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * InventoryBox.unit
   */
  export type InventoryBox$unitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * InventoryBox.InventoryAccessLogs
   */
  export type InventoryBox$InventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    where?: InventoryAccessLogsWhereInput
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    cursor?: InventoryAccessLogsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * InventoryBox.SupplyBatch
   */
  export type InventoryBox$SupplyBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    where?: SupplyBatchWhereInput
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    cursor?: SupplyBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchScalarFieldEnum | SupplyBatchScalarFieldEnum[]
  }

  /**
   * InventoryBox.ContainerAllowedUser
   */
  export type InventoryBox$ContainerAllowedUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    where?: ContainerAllowedUserWhereInput
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    cursor?: ContainerAllowedUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * InventoryBox.SuppliesDataSet
   */
  export type InventoryBox$SuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    where?: SuppliesDataSetWhereInput
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    cursor?: SuppliesDataSetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesDataSetScalarFieldEnum | SuppliesDataSetScalarFieldEnum[]
  }

  /**
   * InventoryBox without action
   */
  export type InventoryBoxDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
  }


  /**
   * Model ContainerAllowedUser
   */

  export type AggregateContainerAllowedUser = {
    _count: ContainerAllowedUserCountAggregateOutputType | null
    _min: ContainerAllowedUserMinAggregateOutputType | null
    _max: ContainerAllowedUserMaxAggregateOutputType | null
  }

  export type ContainerAllowedUserMinAggregateOutputType = {
    id: string | null
    userId: string | null
    inventoryBoxId: string | null
    grantByUserId: string | null
    timestamp: Date | null
  }

  export type ContainerAllowedUserMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    inventoryBoxId: string | null
    grantByUserId: string | null
    timestamp: Date | null
  }

  export type ContainerAllowedUserCountAggregateOutputType = {
    id: number
    userId: number
    inventoryBoxId: number
    grantByUserId: number
    timestamp: number
    _all: number
  }


  export type ContainerAllowedUserMinAggregateInputType = {
    id?: true
    userId?: true
    inventoryBoxId?: true
    grantByUserId?: true
    timestamp?: true
  }

  export type ContainerAllowedUserMaxAggregateInputType = {
    id?: true
    userId?: true
    inventoryBoxId?: true
    grantByUserId?: true
    timestamp?: true
  }

  export type ContainerAllowedUserCountAggregateInputType = {
    id?: true
    userId?: true
    inventoryBoxId?: true
    grantByUserId?: true
    timestamp?: true
    _all?: true
  }

  export type ContainerAllowedUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ContainerAllowedUser to aggregate.
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContainerAllowedUsers to fetch.
     */
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContainerAllowedUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContainerAllowedUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContainerAllowedUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ContainerAllowedUsers
    **/
    _count?: true | ContainerAllowedUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContainerAllowedUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContainerAllowedUserMaxAggregateInputType
  }

  export type GetContainerAllowedUserAggregateType<T extends ContainerAllowedUserAggregateArgs> = {
        [P in keyof T & keyof AggregateContainerAllowedUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContainerAllowedUser[P]>
      : GetScalarType<T[P], AggregateContainerAllowedUser[P]>
  }




  export type ContainerAllowedUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContainerAllowedUserWhereInput
    orderBy?: ContainerAllowedUserOrderByWithAggregationInput | ContainerAllowedUserOrderByWithAggregationInput[]
    by: ContainerAllowedUserScalarFieldEnum[] | ContainerAllowedUserScalarFieldEnum
    having?: ContainerAllowedUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContainerAllowedUserCountAggregateInputType | true
    _min?: ContainerAllowedUserMinAggregateInputType
    _max?: ContainerAllowedUserMaxAggregateInputType
  }

  export type ContainerAllowedUserGroupByOutputType = {
    id: string
    userId: string | null
    inventoryBoxId: string
    grantByUserId: string
    timestamp: Date
    _count: ContainerAllowedUserCountAggregateOutputType | null
    _min: ContainerAllowedUserMinAggregateOutputType | null
    _max: ContainerAllowedUserMaxAggregateOutputType | null
  }

  type GetContainerAllowedUserGroupByPayload<T extends ContainerAllowedUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContainerAllowedUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContainerAllowedUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContainerAllowedUserGroupByOutputType[P]>
            : GetScalarType<T[P], ContainerAllowedUserGroupByOutputType[P]>
        }
      >
    >


  export type ContainerAllowedUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    inventoryBoxId?: boolean
    grantByUserId?: boolean
    timestamp?: boolean
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["containerAllowedUser"]>

  export type ContainerAllowedUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    inventoryBoxId?: boolean
    grantByUserId?: boolean
    timestamp?: boolean
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["containerAllowedUser"]>

  export type ContainerAllowedUserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    inventoryBoxId?: boolean
    grantByUserId?: boolean
    timestamp?: boolean
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["containerAllowedUser"]>

  export type ContainerAllowedUserSelectScalar = {
    id?: boolean
    userId?: boolean
    inventoryBoxId?: boolean
    grantByUserId?: boolean
    timestamp?: boolean
  }

  export type ContainerAllowedUserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "inventoryBoxId" | "grantByUserId" | "timestamp", ExtArgs["result"]["containerAllowedUser"]>
  export type ContainerAllowedUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ContainerAllowedUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ContainerAllowedUserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ContainerAllowedUser$userArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    grantBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ContainerAllowedUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ContainerAllowedUser"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      container: Prisma.$InventoryBoxPayload<ExtArgs>
      grantBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      inventoryBoxId: string
      grantByUserId: string
      timestamp: Date
    }, ExtArgs["result"]["containerAllowedUser"]>
    composites: {}
  }

  type ContainerAllowedUserGetPayload<S extends boolean | null | undefined | ContainerAllowedUserDefaultArgs> = $Result.GetResult<Prisma.$ContainerAllowedUserPayload, S>

  type ContainerAllowedUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContainerAllowedUserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContainerAllowedUserCountAggregateInputType | true
    }

  export interface ContainerAllowedUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ContainerAllowedUser'], meta: { name: 'ContainerAllowedUser' } }
    /**
     * Find zero or one ContainerAllowedUser that matches the filter.
     * @param {ContainerAllowedUserFindUniqueArgs} args - Arguments to find a ContainerAllowedUser
     * @example
     * // Get one ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContainerAllowedUserFindUniqueArgs>(args: SelectSubset<T, ContainerAllowedUserFindUniqueArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ContainerAllowedUser that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContainerAllowedUserFindUniqueOrThrowArgs} args - Arguments to find a ContainerAllowedUser
     * @example
     * // Get one ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContainerAllowedUserFindUniqueOrThrowArgs>(args: SelectSubset<T, ContainerAllowedUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ContainerAllowedUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserFindFirstArgs} args - Arguments to find a ContainerAllowedUser
     * @example
     * // Get one ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContainerAllowedUserFindFirstArgs>(args?: SelectSubset<T, ContainerAllowedUserFindFirstArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ContainerAllowedUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserFindFirstOrThrowArgs} args - Arguments to find a ContainerAllowedUser
     * @example
     * // Get one ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContainerAllowedUserFindFirstOrThrowArgs>(args?: SelectSubset<T, ContainerAllowedUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ContainerAllowedUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ContainerAllowedUsers
     * const containerAllowedUsers = await prisma.containerAllowedUser.findMany()
     * 
     * // Get first 10 ContainerAllowedUsers
     * const containerAllowedUsers = await prisma.containerAllowedUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const containerAllowedUserWithIdOnly = await prisma.containerAllowedUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContainerAllowedUserFindManyArgs>(args?: SelectSubset<T, ContainerAllowedUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ContainerAllowedUser.
     * @param {ContainerAllowedUserCreateArgs} args - Arguments to create a ContainerAllowedUser.
     * @example
     * // Create one ContainerAllowedUser
     * const ContainerAllowedUser = await prisma.containerAllowedUser.create({
     *   data: {
     *     // ... data to create a ContainerAllowedUser
     *   }
     * })
     * 
     */
    create<T extends ContainerAllowedUserCreateArgs>(args: SelectSubset<T, ContainerAllowedUserCreateArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ContainerAllowedUsers.
     * @param {ContainerAllowedUserCreateManyArgs} args - Arguments to create many ContainerAllowedUsers.
     * @example
     * // Create many ContainerAllowedUsers
     * const containerAllowedUser = await prisma.containerAllowedUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContainerAllowedUserCreateManyArgs>(args?: SelectSubset<T, ContainerAllowedUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ContainerAllowedUsers and returns the data saved in the database.
     * @param {ContainerAllowedUserCreateManyAndReturnArgs} args - Arguments to create many ContainerAllowedUsers.
     * @example
     * // Create many ContainerAllowedUsers
     * const containerAllowedUser = await prisma.containerAllowedUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ContainerAllowedUsers and only return the `id`
     * const containerAllowedUserWithIdOnly = await prisma.containerAllowedUser.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContainerAllowedUserCreateManyAndReturnArgs>(args?: SelectSubset<T, ContainerAllowedUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ContainerAllowedUser.
     * @param {ContainerAllowedUserDeleteArgs} args - Arguments to delete one ContainerAllowedUser.
     * @example
     * // Delete one ContainerAllowedUser
     * const ContainerAllowedUser = await prisma.containerAllowedUser.delete({
     *   where: {
     *     // ... filter to delete one ContainerAllowedUser
     *   }
     * })
     * 
     */
    delete<T extends ContainerAllowedUserDeleteArgs>(args: SelectSubset<T, ContainerAllowedUserDeleteArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ContainerAllowedUser.
     * @param {ContainerAllowedUserUpdateArgs} args - Arguments to update one ContainerAllowedUser.
     * @example
     * // Update one ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContainerAllowedUserUpdateArgs>(args: SelectSubset<T, ContainerAllowedUserUpdateArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ContainerAllowedUsers.
     * @param {ContainerAllowedUserDeleteManyArgs} args - Arguments to filter ContainerAllowedUsers to delete.
     * @example
     * // Delete a few ContainerAllowedUsers
     * const { count } = await prisma.containerAllowedUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContainerAllowedUserDeleteManyArgs>(args?: SelectSubset<T, ContainerAllowedUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ContainerAllowedUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ContainerAllowedUsers
     * const containerAllowedUser = await prisma.containerAllowedUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContainerAllowedUserUpdateManyArgs>(args: SelectSubset<T, ContainerAllowedUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ContainerAllowedUsers and returns the data updated in the database.
     * @param {ContainerAllowedUserUpdateManyAndReturnArgs} args - Arguments to update many ContainerAllowedUsers.
     * @example
     * // Update many ContainerAllowedUsers
     * const containerAllowedUser = await prisma.containerAllowedUser.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ContainerAllowedUsers and only return the `id`
     * const containerAllowedUserWithIdOnly = await prisma.containerAllowedUser.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContainerAllowedUserUpdateManyAndReturnArgs>(args: SelectSubset<T, ContainerAllowedUserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ContainerAllowedUser.
     * @param {ContainerAllowedUserUpsertArgs} args - Arguments to update or create a ContainerAllowedUser.
     * @example
     * // Update or create a ContainerAllowedUser
     * const containerAllowedUser = await prisma.containerAllowedUser.upsert({
     *   create: {
     *     // ... data to create a ContainerAllowedUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ContainerAllowedUser we want to update
     *   }
     * })
     */
    upsert<T extends ContainerAllowedUserUpsertArgs>(args: SelectSubset<T, ContainerAllowedUserUpsertArgs<ExtArgs>>): Prisma__ContainerAllowedUserClient<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ContainerAllowedUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserCountArgs} args - Arguments to filter ContainerAllowedUsers to count.
     * @example
     * // Count the number of ContainerAllowedUsers
     * const count = await prisma.containerAllowedUser.count({
     *   where: {
     *     // ... the filter for the ContainerAllowedUsers we want to count
     *   }
     * })
    **/
    count<T extends ContainerAllowedUserCountArgs>(
      args?: Subset<T, ContainerAllowedUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContainerAllowedUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ContainerAllowedUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContainerAllowedUserAggregateArgs>(args: Subset<T, ContainerAllowedUserAggregateArgs>): Prisma.PrismaPromise<GetContainerAllowedUserAggregateType<T>>

    /**
     * Group by ContainerAllowedUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContainerAllowedUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContainerAllowedUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContainerAllowedUserGroupByArgs['orderBy'] }
        : { orderBy?: ContainerAllowedUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContainerAllowedUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContainerAllowedUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ContainerAllowedUser model
   */
  readonly fields: ContainerAllowedUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ContainerAllowedUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContainerAllowedUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends ContainerAllowedUser$userArgs<ExtArgs> = {}>(args?: Subset<T, ContainerAllowedUser$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    container<T extends InventoryBoxDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBoxDefaultArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    grantBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ContainerAllowedUser model
   */
  interface ContainerAllowedUserFieldRefs {
    readonly id: FieldRef<"ContainerAllowedUser", 'String'>
    readonly userId: FieldRef<"ContainerAllowedUser", 'String'>
    readonly inventoryBoxId: FieldRef<"ContainerAllowedUser", 'String'>
    readonly grantByUserId: FieldRef<"ContainerAllowedUser", 'String'>
    readonly timestamp: FieldRef<"ContainerAllowedUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ContainerAllowedUser findUnique
   */
  export type ContainerAllowedUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter, which ContainerAllowedUser to fetch.
     */
    where: ContainerAllowedUserWhereUniqueInput
  }

  /**
   * ContainerAllowedUser findUniqueOrThrow
   */
  export type ContainerAllowedUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter, which ContainerAllowedUser to fetch.
     */
    where: ContainerAllowedUserWhereUniqueInput
  }

  /**
   * ContainerAllowedUser findFirst
   */
  export type ContainerAllowedUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter, which ContainerAllowedUser to fetch.
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContainerAllowedUsers to fetch.
     */
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ContainerAllowedUsers.
     */
    cursor?: ContainerAllowedUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContainerAllowedUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContainerAllowedUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ContainerAllowedUsers.
     */
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * ContainerAllowedUser findFirstOrThrow
   */
  export type ContainerAllowedUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter, which ContainerAllowedUser to fetch.
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContainerAllowedUsers to fetch.
     */
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ContainerAllowedUsers.
     */
    cursor?: ContainerAllowedUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContainerAllowedUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContainerAllowedUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ContainerAllowedUsers.
     */
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * ContainerAllowedUser findMany
   */
  export type ContainerAllowedUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter, which ContainerAllowedUsers to fetch.
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContainerAllowedUsers to fetch.
     */
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ContainerAllowedUsers.
     */
    cursor?: ContainerAllowedUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContainerAllowedUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContainerAllowedUsers.
     */
    skip?: number
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * ContainerAllowedUser create
   */
  export type ContainerAllowedUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * The data needed to create a ContainerAllowedUser.
     */
    data: XOR<ContainerAllowedUserCreateInput, ContainerAllowedUserUncheckedCreateInput>
  }

  /**
   * ContainerAllowedUser createMany
   */
  export type ContainerAllowedUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ContainerAllowedUsers.
     */
    data: ContainerAllowedUserCreateManyInput | ContainerAllowedUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ContainerAllowedUser createManyAndReturn
   */
  export type ContainerAllowedUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * The data used to create many ContainerAllowedUsers.
     */
    data: ContainerAllowedUserCreateManyInput | ContainerAllowedUserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ContainerAllowedUser update
   */
  export type ContainerAllowedUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * The data needed to update a ContainerAllowedUser.
     */
    data: XOR<ContainerAllowedUserUpdateInput, ContainerAllowedUserUncheckedUpdateInput>
    /**
     * Choose, which ContainerAllowedUser to update.
     */
    where: ContainerAllowedUserWhereUniqueInput
  }

  /**
   * ContainerAllowedUser updateMany
   */
  export type ContainerAllowedUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ContainerAllowedUsers.
     */
    data: XOR<ContainerAllowedUserUpdateManyMutationInput, ContainerAllowedUserUncheckedUpdateManyInput>
    /**
     * Filter which ContainerAllowedUsers to update
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * Limit how many ContainerAllowedUsers to update.
     */
    limit?: number
  }

  /**
   * ContainerAllowedUser updateManyAndReturn
   */
  export type ContainerAllowedUserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * The data used to update ContainerAllowedUsers.
     */
    data: XOR<ContainerAllowedUserUpdateManyMutationInput, ContainerAllowedUserUncheckedUpdateManyInput>
    /**
     * Filter which ContainerAllowedUsers to update
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * Limit how many ContainerAllowedUsers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ContainerAllowedUser upsert
   */
  export type ContainerAllowedUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * The filter to search for the ContainerAllowedUser to update in case it exists.
     */
    where: ContainerAllowedUserWhereUniqueInput
    /**
     * In case the ContainerAllowedUser found by the `where` argument doesn't exist, create a new ContainerAllowedUser with this data.
     */
    create: XOR<ContainerAllowedUserCreateInput, ContainerAllowedUserUncheckedCreateInput>
    /**
     * In case the ContainerAllowedUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContainerAllowedUserUpdateInput, ContainerAllowedUserUncheckedUpdateInput>
  }

  /**
   * ContainerAllowedUser delete
   */
  export type ContainerAllowedUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    /**
     * Filter which ContainerAllowedUser to delete.
     */
    where: ContainerAllowedUserWhereUniqueInput
  }

  /**
   * ContainerAllowedUser deleteMany
   */
  export type ContainerAllowedUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ContainerAllowedUsers to delete
     */
    where?: ContainerAllowedUserWhereInput
    /**
     * Limit how many ContainerAllowedUsers to delete.
     */
    limit?: number
  }

  /**
   * ContainerAllowedUser.user
   */
  export type ContainerAllowedUser$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ContainerAllowedUser without action
   */
  export type ContainerAllowedUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
  }


  /**
   * Model InventoryAccessLogs
   */

  export type AggregateInventoryAccessLogs = {
    _count: InventoryAccessLogsCountAggregateOutputType | null
    _min: InventoryAccessLogsMinAggregateOutputType | null
    _max: InventoryAccessLogsMaxAggregateOutputType | null
  }

  export type InventoryAccessLogsMinAggregateOutputType = {
    id: string | null
    userId: string | null
    timestamp: Date | null
    inventoryBoxId: string | null
    action: string | null
    suppliesId: string | null
  }

  export type InventoryAccessLogsMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    timestamp: Date | null
    inventoryBoxId: string | null
    action: string | null
    suppliesId: string | null
  }

  export type InventoryAccessLogsCountAggregateOutputType = {
    id: number
    userId: number
    timestamp: number
    inventoryBoxId: number
    action: number
    suppliesId: number
    _all: number
  }


  export type InventoryAccessLogsMinAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    inventoryBoxId?: true
    action?: true
    suppliesId?: true
  }

  export type InventoryAccessLogsMaxAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    inventoryBoxId?: true
    action?: true
    suppliesId?: true
  }

  export type InventoryAccessLogsCountAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    inventoryBoxId?: true
    action?: true
    suppliesId?: true
    _all?: true
  }

  export type InventoryAccessLogsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAccessLogs to aggregate.
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAccessLogs to fetch.
     */
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventoryAccessLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAccessLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAccessLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InventoryAccessLogs
    **/
    _count?: true | InventoryAccessLogsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventoryAccessLogsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventoryAccessLogsMaxAggregateInputType
  }

  export type GetInventoryAccessLogsAggregateType<T extends InventoryAccessLogsAggregateArgs> = {
        [P in keyof T & keyof AggregateInventoryAccessLogs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventoryAccessLogs[P]>
      : GetScalarType<T[P], AggregateInventoryAccessLogs[P]>
  }




  export type InventoryAccessLogsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventoryAccessLogsWhereInput
    orderBy?: InventoryAccessLogsOrderByWithAggregationInput | InventoryAccessLogsOrderByWithAggregationInput[]
    by: InventoryAccessLogsScalarFieldEnum[] | InventoryAccessLogsScalarFieldEnum
    having?: InventoryAccessLogsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventoryAccessLogsCountAggregateInputType | true
    _min?: InventoryAccessLogsMinAggregateInputType
    _max?: InventoryAccessLogsMaxAggregateInputType
  }

  export type InventoryAccessLogsGroupByOutputType = {
    id: string
    userId: string | null
    timestamp: Date
    inventoryBoxId: string | null
    action: string
    suppliesId: string | null
    _count: InventoryAccessLogsCountAggregateOutputType | null
    _min: InventoryAccessLogsMinAggregateOutputType | null
    _max: InventoryAccessLogsMaxAggregateOutputType | null
  }

  type GetInventoryAccessLogsGroupByPayload<T extends InventoryAccessLogsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventoryAccessLogsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventoryAccessLogsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventoryAccessLogsGroupByOutputType[P]>
            : GetScalarType<T[P], InventoryAccessLogsGroupByOutputType[P]>
        }
      >
    >


  export type InventoryAccessLogsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    inventoryBoxId?: boolean
    action?: boolean
    suppliesId?: boolean
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAccessLogs"]>

  export type InventoryAccessLogsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    inventoryBoxId?: boolean
    action?: boolean
    suppliesId?: boolean
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAccessLogs"]>

  export type InventoryAccessLogsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    inventoryBoxId?: boolean
    action?: boolean
    suppliesId?: boolean
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["inventoryAccessLogs"]>

  export type InventoryAccessLogsSelectScalar = {
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    inventoryBoxId?: boolean
    action?: boolean
    suppliesId?: boolean
  }

  export type InventoryAccessLogsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "timestamp" | "inventoryBoxId" | "action" | "suppliesId", ExtArgs["result"]["inventoryAccessLogs"]>
  export type InventoryAccessLogsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }
  export type InventoryAccessLogsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }
  export type InventoryAccessLogsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | InventoryAccessLogs$userArgs<ExtArgs>
    box?: boolean | InventoryAccessLogs$boxArgs<ExtArgs>
    supply?: boolean | InventoryAccessLogs$supplyArgs<ExtArgs>
  }

  export type $InventoryAccessLogsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InventoryAccessLogs"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      box: Prisma.$InventoryBoxPayload<ExtArgs> | null
      supply: Prisma.$SuppliesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      timestamp: Date
      inventoryBoxId: string | null
      action: string
      suppliesId: string | null
    }, ExtArgs["result"]["inventoryAccessLogs"]>
    composites: {}
  }

  type InventoryAccessLogsGetPayload<S extends boolean | null | undefined | InventoryAccessLogsDefaultArgs> = $Result.GetResult<Prisma.$InventoryAccessLogsPayload, S>

  type InventoryAccessLogsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventoryAccessLogsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventoryAccessLogsCountAggregateInputType | true
    }

  export interface InventoryAccessLogsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InventoryAccessLogs'], meta: { name: 'InventoryAccessLogs' } }
    /**
     * Find zero or one InventoryAccessLogs that matches the filter.
     * @param {InventoryAccessLogsFindUniqueArgs} args - Arguments to find a InventoryAccessLogs
     * @example
     * // Get one InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventoryAccessLogsFindUniqueArgs>(args: SelectSubset<T, InventoryAccessLogsFindUniqueArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InventoryAccessLogs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventoryAccessLogsFindUniqueOrThrowArgs} args - Arguments to find a InventoryAccessLogs
     * @example
     * // Get one InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventoryAccessLogsFindUniqueOrThrowArgs>(args: SelectSubset<T, InventoryAccessLogsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAccessLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsFindFirstArgs} args - Arguments to find a InventoryAccessLogs
     * @example
     * // Get one InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventoryAccessLogsFindFirstArgs>(args?: SelectSubset<T, InventoryAccessLogsFindFirstArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InventoryAccessLogs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsFindFirstOrThrowArgs} args - Arguments to find a InventoryAccessLogs
     * @example
     * // Get one InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventoryAccessLogsFindFirstOrThrowArgs>(args?: SelectSubset<T, InventoryAccessLogsFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InventoryAccessLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findMany()
     * 
     * // Get first 10 InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventoryAccessLogsWithIdOnly = await prisma.inventoryAccessLogs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventoryAccessLogsFindManyArgs>(args?: SelectSubset<T, InventoryAccessLogsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InventoryAccessLogs.
     * @param {InventoryAccessLogsCreateArgs} args - Arguments to create a InventoryAccessLogs.
     * @example
     * // Create one InventoryAccessLogs
     * const InventoryAccessLogs = await prisma.inventoryAccessLogs.create({
     *   data: {
     *     // ... data to create a InventoryAccessLogs
     *   }
     * })
     * 
     */
    create<T extends InventoryAccessLogsCreateArgs>(args: SelectSubset<T, InventoryAccessLogsCreateArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InventoryAccessLogs.
     * @param {InventoryAccessLogsCreateManyArgs} args - Arguments to create many InventoryAccessLogs.
     * @example
     * // Create many InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventoryAccessLogsCreateManyArgs>(args?: SelectSubset<T, InventoryAccessLogsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InventoryAccessLogs and returns the data saved in the database.
     * @param {InventoryAccessLogsCreateManyAndReturnArgs} args - Arguments to create many InventoryAccessLogs.
     * @example
     * // Create many InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InventoryAccessLogs and only return the `id`
     * const inventoryAccessLogsWithIdOnly = await prisma.inventoryAccessLogs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventoryAccessLogsCreateManyAndReturnArgs>(args?: SelectSubset<T, InventoryAccessLogsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InventoryAccessLogs.
     * @param {InventoryAccessLogsDeleteArgs} args - Arguments to delete one InventoryAccessLogs.
     * @example
     * // Delete one InventoryAccessLogs
     * const InventoryAccessLogs = await prisma.inventoryAccessLogs.delete({
     *   where: {
     *     // ... filter to delete one InventoryAccessLogs
     *   }
     * })
     * 
     */
    delete<T extends InventoryAccessLogsDeleteArgs>(args: SelectSubset<T, InventoryAccessLogsDeleteArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InventoryAccessLogs.
     * @param {InventoryAccessLogsUpdateArgs} args - Arguments to update one InventoryAccessLogs.
     * @example
     * // Update one InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventoryAccessLogsUpdateArgs>(args: SelectSubset<T, InventoryAccessLogsUpdateArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InventoryAccessLogs.
     * @param {InventoryAccessLogsDeleteManyArgs} args - Arguments to filter InventoryAccessLogs to delete.
     * @example
     * // Delete a few InventoryAccessLogs
     * const { count } = await prisma.inventoryAccessLogs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventoryAccessLogsDeleteManyArgs>(args?: SelectSubset<T, InventoryAccessLogsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAccessLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventoryAccessLogsUpdateManyArgs>(args: SelectSubset<T, InventoryAccessLogsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InventoryAccessLogs and returns the data updated in the database.
     * @param {InventoryAccessLogsUpdateManyAndReturnArgs} args - Arguments to update many InventoryAccessLogs.
     * @example
     * // Update many InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InventoryAccessLogs and only return the `id`
     * const inventoryAccessLogsWithIdOnly = await prisma.inventoryAccessLogs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventoryAccessLogsUpdateManyAndReturnArgs>(args: SelectSubset<T, InventoryAccessLogsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InventoryAccessLogs.
     * @param {InventoryAccessLogsUpsertArgs} args - Arguments to update or create a InventoryAccessLogs.
     * @example
     * // Update or create a InventoryAccessLogs
     * const inventoryAccessLogs = await prisma.inventoryAccessLogs.upsert({
     *   create: {
     *     // ... data to create a InventoryAccessLogs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InventoryAccessLogs we want to update
     *   }
     * })
     */
    upsert<T extends InventoryAccessLogsUpsertArgs>(args: SelectSubset<T, InventoryAccessLogsUpsertArgs<ExtArgs>>): Prisma__InventoryAccessLogsClient<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InventoryAccessLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsCountArgs} args - Arguments to filter InventoryAccessLogs to count.
     * @example
     * // Count the number of InventoryAccessLogs
     * const count = await prisma.inventoryAccessLogs.count({
     *   where: {
     *     // ... the filter for the InventoryAccessLogs we want to count
     *   }
     * })
    **/
    count<T extends InventoryAccessLogsCountArgs>(
      args?: Subset<T, InventoryAccessLogsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventoryAccessLogsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InventoryAccessLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventoryAccessLogsAggregateArgs>(args: Subset<T, InventoryAccessLogsAggregateArgs>): Prisma.PrismaPromise<GetInventoryAccessLogsAggregateType<T>>

    /**
     * Group by InventoryAccessLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventoryAccessLogsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventoryAccessLogsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventoryAccessLogsGroupByArgs['orderBy'] }
        : { orderBy?: InventoryAccessLogsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventoryAccessLogsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventoryAccessLogsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InventoryAccessLogs model
   */
  readonly fields: InventoryAccessLogsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InventoryAccessLogs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventoryAccessLogsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends InventoryAccessLogs$userArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAccessLogs$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    box<T extends InventoryAccessLogs$boxArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAccessLogs$boxArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    supply<T extends InventoryAccessLogs$supplyArgs<ExtArgs> = {}>(args?: Subset<T, InventoryAccessLogs$supplyArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InventoryAccessLogs model
   */
  interface InventoryAccessLogsFieldRefs {
    readonly id: FieldRef<"InventoryAccessLogs", 'String'>
    readonly userId: FieldRef<"InventoryAccessLogs", 'String'>
    readonly timestamp: FieldRef<"InventoryAccessLogs", 'DateTime'>
    readonly inventoryBoxId: FieldRef<"InventoryAccessLogs", 'String'>
    readonly action: FieldRef<"InventoryAccessLogs", 'String'>
    readonly suppliesId: FieldRef<"InventoryAccessLogs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * InventoryAccessLogs findUnique
   */
  export type InventoryAccessLogsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAccessLogs to fetch.
     */
    where: InventoryAccessLogsWhereUniqueInput
  }

  /**
   * InventoryAccessLogs findUniqueOrThrow
   */
  export type InventoryAccessLogsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAccessLogs to fetch.
     */
    where: InventoryAccessLogsWhereUniqueInput
  }

  /**
   * InventoryAccessLogs findFirst
   */
  export type InventoryAccessLogsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAccessLogs to fetch.
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAccessLogs to fetch.
     */
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAccessLogs.
     */
    cursor?: InventoryAccessLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAccessLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAccessLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAccessLogs.
     */
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * InventoryAccessLogs findFirstOrThrow
   */
  export type InventoryAccessLogsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAccessLogs to fetch.
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAccessLogs to fetch.
     */
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InventoryAccessLogs.
     */
    cursor?: InventoryAccessLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAccessLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAccessLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InventoryAccessLogs.
     */
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * InventoryAccessLogs findMany
   */
  export type InventoryAccessLogsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter, which InventoryAccessLogs to fetch.
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InventoryAccessLogs to fetch.
     */
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InventoryAccessLogs.
     */
    cursor?: InventoryAccessLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InventoryAccessLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InventoryAccessLogs.
     */
    skip?: number
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * InventoryAccessLogs create
   */
  export type InventoryAccessLogsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * The data needed to create a InventoryAccessLogs.
     */
    data: XOR<InventoryAccessLogsCreateInput, InventoryAccessLogsUncheckedCreateInput>
  }

  /**
   * InventoryAccessLogs createMany
   */
  export type InventoryAccessLogsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InventoryAccessLogs.
     */
    data: InventoryAccessLogsCreateManyInput | InventoryAccessLogsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InventoryAccessLogs createManyAndReturn
   */
  export type InventoryAccessLogsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * The data used to create many InventoryAccessLogs.
     */
    data: InventoryAccessLogsCreateManyInput | InventoryAccessLogsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAccessLogs update
   */
  export type InventoryAccessLogsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * The data needed to update a InventoryAccessLogs.
     */
    data: XOR<InventoryAccessLogsUpdateInput, InventoryAccessLogsUncheckedUpdateInput>
    /**
     * Choose, which InventoryAccessLogs to update.
     */
    where: InventoryAccessLogsWhereUniqueInput
  }

  /**
   * InventoryAccessLogs updateMany
   */
  export type InventoryAccessLogsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InventoryAccessLogs.
     */
    data: XOR<InventoryAccessLogsUpdateManyMutationInput, InventoryAccessLogsUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAccessLogs to update
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * Limit how many InventoryAccessLogs to update.
     */
    limit?: number
  }

  /**
   * InventoryAccessLogs updateManyAndReturn
   */
  export type InventoryAccessLogsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * The data used to update InventoryAccessLogs.
     */
    data: XOR<InventoryAccessLogsUpdateManyMutationInput, InventoryAccessLogsUncheckedUpdateManyInput>
    /**
     * Filter which InventoryAccessLogs to update
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * Limit how many InventoryAccessLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InventoryAccessLogs upsert
   */
  export type InventoryAccessLogsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * The filter to search for the InventoryAccessLogs to update in case it exists.
     */
    where: InventoryAccessLogsWhereUniqueInput
    /**
     * In case the InventoryAccessLogs found by the `where` argument doesn't exist, create a new InventoryAccessLogs with this data.
     */
    create: XOR<InventoryAccessLogsCreateInput, InventoryAccessLogsUncheckedCreateInput>
    /**
     * In case the InventoryAccessLogs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventoryAccessLogsUpdateInput, InventoryAccessLogsUncheckedUpdateInput>
  }

  /**
   * InventoryAccessLogs delete
   */
  export type InventoryAccessLogsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    /**
     * Filter which InventoryAccessLogs to delete.
     */
    where: InventoryAccessLogsWhereUniqueInput
  }

  /**
   * InventoryAccessLogs deleteMany
   */
  export type InventoryAccessLogsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InventoryAccessLogs to delete
     */
    where?: InventoryAccessLogsWhereInput
    /**
     * Limit how many InventoryAccessLogs to delete.
     */
    limit?: number
  }

  /**
   * InventoryAccessLogs.user
   */
  export type InventoryAccessLogs$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * InventoryAccessLogs.box
   */
  export type InventoryAccessLogs$boxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    where?: InventoryBoxWhereInput
  }

  /**
   * InventoryAccessLogs.supply
   */
  export type InventoryAccessLogs$supplyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
  }

  /**
   * InventoryAccessLogs without action
   */
  export type InventoryAccessLogsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
  }


  /**
   * Model Supplies
   */

  export type AggregateSupplies = {
    _count: SuppliesCountAggregateOutputType | null
    _avg: SuppliesAvgAggregateOutputType | null
    _sum: SuppliesSumAggregateOutputType | null
    _min: SuppliesMinAggregateOutputType | null
    _max: SuppliesMaxAggregateOutputType | null
  }

  export type SuppliesAvgAggregateOutputType = {
    code: number | null
    quantity: number | null
    notifyAtStockOf: number | null
    price: number | null
  }

  export type SuppliesSumAggregateOutputType = {
    code: number | null
    quantity: number | null
    notifyAtStockOf: number | null
    price: number | null
  }

  export type SuppliesMinAggregateOutputType = {
    id: string | null
    code: number | null
    consumable: boolean | null
    item: string | null
    description: string | null
    quantity: number | null
    notifyAtStockOf: number | null
    price: number | null
    createdAt: Date | null
    updatedAt: Date | null
    lineId: string | null
    userId: string | null
    condition: string | null
    status: string | null
    suppliesCategoryId: string | null
    suppliesQualityId: string | null
    suppliesDataSetId: string | null
  }

  export type SuppliesMaxAggregateOutputType = {
    id: string | null
    code: number | null
    consumable: boolean | null
    item: string | null
    description: string | null
    quantity: number | null
    notifyAtStockOf: number | null
    price: number | null
    createdAt: Date | null
    updatedAt: Date | null
    lineId: string | null
    userId: string | null
    condition: string | null
    status: string | null
    suppliesCategoryId: string | null
    suppliesQualityId: string | null
    suppliesDataSetId: string | null
  }

  export type SuppliesCountAggregateOutputType = {
    id: number
    code: number
    consumable: number
    item: number
    description: number
    quantity: number
    notifyAtStockOf: number
    price: number
    createdAt: number
    updatedAt: number
    lineId: number
    userId: number
    condition: number
    status: number
    suppliesCategoryId: number
    suppliesQualityId: number
    suppliesDataSetId: number
    _all: number
  }


  export type SuppliesAvgAggregateInputType = {
    code?: true
    quantity?: true
    notifyAtStockOf?: true
    price?: true
  }

  export type SuppliesSumAggregateInputType = {
    code?: true
    quantity?: true
    notifyAtStockOf?: true
    price?: true
  }

  export type SuppliesMinAggregateInputType = {
    id?: true
    code?: true
    consumable?: true
    item?: true
    description?: true
    quantity?: true
    notifyAtStockOf?: true
    price?: true
    createdAt?: true
    updatedAt?: true
    lineId?: true
    userId?: true
    condition?: true
    status?: true
    suppliesCategoryId?: true
    suppliesQualityId?: true
    suppliesDataSetId?: true
  }

  export type SuppliesMaxAggregateInputType = {
    id?: true
    code?: true
    consumable?: true
    item?: true
    description?: true
    quantity?: true
    notifyAtStockOf?: true
    price?: true
    createdAt?: true
    updatedAt?: true
    lineId?: true
    userId?: true
    condition?: true
    status?: true
    suppliesCategoryId?: true
    suppliesQualityId?: true
    suppliesDataSetId?: true
  }

  export type SuppliesCountAggregateInputType = {
    id?: true
    code?: true
    consumable?: true
    item?: true
    description?: true
    quantity?: true
    notifyAtStockOf?: true
    price?: true
    createdAt?: true
    updatedAt?: true
    lineId?: true
    userId?: true
    condition?: true
    status?: true
    suppliesCategoryId?: true
    suppliesQualityId?: true
    suppliesDataSetId?: true
    _all?: true
  }

  export type SuppliesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supplies to aggregate.
     */
    where?: SuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supplies to fetch.
     */
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Supplies
    **/
    _count?: true | SuppliesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SuppliesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SuppliesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuppliesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuppliesMaxAggregateInputType
  }

  export type GetSuppliesAggregateType<T extends SuppliesAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplies[P]>
      : GetScalarType<T[P], AggregateSupplies[P]>
  }




  export type SuppliesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithAggregationInput | SuppliesOrderByWithAggregationInput[]
    by: SuppliesScalarFieldEnum[] | SuppliesScalarFieldEnum
    having?: SuppliesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuppliesCountAggregateInputType | true
    _avg?: SuppliesAvgAggregateInputType
    _sum?: SuppliesSumAggregateInputType
    _min?: SuppliesMinAggregateInputType
    _max?: SuppliesMaxAggregateInputType
  }

  export type SuppliesGroupByOutputType = {
    id: string
    code: number
    consumable: boolean
    item: string
    description: string | null
    quantity: number
    notifyAtStockOf: number
    price: number
    createdAt: Date
    updatedAt: Date
    lineId: string
    userId: string | null
    condition: string | null
    status: string | null
    suppliesCategoryId: string | null
    suppliesQualityId: string | null
    suppliesDataSetId: string | null
    _count: SuppliesCountAggregateOutputType | null
    _avg: SuppliesAvgAggregateOutputType | null
    _sum: SuppliesSumAggregateOutputType | null
    _min: SuppliesMinAggregateOutputType | null
    _max: SuppliesMaxAggregateOutputType | null
  }

  type GetSuppliesGroupByPayload<T extends SuppliesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuppliesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuppliesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuppliesGroupByOutputType[P]>
            : GetScalarType<T[P], SuppliesGroupByOutputType[P]>
        }
      >
    >


  export type SuppliesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    consumable?: boolean
    item?: boolean
    description?: boolean
    quantity?: boolean
    notifyAtStockOf?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lineId?: boolean
    userId?: boolean
    condition?: boolean
    status?: boolean
    suppliesCategoryId?: boolean
    suppliesQualityId?: boolean
    suppliesDataSetId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesRecord?: boolean | Supplies$SuppliesRecordArgs<ExtArgs>
    asset?: boolean | Supplies$assetArgs<ExtArgs>
    Part?: boolean | Supplies$PartArgs<ExtArgs>
    TransferredSupplies?: boolean | Supplies$TransferredSuppliesArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SupplieRecieveHistory?: boolean | Supplies$SupplieRecieveHistoryArgs<ExtArgs>
    InventoryAccessLogs?: boolean | Supplies$InventoryAccessLogsArgs<ExtArgs>
    SupplyOrder?: boolean | Supplies$SupplyOrderArgs<ExtArgs>
    SupplyBatchItem?: boolean | Supplies$SupplyBatchItemArgs<ExtArgs>
    SupplyPriceTrack?: boolean | Supplies$SupplyPriceTrackArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SupplyStockTrack?: boolean | Supplies$SupplyStockTrackArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | SuppliesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplies"]>

  export type SuppliesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    consumable?: boolean
    item?: boolean
    description?: boolean
    quantity?: boolean
    notifyAtStockOf?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lineId?: boolean
    userId?: boolean
    condition?: boolean
    status?: boolean
    suppliesCategoryId?: boolean
    suppliesQualityId?: boolean
    suppliesDataSetId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["supplies"]>

  export type SuppliesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    consumable?: boolean
    item?: boolean
    description?: boolean
    quantity?: boolean
    notifyAtStockOf?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lineId?: boolean
    userId?: boolean
    condition?: boolean
    status?: boolean
    suppliesCategoryId?: boolean
    suppliesQualityId?: boolean
    suppliesDataSetId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["supplies"]>

  export type SuppliesSelectScalar = {
    id?: boolean
    code?: boolean
    consumable?: boolean
    item?: boolean
    description?: boolean
    quantity?: boolean
    notifyAtStockOf?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lineId?: boolean
    userId?: boolean
    condition?: boolean
    status?: boolean
    suppliesCategoryId?: boolean
    suppliesQualityId?: boolean
    suppliesDataSetId?: boolean
  }

  export type SuppliesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "consumable" | "item" | "description" | "quantity" | "notifyAtStockOf" | "price" | "createdAt" | "updatedAt" | "lineId" | "userId" | "condition" | "status" | "suppliesCategoryId" | "suppliesQualityId" | "suppliesDataSetId", ExtArgs["result"]["supplies"]>
  export type SuppliesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesRecord?: boolean | Supplies$SuppliesRecordArgs<ExtArgs>
    asset?: boolean | Supplies$assetArgs<ExtArgs>
    Part?: boolean | Supplies$PartArgs<ExtArgs>
    TransferredSupplies?: boolean | Supplies$TransferredSuppliesArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SupplieRecieveHistory?: boolean | Supplies$SupplieRecieveHistoryArgs<ExtArgs>
    InventoryAccessLogs?: boolean | Supplies$InventoryAccessLogsArgs<ExtArgs>
    SupplyOrder?: boolean | Supplies$SupplyOrderArgs<ExtArgs>
    SupplyBatchItem?: boolean | Supplies$SupplyBatchItemArgs<ExtArgs>
    SupplyPriceTrack?: boolean | Supplies$SupplyPriceTrackArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SupplyStockTrack?: boolean | Supplies$SupplyStockTrackArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | SuppliesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SuppliesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
  }
  export type SuppliesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    user?: boolean | Supplies$userArgs<ExtArgs>
    SuppliesCategory?: boolean | Supplies$SuppliesCategoryArgs<ExtArgs>
    SuppliesQuality?: boolean | Supplies$SuppliesQualityArgs<ExtArgs>
    SuppliesDataSet?: boolean | Supplies$SuppliesDataSetArgs<ExtArgs>
  }

  export type $SuppliesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Supplies"
    objects: {
      line: Prisma.$LinePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      SuppliesRecord: Prisma.$SuppliesRecordPayload<ExtArgs>[]
      asset: Prisma.$AssetsPayload<ExtArgs>[]
      Part: Prisma.$SuppliesRecordPayload<ExtArgs> | null
      TransferredSupplies: Prisma.$TransferredSuppliesPayload<ExtArgs>[]
      SuppliesCategory: Prisma.$SuppliesCategoryPayload<ExtArgs> | null
      SupplieRecieveHistory: Prisma.$SupplieRecieveHistoryPayload<ExtArgs>[]
      InventoryAccessLogs: Prisma.$InventoryAccessLogsPayload<ExtArgs>[]
      SupplyOrder: Prisma.$SupplyOrderPayload<ExtArgs>[]
      SupplyBatchItem: Prisma.$SupplyBatchItemPayload<ExtArgs> | null
      SupplyPriceTrack: Prisma.$SupplyPriceTrackPayload<ExtArgs>[]
      SuppliesQuality: Prisma.$SuppliesQualityPayload<ExtArgs> | null
      SupplyStockTrack: Prisma.$SupplyStockTrackPayload<ExtArgs>[]
      SuppliesDataSet: Prisma.$SuppliesDataSetPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: number
      consumable: boolean
      item: string
      description: string | null
      quantity: number
      notifyAtStockOf: number
      price: number
      createdAt: Date
      updatedAt: Date
      lineId: string
      userId: string | null
      condition: string | null
      status: string | null
      suppliesCategoryId: string | null
      suppliesQualityId: string | null
      suppliesDataSetId: string | null
    }, ExtArgs["result"]["supplies"]>
    composites: {}
  }

  type SuppliesGetPayload<S extends boolean | null | undefined | SuppliesDefaultArgs> = $Result.GetResult<Prisma.$SuppliesPayload, S>

  type SuppliesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SuppliesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuppliesCountAggregateInputType | true
    }

  export interface SuppliesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Supplies'], meta: { name: 'Supplies' } }
    /**
     * Find zero or one Supplies that matches the filter.
     * @param {SuppliesFindUniqueArgs} args - Arguments to find a Supplies
     * @example
     * // Get one Supplies
     * const supplies = await prisma.supplies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SuppliesFindUniqueArgs>(args: SelectSubset<T, SuppliesFindUniqueArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Supplies that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SuppliesFindUniqueOrThrowArgs} args - Arguments to find a Supplies
     * @example
     * // Get one Supplies
     * const supplies = await prisma.supplies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SuppliesFindUniqueOrThrowArgs>(args: SelectSubset<T, SuppliesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesFindFirstArgs} args - Arguments to find a Supplies
     * @example
     * // Get one Supplies
     * const supplies = await prisma.supplies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SuppliesFindFirstArgs>(args?: SelectSubset<T, SuppliesFindFirstArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesFindFirstOrThrowArgs} args - Arguments to find a Supplies
     * @example
     * // Get one Supplies
     * const supplies = await prisma.supplies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SuppliesFindFirstOrThrowArgs>(args?: SelectSubset<T, SuppliesFindFirstOrThrowArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Supplies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Supplies
     * const supplies = await prisma.supplies.findMany()
     * 
     * // Get first 10 Supplies
     * const supplies = await prisma.supplies.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const suppliesWithIdOnly = await prisma.supplies.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SuppliesFindManyArgs>(args?: SelectSubset<T, SuppliesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Supplies.
     * @param {SuppliesCreateArgs} args - Arguments to create a Supplies.
     * @example
     * // Create one Supplies
     * const Supplies = await prisma.supplies.create({
     *   data: {
     *     // ... data to create a Supplies
     *   }
     * })
     * 
     */
    create<T extends SuppliesCreateArgs>(args: SelectSubset<T, SuppliesCreateArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Supplies.
     * @param {SuppliesCreateManyArgs} args - Arguments to create many Supplies.
     * @example
     * // Create many Supplies
     * const supplies = await prisma.supplies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SuppliesCreateManyArgs>(args?: SelectSubset<T, SuppliesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Supplies and returns the data saved in the database.
     * @param {SuppliesCreateManyAndReturnArgs} args - Arguments to create many Supplies.
     * @example
     * // Create many Supplies
     * const supplies = await prisma.supplies.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Supplies and only return the `id`
     * const suppliesWithIdOnly = await prisma.supplies.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SuppliesCreateManyAndReturnArgs>(args?: SelectSubset<T, SuppliesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Supplies.
     * @param {SuppliesDeleteArgs} args - Arguments to delete one Supplies.
     * @example
     * // Delete one Supplies
     * const Supplies = await prisma.supplies.delete({
     *   where: {
     *     // ... filter to delete one Supplies
     *   }
     * })
     * 
     */
    delete<T extends SuppliesDeleteArgs>(args: SelectSubset<T, SuppliesDeleteArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Supplies.
     * @param {SuppliesUpdateArgs} args - Arguments to update one Supplies.
     * @example
     * // Update one Supplies
     * const supplies = await prisma.supplies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SuppliesUpdateArgs>(args: SelectSubset<T, SuppliesUpdateArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Supplies.
     * @param {SuppliesDeleteManyArgs} args - Arguments to filter Supplies to delete.
     * @example
     * // Delete a few Supplies
     * const { count } = await prisma.supplies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SuppliesDeleteManyArgs>(args?: SelectSubset<T, SuppliesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Supplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Supplies
     * const supplies = await prisma.supplies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SuppliesUpdateManyArgs>(args: SelectSubset<T, SuppliesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Supplies and returns the data updated in the database.
     * @param {SuppliesUpdateManyAndReturnArgs} args - Arguments to update many Supplies.
     * @example
     * // Update many Supplies
     * const supplies = await prisma.supplies.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Supplies and only return the `id`
     * const suppliesWithIdOnly = await prisma.supplies.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SuppliesUpdateManyAndReturnArgs>(args: SelectSubset<T, SuppliesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Supplies.
     * @param {SuppliesUpsertArgs} args - Arguments to update or create a Supplies.
     * @example
     * // Update or create a Supplies
     * const supplies = await prisma.supplies.upsert({
     *   create: {
     *     // ... data to create a Supplies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Supplies we want to update
     *   }
     * })
     */
    upsert<T extends SuppliesUpsertArgs>(args: SelectSubset<T, SuppliesUpsertArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Supplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCountArgs} args - Arguments to filter Supplies to count.
     * @example
     * // Count the number of Supplies
     * const count = await prisma.supplies.count({
     *   where: {
     *     // ... the filter for the Supplies we want to count
     *   }
     * })
    **/
    count<T extends SuppliesCountArgs>(
      args?: Subset<T, SuppliesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuppliesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Supplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuppliesAggregateArgs>(args: Subset<T, SuppliesAggregateArgs>): Prisma.PrismaPromise<GetSuppliesAggregateType<T>>

    /**
     * Group by Supplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SuppliesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SuppliesGroupByArgs['orderBy'] }
        : { orderBy?: SuppliesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SuppliesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuppliesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Supplies model
   */
  readonly fields: SuppliesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Supplies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SuppliesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends Supplies$userArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SuppliesRecord<T extends Supplies$SuppliesRecordArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SuppliesRecordArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    asset<T extends Supplies$assetArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$assetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Part<T extends Supplies$PartArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$PartArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    TransferredSupplies<T extends Supplies$TransferredSuppliesArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$TransferredSuppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesCategory<T extends Supplies$SuppliesCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SuppliesCategoryArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SupplieRecieveHistory<T extends Supplies$SupplieRecieveHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SupplieRecieveHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InventoryAccessLogs<T extends Supplies$InventoryAccessLogsArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$InventoryAccessLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SupplyOrder<T extends Supplies$SupplyOrderArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SupplyOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SupplyBatchItem<T extends Supplies$SupplyBatchItemArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SupplyBatchItemArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SupplyPriceTrack<T extends Supplies$SupplyPriceTrackArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SupplyPriceTrackArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesQuality<T extends Supplies$SuppliesQualityArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SuppliesQualityArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SupplyStockTrack<T extends Supplies$SupplyStockTrackArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SupplyStockTrackArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesDataSet<T extends Supplies$SuppliesDataSetArgs<ExtArgs> = {}>(args?: Subset<T, Supplies$SuppliesDataSetArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Supplies model
   */
  interface SuppliesFieldRefs {
    readonly id: FieldRef<"Supplies", 'String'>
    readonly code: FieldRef<"Supplies", 'Int'>
    readonly consumable: FieldRef<"Supplies", 'Boolean'>
    readonly item: FieldRef<"Supplies", 'String'>
    readonly description: FieldRef<"Supplies", 'String'>
    readonly quantity: FieldRef<"Supplies", 'Int'>
    readonly notifyAtStockOf: FieldRef<"Supplies", 'Int'>
    readonly price: FieldRef<"Supplies", 'Float'>
    readonly createdAt: FieldRef<"Supplies", 'DateTime'>
    readonly updatedAt: FieldRef<"Supplies", 'DateTime'>
    readonly lineId: FieldRef<"Supplies", 'String'>
    readonly userId: FieldRef<"Supplies", 'String'>
    readonly condition: FieldRef<"Supplies", 'String'>
    readonly status: FieldRef<"Supplies", 'String'>
    readonly suppliesCategoryId: FieldRef<"Supplies", 'String'>
    readonly suppliesQualityId: FieldRef<"Supplies", 'String'>
    readonly suppliesDataSetId: FieldRef<"Supplies", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Supplies findUnique
   */
  export type SuppliesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter, which Supplies to fetch.
     */
    where: SuppliesWhereUniqueInput
  }

  /**
   * Supplies findUniqueOrThrow
   */
  export type SuppliesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter, which Supplies to fetch.
     */
    where: SuppliesWhereUniqueInput
  }

  /**
   * Supplies findFirst
   */
  export type SuppliesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter, which Supplies to fetch.
     */
    where?: SuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supplies to fetch.
     */
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Supplies.
     */
    cursor?: SuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Supplies.
     */
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * Supplies findFirstOrThrow
   */
  export type SuppliesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter, which Supplies to fetch.
     */
    where?: SuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supplies to fetch.
     */
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Supplies.
     */
    cursor?: SuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Supplies.
     */
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * Supplies findMany
   */
  export type SuppliesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter, which Supplies to fetch.
     */
    where?: SuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supplies to fetch.
     */
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Supplies.
     */
    cursor?: SuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supplies.
     */
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * Supplies create
   */
  export type SuppliesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * The data needed to create a Supplies.
     */
    data: XOR<SuppliesCreateInput, SuppliesUncheckedCreateInput>
  }

  /**
   * Supplies createMany
   */
  export type SuppliesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Supplies.
     */
    data: SuppliesCreateManyInput | SuppliesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplies createManyAndReturn
   */
  export type SuppliesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * The data used to create many Supplies.
     */
    data: SuppliesCreateManyInput | SuppliesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Supplies update
   */
  export type SuppliesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * The data needed to update a Supplies.
     */
    data: XOR<SuppliesUpdateInput, SuppliesUncheckedUpdateInput>
    /**
     * Choose, which Supplies to update.
     */
    where: SuppliesWhereUniqueInput
  }

  /**
   * Supplies updateMany
   */
  export type SuppliesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Supplies.
     */
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyInput>
    /**
     * Filter which Supplies to update
     */
    where?: SuppliesWhereInput
    /**
     * Limit how many Supplies to update.
     */
    limit?: number
  }

  /**
   * Supplies updateManyAndReturn
   */
  export type SuppliesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * The data used to update Supplies.
     */
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyInput>
    /**
     * Filter which Supplies to update
     */
    where?: SuppliesWhereInput
    /**
     * Limit how many Supplies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Supplies upsert
   */
  export type SuppliesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * The filter to search for the Supplies to update in case it exists.
     */
    where: SuppliesWhereUniqueInput
    /**
     * In case the Supplies found by the `where` argument doesn't exist, create a new Supplies with this data.
     */
    create: XOR<SuppliesCreateInput, SuppliesUncheckedCreateInput>
    /**
     * In case the Supplies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SuppliesUpdateInput, SuppliesUncheckedUpdateInput>
  }

  /**
   * Supplies delete
   */
  export type SuppliesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    /**
     * Filter which Supplies to delete.
     */
    where: SuppliesWhereUniqueInput
  }

  /**
   * Supplies deleteMany
   */
  export type SuppliesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supplies to delete
     */
    where?: SuppliesWhereInput
    /**
     * Limit how many Supplies to delete.
     */
    limit?: number
  }

  /**
   * Supplies.user
   */
  export type Supplies$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Supplies.SuppliesRecord
   */
  export type Supplies$SuppliesRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    where?: SuppliesRecordWhereInput
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    cursor?: SuppliesRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesRecordScalarFieldEnum | SuppliesRecordScalarFieldEnum[]
  }

  /**
   * Supplies.asset
   */
  export type Supplies$assetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assets
     */
    select?: AssetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Assets
     */
    omit?: AssetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetsInclude<ExtArgs> | null
    where?: AssetsWhereInput
    orderBy?: AssetsOrderByWithRelationInput | AssetsOrderByWithRelationInput[]
    cursor?: AssetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetsScalarFieldEnum | AssetsScalarFieldEnum[]
  }

  /**
   * Supplies.Part
   */
  export type Supplies$PartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    where?: SuppliesRecordWhereInput
  }

  /**
   * Supplies.TransferredSupplies
   */
  export type Supplies$TransferredSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    where?: TransferredSuppliesWhereInput
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    cursor?: TransferredSuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * Supplies.SuppliesCategory
   */
  export type Supplies$SuppliesCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    where?: SuppliesCategoryWhereInput
  }

  /**
   * Supplies.SupplieRecieveHistory
   */
  export type Supplies$SupplieRecieveHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    where?: SupplieRecieveHistoryWhereInput
    orderBy?: SupplieRecieveHistoryOrderByWithRelationInput | SupplieRecieveHistoryOrderByWithRelationInput[]
    cursor?: SupplieRecieveHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplieRecieveHistoryScalarFieldEnum | SupplieRecieveHistoryScalarFieldEnum[]
  }

  /**
   * Supplies.InventoryAccessLogs
   */
  export type Supplies$InventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    where?: InventoryAccessLogsWhereInput
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    cursor?: InventoryAccessLogsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * Supplies.SupplyOrder
   */
  export type Supplies$SupplyOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    where?: SupplyOrderWhereInput
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    cursor?: SupplyOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * Supplies.SupplyBatchItem
   */
  export type Supplies$SupplyBatchItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    where?: SupplyBatchItemWhereInput
  }

  /**
   * Supplies.SupplyPriceTrack
   */
  export type Supplies$SupplyPriceTrackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    where?: SupplyPriceTrackWhereInput
    orderBy?: SupplyPriceTrackOrderByWithRelationInput | SupplyPriceTrackOrderByWithRelationInput[]
    cursor?: SupplyPriceTrackWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyPriceTrackScalarFieldEnum | SupplyPriceTrackScalarFieldEnum[]
  }

  /**
   * Supplies.SuppliesQuality
   */
  export type Supplies$SuppliesQualityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    where?: SuppliesQualityWhereInput
  }

  /**
   * Supplies.SupplyStockTrack
   */
  export type Supplies$SupplyStockTrackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    where?: SupplyStockTrackWhereInput
    orderBy?: SupplyStockTrackOrderByWithRelationInput | SupplyStockTrackOrderByWithRelationInput[]
    cursor?: SupplyStockTrackWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyStockTrackScalarFieldEnum | SupplyStockTrackScalarFieldEnum[]
  }

  /**
   * Supplies.SuppliesDataSet
   */
  export type Supplies$SuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    where?: SuppliesDataSetWhereInput
  }

  /**
   * Supplies without action
   */
  export type SuppliesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
  }


  /**
   * Model SupplyBatch
   */

  export type AggregateSupplyBatch = {
    _count: SupplyBatchCountAggregateOutputType | null
    _min: SupplyBatchMinAggregateOutputType | null
    _max: SupplyBatchMaxAggregateOutputType | null
  }

  export type SupplyBatchMinAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    title: string | null
    inventoryBoxId: string | null
    suppliesDataSetId: string | null
  }

  export type SupplyBatchMaxAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    title: string | null
    inventoryBoxId: string | null
    suppliesDataSetId: string | null
  }

  export type SupplyBatchCountAggregateOutputType = {
    id: number
    timestamp: number
    title: number
    inventoryBoxId: number
    suppliesDataSetId: number
    _all: number
  }


  export type SupplyBatchMinAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    inventoryBoxId?: true
    suppliesDataSetId?: true
  }

  export type SupplyBatchMaxAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    inventoryBoxId?: true
    suppliesDataSetId?: true
  }

  export type SupplyBatchCountAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    inventoryBoxId?: true
    suppliesDataSetId?: true
    _all?: true
  }

  export type SupplyBatchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatch to aggregate.
     */
    where?: SupplyBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatches to fetch.
     */
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyBatches
    **/
    _count?: true | SupplyBatchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyBatchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyBatchMaxAggregateInputType
  }

  export type GetSupplyBatchAggregateType<T extends SupplyBatchAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyBatch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyBatch[P]>
      : GetScalarType<T[P], AggregateSupplyBatch[P]>
  }




  export type SupplyBatchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchWhereInput
    orderBy?: SupplyBatchOrderByWithAggregationInput | SupplyBatchOrderByWithAggregationInput[]
    by: SupplyBatchScalarFieldEnum[] | SupplyBatchScalarFieldEnum
    having?: SupplyBatchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyBatchCountAggregateInputType | true
    _min?: SupplyBatchMinAggregateInputType
    _max?: SupplyBatchMaxAggregateInputType
  }

  export type SupplyBatchGroupByOutputType = {
    id: string
    timestamp: Date
    title: string
    inventoryBoxId: string
    suppliesDataSetId: string | null
    _count: SupplyBatchCountAggregateOutputType | null
    _min: SupplyBatchMinAggregateOutputType | null
    _max: SupplyBatchMaxAggregateOutputType | null
  }

  type GetSupplyBatchGroupByPayload<T extends SupplyBatchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyBatchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyBatchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyBatchGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyBatchGroupByOutputType[P]>
        }
      >
    >


  export type SupplyBatchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    inventoryBoxId?: boolean
    suppliesDataSetId?: boolean
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SupplyBatchItem?: boolean | SupplyBatch$SupplyBatchItemArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | SupplyBatchCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatch"]>

  export type SupplyBatchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    inventoryBoxId?: boolean
    suppliesDataSetId?: boolean
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatch"]>

  export type SupplyBatchSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    inventoryBoxId?: boolean
    suppliesDataSetId?: boolean
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatch"]>

  export type SupplyBatchSelectScalar = {
    id?: boolean
    timestamp?: boolean
    title?: boolean
    inventoryBoxId?: boolean
    suppliesDataSetId?: boolean
  }

  export type SupplyBatchOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "timestamp" | "title" | "inventoryBoxId" | "suppliesDataSetId", ExtArgs["result"]["supplyBatch"]>
  export type SupplyBatchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SupplyBatchItem?: boolean | SupplyBatch$SupplyBatchItemArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
    _count?: boolean | SupplyBatchCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SupplyBatchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
  }
  export type SupplyBatchIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    box?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    SuppliesDataSet?: boolean | SupplyBatch$SuppliesDataSetArgs<ExtArgs>
  }

  export type $SupplyBatchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyBatch"
    objects: {
      box: Prisma.$InventoryBoxPayload<ExtArgs>
      SupplyBatchItem: Prisma.$SupplyBatchItemPayload<ExtArgs>[]
      SuppliesDataSet: Prisma.$SuppliesDataSetPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      timestamp: Date
      title: string
      inventoryBoxId: string
      suppliesDataSetId: string | null
    }, ExtArgs["result"]["supplyBatch"]>
    composites: {}
  }

  type SupplyBatchGetPayload<S extends boolean | null | undefined | SupplyBatchDefaultArgs> = $Result.GetResult<Prisma.$SupplyBatchPayload, S>

  type SupplyBatchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyBatchFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyBatchCountAggregateInputType | true
    }

  export interface SupplyBatchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyBatch'], meta: { name: 'SupplyBatch' } }
    /**
     * Find zero or one SupplyBatch that matches the filter.
     * @param {SupplyBatchFindUniqueArgs} args - Arguments to find a SupplyBatch
     * @example
     * // Get one SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyBatchFindUniqueArgs>(args: SelectSubset<T, SupplyBatchFindUniqueArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyBatch that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyBatchFindUniqueOrThrowArgs} args - Arguments to find a SupplyBatch
     * @example
     * // Get one SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyBatchFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyBatchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchFindFirstArgs} args - Arguments to find a SupplyBatch
     * @example
     * // Get one SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyBatchFindFirstArgs>(args?: SelectSubset<T, SupplyBatchFindFirstArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchFindFirstOrThrowArgs} args - Arguments to find a SupplyBatch
     * @example
     * // Get one SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyBatchFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyBatchFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyBatches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyBatches
     * const supplyBatches = await prisma.supplyBatch.findMany()
     * 
     * // Get first 10 SupplyBatches
     * const supplyBatches = await prisma.supplyBatch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyBatchWithIdOnly = await prisma.supplyBatch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyBatchFindManyArgs>(args?: SelectSubset<T, SupplyBatchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyBatch.
     * @param {SupplyBatchCreateArgs} args - Arguments to create a SupplyBatch.
     * @example
     * // Create one SupplyBatch
     * const SupplyBatch = await prisma.supplyBatch.create({
     *   data: {
     *     // ... data to create a SupplyBatch
     *   }
     * })
     * 
     */
    create<T extends SupplyBatchCreateArgs>(args: SelectSubset<T, SupplyBatchCreateArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyBatches.
     * @param {SupplyBatchCreateManyArgs} args - Arguments to create many SupplyBatches.
     * @example
     * // Create many SupplyBatches
     * const supplyBatch = await prisma.supplyBatch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyBatchCreateManyArgs>(args?: SelectSubset<T, SupplyBatchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyBatches and returns the data saved in the database.
     * @param {SupplyBatchCreateManyAndReturnArgs} args - Arguments to create many SupplyBatches.
     * @example
     * // Create many SupplyBatches
     * const supplyBatch = await prisma.supplyBatch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyBatches and only return the `id`
     * const supplyBatchWithIdOnly = await prisma.supplyBatch.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyBatchCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyBatchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyBatch.
     * @param {SupplyBatchDeleteArgs} args - Arguments to delete one SupplyBatch.
     * @example
     * // Delete one SupplyBatch
     * const SupplyBatch = await prisma.supplyBatch.delete({
     *   where: {
     *     // ... filter to delete one SupplyBatch
     *   }
     * })
     * 
     */
    delete<T extends SupplyBatchDeleteArgs>(args: SelectSubset<T, SupplyBatchDeleteArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyBatch.
     * @param {SupplyBatchUpdateArgs} args - Arguments to update one SupplyBatch.
     * @example
     * // Update one SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyBatchUpdateArgs>(args: SelectSubset<T, SupplyBatchUpdateArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyBatches.
     * @param {SupplyBatchDeleteManyArgs} args - Arguments to filter SupplyBatches to delete.
     * @example
     * // Delete a few SupplyBatches
     * const { count } = await prisma.supplyBatch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyBatchDeleteManyArgs>(args?: SelectSubset<T, SupplyBatchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyBatches
     * const supplyBatch = await prisma.supplyBatch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyBatchUpdateManyArgs>(args: SelectSubset<T, SupplyBatchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatches and returns the data updated in the database.
     * @param {SupplyBatchUpdateManyAndReturnArgs} args - Arguments to update many SupplyBatches.
     * @example
     * // Update many SupplyBatches
     * const supplyBatch = await prisma.supplyBatch.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyBatches and only return the `id`
     * const supplyBatchWithIdOnly = await prisma.supplyBatch.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyBatchUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyBatchUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyBatch.
     * @param {SupplyBatchUpsertArgs} args - Arguments to update or create a SupplyBatch.
     * @example
     * // Update or create a SupplyBatch
     * const supplyBatch = await prisma.supplyBatch.upsert({
     *   create: {
     *     // ... data to create a SupplyBatch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyBatch we want to update
     *   }
     * })
     */
    upsert<T extends SupplyBatchUpsertArgs>(args: SelectSubset<T, SupplyBatchUpsertArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchCountArgs} args - Arguments to filter SupplyBatches to count.
     * @example
     * // Count the number of SupplyBatches
     * const count = await prisma.supplyBatch.count({
     *   where: {
     *     // ... the filter for the SupplyBatches we want to count
     *   }
     * })
    **/
    count<T extends SupplyBatchCountArgs>(
      args?: Subset<T, SupplyBatchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyBatchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyBatchAggregateArgs>(args: Subset<T, SupplyBatchAggregateArgs>): Prisma.PrismaPromise<GetSupplyBatchAggregateType<T>>

    /**
     * Group by SupplyBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyBatchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyBatchGroupByArgs['orderBy'] }
        : { orderBy?: SupplyBatchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyBatchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyBatchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyBatch model
   */
  readonly fields: SupplyBatchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyBatch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyBatchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    box<T extends InventoryBoxDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBoxDefaultArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SupplyBatchItem<T extends SupplyBatch$SupplyBatchItemArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatch$SupplyBatchItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesDataSet<T extends SupplyBatch$SuppliesDataSetArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatch$SuppliesDataSetArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyBatch model
   */
  interface SupplyBatchFieldRefs {
    readonly id: FieldRef<"SupplyBatch", 'String'>
    readonly timestamp: FieldRef<"SupplyBatch", 'DateTime'>
    readonly title: FieldRef<"SupplyBatch", 'String'>
    readonly inventoryBoxId: FieldRef<"SupplyBatch", 'String'>
    readonly suppliesDataSetId: FieldRef<"SupplyBatch", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupplyBatch findUnique
   */
  export type SupplyBatchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatch to fetch.
     */
    where: SupplyBatchWhereUniqueInput
  }

  /**
   * SupplyBatch findUniqueOrThrow
   */
  export type SupplyBatchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatch to fetch.
     */
    where: SupplyBatchWhereUniqueInput
  }

  /**
   * SupplyBatch findFirst
   */
  export type SupplyBatchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatch to fetch.
     */
    where?: SupplyBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatches to fetch.
     */
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatches.
     */
    cursor?: SupplyBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatches.
     */
    distinct?: SupplyBatchScalarFieldEnum | SupplyBatchScalarFieldEnum[]
  }

  /**
   * SupplyBatch findFirstOrThrow
   */
  export type SupplyBatchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatch to fetch.
     */
    where?: SupplyBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatches to fetch.
     */
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatches.
     */
    cursor?: SupplyBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatches.
     */
    distinct?: SupplyBatchScalarFieldEnum | SupplyBatchScalarFieldEnum[]
  }

  /**
   * SupplyBatch findMany
   */
  export type SupplyBatchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatches to fetch.
     */
    where?: SupplyBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatches to fetch.
     */
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyBatches.
     */
    cursor?: SupplyBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatches.
     */
    skip?: number
    distinct?: SupplyBatchScalarFieldEnum | SupplyBatchScalarFieldEnum[]
  }

  /**
   * SupplyBatch create
   */
  export type SupplyBatchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyBatch.
     */
    data: XOR<SupplyBatchCreateInput, SupplyBatchUncheckedCreateInput>
  }

  /**
   * SupplyBatch createMany
   */
  export type SupplyBatchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyBatches.
     */
    data: SupplyBatchCreateManyInput | SupplyBatchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyBatch createManyAndReturn
   */
  export type SupplyBatchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyBatches.
     */
    data: SupplyBatchCreateManyInput | SupplyBatchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatch update
   */
  export type SupplyBatchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyBatch.
     */
    data: XOR<SupplyBatchUpdateInput, SupplyBatchUncheckedUpdateInput>
    /**
     * Choose, which SupplyBatch to update.
     */
    where: SupplyBatchWhereUniqueInput
  }

  /**
   * SupplyBatch updateMany
   */
  export type SupplyBatchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyBatches.
     */
    data: XOR<SupplyBatchUpdateManyMutationInput, SupplyBatchUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatches to update
     */
    where?: SupplyBatchWhereInput
    /**
     * Limit how many SupplyBatches to update.
     */
    limit?: number
  }

  /**
   * SupplyBatch updateManyAndReturn
   */
  export type SupplyBatchUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * The data used to update SupplyBatches.
     */
    data: XOR<SupplyBatchUpdateManyMutationInput, SupplyBatchUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatches to update
     */
    where?: SupplyBatchWhereInput
    /**
     * Limit how many SupplyBatches to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatch upsert
   */
  export type SupplyBatchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyBatch to update in case it exists.
     */
    where: SupplyBatchWhereUniqueInput
    /**
     * In case the SupplyBatch found by the `where` argument doesn't exist, create a new SupplyBatch with this data.
     */
    create: XOR<SupplyBatchCreateInput, SupplyBatchUncheckedCreateInput>
    /**
     * In case the SupplyBatch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyBatchUpdateInput, SupplyBatchUncheckedUpdateInput>
  }

  /**
   * SupplyBatch delete
   */
  export type SupplyBatchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    /**
     * Filter which SupplyBatch to delete.
     */
    where: SupplyBatchWhereUniqueInput
  }

  /**
   * SupplyBatch deleteMany
   */
  export type SupplyBatchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatches to delete
     */
    where?: SupplyBatchWhereInput
    /**
     * Limit how many SupplyBatches to delete.
     */
    limit?: number
  }

  /**
   * SupplyBatch.SupplyBatchItem
   */
  export type SupplyBatch$SupplyBatchItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    where?: SupplyBatchItemWhereInput
    orderBy?: SupplyBatchItemOrderByWithRelationInput | SupplyBatchItemOrderByWithRelationInput[]
    cursor?: SupplyBatchItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchItemScalarFieldEnum | SupplyBatchItemScalarFieldEnum[]
  }

  /**
   * SupplyBatch.SuppliesDataSet
   */
  export type SupplyBatch$SuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    where?: SuppliesDataSetWhereInput
  }

  /**
   * SupplyBatch without action
   */
  export type SupplyBatchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
  }


  /**
   * Model SupplyBatchItem
   */

  export type AggregateSupplyBatchItem = {
    _count: SupplyBatchItemCountAggregateOutputType | null
    _min: SupplyBatchItemMinAggregateOutputType | null
    _max: SupplyBatchItemMaxAggregateOutputType | null
  }

  export type SupplyBatchItemMinAggregateOutputType = {
    id: string | null
    supplyBatchId: string | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyBatchItemMaxAggregateOutputType = {
    id: string | null
    supplyBatchId: string | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyBatchItemCountAggregateOutputType = {
    id: number
    supplyBatchId: number
    suppliesId: number
    timestamp: number
    _all: number
  }


  export type SupplyBatchItemMinAggregateInputType = {
    id?: true
    supplyBatchId?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyBatchItemMaxAggregateInputType = {
    id?: true
    supplyBatchId?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyBatchItemCountAggregateInputType = {
    id?: true
    supplyBatchId?: true
    suppliesId?: true
    timestamp?: true
    _all?: true
  }

  export type SupplyBatchItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatchItem to aggregate.
     */
    where?: SupplyBatchItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchItems to fetch.
     */
    orderBy?: SupplyBatchItemOrderByWithRelationInput | SupplyBatchItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyBatchItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyBatchItems
    **/
    _count?: true | SupplyBatchItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyBatchItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyBatchItemMaxAggregateInputType
  }

  export type GetSupplyBatchItemAggregateType<T extends SupplyBatchItemAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyBatchItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyBatchItem[P]>
      : GetScalarType<T[P], AggregateSupplyBatchItem[P]>
  }




  export type SupplyBatchItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchItemWhereInput
    orderBy?: SupplyBatchItemOrderByWithAggregationInput | SupplyBatchItemOrderByWithAggregationInput[]
    by: SupplyBatchItemScalarFieldEnum[] | SupplyBatchItemScalarFieldEnum
    having?: SupplyBatchItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyBatchItemCountAggregateInputType | true
    _min?: SupplyBatchItemMinAggregateInputType
    _max?: SupplyBatchItemMaxAggregateInputType
  }

  export type SupplyBatchItemGroupByOutputType = {
    id: string
    supplyBatchId: string
    suppliesId: string | null
    timestamp: Date
    _count: SupplyBatchItemCountAggregateOutputType | null
    _min: SupplyBatchItemMinAggregateOutputType | null
    _max: SupplyBatchItemMaxAggregateOutputType | null
  }

  type GetSupplyBatchItemGroupByPayload<T extends SupplyBatchItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyBatchItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyBatchItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyBatchItemGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyBatchItemGroupByOutputType[P]>
        }
      >
    >


  export type SupplyBatchItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchId?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchItem"]>

  export type SupplyBatchItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchId?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchItem"]>

  export type SupplyBatchItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchId?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchItem"]>

  export type SupplyBatchItemSelectScalar = {
    id?: boolean
    supplyBatchId?: boolean
    suppliesId?: boolean
    timestamp?: boolean
  }

  export type SupplyBatchItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplyBatchId" | "suppliesId" | "timestamp", ExtArgs["result"]["supplyBatchItem"]>
  export type SupplyBatchItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }
  export type SupplyBatchItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }
  export type SupplyBatchItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batch?: boolean | SupplyBatchDefaultArgs<ExtArgs>
    supply?: boolean | SupplyBatchItem$supplyArgs<ExtArgs>
  }

  export type $SupplyBatchItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyBatchItem"
    objects: {
      batch: Prisma.$SupplyBatchPayload<ExtArgs>
      supply: Prisma.$SuppliesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supplyBatchId: string
      suppliesId: string | null
      timestamp: Date
    }, ExtArgs["result"]["supplyBatchItem"]>
    composites: {}
  }

  type SupplyBatchItemGetPayload<S extends boolean | null | undefined | SupplyBatchItemDefaultArgs> = $Result.GetResult<Prisma.$SupplyBatchItemPayload, S>

  type SupplyBatchItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyBatchItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyBatchItemCountAggregateInputType | true
    }

  export interface SupplyBatchItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyBatchItem'], meta: { name: 'SupplyBatchItem' } }
    /**
     * Find zero or one SupplyBatchItem that matches the filter.
     * @param {SupplyBatchItemFindUniqueArgs} args - Arguments to find a SupplyBatchItem
     * @example
     * // Get one SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyBatchItemFindUniqueArgs>(args: SelectSubset<T, SupplyBatchItemFindUniqueArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyBatchItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyBatchItemFindUniqueOrThrowArgs} args - Arguments to find a SupplyBatchItem
     * @example
     * // Get one SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyBatchItemFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyBatchItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatchItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemFindFirstArgs} args - Arguments to find a SupplyBatchItem
     * @example
     * // Get one SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyBatchItemFindFirstArgs>(args?: SelectSubset<T, SupplyBatchItemFindFirstArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatchItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemFindFirstOrThrowArgs} args - Arguments to find a SupplyBatchItem
     * @example
     * // Get one SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyBatchItemFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyBatchItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyBatchItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyBatchItems
     * const supplyBatchItems = await prisma.supplyBatchItem.findMany()
     * 
     * // Get first 10 SupplyBatchItems
     * const supplyBatchItems = await prisma.supplyBatchItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyBatchItemWithIdOnly = await prisma.supplyBatchItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyBatchItemFindManyArgs>(args?: SelectSubset<T, SupplyBatchItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyBatchItem.
     * @param {SupplyBatchItemCreateArgs} args - Arguments to create a SupplyBatchItem.
     * @example
     * // Create one SupplyBatchItem
     * const SupplyBatchItem = await prisma.supplyBatchItem.create({
     *   data: {
     *     // ... data to create a SupplyBatchItem
     *   }
     * })
     * 
     */
    create<T extends SupplyBatchItemCreateArgs>(args: SelectSubset<T, SupplyBatchItemCreateArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyBatchItems.
     * @param {SupplyBatchItemCreateManyArgs} args - Arguments to create many SupplyBatchItems.
     * @example
     * // Create many SupplyBatchItems
     * const supplyBatchItem = await prisma.supplyBatchItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyBatchItemCreateManyArgs>(args?: SelectSubset<T, SupplyBatchItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyBatchItems and returns the data saved in the database.
     * @param {SupplyBatchItemCreateManyAndReturnArgs} args - Arguments to create many SupplyBatchItems.
     * @example
     * // Create many SupplyBatchItems
     * const supplyBatchItem = await prisma.supplyBatchItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyBatchItems and only return the `id`
     * const supplyBatchItemWithIdOnly = await prisma.supplyBatchItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyBatchItemCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyBatchItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyBatchItem.
     * @param {SupplyBatchItemDeleteArgs} args - Arguments to delete one SupplyBatchItem.
     * @example
     * // Delete one SupplyBatchItem
     * const SupplyBatchItem = await prisma.supplyBatchItem.delete({
     *   where: {
     *     // ... filter to delete one SupplyBatchItem
     *   }
     * })
     * 
     */
    delete<T extends SupplyBatchItemDeleteArgs>(args: SelectSubset<T, SupplyBatchItemDeleteArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyBatchItem.
     * @param {SupplyBatchItemUpdateArgs} args - Arguments to update one SupplyBatchItem.
     * @example
     * // Update one SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyBatchItemUpdateArgs>(args: SelectSubset<T, SupplyBatchItemUpdateArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyBatchItems.
     * @param {SupplyBatchItemDeleteManyArgs} args - Arguments to filter SupplyBatchItems to delete.
     * @example
     * // Delete a few SupplyBatchItems
     * const { count } = await prisma.supplyBatchItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyBatchItemDeleteManyArgs>(args?: SelectSubset<T, SupplyBatchItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatchItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyBatchItems
     * const supplyBatchItem = await prisma.supplyBatchItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyBatchItemUpdateManyArgs>(args: SelectSubset<T, SupplyBatchItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatchItems and returns the data updated in the database.
     * @param {SupplyBatchItemUpdateManyAndReturnArgs} args - Arguments to update many SupplyBatchItems.
     * @example
     * // Update many SupplyBatchItems
     * const supplyBatchItem = await prisma.supplyBatchItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyBatchItems and only return the `id`
     * const supplyBatchItemWithIdOnly = await prisma.supplyBatchItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyBatchItemUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyBatchItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyBatchItem.
     * @param {SupplyBatchItemUpsertArgs} args - Arguments to update or create a SupplyBatchItem.
     * @example
     * // Update or create a SupplyBatchItem
     * const supplyBatchItem = await prisma.supplyBatchItem.upsert({
     *   create: {
     *     // ... data to create a SupplyBatchItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyBatchItem we want to update
     *   }
     * })
     */
    upsert<T extends SupplyBatchItemUpsertArgs>(args: SelectSubset<T, SupplyBatchItemUpsertArgs<ExtArgs>>): Prisma__SupplyBatchItemClient<$Result.GetResult<Prisma.$SupplyBatchItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyBatchItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemCountArgs} args - Arguments to filter SupplyBatchItems to count.
     * @example
     * // Count the number of SupplyBatchItems
     * const count = await prisma.supplyBatchItem.count({
     *   where: {
     *     // ... the filter for the SupplyBatchItems we want to count
     *   }
     * })
    **/
    count<T extends SupplyBatchItemCountArgs>(
      args?: Subset<T, SupplyBatchItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyBatchItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyBatchItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyBatchItemAggregateArgs>(args: Subset<T, SupplyBatchItemAggregateArgs>): Prisma.PrismaPromise<GetSupplyBatchItemAggregateType<T>>

    /**
     * Group by SupplyBatchItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyBatchItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyBatchItemGroupByArgs['orderBy'] }
        : { orderBy?: SupplyBatchItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyBatchItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyBatchItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyBatchItem model
   */
  readonly fields: SupplyBatchItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyBatchItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyBatchItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    batch<T extends SupplyBatchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchDefaultArgs<ExtArgs>>): Prisma__SupplyBatchClient<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    supply<T extends SupplyBatchItem$supplyArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchItem$supplyArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyBatchItem model
   */
  interface SupplyBatchItemFieldRefs {
    readonly id: FieldRef<"SupplyBatchItem", 'String'>
    readonly supplyBatchId: FieldRef<"SupplyBatchItem", 'String'>
    readonly suppliesId: FieldRef<"SupplyBatchItem", 'String'>
    readonly timestamp: FieldRef<"SupplyBatchItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupplyBatchItem findUnique
   */
  export type SupplyBatchItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchItem to fetch.
     */
    where: SupplyBatchItemWhereUniqueInput
  }

  /**
   * SupplyBatchItem findUniqueOrThrow
   */
  export type SupplyBatchItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchItem to fetch.
     */
    where: SupplyBatchItemWhereUniqueInput
  }

  /**
   * SupplyBatchItem findFirst
   */
  export type SupplyBatchItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchItem to fetch.
     */
    where?: SupplyBatchItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchItems to fetch.
     */
    orderBy?: SupplyBatchItemOrderByWithRelationInput | SupplyBatchItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatchItems.
     */
    cursor?: SupplyBatchItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatchItems.
     */
    distinct?: SupplyBatchItemScalarFieldEnum | SupplyBatchItemScalarFieldEnum[]
  }

  /**
   * SupplyBatchItem findFirstOrThrow
   */
  export type SupplyBatchItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchItem to fetch.
     */
    where?: SupplyBatchItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchItems to fetch.
     */
    orderBy?: SupplyBatchItemOrderByWithRelationInput | SupplyBatchItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatchItems.
     */
    cursor?: SupplyBatchItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatchItems.
     */
    distinct?: SupplyBatchItemScalarFieldEnum | SupplyBatchItemScalarFieldEnum[]
  }

  /**
   * SupplyBatchItem findMany
   */
  export type SupplyBatchItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchItems to fetch.
     */
    where?: SupplyBatchItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchItems to fetch.
     */
    orderBy?: SupplyBatchItemOrderByWithRelationInput | SupplyBatchItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyBatchItems.
     */
    cursor?: SupplyBatchItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchItems.
     */
    skip?: number
    distinct?: SupplyBatchItemScalarFieldEnum | SupplyBatchItemScalarFieldEnum[]
  }

  /**
   * SupplyBatchItem create
   */
  export type SupplyBatchItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyBatchItem.
     */
    data: XOR<SupplyBatchItemCreateInput, SupplyBatchItemUncheckedCreateInput>
  }

  /**
   * SupplyBatchItem createMany
   */
  export type SupplyBatchItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyBatchItems.
     */
    data: SupplyBatchItemCreateManyInput | SupplyBatchItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyBatchItem createManyAndReturn
   */
  export type SupplyBatchItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyBatchItems.
     */
    data: SupplyBatchItemCreateManyInput | SupplyBatchItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatchItem update
   */
  export type SupplyBatchItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyBatchItem.
     */
    data: XOR<SupplyBatchItemUpdateInput, SupplyBatchItemUncheckedUpdateInput>
    /**
     * Choose, which SupplyBatchItem to update.
     */
    where: SupplyBatchItemWhereUniqueInput
  }

  /**
   * SupplyBatchItem updateMany
   */
  export type SupplyBatchItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyBatchItems.
     */
    data: XOR<SupplyBatchItemUpdateManyMutationInput, SupplyBatchItemUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatchItems to update
     */
    where?: SupplyBatchItemWhereInput
    /**
     * Limit how many SupplyBatchItems to update.
     */
    limit?: number
  }

  /**
   * SupplyBatchItem updateManyAndReturn
   */
  export type SupplyBatchItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * The data used to update SupplyBatchItems.
     */
    data: XOR<SupplyBatchItemUpdateManyMutationInput, SupplyBatchItemUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatchItems to update
     */
    where?: SupplyBatchItemWhereInput
    /**
     * Limit how many SupplyBatchItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatchItem upsert
   */
  export type SupplyBatchItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyBatchItem to update in case it exists.
     */
    where: SupplyBatchItemWhereUniqueInput
    /**
     * In case the SupplyBatchItem found by the `where` argument doesn't exist, create a new SupplyBatchItem with this data.
     */
    create: XOR<SupplyBatchItemCreateInput, SupplyBatchItemUncheckedCreateInput>
    /**
     * In case the SupplyBatchItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyBatchItemUpdateInput, SupplyBatchItemUncheckedUpdateInput>
  }

  /**
   * SupplyBatchItem delete
   */
  export type SupplyBatchItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
    /**
     * Filter which SupplyBatchItem to delete.
     */
    where: SupplyBatchItemWhereUniqueInput
  }

  /**
   * SupplyBatchItem deleteMany
   */
  export type SupplyBatchItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatchItems to delete
     */
    where?: SupplyBatchItemWhereInput
    /**
     * Limit how many SupplyBatchItems to delete.
     */
    limit?: number
  }

  /**
   * SupplyBatchItem.supply
   */
  export type SupplyBatchItem$supplyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
  }

  /**
   * SupplyBatchItem without action
   */
  export type SupplyBatchItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchItem
     */
    select?: SupplyBatchItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchItem
     */
    omit?: SupplyBatchItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchItemInclude<ExtArgs> | null
  }


  /**
   * Model SupplyBatchOrder
   */

  export type AggregateSupplyBatchOrder = {
    _count: SupplyBatchOrderCountAggregateOutputType | null
    _avg: SupplyBatchOrderAvgAggregateOutputType | null
    _sum: SupplyBatchOrderSumAggregateOutputType | null
    _min: SupplyBatchOrderMinAggregateOutputType | null
    _max: SupplyBatchOrderMaxAggregateOutputType | null
  }

  export type SupplyBatchOrderAvgAggregateOutputType = {
    status: number | null
  }

  export type SupplyBatchOrderSumAggregateOutputType = {
    status: number | null
  }

  export type SupplyBatchOrderMinAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    title: string | null
    userId: string | null
    status: number | null
    lineId: string | null
    inventoryBoxId: string | null
  }

  export type SupplyBatchOrderMaxAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    title: string | null
    userId: string | null
    status: number | null
    lineId: string | null
    inventoryBoxId: string | null
  }

  export type SupplyBatchOrderCountAggregateOutputType = {
    id: number
    timestamp: number
    title: number
    userId: number
    status: number
    lineId: number
    inventoryBoxId: number
    _all: number
  }


  export type SupplyBatchOrderAvgAggregateInputType = {
    status?: true
  }

  export type SupplyBatchOrderSumAggregateInputType = {
    status?: true
  }

  export type SupplyBatchOrderMinAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    userId?: true
    status?: true
    lineId?: true
    inventoryBoxId?: true
  }

  export type SupplyBatchOrderMaxAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    userId?: true
    status?: true
    lineId?: true
    inventoryBoxId?: true
  }

  export type SupplyBatchOrderCountAggregateInputType = {
    id?: true
    timestamp?: true
    title?: true
    userId?: true
    status?: true
    lineId?: true
    inventoryBoxId?: true
    _all?: true
  }

  export type SupplyBatchOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatchOrder to aggregate.
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchOrders to fetch.
     */
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyBatchOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyBatchOrders
    **/
    _count?: true | SupplyBatchOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplyBatchOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplyBatchOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyBatchOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyBatchOrderMaxAggregateInputType
  }

  export type GetSupplyBatchOrderAggregateType<T extends SupplyBatchOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyBatchOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyBatchOrder[P]>
      : GetScalarType<T[P], AggregateSupplyBatchOrder[P]>
  }




  export type SupplyBatchOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyBatchOrderWhereInput
    orderBy?: SupplyBatchOrderOrderByWithAggregationInput | SupplyBatchOrderOrderByWithAggregationInput[]
    by: SupplyBatchOrderScalarFieldEnum[] | SupplyBatchOrderScalarFieldEnum
    having?: SupplyBatchOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyBatchOrderCountAggregateInputType | true
    _avg?: SupplyBatchOrderAvgAggregateInputType
    _sum?: SupplyBatchOrderSumAggregateInputType
    _min?: SupplyBatchOrderMinAggregateInputType
    _max?: SupplyBatchOrderMaxAggregateInputType
  }

  export type SupplyBatchOrderGroupByOutputType = {
    id: string
    timestamp: Date
    title: string | null
    userId: string | null
    status: number
    lineId: string | null
    inventoryBoxId: string | null
    _count: SupplyBatchOrderCountAggregateOutputType | null
    _avg: SupplyBatchOrderAvgAggregateOutputType | null
    _sum: SupplyBatchOrderSumAggregateOutputType | null
    _min: SupplyBatchOrderMinAggregateOutputType | null
    _max: SupplyBatchOrderMaxAggregateOutputType | null
  }

  type GetSupplyBatchOrderGroupByPayload<T extends SupplyBatchOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyBatchOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyBatchOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyBatchOrderGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyBatchOrderGroupByOutputType[P]>
        }
      >
    >


  export type SupplyBatchOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    userId?: boolean
    status?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    order?: boolean | SupplyBatchOrder$orderArgs<ExtArgs>
    files?: boolean | SupplyBatchOrder$filesArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
    _count?: boolean | SupplyBatchOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchOrder"]>

  export type SupplyBatchOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    userId?: boolean
    status?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchOrder"]>

  export type SupplyBatchOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    title?: boolean
    userId?: boolean
    status?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
  }, ExtArgs["result"]["supplyBatchOrder"]>

  export type SupplyBatchOrderSelectScalar = {
    id?: boolean
    timestamp?: boolean
    title?: boolean
    userId?: boolean
    status?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
  }

  export type SupplyBatchOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "timestamp" | "title" | "userId" | "status" | "lineId" | "inventoryBoxId", ExtArgs["result"]["supplyBatchOrder"]>
  export type SupplyBatchOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    order?: boolean | SupplyBatchOrder$orderArgs<ExtArgs>
    files?: boolean | SupplyBatchOrder$filesArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
    _count?: boolean | SupplyBatchOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SupplyBatchOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
  }
  export type SupplyBatchOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | SupplyBatchOrder$userArgs<ExtArgs>
    line?: boolean | SupplyBatchOrder$lineArgs<ExtArgs>
    InventoryBox?: boolean | SupplyBatchOrder$InventoryBoxArgs<ExtArgs>
  }

  export type $SupplyBatchOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyBatchOrder"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      order: Prisma.$SupplyOrderPayload<ExtArgs>[]
      files: Prisma.$SupplyOrderSupportFilePayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
      InventoryBox: Prisma.$InventoryBoxPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      timestamp: Date
      title: string | null
      userId: string | null
      status: number
      lineId: string | null
      inventoryBoxId: string | null
    }, ExtArgs["result"]["supplyBatchOrder"]>
    composites: {}
  }

  type SupplyBatchOrderGetPayload<S extends boolean | null | undefined | SupplyBatchOrderDefaultArgs> = $Result.GetResult<Prisma.$SupplyBatchOrderPayload, S>

  type SupplyBatchOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyBatchOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyBatchOrderCountAggregateInputType | true
    }

  export interface SupplyBatchOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyBatchOrder'], meta: { name: 'SupplyBatchOrder' } }
    /**
     * Find zero or one SupplyBatchOrder that matches the filter.
     * @param {SupplyBatchOrderFindUniqueArgs} args - Arguments to find a SupplyBatchOrder
     * @example
     * // Get one SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyBatchOrderFindUniqueArgs>(args: SelectSubset<T, SupplyBatchOrderFindUniqueArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyBatchOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyBatchOrderFindUniqueOrThrowArgs} args - Arguments to find a SupplyBatchOrder
     * @example
     * // Get one SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyBatchOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyBatchOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatchOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderFindFirstArgs} args - Arguments to find a SupplyBatchOrder
     * @example
     * // Get one SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyBatchOrderFindFirstArgs>(args?: SelectSubset<T, SupplyBatchOrderFindFirstArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyBatchOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderFindFirstOrThrowArgs} args - Arguments to find a SupplyBatchOrder
     * @example
     * // Get one SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyBatchOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyBatchOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyBatchOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyBatchOrders
     * const supplyBatchOrders = await prisma.supplyBatchOrder.findMany()
     * 
     * // Get first 10 SupplyBatchOrders
     * const supplyBatchOrders = await prisma.supplyBatchOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyBatchOrderWithIdOnly = await prisma.supplyBatchOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyBatchOrderFindManyArgs>(args?: SelectSubset<T, SupplyBatchOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyBatchOrder.
     * @param {SupplyBatchOrderCreateArgs} args - Arguments to create a SupplyBatchOrder.
     * @example
     * // Create one SupplyBatchOrder
     * const SupplyBatchOrder = await prisma.supplyBatchOrder.create({
     *   data: {
     *     // ... data to create a SupplyBatchOrder
     *   }
     * })
     * 
     */
    create<T extends SupplyBatchOrderCreateArgs>(args: SelectSubset<T, SupplyBatchOrderCreateArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyBatchOrders.
     * @param {SupplyBatchOrderCreateManyArgs} args - Arguments to create many SupplyBatchOrders.
     * @example
     * // Create many SupplyBatchOrders
     * const supplyBatchOrder = await prisma.supplyBatchOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyBatchOrderCreateManyArgs>(args?: SelectSubset<T, SupplyBatchOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyBatchOrders and returns the data saved in the database.
     * @param {SupplyBatchOrderCreateManyAndReturnArgs} args - Arguments to create many SupplyBatchOrders.
     * @example
     * // Create many SupplyBatchOrders
     * const supplyBatchOrder = await prisma.supplyBatchOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyBatchOrders and only return the `id`
     * const supplyBatchOrderWithIdOnly = await prisma.supplyBatchOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyBatchOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyBatchOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyBatchOrder.
     * @param {SupplyBatchOrderDeleteArgs} args - Arguments to delete one SupplyBatchOrder.
     * @example
     * // Delete one SupplyBatchOrder
     * const SupplyBatchOrder = await prisma.supplyBatchOrder.delete({
     *   where: {
     *     // ... filter to delete one SupplyBatchOrder
     *   }
     * })
     * 
     */
    delete<T extends SupplyBatchOrderDeleteArgs>(args: SelectSubset<T, SupplyBatchOrderDeleteArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyBatchOrder.
     * @param {SupplyBatchOrderUpdateArgs} args - Arguments to update one SupplyBatchOrder.
     * @example
     * // Update one SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyBatchOrderUpdateArgs>(args: SelectSubset<T, SupplyBatchOrderUpdateArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyBatchOrders.
     * @param {SupplyBatchOrderDeleteManyArgs} args - Arguments to filter SupplyBatchOrders to delete.
     * @example
     * // Delete a few SupplyBatchOrders
     * const { count } = await prisma.supplyBatchOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyBatchOrderDeleteManyArgs>(args?: SelectSubset<T, SupplyBatchOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatchOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyBatchOrders
     * const supplyBatchOrder = await prisma.supplyBatchOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyBatchOrderUpdateManyArgs>(args: SelectSubset<T, SupplyBatchOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyBatchOrders and returns the data updated in the database.
     * @param {SupplyBatchOrderUpdateManyAndReturnArgs} args - Arguments to update many SupplyBatchOrders.
     * @example
     * // Update many SupplyBatchOrders
     * const supplyBatchOrder = await prisma.supplyBatchOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyBatchOrders and only return the `id`
     * const supplyBatchOrderWithIdOnly = await prisma.supplyBatchOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyBatchOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyBatchOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyBatchOrder.
     * @param {SupplyBatchOrderUpsertArgs} args - Arguments to update or create a SupplyBatchOrder.
     * @example
     * // Update or create a SupplyBatchOrder
     * const supplyBatchOrder = await prisma.supplyBatchOrder.upsert({
     *   create: {
     *     // ... data to create a SupplyBatchOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyBatchOrder we want to update
     *   }
     * })
     */
    upsert<T extends SupplyBatchOrderUpsertArgs>(args: SelectSubset<T, SupplyBatchOrderUpsertArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyBatchOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderCountArgs} args - Arguments to filter SupplyBatchOrders to count.
     * @example
     * // Count the number of SupplyBatchOrders
     * const count = await prisma.supplyBatchOrder.count({
     *   where: {
     *     // ... the filter for the SupplyBatchOrders we want to count
     *   }
     * })
    **/
    count<T extends SupplyBatchOrderCountArgs>(
      args?: Subset<T, SupplyBatchOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyBatchOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyBatchOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyBatchOrderAggregateArgs>(args: Subset<T, SupplyBatchOrderAggregateArgs>): Prisma.PrismaPromise<GetSupplyBatchOrderAggregateType<T>>

    /**
     * Group by SupplyBatchOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyBatchOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyBatchOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyBatchOrderGroupByArgs['orderBy'] }
        : { orderBy?: SupplyBatchOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyBatchOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyBatchOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyBatchOrder model
   */
  readonly fields: SupplyBatchOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyBatchOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyBatchOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends SupplyBatchOrder$userArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchOrder$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order<T extends SupplyBatchOrder$orderArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchOrder$orderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    files<T extends SupplyBatchOrder$filesArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchOrder$filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends SupplyBatchOrder$lineArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchOrder$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    InventoryBox<T extends SupplyBatchOrder$InventoryBoxArgs<ExtArgs> = {}>(args?: Subset<T, SupplyBatchOrder$InventoryBoxArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyBatchOrder model
   */
  interface SupplyBatchOrderFieldRefs {
    readonly id: FieldRef<"SupplyBatchOrder", 'String'>
    readonly timestamp: FieldRef<"SupplyBatchOrder", 'DateTime'>
    readonly title: FieldRef<"SupplyBatchOrder", 'String'>
    readonly userId: FieldRef<"SupplyBatchOrder", 'String'>
    readonly status: FieldRef<"SupplyBatchOrder", 'Int'>
    readonly lineId: FieldRef<"SupplyBatchOrder", 'String'>
    readonly inventoryBoxId: FieldRef<"SupplyBatchOrder", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupplyBatchOrder findUnique
   */
  export type SupplyBatchOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchOrder to fetch.
     */
    where: SupplyBatchOrderWhereUniqueInput
  }

  /**
   * SupplyBatchOrder findUniqueOrThrow
   */
  export type SupplyBatchOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchOrder to fetch.
     */
    where: SupplyBatchOrderWhereUniqueInput
  }

  /**
   * SupplyBatchOrder findFirst
   */
  export type SupplyBatchOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchOrder to fetch.
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchOrders to fetch.
     */
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatchOrders.
     */
    cursor?: SupplyBatchOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatchOrders.
     */
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * SupplyBatchOrder findFirstOrThrow
   */
  export type SupplyBatchOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchOrder to fetch.
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchOrders to fetch.
     */
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyBatchOrders.
     */
    cursor?: SupplyBatchOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyBatchOrders.
     */
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * SupplyBatchOrder findMany
   */
  export type SupplyBatchOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyBatchOrders to fetch.
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyBatchOrders to fetch.
     */
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyBatchOrders.
     */
    cursor?: SupplyBatchOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyBatchOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyBatchOrders.
     */
    skip?: number
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * SupplyBatchOrder create
   */
  export type SupplyBatchOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyBatchOrder.
     */
    data?: XOR<SupplyBatchOrderCreateInput, SupplyBatchOrderUncheckedCreateInput>
  }

  /**
   * SupplyBatchOrder createMany
   */
  export type SupplyBatchOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyBatchOrders.
     */
    data: SupplyBatchOrderCreateManyInput | SupplyBatchOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyBatchOrder createManyAndReturn
   */
  export type SupplyBatchOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyBatchOrders.
     */
    data: SupplyBatchOrderCreateManyInput | SupplyBatchOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatchOrder update
   */
  export type SupplyBatchOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyBatchOrder.
     */
    data: XOR<SupplyBatchOrderUpdateInput, SupplyBatchOrderUncheckedUpdateInput>
    /**
     * Choose, which SupplyBatchOrder to update.
     */
    where: SupplyBatchOrderWhereUniqueInput
  }

  /**
   * SupplyBatchOrder updateMany
   */
  export type SupplyBatchOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyBatchOrders.
     */
    data: XOR<SupplyBatchOrderUpdateManyMutationInput, SupplyBatchOrderUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatchOrders to update
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * Limit how many SupplyBatchOrders to update.
     */
    limit?: number
  }

  /**
   * SupplyBatchOrder updateManyAndReturn
   */
  export type SupplyBatchOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * The data used to update SupplyBatchOrders.
     */
    data: XOR<SupplyBatchOrderUpdateManyMutationInput, SupplyBatchOrderUncheckedUpdateManyInput>
    /**
     * Filter which SupplyBatchOrders to update
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * Limit how many SupplyBatchOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyBatchOrder upsert
   */
  export type SupplyBatchOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyBatchOrder to update in case it exists.
     */
    where: SupplyBatchOrderWhereUniqueInput
    /**
     * In case the SupplyBatchOrder found by the `where` argument doesn't exist, create a new SupplyBatchOrder with this data.
     */
    create: XOR<SupplyBatchOrderCreateInput, SupplyBatchOrderUncheckedCreateInput>
    /**
     * In case the SupplyBatchOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyBatchOrderUpdateInput, SupplyBatchOrderUncheckedUpdateInput>
  }

  /**
   * SupplyBatchOrder delete
   */
  export type SupplyBatchOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    /**
     * Filter which SupplyBatchOrder to delete.
     */
    where: SupplyBatchOrderWhereUniqueInput
  }

  /**
   * SupplyBatchOrder deleteMany
   */
  export type SupplyBatchOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyBatchOrders to delete
     */
    where?: SupplyBatchOrderWhereInput
    /**
     * Limit how many SupplyBatchOrders to delete.
     */
    limit?: number
  }

  /**
   * SupplyBatchOrder.user
   */
  export type SupplyBatchOrder$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * SupplyBatchOrder.order
   */
  export type SupplyBatchOrder$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    where?: SupplyOrderWhereInput
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    cursor?: SupplyOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * SupplyBatchOrder.files
   */
  export type SupplyBatchOrder$filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    where?: SupplyOrderSupportFileWhereInput
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyOrderSupportFileScalarFieldEnum | SupplyOrderSupportFileScalarFieldEnum[]
  }

  /**
   * SupplyBatchOrder.line
   */
  export type SupplyBatchOrder$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * SupplyBatchOrder.InventoryBox
   */
  export type SupplyBatchOrder$InventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    where?: InventoryBoxWhereInput
  }

  /**
   * SupplyBatchOrder without action
   */
  export type SupplyBatchOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
  }


  /**
   * Model SupplyOrderSupportFile
   */

  export type AggregateSupplyOrderSupportFile = {
    _count: SupplyOrderSupportFileCountAggregateOutputType | null
    _min: SupplyOrderSupportFileMinAggregateOutputType | null
    _max: SupplyOrderSupportFileMaxAggregateOutputType | null
  }

  export type SupplyOrderSupportFileMinAggregateOutputType = {
    id: string | null
    assetsId: string | null
    supplyBatchOrderId: string | null
  }

  export type SupplyOrderSupportFileMaxAggregateOutputType = {
    id: string | null
    assetsId: string | null
    supplyBatchOrderId: string | null
  }

  export type SupplyOrderSupportFileCountAggregateOutputType = {
    id: number
    assetsId: number
    supplyBatchOrderId: number
    _all: number
  }


  export type SupplyOrderSupportFileMinAggregateInputType = {
    id?: true
    assetsId?: true
    supplyBatchOrderId?: true
  }

  export type SupplyOrderSupportFileMaxAggregateInputType = {
    id?: true
    assetsId?: true
    supplyBatchOrderId?: true
  }

  export type SupplyOrderSupportFileCountAggregateInputType = {
    id?: true
    assetsId?: true
    supplyBatchOrderId?: true
    _all?: true
  }

  export type SupplyOrderSupportFileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyOrderSupportFile to aggregate.
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrderSupportFiles to fetch.
     */
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrderSupportFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrderSupportFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyOrderSupportFiles
    **/
    _count?: true | SupplyOrderSupportFileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyOrderSupportFileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyOrderSupportFileMaxAggregateInputType
  }

  export type GetSupplyOrderSupportFileAggregateType<T extends SupplyOrderSupportFileAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyOrderSupportFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyOrderSupportFile[P]>
      : GetScalarType<T[P], AggregateSupplyOrderSupportFile[P]>
  }




  export type SupplyOrderSupportFileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderSupportFileWhereInput
    orderBy?: SupplyOrderSupportFileOrderByWithAggregationInput | SupplyOrderSupportFileOrderByWithAggregationInput[]
    by: SupplyOrderSupportFileScalarFieldEnum[] | SupplyOrderSupportFileScalarFieldEnum
    having?: SupplyOrderSupportFileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyOrderSupportFileCountAggregateInputType | true
    _min?: SupplyOrderSupportFileMinAggregateInputType
    _max?: SupplyOrderSupportFileMaxAggregateInputType
  }

  export type SupplyOrderSupportFileGroupByOutputType = {
    id: string
    assetsId: string
    supplyBatchOrderId: string | null
    _count: SupplyOrderSupportFileCountAggregateOutputType | null
    _min: SupplyOrderSupportFileMinAggregateOutputType | null
    _max: SupplyOrderSupportFileMaxAggregateOutputType | null
  }

  type GetSupplyOrderSupportFileGroupByPayload<T extends SupplyOrderSupportFileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyOrderSupportFileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyOrderSupportFileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyOrderSupportFileGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyOrderSupportFileGroupByOutputType[P]>
        }
      >
    >


  export type SupplyOrderSupportFileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    supplyBatchOrderId?: boolean
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrderSupportFile"]>

  export type SupplyOrderSupportFileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    supplyBatchOrderId?: boolean
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrderSupportFile"]>

  export type SupplyOrderSupportFileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetsId?: boolean
    supplyBatchOrderId?: boolean
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrderSupportFile"]>

  export type SupplyOrderSupportFileSelectScalar = {
    id?: boolean
    assetsId?: boolean
    supplyBatchOrderId?: boolean
  }

  export type SupplyOrderSupportFileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetsId" | "supplyBatchOrderId", ExtArgs["result"]["supplyOrderSupportFile"]>
  export type SupplyOrderSupportFileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }
  export type SupplyOrderSupportFileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }
  export type SupplyOrderSupportFileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file?: boolean | AssetsDefaultArgs<ExtArgs>
    SupplyBatchOrder?: boolean | SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>
  }

  export type $SupplyOrderSupportFilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyOrderSupportFile"
    objects: {
      file: Prisma.$AssetsPayload<ExtArgs>
      SupplyBatchOrder: Prisma.$SupplyBatchOrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetsId: string
      supplyBatchOrderId: string | null
    }, ExtArgs["result"]["supplyOrderSupportFile"]>
    composites: {}
  }

  type SupplyOrderSupportFileGetPayload<S extends boolean | null | undefined | SupplyOrderSupportFileDefaultArgs> = $Result.GetResult<Prisma.$SupplyOrderSupportFilePayload, S>

  type SupplyOrderSupportFileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyOrderSupportFileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyOrderSupportFileCountAggregateInputType | true
    }

  export interface SupplyOrderSupportFileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyOrderSupportFile'], meta: { name: 'SupplyOrderSupportFile' } }
    /**
     * Find zero or one SupplyOrderSupportFile that matches the filter.
     * @param {SupplyOrderSupportFileFindUniqueArgs} args - Arguments to find a SupplyOrderSupportFile
     * @example
     * // Get one SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyOrderSupportFileFindUniqueArgs>(args: SelectSubset<T, SupplyOrderSupportFileFindUniqueArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyOrderSupportFile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyOrderSupportFileFindUniqueOrThrowArgs} args - Arguments to find a SupplyOrderSupportFile
     * @example
     * // Get one SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyOrderSupportFileFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyOrderSupportFileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyOrderSupportFile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileFindFirstArgs} args - Arguments to find a SupplyOrderSupportFile
     * @example
     * // Get one SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyOrderSupportFileFindFirstArgs>(args?: SelectSubset<T, SupplyOrderSupportFileFindFirstArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyOrderSupportFile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileFindFirstOrThrowArgs} args - Arguments to find a SupplyOrderSupportFile
     * @example
     * // Get one SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyOrderSupportFileFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyOrderSupportFileFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyOrderSupportFiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyOrderSupportFiles
     * const supplyOrderSupportFiles = await prisma.supplyOrderSupportFile.findMany()
     * 
     * // Get first 10 SupplyOrderSupportFiles
     * const supplyOrderSupportFiles = await prisma.supplyOrderSupportFile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyOrderSupportFileWithIdOnly = await prisma.supplyOrderSupportFile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyOrderSupportFileFindManyArgs>(args?: SelectSubset<T, SupplyOrderSupportFileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyOrderSupportFile.
     * @param {SupplyOrderSupportFileCreateArgs} args - Arguments to create a SupplyOrderSupportFile.
     * @example
     * // Create one SupplyOrderSupportFile
     * const SupplyOrderSupportFile = await prisma.supplyOrderSupportFile.create({
     *   data: {
     *     // ... data to create a SupplyOrderSupportFile
     *   }
     * })
     * 
     */
    create<T extends SupplyOrderSupportFileCreateArgs>(args: SelectSubset<T, SupplyOrderSupportFileCreateArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyOrderSupportFiles.
     * @param {SupplyOrderSupportFileCreateManyArgs} args - Arguments to create many SupplyOrderSupportFiles.
     * @example
     * // Create many SupplyOrderSupportFiles
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyOrderSupportFileCreateManyArgs>(args?: SelectSubset<T, SupplyOrderSupportFileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyOrderSupportFiles and returns the data saved in the database.
     * @param {SupplyOrderSupportFileCreateManyAndReturnArgs} args - Arguments to create many SupplyOrderSupportFiles.
     * @example
     * // Create many SupplyOrderSupportFiles
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyOrderSupportFiles and only return the `id`
     * const supplyOrderSupportFileWithIdOnly = await prisma.supplyOrderSupportFile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyOrderSupportFileCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyOrderSupportFileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyOrderSupportFile.
     * @param {SupplyOrderSupportFileDeleteArgs} args - Arguments to delete one SupplyOrderSupportFile.
     * @example
     * // Delete one SupplyOrderSupportFile
     * const SupplyOrderSupportFile = await prisma.supplyOrderSupportFile.delete({
     *   where: {
     *     // ... filter to delete one SupplyOrderSupportFile
     *   }
     * })
     * 
     */
    delete<T extends SupplyOrderSupportFileDeleteArgs>(args: SelectSubset<T, SupplyOrderSupportFileDeleteArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyOrderSupportFile.
     * @param {SupplyOrderSupportFileUpdateArgs} args - Arguments to update one SupplyOrderSupportFile.
     * @example
     * // Update one SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyOrderSupportFileUpdateArgs>(args: SelectSubset<T, SupplyOrderSupportFileUpdateArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyOrderSupportFiles.
     * @param {SupplyOrderSupportFileDeleteManyArgs} args - Arguments to filter SupplyOrderSupportFiles to delete.
     * @example
     * // Delete a few SupplyOrderSupportFiles
     * const { count } = await prisma.supplyOrderSupportFile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyOrderSupportFileDeleteManyArgs>(args?: SelectSubset<T, SupplyOrderSupportFileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyOrderSupportFiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyOrderSupportFiles
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyOrderSupportFileUpdateManyArgs>(args: SelectSubset<T, SupplyOrderSupportFileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyOrderSupportFiles and returns the data updated in the database.
     * @param {SupplyOrderSupportFileUpdateManyAndReturnArgs} args - Arguments to update many SupplyOrderSupportFiles.
     * @example
     * // Update many SupplyOrderSupportFiles
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyOrderSupportFiles and only return the `id`
     * const supplyOrderSupportFileWithIdOnly = await prisma.supplyOrderSupportFile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyOrderSupportFileUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyOrderSupportFileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyOrderSupportFile.
     * @param {SupplyOrderSupportFileUpsertArgs} args - Arguments to update or create a SupplyOrderSupportFile.
     * @example
     * // Update or create a SupplyOrderSupportFile
     * const supplyOrderSupportFile = await prisma.supplyOrderSupportFile.upsert({
     *   create: {
     *     // ... data to create a SupplyOrderSupportFile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyOrderSupportFile we want to update
     *   }
     * })
     */
    upsert<T extends SupplyOrderSupportFileUpsertArgs>(args: SelectSubset<T, SupplyOrderSupportFileUpsertArgs<ExtArgs>>): Prisma__SupplyOrderSupportFileClient<$Result.GetResult<Prisma.$SupplyOrderSupportFilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyOrderSupportFiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileCountArgs} args - Arguments to filter SupplyOrderSupportFiles to count.
     * @example
     * // Count the number of SupplyOrderSupportFiles
     * const count = await prisma.supplyOrderSupportFile.count({
     *   where: {
     *     // ... the filter for the SupplyOrderSupportFiles we want to count
     *   }
     * })
    **/
    count<T extends SupplyOrderSupportFileCountArgs>(
      args?: Subset<T, SupplyOrderSupportFileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyOrderSupportFileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyOrderSupportFile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyOrderSupportFileAggregateArgs>(args: Subset<T, SupplyOrderSupportFileAggregateArgs>): Prisma.PrismaPromise<GetSupplyOrderSupportFileAggregateType<T>>

    /**
     * Group by SupplyOrderSupportFile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderSupportFileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyOrderSupportFileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyOrderSupportFileGroupByArgs['orderBy'] }
        : { orderBy?: SupplyOrderSupportFileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyOrderSupportFileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyOrderSupportFileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyOrderSupportFile model
   */
  readonly fields: SupplyOrderSupportFileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyOrderSupportFile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyOrderSupportFileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    file<T extends AssetsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetsDefaultArgs<ExtArgs>>): Prisma__AssetsClient<$Result.GetResult<Prisma.$AssetsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SupplyBatchOrder<T extends SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs> = {}>(args?: Subset<T, SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyOrderSupportFile model
   */
  interface SupplyOrderSupportFileFieldRefs {
    readonly id: FieldRef<"SupplyOrderSupportFile", 'String'>
    readonly assetsId: FieldRef<"SupplyOrderSupportFile", 'String'>
    readonly supplyBatchOrderId: FieldRef<"SupplyOrderSupportFile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupplyOrderSupportFile findUnique
   */
  export type SupplyOrderSupportFileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrderSupportFile to fetch.
     */
    where: SupplyOrderSupportFileWhereUniqueInput
  }

  /**
   * SupplyOrderSupportFile findUniqueOrThrow
   */
  export type SupplyOrderSupportFileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrderSupportFile to fetch.
     */
    where: SupplyOrderSupportFileWhereUniqueInput
  }

  /**
   * SupplyOrderSupportFile findFirst
   */
  export type SupplyOrderSupportFileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrderSupportFile to fetch.
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrderSupportFiles to fetch.
     */
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyOrderSupportFiles.
     */
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrderSupportFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrderSupportFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyOrderSupportFiles.
     */
    distinct?: SupplyOrderSupportFileScalarFieldEnum | SupplyOrderSupportFileScalarFieldEnum[]
  }

  /**
   * SupplyOrderSupportFile findFirstOrThrow
   */
  export type SupplyOrderSupportFileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrderSupportFile to fetch.
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrderSupportFiles to fetch.
     */
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyOrderSupportFiles.
     */
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrderSupportFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrderSupportFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyOrderSupportFiles.
     */
    distinct?: SupplyOrderSupportFileScalarFieldEnum | SupplyOrderSupportFileScalarFieldEnum[]
  }

  /**
   * SupplyOrderSupportFile findMany
   */
  export type SupplyOrderSupportFileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrderSupportFiles to fetch.
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrderSupportFiles to fetch.
     */
    orderBy?: SupplyOrderSupportFileOrderByWithRelationInput | SupplyOrderSupportFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyOrderSupportFiles.
     */
    cursor?: SupplyOrderSupportFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrderSupportFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrderSupportFiles.
     */
    skip?: number
    distinct?: SupplyOrderSupportFileScalarFieldEnum | SupplyOrderSupportFileScalarFieldEnum[]
  }

  /**
   * SupplyOrderSupportFile create
   */
  export type SupplyOrderSupportFileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyOrderSupportFile.
     */
    data: XOR<SupplyOrderSupportFileCreateInput, SupplyOrderSupportFileUncheckedCreateInput>
  }

  /**
   * SupplyOrderSupportFile createMany
   */
  export type SupplyOrderSupportFileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyOrderSupportFiles.
     */
    data: SupplyOrderSupportFileCreateManyInput | SupplyOrderSupportFileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyOrderSupportFile createManyAndReturn
   */
  export type SupplyOrderSupportFileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyOrderSupportFiles.
     */
    data: SupplyOrderSupportFileCreateManyInput | SupplyOrderSupportFileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyOrderSupportFile update
   */
  export type SupplyOrderSupportFileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyOrderSupportFile.
     */
    data: XOR<SupplyOrderSupportFileUpdateInput, SupplyOrderSupportFileUncheckedUpdateInput>
    /**
     * Choose, which SupplyOrderSupportFile to update.
     */
    where: SupplyOrderSupportFileWhereUniqueInput
  }

  /**
   * SupplyOrderSupportFile updateMany
   */
  export type SupplyOrderSupportFileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyOrderSupportFiles.
     */
    data: XOR<SupplyOrderSupportFileUpdateManyMutationInput, SupplyOrderSupportFileUncheckedUpdateManyInput>
    /**
     * Filter which SupplyOrderSupportFiles to update
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * Limit how many SupplyOrderSupportFiles to update.
     */
    limit?: number
  }

  /**
   * SupplyOrderSupportFile updateManyAndReturn
   */
  export type SupplyOrderSupportFileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * The data used to update SupplyOrderSupportFiles.
     */
    data: XOR<SupplyOrderSupportFileUpdateManyMutationInput, SupplyOrderSupportFileUncheckedUpdateManyInput>
    /**
     * Filter which SupplyOrderSupportFiles to update
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * Limit how many SupplyOrderSupportFiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyOrderSupportFile upsert
   */
  export type SupplyOrderSupportFileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyOrderSupportFile to update in case it exists.
     */
    where: SupplyOrderSupportFileWhereUniqueInput
    /**
     * In case the SupplyOrderSupportFile found by the `where` argument doesn't exist, create a new SupplyOrderSupportFile with this data.
     */
    create: XOR<SupplyOrderSupportFileCreateInput, SupplyOrderSupportFileUncheckedCreateInput>
    /**
     * In case the SupplyOrderSupportFile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyOrderSupportFileUpdateInput, SupplyOrderSupportFileUncheckedUpdateInput>
  }

  /**
   * SupplyOrderSupportFile delete
   */
  export type SupplyOrderSupportFileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
    /**
     * Filter which SupplyOrderSupportFile to delete.
     */
    where: SupplyOrderSupportFileWhereUniqueInput
  }

  /**
   * SupplyOrderSupportFile deleteMany
   */
  export type SupplyOrderSupportFileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyOrderSupportFiles to delete
     */
    where?: SupplyOrderSupportFileWhereInput
    /**
     * Limit how many SupplyOrderSupportFiles to delete.
     */
    limit?: number
  }

  /**
   * SupplyOrderSupportFile.SupplyBatchOrder
   */
  export type SupplyOrderSupportFile$SupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    where?: SupplyBatchOrderWhereInput
  }

  /**
   * SupplyOrderSupportFile without action
   */
  export type SupplyOrderSupportFileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrderSupportFile
     */
    select?: SupplyOrderSupportFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrderSupportFile
     */
    omit?: SupplyOrderSupportFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderSupportFileInclude<ExtArgs> | null
  }


  /**
   * Model SupplyOrder
   */

  export type AggregateSupplyOrder = {
    _count: SupplyOrderCountAggregateOutputType | null
    _avg: SupplyOrderAvgAggregateOutputType | null
    _sum: SupplyOrderSumAggregateOutputType | null
    _min: SupplyOrderMinAggregateOutputType | null
    _max: SupplyOrderMaxAggregateOutputType | null
  }

  export type SupplyOrderAvgAggregateOutputType = {
    quantity: number | null
  }

  export type SupplyOrderSumAggregateOutputType = {
    quantity: number | null
  }

  export type SupplyOrderMinAggregateOutputType = {
    id: string | null
    supplyBatchOrderId: string | null
    suppliesId: string | null
    quantity: number | null
    status: string | null
    suppliesQualityId: string | null
  }

  export type SupplyOrderMaxAggregateOutputType = {
    id: string | null
    supplyBatchOrderId: string | null
    suppliesId: string | null
    quantity: number | null
    status: string | null
    suppliesQualityId: string | null
  }

  export type SupplyOrderCountAggregateOutputType = {
    id: number
    supplyBatchOrderId: number
    suppliesId: number
    quantity: number
    status: number
    suppliesQualityId: number
    _all: number
  }


  export type SupplyOrderAvgAggregateInputType = {
    quantity?: true
  }

  export type SupplyOrderSumAggregateInputType = {
    quantity?: true
  }

  export type SupplyOrderMinAggregateInputType = {
    id?: true
    supplyBatchOrderId?: true
    suppliesId?: true
    quantity?: true
    status?: true
    suppliesQualityId?: true
  }

  export type SupplyOrderMaxAggregateInputType = {
    id?: true
    supplyBatchOrderId?: true
    suppliesId?: true
    quantity?: true
    status?: true
    suppliesQualityId?: true
  }

  export type SupplyOrderCountAggregateInputType = {
    id?: true
    supplyBatchOrderId?: true
    suppliesId?: true
    quantity?: true
    status?: true
    suppliesQualityId?: true
    _all?: true
  }

  export type SupplyOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyOrder to aggregate.
     */
    where?: SupplyOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrders to fetch.
     */
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyOrders
    **/
    _count?: true | SupplyOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplyOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplyOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyOrderMaxAggregateInputType
  }

  export type GetSupplyOrderAggregateType<T extends SupplyOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyOrder[P]>
      : GetScalarType<T[P], AggregateSupplyOrder[P]>
  }




  export type SupplyOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyOrderWhereInput
    orderBy?: SupplyOrderOrderByWithAggregationInput | SupplyOrderOrderByWithAggregationInput[]
    by: SupplyOrderScalarFieldEnum[] | SupplyOrderScalarFieldEnum
    having?: SupplyOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyOrderCountAggregateInputType | true
    _avg?: SupplyOrderAvgAggregateInputType
    _sum?: SupplyOrderSumAggregateInputType
    _min?: SupplyOrderMinAggregateInputType
    _max?: SupplyOrderMaxAggregateInputType
  }

  export type SupplyOrderGroupByOutputType = {
    id: string
    supplyBatchOrderId: string | null
    suppliesId: string
    quantity: number
    status: string
    suppliesQualityId: string
    _count: SupplyOrderCountAggregateOutputType | null
    _avg: SupplyOrderAvgAggregateOutputType | null
    _sum: SupplyOrderSumAggregateOutputType | null
    _min: SupplyOrderMinAggregateOutputType | null
    _max: SupplyOrderMaxAggregateOutputType | null
  }

  type GetSupplyOrderGroupByPayload<T extends SupplyOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyOrderGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyOrderGroupByOutputType[P]>
        }
      >
    >


  export type SupplyOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchOrderId?: boolean
    suppliesId?: boolean
    quantity?: boolean
    status?: boolean
    suppliesQualityId?: boolean
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrder"]>

  export type SupplyOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchOrderId?: boolean
    suppliesId?: boolean
    quantity?: boolean
    status?: boolean
    suppliesQualityId?: boolean
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrder"]>

  export type SupplyOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplyBatchOrderId?: boolean
    suppliesId?: boolean
    quantity?: boolean
    status?: boolean
    suppliesQualityId?: boolean
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyOrder"]>

  export type SupplyOrderSelectScalar = {
    id?: boolean
    supplyBatchOrderId?: boolean
    suppliesId?: boolean
    quantity?: boolean
    status?: boolean
    suppliesQualityId?: boolean
  }

  export type SupplyOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplyBatchOrderId" | "suppliesId" | "quantity" | "status" | "suppliesQualityId", ExtArgs["result"]["supplyOrder"]>
  export type SupplyOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }
  export type SupplyOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }
  export type SupplyOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SupplyBatchOrder?: boolean | SupplyOrder$SupplyBatchOrderArgs<ExtArgs>
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
    unit?: boolean | SuppliesQualityDefaultArgs<ExtArgs>
  }

  export type $SupplyOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyOrder"
    objects: {
      SupplyBatchOrder: Prisma.$SupplyBatchOrderPayload<ExtArgs> | null
      supply: Prisma.$SuppliesPayload<ExtArgs>
      unit: Prisma.$SuppliesQualityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supplyBatchOrderId: string | null
      suppliesId: string
      quantity: number
      status: string
      suppliesQualityId: string
    }, ExtArgs["result"]["supplyOrder"]>
    composites: {}
  }

  type SupplyOrderGetPayload<S extends boolean | null | undefined | SupplyOrderDefaultArgs> = $Result.GetResult<Prisma.$SupplyOrderPayload, S>

  type SupplyOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyOrderCountAggregateInputType | true
    }

  export interface SupplyOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyOrder'], meta: { name: 'SupplyOrder' } }
    /**
     * Find zero or one SupplyOrder that matches the filter.
     * @param {SupplyOrderFindUniqueArgs} args - Arguments to find a SupplyOrder
     * @example
     * // Get one SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyOrderFindUniqueArgs>(args: SelectSubset<T, SupplyOrderFindUniqueArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyOrderFindUniqueOrThrowArgs} args - Arguments to find a SupplyOrder
     * @example
     * // Get one SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderFindFirstArgs} args - Arguments to find a SupplyOrder
     * @example
     * // Get one SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyOrderFindFirstArgs>(args?: SelectSubset<T, SupplyOrderFindFirstArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderFindFirstOrThrowArgs} args - Arguments to find a SupplyOrder
     * @example
     * // Get one SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyOrders
     * const supplyOrders = await prisma.supplyOrder.findMany()
     * 
     * // Get first 10 SupplyOrders
     * const supplyOrders = await prisma.supplyOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyOrderWithIdOnly = await prisma.supplyOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyOrderFindManyArgs>(args?: SelectSubset<T, SupplyOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyOrder.
     * @param {SupplyOrderCreateArgs} args - Arguments to create a SupplyOrder.
     * @example
     * // Create one SupplyOrder
     * const SupplyOrder = await prisma.supplyOrder.create({
     *   data: {
     *     // ... data to create a SupplyOrder
     *   }
     * })
     * 
     */
    create<T extends SupplyOrderCreateArgs>(args: SelectSubset<T, SupplyOrderCreateArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyOrders.
     * @param {SupplyOrderCreateManyArgs} args - Arguments to create many SupplyOrders.
     * @example
     * // Create many SupplyOrders
     * const supplyOrder = await prisma.supplyOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyOrderCreateManyArgs>(args?: SelectSubset<T, SupplyOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyOrders and returns the data saved in the database.
     * @param {SupplyOrderCreateManyAndReturnArgs} args - Arguments to create many SupplyOrders.
     * @example
     * // Create many SupplyOrders
     * const supplyOrder = await prisma.supplyOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyOrders and only return the `id`
     * const supplyOrderWithIdOnly = await prisma.supplyOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyOrder.
     * @param {SupplyOrderDeleteArgs} args - Arguments to delete one SupplyOrder.
     * @example
     * // Delete one SupplyOrder
     * const SupplyOrder = await prisma.supplyOrder.delete({
     *   where: {
     *     // ... filter to delete one SupplyOrder
     *   }
     * })
     * 
     */
    delete<T extends SupplyOrderDeleteArgs>(args: SelectSubset<T, SupplyOrderDeleteArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyOrder.
     * @param {SupplyOrderUpdateArgs} args - Arguments to update one SupplyOrder.
     * @example
     * // Update one SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyOrderUpdateArgs>(args: SelectSubset<T, SupplyOrderUpdateArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyOrders.
     * @param {SupplyOrderDeleteManyArgs} args - Arguments to filter SupplyOrders to delete.
     * @example
     * // Delete a few SupplyOrders
     * const { count } = await prisma.supplyOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyOrderDeleteManyArgs>(args?: SelectSubset<T, SupplyOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyOrders
     * const supplyOrder = await prisma.supplyOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyOrderUpdateManyArgs>(args: SelectSubset<T, SupplyOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyOrders and returns the data updated in the database.
     * @param {SupplyOrderUpdateManyAndReturnArgs} args - Arguments to update many SupplyOrders.
     * @example
     * // Update many SupplyOrders
     * const supplyOrder = await prisma.supplyOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyOrders and only return the `id`
     * const supplyOrderWithIdOnly = await prisma.supplyOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyOrder.
     * @param {SupplyOrderUpsertArgs} args - Arguments to update or create a SupplyOrder.
     * @example
     * // Update or create a SupplyOrder
     * const supplyOrder = await prisma.supplyOrder.upsert({
     *   create: {
     *     // ... data to create a SupplyOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyOrder we want to update
     *   }
     * })
     */
    upsert<T extends SupplyOrderUpsertArgs>(args: SelectSubset<T, SupplyOrderUpsertArgs<ExtArgs>>): Prisma__SupplyOrderClient<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderCountArgs} args - Arguments to filter SupplyOrders to count.
     * @example
     * // Count the number of SupplyOrders
     * const count = await prisma.supplyOrder.count({
     *   where: {
     *     // ... the filter for the SupplyOrders we want to count
     *   }
     * })
    **/
    count<T extends SupplyOrderCountArgs>(
      args?: Subset<T, SupplyOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyOrderAggregateArgs>(args: Subset<T, SupplyOrderAggregateArgs>): Prisma.PrismaPromise<GetSupplyOrderAggregateType<T>>

    /**
     * Group by SupplyOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyOrderGroupByArgs['orderBy'] }
        : { orderBy?: SupplyOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyOrder model
   */
  readonly fields: SupplyOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SupplyBatchOrder<T extends SupplyOrder$SupplyBatchOrderArgs<ExtArgs> = {}>(args?: Subset<T, SupplyOrder$SupplyBatchOrderArgs<ExtArgs>>): Prisma__SupplyBatchOrderClient<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    supply<T extends SuppliesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDefaultArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unit<T extends SuppliesQualityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesQualityDefaultArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyOrder model
   */
  interface SupplyOrderFieldRefs {
    readonly id: FieldRef<"SupplyOrder", 'String'>
    readonly supplyBatchOrderId: FieldRef<"SupplyOrder", 'String'>
    readonly suppliesId: FieldRef<"SupplyOrder", 'String'>
    readonly quantity: FieldRef<"SupplyOrder", 'Int'>
    readonly status: FieldRef<"SupplyOrder", 'String'>
    readonly suppliesQualityId: FieldRef<"SupplyOrder", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupplyOrder findUnique
   */
  export type SupplyOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrder to fetch.
     */
    where: SupplyOrderWhereUniqueInput
  }

  /**
   * SupplyOrder findUniqueOrThrow
   */
  export type SupplyOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrder to fetch.
     */
    where: SupplyOrderWhereUniqueInput
  }

  /**
   * SupplyOrder findFirst
   */
  export type SupplyOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrder to fetch.
     */
    where?: SupplyOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrders to fetch.
     */
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyOrders.
     */
    cursor?: SupplyOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyOrders.
     */
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * SupplyOrder findFirstOrThrow
   */
  export type SupplyOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrder to fetch.
     */
    where?: SupplyOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrders to fetch.
     */
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyOrders.
     */
    cursor?: SupplyOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyOrders.
     */
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * SupplyOrder findMany
   */
  export type SupplyOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter, which SupplyOrders to fetch.
     */
    where?: SupplyOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyOrders to fetch.
     */
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyOrders.
     */
    cursor?: SupplyOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyOrders.
     */
    skip?: number
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * SupplyOrder create
   */
  export type SupplyOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyOrder.
     */
    data: XOR<SupplyOrderCreateInput, SupplyOrderUncheckedCreateInput>
  }

  /**
   * SupplyOrder createMany
   */
  export type SupplyOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyOrders.
     */
    data: SupplyOrderCreateManyInput | SupplyOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyOrder createManyAndReturn
   */
  export type SupplyOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyOrders.
     */
    data: SupplyOrderCreateManyInput | SupplyOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyOrder update
   */
  export type SupplyOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyOrder.
     */
    data: XOR<SupplyOrderUpdateInput, SupplyOrderUncheckedUpdateInput>
    /**
     * Choose, which SupplyOrder to update.
     */
    where: SupplyOrderWhereUniqueInput
  }

  /**
   * SupplyOrder updateMany
   */
  export type SupplyOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyOrders.
     */
    data: XOR<SupplyOrderUpdateManyMutationInput, SupplyOrderUncheckedUpdateManyInput>
    /**
     * Filter which SupplyOrders to update
     */
    where?: SupplyOrderWhereInput
    /**
     * Limit how many SupplyOrders to update.
     */
    limit?: number
  }

  /**
   * SupplyOrder updateManyAndReturn
   */
  export type SupplyOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * The data used to update SupplyOrders.
     */
    data: XOR<SupplyOrderUpdateManyMutationInput, SupplyOrderUncheckedUpdateManyInput>
    /**
     * Filter which SupplyOrders to update
     */
    where?: SupplyOrderWhereInput
    /**
     * Limit how many SupplyOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyOrder upsert
   */
  export type SupplyOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyOrder to update in case it exists.
     */
    where: SupplyOrderWhereUniqueInput
    /**
     * In case the SupplyOrder found by the `where` argument doesn't exist, create a new SupplyOrder with this data.
     */
    create: XOR<SupplyOrderCreateInput, SupplyOrderUncheckedCreateInput>
    /**
     * In case the SupplyOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyOrderUpdateInput, SupplyOrderUncheckedUpdateInput>
  }

  /**
   * SupplyOrder delete
   */
  export type SupplyOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    /**
     * Filter which SupplyOrder to delete.
     */
    where: SupplyOrderWhereUniqueInput
  }

  /**
   * SupplyOrder deleteMany
   */
  export type SupplyOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyOrders to delete
     */
    where?: SupplyOrderWhereInput
    /**
     * Limit how many SupplyOrders to delete.
     */
    limit?: number
  }

  /**
   * SupplyOrder.SupplyBatchOrder
   */
  export type SupplyOrder$SupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    where?: SupplyBatchOrderWhereInput
  }

  /**
   * SupplyOrder without action
   */
  export type SupplyOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
  }


  /**
   * Model SuppliesDataSet
   */

  export type AggregateSuppliesDataSet = {
    _count: SuppliesDataSetCountAggregateOutputType | null
    _min: SuppliesDataSetMinAggregateOutputType | null
    _max: SuppliesDataSetMaxAggregateOutputType | null
  }

  export type SuppliesDataSetMinAggregateOutputType = {
    id: string | null
    title: string | null
    timestamp: Date | null
    lineId: string | null
    inventoryBoxId: string | null
  }

  export type SuppliesDataSetMaxAggregateOutputType = {
    id: string | null
    title: string | null
    timestamp: Date | null
    lineId: string | null
    inventoryBoxId: string | null
  }

  export type SuppliesDataSetCountAggregateOutputType = {
    id: number
    title: number
    timestamp: number
    lineId: number
    inventoryBoxId: number
    _all: number
  }


  export type SuppliesDataSetMinAggregateInputType = {
    id?: true
    title?: true
    timestamp?: true
    lineId?: true
    inventoryBoxId?: true
  }

  export type SuppliesDataSetMaxAggregateInputType = {
    id?: true
    title?: true
    timestamp?: true
    lineId?: true
    inventoryBoxId?: true
  }

  export type SuppliesDataSetCountAggregateInputType = {
    id?: true
    title?: true
    timestamp?: true
    lineId?: true
    inventoryBoxId?: true
    _all?: true
  }

  export type SuppliesDataSetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesDataSet to aggregate.
     */
    where?: SuppliesDataSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesDataSets to fetch.
     */
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SuppliesDataSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesDataSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesDataSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SuppliesDataSets
    **/
    _count?: true | SuppliesDataSetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuppliesDataSetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuppliesDataSetMaxAggregateInputType
  }

  export type GetSuppliesDataSetAggregateType<T extends SuppliesDataSetAggregateArgs> = {
        [P in keyof T & keyof AggregateSuppliesDataSet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuppliesDataSet[P]>
      : GetScalarType<T[P], AggregateSuppliesDataSet[P]>
  }




  export type SuppliesDataSetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesDataSetWhereInput
    orderBy?: SuppliesDataSetOrderByWithAggregationInput | SuppliesDataSetOrderByWithAggregationInput[]
    by: SuppliesDataSetScalarFieldEnum[] | SuppliesDataSetScalarFieldEnum
    having?: SuppliesDataSetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuppliesDataSetCountAggregateInputType | true
    _min?: SuppliesDataSetMinAggregateInputType
    _max?: SuppliesDataSetMaxAggregateInputType
  }

  export type SuppliesDataSetGroupByOutputType = {
    id: string
    title: string
    timestamp: Date
    lineId: string
    inventoryBoxId: string
    _count: SuppliesDataSetCountAggregateOutputType | null
    _min: SuppliesDataSetMinAggregateOutputType | null
    _max: SuppliesDataSetMaxAggregateOutputType | null
  }

  type GetSuppliesDataSetGroupByPayload<T extends SuppliesDataSetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuppliesDataSetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuppliesDataSetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuppliesDataSetGroupByOutputType[P]>
            : GetScalarType<T[P], SuppliesDataSetGroupByOutputType[P]>
        }
      >
    >


  export type SuppliesDataSetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    timestamp?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    unit?: boolean | SuppliesDataSet$unitArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    list?: boolean | SuppliesDataSet$listArgs<ExtArgs>
    supplies?: boolean | SuppliesDataSet$suppliesArgs<ExtArgs>
    _count?: boolean | SuppliesDataSetCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesDataSet"]>

  export type SuppliesDataSetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    timestamp?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesDataSet"]>

  export type SuppliesDataSetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    timestamp?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesDataSet"]>

  export type SuppliesDataSetSelectScalar = {
    id?: boolean
    title?: boolean
    timestamp?: boolean
    lineId?: boolean
    inventoryBoxId?: boolean
  }

  export type SuppliesDataSetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "timestamp" | "lineId" | "inventoryBoxId", ExtArgs["result"]["suppliesDataSet"]>
  export type SuppliesDataSetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    unit?: boolean | SuppliesDataSet$unitArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
    list?: boolean | SuppliesDataSet$listArgs<ExtArgs>
    supplies?: boolean | SuppliesDataSet$suppliesArgs<ExtArgs>
    _count?: boolean | SuppliesDataSetCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SuppliesDataSetIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
  }
  export type SuppliesDataSetIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | LineDefaultArgs<ExtArgs>
    container?: boolean | InventoryBoxDefaultArgs<ExtArgs>
  }

  export type $SuppliesDataSetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SuppliesDataSet"
    objects: {
      unit: Prisma.$SuppliesQualityPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs>
      container: Prisma.$InventoryBoxPayload<ExtArgs>
      list: Prisma.$SupplyBatchPayload<ExtArgs>[]
      supplies: Prisma.$SuppliesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      timestamp: Date
      lineId: string
      inventoryBoxId: string
    }, ExtArgs["result"]["suppliesDataSet"]>
    composites: {}
  }

  type SuppliesDataSetGetPayload<S extends boolean | null | undefined | SuppliesDataSetDefaultArgs> = $Result.GetResult<Prisma.$SuppliesDataSetPayload, S>

  type SuppliesDataSetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SuppliesDataSetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuppliesDataSetCountAggregateInputType | true
    }

  export interface SuppliesDataSetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SuppliesDataSet'], meta: { name: 'SuppliesDataSet' } }
    /**
     * Find zero or one SuppliesDataSet that matches the filter.
     * @param {SuppliesDataSetFindUniqueArgs} args - Arguments to find a SuppliesDataSet
     * @example
     * // Get one SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SuppliesDataSetFindUniqueArgs>(args: SelectSubset<T, SuppliesDataSetFindUniqueArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SuppliesDataSet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SuppliesDataSetFindUniqueOrThrowArgs} args - Arguments to find a SuppliesDataSet
     * @example
     * // Get one SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SuppliesDataSetFindUniqueOrThrowArgs>(args: SelectSubset<T, SuppliesDataSetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesDataSet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetFindFirstArgs} args - Arguments to find a SuppliesDataSet
     * @example
     * // Get one SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SuppliesDataSetFindFirstArgs>(args?: SelectSubset<T, SuppliesDataSetFindFirstArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesDataSet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetFindFirstOrThrowArgs} args - Arguments to find a SuppliesDataSet
     * @example
     * // Get one SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SuppliesDataSetFindFirstOrThrowArgs>(args?: SelectSubset<T, SuppliesDataSetFindFirstOrThrowArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SuppliesDataSets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SuppliesDataSets
     * const suppliesDataSets = await prisma.suppliesDataSet.findMany()
     * 
     * // Get first 10 SuppliesDataSets
     * const suppliesDataSets = await prisma.suppliesDataSet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const suppliesDataSetWithIdOnly = await prisma.suppliesDataSet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SuppliesDataSetFindManyArgs>(args?: SelectSubset<T, SuppliesDataSetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SuppliesDataSet.
     * @param {SuppliesDataSetCreateArgs} args - Arguments to create a SuppliesDataSet.
     * @example
     * // Create one SuppliesDataSet
     * const SuppliesDataSet = await prisma.suppliesDataSet.create({
     *   data: {
     *     // ... data to create a SuppliesDataSet
     *   }
     * })
     * 
     */
    create<T extends SuppliesDataSetCreateArgs>(args: SelectSubset<T, SuppliesDataSetCreateArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SuppliesDataSets.
     * @param {SuppliesDataSetCreateManyArgs} args - Arguments to create many SuppliesDataSets.
     * @example
     * // Create many SuppliesDataSets
     * const suppliesDataSet = await prisma.suppliesDataSet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SuppliesDataSetCreateManyArgs>(args?: SelectSubset<T, SuppliesDataSetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SuppliesDataSets and returns the data saved in the database.
     * @param {SuppliesDataSetCreateManyAndReturnArgs} args - Arguments to create many SuppliesDataSets.
     * @example
     * // Create many SuppliesDataSets
     * const suppliesDataSet = await prisma.suppliesDataSet.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SuppliesDataSets and only return the `id`
     * const suppliesDataSetWithIdOnly = await prisma.suppliesDataSet.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SuppliesDataSetCreateManyAndReturnArgs>(args?: SelectSubset<T, SuppliesDataSetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SuppliesDataSet.
     * @param {SuppliesDataSetDeleteArgs} args - Arguments to delete one SuppliesDataSet.
     * @example
     * // Delete one SuppliesDataSet
     * const SuppliesDataSet = await prisma.suppliesDataSet.delete({
     *   where: {
     *     // ... filter to delete one SuppliesDataSet
     *   }
     * })
     * 
     */
    delete<T extends SuppliesDataSetDeleteArgs>(args: SelectSubset<T, SuppliesDataSetDeleteArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SuppliesDataSet.
     * @param {SuppliesDataSetUpdateArgs} args - Arguments to update one SuppliesDataSet.
     * @example
     * // Update one SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SuppliesDataSetUpdateArgs>(args: SelectSubset<T, SuppliesDataSetUpdateArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SuppliesDataSets.
     * @param {SuppliesDataSetDeleteManyArgs} args - Arguments to filter SuppliesDataSets to delete.
     * @example
     * // Delete a few SuppliesDataSets
     * const { count } = await prisma.suppliesDataSet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SuppliesDataSetDeleteManyArgs>(args?: SelectSubset<T, SuppliesDataSetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesDataSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SuppliesDataSets
     * const suppliesDataSet = await prisma.suppliesDataSet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SuppliesDataSetUpdateManyArgs>(args: SelectSubset<T, SuppliesDataSetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesDataSets and returns the data updated in the database.
     * @param {SuppliesDataSetUpdateManyAndReturnArgs} args - Arguments to update many SuppliesDataSets.
     * @example
     * // Update many SuppliesDataSets
     * const suppliesDataSet = await prisma.suppliesDataSet.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SuppliesDataSets and only return the `id`
     * const suppliesDataSetWithIdOnly = await prisma.suppliesDataSet.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SuppliesDataSetUpdateManyAndReturnArgs>(args: SelectSubset<T, SuppliesDataSetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SuppliesDataSet.
     * @param {SuppliesDataSetUpsertArgs} args - Arguments to update or create a SuppliesDataSet.
     * @example
     * // Update or create a SuppliesDataSet
     * const suppliesDataSet = await prisma.suppliesDataSet.upsert({
     *   create: {
     *     // ... data to create a SuppliesDataSet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SuppliesDataSet we want to update
     *   }
     * })
     */
    upsert<T extends SuppliesDataSetUpsertArgs>(args: SelectSubset<T, SuppliesDataSetUpsertArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SuppliesDataSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetCountArgs} args - Arguments to filter SuppliesDataSets to count.
     * @example
     * // Count the number of SuppliesDataSets
     * const count = await prisma.suppliesDataSet.count({
     *   where: {
     *     // ... the filter for the SuppliesDataSets we want to count
     *   }
     * })
    **/
    count<T extends SuppliesDataSetCountArgs>(
      args?: Subset<T, SuppliesDataSetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuppliesDataSetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SuppliesDataSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuppliesDataSetAggregateArgs>(args: Subset<T, SuppliesDataSetAggregateArgs>): Prisma.PrismaPromise<GetSuppliesDataSetAggregateType<T>>

    /**
     * Group by SuppliesDataSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesDataSetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SuppliesDataSetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SuppliesDataSetGroupByArgs['orderBy'] }
        : { orderBy?: SuppliesDataSetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SuppliesDataSetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuppliesDataSetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SuppliesDataSet model
   */
  readonly fields: SuppliesDataSetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SuppliesDataSet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SuppliesDataSetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    unit<T extends SuppliesDataSet$unitArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDataSet$unitArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    container<T extends InventoryBoxDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventoryBoxDefaultArgs<ExtArgs>>): Prisma__InventoryBoxClient<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    list<T extends SuppliesDataSet$listArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDataSet$listArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    supplies<T extends SuppliesDataSet$suppliesArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDataSet$suppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SuppliesDataSet model
   */
  interface SuppliesDataSetFieldRefs {
    readonly id: FieldRef<"SuppliesDataSet", 'String'>
    readonly title: FieldRef<"SuppliesDataSet", 'String'>
    readonly timestamp: FieldRef<"SuppliesDataSet", 'DateTime'>
    readonly lineId: FieldRef<"SuppliesDataSet", 'String'>
    readonly inventoryBoxId: FieldRef<"SuppliesDataSet", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SuppliesDataSet findUnique
   */
  export type SuppliesDataSetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesDataSet to fetch.
     */
    where: SuppliesDataSetWhereUniqueInput
  }

  /**
   * SuppliesDataSet findUniqueOrThrow
   */
  export type SuppliesDataSetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesDataSet to fetch.
     */
    where: SuppliesDataSetWhereUniqueInput
  }

  /**
   * SuppliesDataSet findFirst
   */
  export type SuppliesDataSetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesDataSet to fetch.
     */
    where?: SuppliesDataSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesDataSets to fetch.
     */
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesDataSets.
     */
    cursor?: SuppliesDataSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesDataSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesDataSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesDataSets.
     */
    distinct?: SuppliesDataSetScalarFieldEnum | SuppliesDataSetScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet findFirstOrThrow
   */
  export type SuppliesDataSetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesDataSet to fetch.
     */
    where?: SuppliesDataSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesDataSets to fetch.
     */
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesDataSets.
     */
    cursor?: SuppliesDataSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesDataSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesDataSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesDataSets.
     */
    distinct?: SuppliesDataSetScalarFieldEnum | SuppliesDataSetScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet findMany
   */
  export type SuppliesDataSetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesDataSets to fetch.
     */
    where?: SuppliesDataSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesDataSets to fetch.
     */
    orderBy?: SuppliesDataSetOrderByWithRelationInput | SuppliesDataSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SuppliesDataSets.
     */
    cursor?: SuppliesDataSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesDataSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesDataSets.
     */
    skip?: number
    distinct?: SuppliesDataSetScalarFieldEnum | SuppliesDataSetScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet create
   */
  export type SuppliesDataSetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * The data needed to create a SuppliesDataSet.
     */
    data: XOR<SuppliesDataSetCreateInput, SuppliesDataSetUncheckedCreateInput>
  }

  /**
   * SuppliesDataSet createMany
   */
  export type SuppliesDataSetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SuppliesDataSets.
     */
    data: SuppliesDataSetCreateManyInput | SuppliesDataSetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SuppliesDataSet createManyAndReturn
   */
  export type SuppliesDataSetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * The data used to create many SuppliesDataSets.
     */
    data: SuppliesDataSetCreateManyInput | SuppliesDataSetCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesDataSet update
   */
  export type SuppliesDataSetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * The data needed to update a SuppliesDataSet.
     */
    data: XOR<SuppliesDataSetUpdateInput, SuppliesDataSetUncheckedUpdateInput>
    /**
     * Choose, which SuppliesDataSet to update.
     */
    where: SuppliesDataSetWhereUniqueInput
  }

  /**
   * SuppliesDataSet updateMany
   */
  export type SuppliesDataSetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SuppliesDataSets.
     */
    data: XOR<SuppliesDataSetUpdateManyMutationInput, SuppliesDataSetUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesDataSets to update
     */
    where?: SuppliesDataSetWhereInput
    /**
     * Limit how many SuppliesDataSets to update.
     */
    limit?: number
  }

  /**
   * SuppliesDataSet updateManyAndReturn
   */
  export type SuppliesDataSetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * The data used to update SuppliesDataSets.
     */
    data: XOR<SuppliesDataSetUpdateManyMutationInput, SuppliesDataSetUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesDataSets to update
     */
    where?: SuppliesDataSetWhereInput
    /**
     * Limit how many SuppliesDataSets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesDataSet upsert
   */
  export type SuppliesDataSetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * The filter to search for the SuppliesDataSet to update in case it exists.
     */
    where: SuppliesDataSetWhereUniqueInput
    /**
     * In case the SuppliesDataSet found by the `where` argument doesn't exist, create a new SuppliesDataSet with this data.
     */
    create: XOR<SuppliesDataSetCreateInput, SuppliesDataSetUncheckedCreateInput>
    /**
     * In case the SuppliesDataSet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SuppliesDataSetUpdateInput, SuppliesDataSetUncheckedUpdateInput>
  }

  /**
   * SuppliesDataSet delete
   */
  export type SuppliesDataSetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    /**
     * Filter which SuppliesDataSet to delete.
     */
    where: SuppliesDataSetWhereUniqueInput
  }

  /**
   * SuppliesDataSet deleteMany
   */
  export type SuppliesDataSetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesDataSets to delete
     */
    where?: SuppliesDataSetWhereInput
    /**
     * Limit how many SuppliesDataSets to delete.
     */
    limit?: number
  }

  /**
   * SuppliesDataSet.unit
   */
  export type SuppliesDataSet$unitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    where?: SuppliesQualityWhereInput
    orderBy?: SuppliesQualityOrderByWithRelationInput | SuppliesQualityOrderByWithRelationInput[]
    cursor?: SuppliesQualityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesQualityScalarFieldEnum | SuppliesQualityScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet.list
   */
  export type SuppliesDataSet$listArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatch
     */
    select?: SupplyBatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatch
     */
    omit?: SupplyBatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchInclude<ExtArgs> | null
    where?: SupplyBatchWhereInput
    orderBy?: SupplyBatchOrderByWithRelationInput | SupplyBatchOrderByWithRelationInput[]
    cursor?: SupplyBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchScalarFieldEnum | SupplyBatchScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet.supplies
   */
  export type SuppliesDataSet$suppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    cursor?: SuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * SuppliesDataSet without action
   */
  export type SuppliesDataSetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
  }


  /**
   * Model SuppliesQuality
   */

  export type AggregateSuppliesQuality = {
    _count: SuppliesQualityCountAggregateOutputType | null
    _avg: SuppliesQualityAvgAggregateOutputType | null
    _sum: SuppliesQualitySumAggregateOutputType | null
    _min: SuppliesQualityMinAggregateOutputType | null
    _max: SuppliesQualityMaxAggregateOutputType | null
  }

  export type SuppliesQualityAvgAggregateOutputType = {
    perQuality: number | null
  }

  export type SuppliesQualitySumAggregateOutputType = {
    perQuality: number | null
  }

  export type SuppliesQualityMinAggregateOutputType = {
    id: string | null
    quality: string | null
    perQuality: number | null
    suppliesDataSetId: string | null
  }

  export type SuppliesQualityMaxAggregateOutputType = {
    id: string | null
    quality: string | null
    perQuality: number | null
    suppliesDataSetId: string | null
  }

  export type SuppliesQualityCountAggregateOutputType = {
    id: number
    quality: number
    perQuality: number
    suppliesDataSetId: number
    _all: number
  }


  export type SuppliesQualityAvgAggregateInputType = {
    perQuality?: true
  }

  export type SuppliesQualitySumAggregateInputType = {
    perQuality?: true
  }

  export type SuppliesQualityMinAggregateInputType = {
    id?: true
    quality?: true
    perQuality?: true
    suppliesDataSetId?: true
  }

  export type SuppliesQualityMaxAggregateInputType = {
    id?: true
    quality?: true
    perQuality?: true
    suppliesDataSetId?: true
  }

  export type SuppliesQualityCountAggregateInputType = {
    id?: true
    quality?: true
    perQuality?: true
    suppliesDataSetId?: true
    _all?: true
  }

  export type SuppliesQualityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesQuality to aggregate.
     */
    where?: SuppliesQualityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesQualities to fetch.
     */
    orderBy?: SuppliesQualityOrderByWithRelationInput | SuppliesQualityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SuppliesQualityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesQualities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesQualities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SuppliesQualities
    **/
    _count?: true | SuppliesQualityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SuppliesQualityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SuppliesQualitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuppliesQualityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuppliesQualityMaxAggregateInputType
  }

  export type GetSuppliesQualityAggregateType<T extends SuppliesQualityAggregateArgs> = {
        [P in keyof T & keyof AggregateSuppliesQuality]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuppliesQuality[P]>
      : GetScalarType<T[P], AggregateSuppliesQuality[P]>
  }




  export type SuppliesQualityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesQualityWhereInput
    orderBy?: SuppliesQualityOrderByWithAggregationInput | SuppliesQualityOrderByWithAggregationInput[]
    by: SuppliesQualityScalarFieldEnum[] | SuppliesQualityScalarFieldEnum
    having?: SuppliesQualityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuppliesQualityCountAggregateInputType | true
    _avg?: SuppliesQualityAvgAggregateInputType
    _sum?: SuppliesQualitySumAggregateInputType
    _min?: SuppliesQualityMinAggregateInputType
    _max?: SuppliesQualityMaxAggregateInputType
  }

  export type SuppliesQualityGroupByOutputType = {
    id: string
    quality: string
    perQuality: number
    suppliesDataSetId: string | null
    _count: SuppliesQualityCountAggregateOutputType | null
    _avg: SuppliesQualityAvgAggregateOutputType | null
    _sum: SuppliesQualitySumAggregateOutputType | null
    _min: SuppliesQualityMinAggregateOutputType | null
    _max: SuppliesQualityMaxAggregateOutputType | null
  }

  type GetSuppliesQualityGroupByPayload<T extends SuppliesQualityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuppliesQualityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuppliesQualityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuppliesQualityGroupByOutputType[P]>
            : GetScalarType<T[P], SuppliesQualityGroupByOutputType[P]>
        }
      >
    >


  export type SuppliesQualitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quality?: boolean
    perQuality?: boolean
    suppliesDataSetId?: boolean
    supplies?: boolean | SuppliesQuality$suppliesArgs<ExtArgs>
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
    SupplyOrder?: boolean | SuppliesQuality$SupplyOrderArgs<ExtArgs>
    _count?: boolean | SuppliesQualityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesQuality"]>

  export type SuppliesQualitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quality?: boolean
    perQuality?: boolean
    suppliesDataSetId?: boolean
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesQuality"]>

  export type SuppliesQualitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quality?: boolean
    perQuality?: boolean
    suppliesDataSetId?: boolean
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesQuality"]>

  export type SuppliesQualitySelectScalar = {
    id?: boolean
    quality?: boolean
    perQuality?: boolean
    suppliesDataSetId?: boolean
  }

  export type SuppliesQualityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "quality" | "perQuality" | "suppliesDataSetId", ExtArgs["result"]["suppliesQuality"]>
  export type SuppliesQualityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplies?: boolean | SuppliesQuality$suppliesArgs<ExtArgs>
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
    SupplyOrder?: boolean | SuppliesQuality$SupplyOrderArgs<ExtArgs>
    _count?: boolean | SuppliesQualityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SuppliesQualityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
  }
  export type SuppliesQualityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SuppliesDataSet?: boolean | SuppliesQuality$SuppliesDataSetArgs<ExtArgs>
  }

  export type $SuppliesQualityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SuppliesQuality"
    objects: {
      supplies: Prisma.$SuppliesPayload<ExtArgs>[]
      SuppliesDataSet: Prisma.$SuppliesDataSetPayload<ExtArgs> | null
      SupplyOrder: Prisma.$SupplyOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      quality: string
      perQuality: number
      suppliesDataSetId: string | null
    }, ExtArgs["result"]["suppliesQuality"]>
    composites: {}
  }

  type SuppliesQualityGetPayload<S extends boolean | null | undefined | SuppliesQualityDefaultArgs> = $Result.GetResult<Prisma.$SuppliesQualityPayload, S>

  type SuppliesQualityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SuppliesQualityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuppliesQualityCountAggregateInputType | true
    }

  export interface SuppliesQualityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SuppliesQuality'], meta: { name: 'SuppliesQuality' } }
    /**
     * Find zero or one SuppliesQuality that matches the filter.
     * @param {SuppliesQualityFindUniqueArgs} args - Arguments to find a SuppliesQuality
     * @example
     * // Get one SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SuppliesQualityFindUniqueArgs>(args: SelectSubset<T, SuppliesQualityFindUniqueArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SuppliesQuality that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SuppliesQualityFindUniqueOrThrowArgs} args - Arguments to find a SuppliesQuality
     * @example
     * // Get one SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SuppliesQualityFindUniqueOrThrowArgs>(args: SelectSubset<T, SuppliesQualityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesQuality that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityFindFirstArgs} args - Arguments to find a SuppliesQuality
     * @example
     * // Get one SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SuppliesQualityFindFirstArgs>(args?: SelectSubset<T, SuppliesQualityFindFirstArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesQuality that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityFindFirstOrThrowArgs} args - Arguments to find a SuppliesQuality
     * @example
     * // Get one SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SuppliesQualityFindFirstOrThrowArgs>(args?: SelectSubset<T, SuppliesQualityFindFirstOrThrowArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SuppliesQualities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SuppliesQualities
     * const suppliesQualities = await prisma.suppliesQuality.findMany()
     * 
     * // Get first 10 SuppliesQualities
     * const suppliesQualities = await prisma.suppliesQuality.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const suppliesQualityWithIdOnly = await prisma.suppliesQuality.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SuppliesQualityFindManyArgs>(args?: SelectSubset<T, SuppliesQualityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SuppliesQuality.
     * @param {SuppliesQualityCreateArgs} args - Arguments to create a SuppliesQuality.
     * @example
     * // Create one SuppliesQuality
     * const SuppliesQuality = await prisma.suppliesQuality.create({
     *   data: {
     *     // ... data to create a SuppliesQuality
     *   }
     * })
     * 
     */
    create<T extends SuppliesQualityCreateArgs>(args: SelectSubset<T, SuppliesQualityCreateArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SuppliesQualities.
     * @param {SuppliesQualityCreateManyArgs} args - Arguments to create many SuppliesQualities.
     * @example
     * // Create many SuppliesQualities
     * const suppliesQuality = await prisma.suppliesQuality.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SuppliesQualityCreateManyArgs>(args?: SelectSubset<T, SuppliesQualityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SuppliesQualities and returns the data saved in the database.
     * @param {SuppliesQualityCreateManyAndReturnArgs} args - Arguments to create many SuppliesQualities.
     * @example
     * // Create many SuppliesQualities
     * const suppliesQuality = await prisma.suppliesQuality.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SuppliesQualities and only return the `id`
     * const suppliesQualityWithIdOnly = await prisma.suppliesQuality.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SuppliesQualityCreateManyAndReturnArgs>(args?: SelectSubset<T, SuppliesQualityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SuppliesQuality.
     * @param {SuppliesQualityDeleteArgs} args - Arguments to delete one SuppliesQuality.
     * @example
     * // Delete one SuppliesQuality
     * const SuppliesQuality = await prisma.suppliesQuality.delete({
     *   where: {
     *     // ... filter to delete one SuppliesQuality
     *   }
     * })
     * 
     */
    delete<T extends SuppliesQualityDeleteArgs>(args: SelectSubset<T, SuppliesQualityDeleteArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SuppliesQuality.
     * @param {SuppliesQualityUpdateArgs} args - Arguments to update one SuppliesQuality.
     * @example
     * // Update one SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SuppliesQualityUpdateArgs>(args: SelectSubset<T, SuppliesQualityUpdateArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SuppliesQualities.
     * @param {SuppliesQualityDeleteManyArgs} args - Arguments to filter SuppliesQualities to delete.
     * @example
     * // Delete a few SuppliesQualities
     * const { count } = await prisma.suppliesQuality.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SuppliesQualityDeleteManyArgs>(args?: SelectSubset<T, SuppliesQualityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesQualities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SuppliesQualities
     * const suppliesQuality = await prisma.suppliesQuality.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SuppliesQualityUpdateManyArgs>(args: SelectSubset<T, SuppliesQualityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesQualities and returns the data updated in the database.
     * @param {SuppliesQualityUpdateManyAndReturnArgs} args - Arguments to update many SuppliesQualities.
     * @example
     * // Update many SuppliesQualities
     * const suppliesQuality = await prisma.suppliesQuality.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SuppliesQualities and only return the `id`
     * const suppliesQualityWithIdOnly = await prisma.suppliesQuality.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SuppliesQualityUpdateManyAndReturnArgs>(args: SelectSubset<T, SuppliesQualityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SuppliesQuality.
     * @param {SuppliesQualityUpsertArgs} args - Arguments to update or create a SuppliesQuality.
     * @example
     * // Update or create a SuppliesQuality
     * const suppliesQuality = await prisma.suppliesQuality.upsert({
     *   create: {
     *     // ... data to create a SuppliesQuality
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SuppliesQuality we want to update
     *   }
     * })
     */
    upsert<T extends SuppliesQualityUpsertArgs>(args: SelectSubset<T, SuppliesQualityUpsertArgs<ExtArgs>>): Prisma__SuppliesQualityClient<$Result.GetResult<Prisma.$SuppliesQualityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SuppliesQualities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityCountArgs} args - Arguments to filter SuppliesQualities to count.
     * @example
     * // Count the number of SuppliesQualities
     * const count = await prisma.suppliesQuality.count({
     *   where: {
     *     // ... the filter for the SuppliesQualities we want to count
     *   }
     * })
    **/
    count<T extends SuppliesQualityCountArgs>(
      args?: Subset<T, SuppliesQualityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuppliesQualityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SuppliesQuality.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuppliesQualityAggregateArgs>(args: Subset<T, SuppliesQualityAggregateArgs>): Prisma.PrismaPromise<GetSuppliesQualityAggregateType<T>>

    /**
     * Group by SuppliesQuality.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesQualityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SuppliesQualityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SuppliesQualityGroupByArgs['orderBy'] }
        : { orderBy?: SuppliesQualityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SuppliesQualityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuppliesQualityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SuppliesQuality model
   */
  readonly fields: SuppliesQualityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SuppliesQuality.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SuppliesQualityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplies<T extends SuppliesQuality$suppliesArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesQuality$suppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesDataSet<T extends SuppliesQuality$SuppliesDataSetArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesQuality$SuppliesDataSetArgs<ExtArgs>>): Prisma__SuppliesDataSetClient<$Result.GetResult<Prisma.$SuppliesDataSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SupplyOrder<T extends SuppliesQuality$SupplyOrderArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesQuality$SupplyOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SuppliesQuality model
   */
  interface SuppliesQualityFieldRefs {
    readonly id: FieldRef<"SuppliesQuality", 'String'>
    readonly quality: FieldRef<"SuppliesQuality", 'String'>
    readonly perQuality: FieldRef<"SuppliesQuality", 'Int'>
    readonly suppliesDataSetId: FieldRef<"SuppliesQuality", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SuppliesQuality findUnique
   */
  export type SuppliesQualityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesQuality to fetch.
     */
    where: SuppliesQualityWhereUniqueInput
  }

  /**
   * SuppliesQuality findUniqueOrThrow
   */
  export type SuppliesQualityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesQuality to fetch.
     */
    where: SuppliesQualityWhereUniqueInput
  }

  /**
   * SuppliesQuality findFirst
   */
  export type SuppliesQualityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesQuality to fetch.
     */
    where?: SuppliesQualityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesQualities to fetch.
     */
    orderBy?: SuppliesQualityOrderByWithRelationInput | SuppliesQualityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesQualities.
     */
    cursor?: SuppliesQualityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesQualities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesQualities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesQualities.
     */
    distinct?: SuppliesQualityScalarFieldEnum | SuppliesQualityScalarFieldEnum[]
  }

  /**
   * SuppliesQuality findFirstOrThrow
   */
  export type SuppliesQualityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesQuality to fetch.
     */
    where?: SuppliesQualityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesQualities to fetch.
     */
    orderBy?: SuppliesQualityOrderByWithRelationInput | SuppliesQualityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesQualities.
     */
    cursor?: SuppliesQualityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesQualities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesQualities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesQualities.
     */
    distinct?: SuppliesQualityScalarFieldEnum | SuppliesQualityScalarFieldEnum[]
  }

  /**
   * SuppliesQuality findMany
   */
  export type SuppliesQualityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesQualities to fetch.
     */
    where?: SuppliesQualityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesQualities to fetch.
     */
    orderBy?: SuppliesQualityOrderByWithRelationInput | SuppliesQualityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SuppliesQualities.
     */
    cursor?: SuppliesQualityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesQualities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesQualities.
     */
    skip?: number
    distinct?: SuppliesQualityScalarFieldEnum | SuppliesQualityScalarFieldEnum[]
  }

  /**
   * SuppliesQuality create
   */
  export type SuppliesQualityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * The data needed to create a SuppliesQuality.
     */
    data: XOR<SuppliesQualityCreateInput, SuppliesQualityUncheckedCreateInput>
  }

  /**
   * SuppliesQuality createMany
   */
  export type SuppliesQualityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SuppliesQualities.
     */
    data: SuppliesQualityCreateManyInput | SuppliesQualityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SuppliesQuality createManyAndReturn
   */
  export type SuppliesQualityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * The data used to create many SuppliesQualities.
     */
    data: SuppliesQualityCreateManyInput | SuppliesQualityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesQuality update
   */
  export type SuppliesQualityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * The data needed to update a SuppliesQuality.
     */
    data: XOR<SuppliesQualityUpdateInput, SuppliesQualityUncheckedUpdateInput>
    /**
     * Choose, which SuppliesQuality to update.
     */
    where: SuppliesQualityWhereUniqueInput
  }

  /**
   * SuppliesQuality updateMany
   */
  export type SuppliesQualityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SuppliesQualities.
     */
    data: XOR<SuppliesQualityUpdateManyMutationInput, SuppliesQualityUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesQualities to update
     */
    where?: SuppliesQualityWhereInput
    /**
     * Limit how many SuppliesQualities to update.
     */
    limit?: number
  }

  /**
   * SuppliesQuality updateManyAndReturn
   */
  export type SuppliesQualityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * The data used to update SuppliesQualities.
     */
    data: XOR<SuppliesQualityUpdateManyMutationInput, SuppliesQualityUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesQualities to update
     */
    where?: SuppliesQualityWhereInput
    /**
     * Limit how many SuppliesQualities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesQuality upsert
   */
  export type SuppliesQualityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * The filter to search for the SuppliesQuality to update in case it exists.
     */
    where: SuppliesQualityWhereUniqueInput
    /**
     * In case the SuppliesQuality found by the `where` argument doesn't exist, create a new SuppliesQuality with this data.
     */
    create: XOR<SuppliesQualityCreateInput, SuppliesQualityUncheckedCreateInput>
    /**
     * In case the SuppliesQuality was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SuppliesQualityUpdateInput, SuppliesQualityUncheckedUpdateInput>
  }

  /**
   * SuppliesQuality delete
   */
  export type SuppliesQualityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
    /**
     * Filter which SuppliesQuality to delete.
     */
    where: SuppliesQualityWhereUniqueInput
  }

  /**
   * SuppliesQuality deleteMany
   */
  export type SuppliesQualityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesQualities to delete
     */
    where?: SuppliesQualityWhereInput
    /**
     * Limit how many SuppliesQualities to delete.
     */
    limit?: number
  }

  /**
   * SuppliesQuality.supplies
   */
  export type SuppliesQuality$suppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    cursor?: SuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * SuppliesQuality.SuppliesDataSet
   */
  export type SuppliesQuality$SuppliesDataSetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesDataSet
     */
    select?: SuppliesDataSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesDataSet
     */
    omit?: SuppliesDataSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesDataSetInclude<ExtArgs> | null
    where?: SuppliesDataSetWhereInput
  }

  /**
   * SuppliesQuality.SupplyOrder
   */
  export type SuppliesQuality$SupplyOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyOrder
     */
    select?: SupplyOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyOrder
     */
    omit?: SupplyOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyOrderInclude<ExtArgs> | null
    where?: SupplyOrderWhereInput
    orderBy?: SupplyOrderOrderByWithRelationInput | SupplyOrderOrderByWithRelationInput[]
    cursor?: SupplyOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyOrderScalarFieldEnum | SupplyOrderScalarFieldEnum[]
  }

  /**
   * SuppliesQuality without action
   */
  export type SuppliesQualityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesQuality
     */
    select?: SuppliesQualitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesQuality
     */
    omit?: SuppliesQualityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesQualityInclude<ExtArgs> | null
  }


  /**
   * Model SupplyPriceTrack
   */

  export type AggregateSupplyPriceTrack = {
    _count: SupplyPriceTrackCountAggregateOutputType | null
    _avg: SupplyPriceTrackAvgAggregateOutputType | null
    _sum: SupplyPriceTrackSumAggregateOutputType | null
    _min: SupplyPriceTrackMinAggregateOutputType | null
    _max: SupplyPriceTrackMaxAggregateOutputType | null
  }

  export type SupplyPriceTrackAvgAggregateOutputType = {
    value: number | null
  }

  export type SupplyPriceTrackSumAggregateOutputType = {
    value: number | null
  }

  export type SupplyPriceTrackMinAggregateOutputType = {
    id: string | null
    value: number | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyPriceTrackMaxAggregateOutputType = {
    id: string | null
    value: number | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyPriceTrackCountAggregateOutputType = {
    id: number
    value: number
    suppliesId: number
    timestamp: number
    _all: number
  }


  export type SupplyPriceTrackAvgAggregateInputType = {
    value?: true
  }

  export type SupplyPriceTrackSumAggregateInputType = {
    value?: true
  }

  export type SupplyPriceTrackMinAggregateInputType = {
    id?: true
    value?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyPriceTrackMaxAggregateInputType = {
    id?: true
    value?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyPriceTrackCountAggregateInputType = {
    id?: true
    value?: true
    suppliesId?: true
    timestamp?: true
    _all?: true
  }

  export type SupplyPriceTrackAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyPriceTrack to aggregate.
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyPriceTracks to fetch.
     */
    orderBy?: SupplyPriceTrackOrderByWithRelationInput | SupplyPriceTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyPriceTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyPriceTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyPriceTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyPriceTracks
    **/
    _count?: true | SupplyPriceTrackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplyPriceTrackAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplyPriceTrackSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyPriceTrackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyPriceTrackMaxAggregateInputType
  }

  export type GetSupplyPriceTrackAggregateType<T extends SupplyPriceTrackAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyPriceTrack]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyPriceTrack[P]>
      : GetScalarType<T[P], AggregateSupplyPriceTrack[P]>
  }




  export type SupplyPriceTrackGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyPriceTrackWhereInput
    orderBy?: SupplyPriceTrackOrderByWithAggregationInput | SupplyPriceTrackOrderByWithAggregationInput[]
    by: SupplyPriceTrackScalarFieldEnum[] | SupplyPriceTrackScalarFieldEnum
    having?: SupplyPriceTrackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyPriceTrackCountAggregateInputType | true
    _avg?: SupplyPriceTrackAvgAggregateInputType
    _sum?: SupplyPriceTrackSumAggregateInputType
    _min?: SupplyPriceTrackMinAggregateInputType
    _max?: SupplyPriceTrackMaxAggregateInputType
  }

  export type SupplyPriceTrackGroupByOutputType = {
    id: string
    value: number
    suppliesId: string
    timestamp: Date
    _count: SupplyPriceTrackCountAggregateOutputType | null
    _avg: SupplyPriceTrackAvgAggregateOutputType | null
    _sum: SupplyPriceTrackSumAggregateOutputType | null
    _min: SupplyPriceTrackMinAggregateOutputType | null
    _max: SupplyPriceTrackMaxAggregateOutputType | null
  }

  type GetSupplyPriceTrackGroupByPayload<T extends SupplyPriceTrackGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyPriceTrackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyPriceTrackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyPriceTrackGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyPriceTrackGroupByOutputType[P]>
        }
      >
    >


  export type SupplyPriceTrackSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyPriceTrack"]>

  export type SupplyPriceTrackSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyPriceTrack"]>

  export type SupplyPriceTrackSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyPriceTrack"]>

  export type SupplyPriceTrackSelectScalar = {
    id?: boolean
    value?: boolean
    suppliesId?: boolean
    timestamp?: boolean
  }

  export type SupplyPriceTrackOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "value" | "suppliesId" | "timestamp", ExtArgs["result"]["supplyPriceTrack"]>
  export type SupplyPriceTrackInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplyPriceTrackIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplyPriceTrackIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }

  export type $SupplyPriceTrackPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyPriceTrack"
    objects: {
      supply: Prisma.$SuppliesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      value: number
      suppliesId: string
      timestamp: Date
    }, ExtArgs["result"]["supplyPriceTrack"]>
    composites: {}
  }

  type SupplyPriceTrackGetPayload<S extends boolean | null | undefined | SupplyPriceTrackDefaultArgs> = $Result.GetResult<Prisma.$SupplyPriceTrackPayload, S>

  type SupplyPriceTrackCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyPriceTrackFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyPriceTrackCountAggregateInputType | true
    }

  export interface SupplyPriceTrackDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyPriceTrack'], meta: { name: 'SupplyPriceTrack' } }
    /**
     * Find zero or one SupplyPriceTrack that matches the filter.
     * @param {SupplyPriceTrackFindUniqueArgs} args - Arguments to find a SupplyPriceTrack
     * @example
     * // Get one SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyPriceTrackFindUniqueArgs>(args: SelectSubset<T, SupplyPriceTrackFindUniqueArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyPriceTrack that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyPriceTrackFindUniqueOrThrowArgs} args - Arguments to find a SupplyPriceTrack
     * @example
     * // Get one SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyPriceTrackFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyPriceTrackFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyPriceTrack that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackFindFirstArgs} args - Arguments to find a SupplyPriceTrack
     * @example
     * // Get one SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyPriceTrackFindFirstArgs>(args?: SelectSubset<T, SupplyPriceTrackFindFirstArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyPriceTrack that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackFindFirstOrThrowArgs} args - Arguments to find a SupplyPriceTrack
     * @example
     * // Get one SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyPriceTrackFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyPriceTrackFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyPriceTracks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyPriceTracks
     * const supplyPriceTracks = await prisma.supplyPriceTrack.findMany()
     * 
     * // Get first 10 SupplyPriceTracks
     * const supplyPriceTracks = await prisma.supplyPriceTrack.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyPriceTrackWithIdOnly = await prisma.supplyPriceTrack.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyPriceTrackFindManyArgs>(args?: SelectSubset<T, SupplyPriceTrackFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyPriceTrack.
     * @param {SupplyPriceTrackCreateArgs} args - Arguments to create a SupplyPriceTrack.
     * @example
     * // Create one SupplyPriceTrack
     * const SupplyPriceTrack = await prisma.supplyPriceTrack.create({
     *   data: {
     *     // ... data to create a SupplyPriceTrack
     *   }
     * })
     * 
     */
    create<T extends SupplyPriceTrackCreateArgs>(args: SelectSubset<T, SupplyPriceTrackCreateArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyPriceTracks.
     * @param {SupplyPriceTrackCreateManyArgs} args - Arguments to create many SupplyPriceTracks.
     * @example
     * // Create many SupplyPriceTracks
     * const supplyPriceTrack = await prisma.supplyPriceTrack.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyPriceTrackCreateManyArgs>(args?: SelectSubset<T, SupplyPriceTrackCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyPriceTracks and returns the data saved in the database.
     * @param {SupplyPriceTrackCreateManyAndReturnArgs} args - Arguments to create many SupplyPriceTracks.
     * @example
     * // Create many SupplyPriceTracks
     * const supplyPriceTrack = await prisma.supplyPriceTrack.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyPriceTracks and only return the `id`
     * const supplyPriceTrackWithIdOnly = await prisma.supplyPriceTrack.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyPriceTrackCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyPriceTrackCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyPriceTrack.
     * @param {SupplyPriceTrackDeleteArgs} args - Arguments to delete one SupplyPriceTrack.
     * @example
     * // Delete one SupplyPriceTrack
     * const SupplyPriceTrack = await prisma.supplyPriceTrack.delete({
     *   where: {
     *     // ... filter to delete one SupplyPriceTrack
     *   }
     * })
     * 
     */
    delete<T extends SupplyPriceTrackDeleteArgs>(args: SelectSubset<T, SupplyPriceTrackDeleteArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyPriceTrack.
     * @param {SupplyPriceTrackUpdateArgs} args - Arguments to update one SupplyPriceTrack.
     * @example
     * // Update one SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyPriceTrackUpdateArgs>(args: SelectSubset<T, SupplyPriceTrackUpdateArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyPriceTracks.
     * @param {SupplyPriceTrackDeleteManyArgs} args - Arguments to filter SupplyPriceTracks to delete.
     * @example
     * // Delete a few SupplyPriceTracks
     * const { count } = await prisma.supplyPriceTrack.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyPriceTrackDeleteManyArgs>(args?: SelectSubset<T, SupplyPriceTrackDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyPriceTracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyPriceTracks
     * const supplyPriceTrack = await prisma.supplyPriceTrack.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyPriceTrackUpdateManyArgs>(args: SelectSubset<T, SupplyPriceTrackUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyPriceTracks and returns the data updated in the database.
     * @param {SupplyPriceTrackUpdateManyAndReturnArgs} args - Arguments to update many SupplyPriceTracks.
     * @example
     * // Update many SupplyPriceTracks
     * const supplyPriceTrack = await prisma.supplyPriceTrack.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyPriceTracks and only return the `id`
     * const supplyPriceTrackWithIdOnly = await prisma.supplyPriceTrack.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyPriceTrackUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyPriceTrackUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyPriceTrack.
     * @param {SupplyPriceTrackUpsertArgs} args - Arguments to update or create a SupplyPriceTrack.
     * @example
     * // Update or create a SupplyPriceTrack
     * const supplyPriceTrack = await prisma.supplyPriceTrack.upsert({
     *   create: {
     *     // ... data to create a SupplyPriceTrack
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyPriceTrack we want to update
     *   }
     * })
     */
    upsert<T extends SupplyPriceTrackUpsertArgs>(args: SelectSubset<T, SupplyPriceTrackUpsertArgs<ExtArgs>>): Prisma__SupplyPriceTrackClient<$Result.GetResult<Prisma.$SupplyPriceTrackPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyPriceTracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackCountArgs} args - Arguments to filter SupplyPriceTracks to count.
     * @example
     * // Count the number of SupplyPriceTracks
     * const count = await prisma.supplyPriceTrack.count({
     *   where: {
     *     // ... the filter for the SupplyPriceTracks we want to count
     *   }
     * })
    **/
    count<T extends SupplyPriceTrackCountArgs>(
      args?: Subset<T, SupplyPriceTrackCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyPriceTrackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyPriceTrack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyPriceTrackAggregateArgs>(args: Subset<T, SupplyPriceTrackAggregateArgs>): Prisma.PrismaPromise<GetSupplyPriceTrackAggregateType<T>>

    /**
     * Group by SupplyPriceTrack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyPriceTrackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyPriceTrackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyPriceTrackGroupByArgs['orderBy'] }
        : { orderBy?: SupplyPriceTrackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyPriceTrackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyPriceTrackGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyPriceTrack model
   */
  readonly fields: SupplyPriceTrackFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyPriceTrack.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyPriceTrackClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supply<T extends SuppliesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDefaultArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyPriceTrack model
   */
  interface SupplyPriceTrackFieldRefs {
    readonly id: FieldRef<"SupplyPriceTrack", 'String'>
    readonly value: FieldRef<"SupplyPriceTrack", 'Int'>
    readonly suppliesId: FieldRef<"SupplyPriceTrack", 'String'>
    readonly timestamp: FieldRef<"SupplyPriceTrack", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupplyPriceTrack findUnique
   */
  export type SupplyPriceTrackFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyPriceTrack to fetch.
     */
    where: SupplyPriceTrackWhereUniqueInput
  }

  /**
   * SupplyPriceTrack findUniqueOrThrow
   */
  export type SupplyPriceTrackFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyPriceTrack to fetch.
     */
    where: SupplyPriceTrackWhereUniqueInput
  }

  /**
   * SupplyPriceTrack findFirst
   */
  export type SupplyPriceTrackFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyPriceTrack to fetch.
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyPriceTracks to fetch.
     */
    orderBy?: SupplyPriceTrackOrderByWithRelationInput | SupplyPriceTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyPriceTracks.
     */
    cursor?: SupplyPriceTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyPriceTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyPriceTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyPriceTracks.
     */
    distinct?: SupplyPriceTrackScalarFieldEnum | SupplyPriceTrackScalarFieldEnum[]
  }

  /**
   * SupplyPriceTrack findFirstOrThrow
   */
  export type SupplyPriceTrackFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyPriceTrack to fetch.
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyPriceTracks to fetch.
     */
    orderBy?: SupplyPriceTrackOrderByWithRelationInput | SupplyPriceTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyPriceTracks.
     */
    cursor?: SupplyPriceTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyPriceTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyPriceTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyPriceTracks.
     */
    distinct?: SupplyPriceTrackScalarFieldEnum | SupplyPriceTrackScalarFieldEnum[]
  }

  /**
   * SupplyPriceTrack findMany
   */
  export type SupplyPriceTrackFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyPriceTracks to fetch.
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyPriceTracks to fetch.
     */
    orderBy?: SupplyPriceTrackOrderByWithRelationInput | SupplyPriceTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyPriceTracks.
     */
    cursor?: SupplyPriceTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyPriceTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyPriceTracks.
     */
    skip?: number
    distinct?: SupplyPriceTrackScalarFieldEnum | SupplyPriceTrackScalarFieldEnum[]
  }

  /**
   * SupplyPriceTrack create
   */
  export type SupplyPriceTrackCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyPriceTrack.
     */
    data: XOR<SupplyPriceTrackCreateInput, SupplyPriceTrackUncheckedCreateInput>
  }

  /**
   * SupplyPriceTrack createMany
   */
  export type SupplyPriceTrackCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyPriceTracks.
     */
    data: SupplyPriceTrackCreateManyInput | SupplyPriceTrackCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyPriceTrack createManyAndReturn
   */
  export type SupplyPriceTrackCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyPriceTracks.
     */
    data: SupplyPriceTrackCreateManyInput | SupplyPriceTrackCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyPriceTrack update
   */
  export type SupplyPriceTrackUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyPriceTrack.
     */
    data: XOR<SupplyPriceTrackUpdateInput, SupplyPriceTrackUncheckedUpdateInput>
    /**
     * Choose, which SupplyPriceTrack to update.
     */
    where: SupplyPriceTrackWhereUniqueInput
  }

  /**
   * SupplyPriceTrack updateMany
   */
  export type SupplyPriceTrackUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyPriceTracks.
     */
    data: XOR<SupplyPriceTrackUpdateManyMutationInput, SupplyPriceTrackUncheckedUpdateManyInput>
    /**
     * Filter which SupplyPriceTracks to update
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * Limit how many SupplyPriceTracks to update.
     */
    limit?: number
  }

  /**
   * SupplyPriceTrack updateManyAndReturn
   */
  export type SupplyPriceTrackUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * The data used to update SupplyPriceTracks.
     */
    data: XOR<SupplyPriceTrackUpdateManyMutationInput, SupplyPriceTrackUncheckedUpdateManyInput>
    /**
     * Filter which SupplyPriceTracks to update
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * Limit how many SupplyPriceTracks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyPriceTrack upsert
   */
  export type SupplyPriceTrackUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyPriceTrack to update in case it exists.
     */
    where: SupplyPriceTrackWhereUniqueInput
    /**
     * In case the SupplyPriceTrack found by the `where` argument doesn't exist, create a new SupplyPriceTrack with this data.
     */
    create: XOR<SupplyPriceTrackCreateInput, SupplyPriceTrackUncheckedCreateInput>
    /**
     * In case the SupplyPriceTrack was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyPriceTrackUpdateInput, SupplyPriceTrackUncheckedUpdateInput>
  }

  /**
   * SupplyPriceTrack delete
   */
  export type SupplyPriceTrackDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
    /**
     * Filter which SupplyPriceTrack to delete.
     */
    where: SupplyPriceTrackWhereUniqueInput
  }

  /**
   * SupplyPriceTrack deleteMany
   */
  export type SupplyPriceTrackDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyPriceTracks to delete
     */
    where?: SupplyPriceTrackWhereInput
    /**
     * Limit how many SupplyPriceTracks to delete.
     */
    limit?: number
  }

  /**
   * SupplyPriceTrack without action
   */
  export type SupplyPriceTrackDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyPriceTrack
     */
    select?: SupplyPriceTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyPriceTrack
     */
    omit?: SupplyPriceTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyPriceTrackInclude<ExtArgs> | null
  }


  /**
   * Model SupplyStockTrack
   */

  export type AggregateSupplyStockTrack = {
    _count: SupplyStockTrackCountAggregateOutputType | null
    _avg: SupplyStockTrackAvgAggregateOutputType | null
    _sum: SupplyStockTrackSumAggregateOutputType | null
    _min: SupplyStockTrackMinAggregateOutputType | null
    _max: SupplyStockTrackMaxAggregateOutputType | null
  }

  export type SupplyStockTrackAvgAggregateOutputType = {
    stock: number | null
  }

  export type SupplyStockTrackSumAggregateOutputType = {
    stock: number | null
  }

  export type SupplyStockTrackMinAggregateOutputType = {
    id: string | null
    stock: number | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyStockTrackMaxAggregateOutputType = {
    id: string | null
    stock: number | null
    suppliesId: string | null
    timestamp: Date | null
  }

  export type SupplyStockTrackCountAggregateOutputType = {
    id: number
    stock: number
    suppliesId: number
    timestamp: number
    _all: number
  }


  export type SupplyStockTrackAvgAggregateInputType = {
    stock?: true
  }

  export type SupplyStockTrackSumAggregateInputType = {
    stock?: true
  }

  export type SupplyStockTrackMinAggregateInputType = {
    id?: true
    stock?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyStockTrackMaxAggregateInputType = {
    id?: true
    stock?: true
    suppliesId?: true
    timestamp?: true
  }

  export type SupplyStockTrackCountAggregateInputType = {
    id?: true
    stock?: true
    suppliesId?: true
    timestamp?: true
    _all?: true
  }

  export type SupplyStockTrackAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyStockTrack to aggregate.
     */
    where?: SupplyStockTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyStockTracks to fetch.
     */
    orderBy?: SupplyStockTrackOrderByWithRelationInput | SupplyStockTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplyStockTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyStockTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyStockTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplyStockTracks
    **/
    _count?: true | SupplyStockTrackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplyStockTrackAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplyStockTrackSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplyStockTrackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplyStockTrackMaxAggregateInputType
  }

  export type GetSupplyStockTrackAggregateType<T extends SupplyStockTrackAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplyStockTrack]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplyStockTrack[P]>
      : GetScalarType<T[P], AggregateSupplyStockTrack[P]>
  }




  export type SupplyStockTrackGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplyStockTrackWhereInput
    orderBy?: SupplyStockTrackOrderByWithAggregationInput | SupplyStockTrackOrderByWithAggregationInput[]
    by: SupplyStockTrackScalarFieldEnum[] | SupplyStockTrackScalarFieldEnum
    having?: SupplyStockTrackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplyStockTrackCountAggregateInputType | true
    _avg?: SupplyStockTrackAvgAggregateInputType
    _sum?: SupplyStockTrackSumAggregateInputType
    _min?: SupplyStockTrackMinAggregateInputType
    _max?: SupplyStockTrackMaxAggregateInputType
  }

  export type SupplyStockTrackGroupByOutputType = {
    id: string
    stock: number
    suppliesId: string
    timestamp: Date
    _count: SupplyStockTrackCountAggregateOutputType | null
    _avg: SupplyStockTrackAvgAggregateOutputType | null
    _sum: SupplyStockTrackSumAggregateOutputType | null
    _min: SupplyStockTrackMinAggregateOutputType | null
    _max: SupplyStockTrackMaxAggregateOutputType | null
  }

  type GetSupplyStockTrackGroupByPayload<T extends SupplyStockTrackGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplyStockTrackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplyStockTrackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplyStockTrackGroupByOutputType[P]>
            : GetScalarType<T[P], SupplyStockTrackGroupByOutputType[P]>
        }
      >
    >


  export type SupplyStockTrackSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stock?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyStockTrack"]>

  export type SupplyStockTrackSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stock?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyStockTrack"]>

  export type SupplyStockTrackSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stock?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplyStockTrack"]>

  export type SupplyStockTrackSelectScalar = {
    id?: boolean
    stock?: boolean
    suppliesId?: boolean
    timestamp?: boolean
  }

  export type SupplyStockTrackOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stock" | "suppliesId" | "timestamp", ExtArgs["result"]["supplyStockTrack"]>
  export type SupplyStockTrackInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplyStockTrackIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplyStockTrackIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }

  export type $SupplyStockTrackPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplyStockTrack"
    objects: {
      supply: Prisma.$SuppliesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      stock: number
      suppliesId: string
      timestamp: Date
    }, ExtArgs["result"]["supplyStockTrack"]>
    composites: {}
  }

  type SupplyStockTrackGetPayload<S extends boolean | null | undefined | SupplyStockTrackDefaultArgs> = $Result.GetResult<Prisma.$SupplyStockTrackPayload, S>

  type SupplyStockTrackCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplyStockTrackFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplyStockTrackCountAggregateInputType | true
    }

  export interface SupplyStockTrackDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplyStockTrack'], meta: { name: 'SupplyStockTrack' } }
    /**
     * Find zero or one SupplyStockTrack that matches the filter.
     * @param {SupplyStockTrackFindUniqueArgs} args - Arguments to find a SupplyStockTrack
     * @example
     * // Get one SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplyStockTrackFindUniqueArgs>(args: SelectSubset<T, SupplyStockTrackFindUniqueArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplyStockTrack that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplyStockTrackFindUniqueOrThrowArgs} args - Arguments to find a SupplyStockTrack
     * @example
     * // Get one SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplyStockTrackFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplyStockTrackFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyStockTrack that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackFindFirstArgs} args - Arguments to find a SupplyStockTrack
     * @example
     * // Get one SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplyStockTrackFindFirstArgs>(args?: SelectSubset<T, SupplyStockTrackFindFirstArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplyStockTrack that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackFindFirstOrThrowArgs} args - Arguments to find a SupplyStockTrack
     * @example
     * // Get one SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplyStockTrackFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplyStockTrackFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplyStockTracks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplyStockTracks
     * const supplyStockTracks = await prisma.supplyStockTrack.findMany()
     * 
     * // Get first 10 SupplyStockTracks
     * const supplyStockTracks = await prisma.supplyStockTrack.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplyStockTrackWithIdOnly = await prisma.supplyStockTrack.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplyStockTrackFindManyArgs>(args?: SelectSubset<T, SupplyStockTrackFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplyStockTrack.
     * @param {SupplyStockTrackCreateArgs} args - Arguments to create a SupplyStockTrack.
     * @example
     * // Create one SupplyStockTrack
     * const SupplyStockTrack = await prisma.supplyStockTrack.create({
     *   data: {
     *     // ... data to create a SupplyStockTrack
     *   }
     * })
     * 
     */
    create<T extends SupplyStockTrackCreateArgs>(args: SelectSubset<T, SupplyStockTrackCreateArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplyStockTracks.
     * @param {SupplyStockTrackCreateManyArgs} args - Arguments to create many SupplyStockTracks.
     * @example
     * // Create many SupplyStockTracks
     * const supplyStockTrack = await prisma.supplyStockTrack.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplyStockTrackCreateManyArgs>(args?: SelectSubset<T, SupplyStockTrackCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplyStockTracks and returns the data saved in the database.
     * @param {SupplyStockTrackCreateManyAndReturnArgs} args - Arguments to create many SupplyStockTracks.
     * @example
     * // Create many SupplyStockTracks
     * const supplyStockTrack = await prisma.supplyStockTrack.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplyStockTracks and only return the `id`
     * const supplyStockTrackWithIdOnly = await prisma.supplyStockTrack.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplyStockTrackCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplyStockTrackCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplyStockTrack.
     * @param {SupplyStockTrackDeleteArgs} args - Arguments to delete one SupplyStockTrack.
     * @example
     * // Delete one SupplyStockTrack
     * const SupplyStockTrack = await prisma.supplyStockTrack.delete({
     *   where: {
     *     // ... filter to delete one SupplyStockTrack
     *   }
     * })
     * 
     */
    delete<T extends SupplyStockTrackDeleteArgs>(args: SelectSubset<T, SupplyStockTrackDeleteArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplyStockTrack.
     * @param {SupplyStockTrackUpdateArgs} args - Arguments to update one SupplyStockTrack.
     * @example
     * // Update one SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplyStockTrackUpdateArgs>(args: SelectSubset<T, SupplyStockTrackUpdateArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplyStockTracks.
     * @param {SupplyStockTrackDeleteManyArgs} args - Arguments to filter SupplyStockTracks to delete.
     * @example
     * // Delete a few SupplyStockTracks
     * const { count } = await prisma.supplyStockTrack.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplyStockTrackDeleteManyArgs>(args?: SelectSubset<T, SupplyStockTrackDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyStockTracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplyStockTracks
     * const supplyStockTrack = await prisma.supplyStockTrack.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplyStockTrackUpdateManyArgs>(args: SelectSubset<T, SupplyStockTrackUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplyStockTracks and returns the data updated in the database.
     * @param {SupplyStockTrackUpdateManyAndReturnArgs} args - Arguments to update many SupplyStockTracks.
     * @example
     * // Update many SupplyStockTracks
     * const supplyStockTrack = await prisma.supplyStockTrack.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplyStockTracks and only return the `id`
     * const supplyStockTrackWithIdOnly = await prisma.supplyStockTrack.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplyStockTrackUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplyStockTrackUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplyStockTrack.
     * @param {SupplyStockTrackUpsertArgs} args - Arguments to update or create a SupplyStockTrack.
     * @example
     * // Update or create a SupplyStockTrack
     * const supplyStockTrack = await prisma.supplyStockTrack.upsert({
     *   create: {
     *     // ... data to create a SupplyStockTrack
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplyStockTrack we want to update
     *   }
     * })
     */
    upsert<T extends SupplyStockTrackUpsertArgs>(args: SelectSubset<T, SupplyStockTrackUpsertArgs<ExtArgs>>): Prisma__SupplyStockTrackClient<$Result.GetResult<Prisma.$SupplyStockTrackPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplyStockTracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackCountArgs} args - Arguments to filter SupplyStockTracks to count.
     * @example
     * // Count the number of SupplyStockTracks
     * const count = await prisma.supplyStockTrack.count({
     *   where: {
     *     // ... the filter for the SupplyStockTracks we want to count
     *   }
     * })
    **/
    count<T extends SupplyStockTrackCountArgs>(
      args?: Subset<T, SupplyStockTrackCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplyStockTrackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplyStockTrack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplyStockTrackAggregateArgs>(args: Subset<T, SupplyStockTrackAggregateArgs>): Prisma.PrismaPromise<GetSupplyStockTrackAggregateType<T>>

    /**
     * Group by SupplyStockTrack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplyStockTrackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplyStockTrackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplyStockTrackGroupByArgs['orderBy'] }
        : { orderBy?: SupplyStockTrackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplyStockTrackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplyStockTrackGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplyStockTrack model
   */
  readonly fields: SupplyStockTrackFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplyStockTrack.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplyStockTrackClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supply<T extends SuppliesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDefaultArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplyStockTrack model
   */
  interface SupplyStockTrackFieldRefs {
    readonly id: FieldRef<"SupplyStockTrack", 'String'>
    readonly stock: FieldRef<"SupplyStockTrack", 'Int'>
    readonly suppliesId: FieldRef<"SupplyStockTrack", 'String'>
    readonly timestamp: FieldRef<"SupplyStockTrack", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupplyStockTrack findUnique
   */
  export type SupplyStockTrackFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyStockTrack to fetch.
     */
    where: SupplyStockTrackWhereUniqueInput
  }

  /**
   * SupplyStockTrack findUniqueOrThrow
   */
  export type SupplyStockTrackFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyStockTrack to fetch.
     */
    where: SupplyStockTrackWhereUniqueInput
  }

  /**
   * SupplyStockTrack findFirst
   */
  export type SupplyStockTrackFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyStockTrack to fetch.
     */
    where?: SupplyStockTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyStockTracks to fetch.
     */
    orderBy?: SupplyStockTrackOrderByWithRelationInput | SupplyStockTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyStockTracks.
     */
    cursor?: SupplyStockTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyStockTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyStockTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyStockTracks.
     */
    distinct?: SupplyStockTrackScalarFieldEnum | SupplyStockTrackScalarFieldEnum[]
  }

  /**
   * SupplyStockTrack findFirstOrThrow
   */
  export type SupplyStockTrackFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyStockTrack to fetch.
     */
    where?: SupplyStockTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyStockTracks to fetch.
     */
    orderBy?: SupplyStockTrackOrderByWithRelationInput | SupplyStockTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplyStockTracks.
     */
    cursor?: SupplyStockTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyStockTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyStockTracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplyStockTracks.
     */
    distinct?: SupplyStockTrackScalarFieldEnum | SupplyStockTrackScalarFieldEnum[]
  }

  /**
   * SupplyStockTrack findMany
   */
  export type SupplyStockTrackFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter, which SupplyStockTracks to fetch.
     */
    where?: SupplyStockTrackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplyStockTracks to fetch.
     */
    orderBy?: SupplyStockTrackOrderByWithRelationInput | SupplyStockTrackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplyStockTracks.
     */
    cursor?: SupplyStockTrackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplyStockTracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplyStockTracks.
     */
    skip?: number
    distinct?: SupplyStockTrackScalarFieldEnum | SupplyStockTrackScalarFieldEnum[]
  }

  /**
   * SupplyStockTrack create
   */
  export type SupplyStockTrackCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplyStockTrack.
     */
    data: XOR<SupplyStockTrackCreateInput, SupplyStockTrackUncheckedCreateInput>
  }

  /**
   * SupplyStockTrack createMany
   */
  export type SupplyStockTrackCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplyStockTracks.
     */
    data: SupplyStockTrackCreateManyInput | SupplyStockTrackCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplyStockTrack createManyAndReturn
   */
  export type SupplyStockTrackCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * The data used to create many SupplyStockTracks.
     */
    data: SupplyStockTrackCreateManyInput | SupplyStockTrackCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyStockTrack update
   */
  export type SupplyStockTrackUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplyStockTrack.
     */
    data: XOR<SupplyStockTrackUpdateInput, SupplyStockTrackUncheckedUpdateInput>
    /**
     * Choose, which SupplyStockTrack to update.
     */
    where: SupplyStockTrackWhereUniqueInput
  }

  /**
   * SupplyStockTrack updateMany
   */
  export type SupplyStockTrackUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplyStockTracks.
     */
    data: XOR<SupplyStockTrackUpdateManyMutationInput, SupplyStockTrackUncheckedUpdateManyInput>
    /**
     * Filter which SupplyStockTracks to update
     */
    where?: SupplyStockTrackWhereInput
    /**
     * Limit how many SupplyStockTracks to update.
     */
    limit?: number
  }

  /**
   * SupplyStockTrack updateManyAndReturn
   */
  export type SupplyStockTrackUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * The data used to update SupplyStockTracks.
     */
    data: XOR<SupplyStockTrackUpdateManyMutationInput, SupplyStockTrackUncheckedUpdateManyInput>
    /**
     * Filter which SupplyStockTracks to update
     */
    where?: SupplyStockTrackWhereInput
    /**
     * Limit how many SupplyStockTracks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplyStockTrack upsert
   */
  export type SupplyStockTrackUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplyStockTrack to update in case it exists.
     */
    where: SupplyStockTrackWhereUniqueInput
    /**
     * In case the SupplyStockTrack found by the `where` argument doesn't exist, create a new SupplyStockTrack with this data.
     */
    create: XOR<SupplyStockTrackCreateInput, SupplyStockTrackUncheckedCreateInput>
    /**
     * In case the SupplyStockTrack was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplyStockTrackUpdateInput, SupplyStockTrackUncheckedUpdateInput>
  }

  /**
   * SupplyStockTrack delete
   */
  export type SupplyStockTrackDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
    /**
     * Filter which SupplyStockTrack to delete.
     */
    where: SupplyStockTrackWhereUniqueInput
  }

  /**
   * SupplyStockTrack deleteMany
   */
  export type SupplyStockTrackDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplyStockTracks to delete
     */
    where?: SupplyStockTrackWhereInput
    /**
     * Limit how many SupplyStockTracks to delete.
     */
    limit?: number
  }

  /**
   * SupplyStockTrack without action
   */
  export type SupplyStockTrackDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyStockTrack
     */
    select?: SupplyStockTrackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyStockTrack
     */
    omit?: SupplyStockTrackOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyStockTrackInclude<ExtArgs> | null
  }


  /**
   * Model SuppliesCategory
   */

  export type AggregateSuppliesCategory = {
    _count: SuppliesCategoryCountAggregateOutputType | null
    _min: SuppliesCategoryMinAggregateOutputType | null
    _max: SuppliesCategoryMaxAggregateOutputType | null
  }

  export type SuppliesCategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
  }

  export type SuppliesCategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
  }

  export type SuppliesCategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    _all: number
  }


  export type SuppliesCategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
  }

  export type SuppliesCategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
  }

  export type SuppliesCategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    _all?: true
  }

  export type SuppliesCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesCategory to aggregate.
     */
    where?: SuppliesCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesCategories to fetch.
     */
    orderBy?: SuppliesCategoryOrderByWithRelationInput | SuppliesCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SuppliesCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SuppliesCategories
    **/
    _count?: true | SuppliesCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuppliesCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuppliesCategoryMaxAggregateInputType
  }

  export type GetSuppliesCategoryAggregateType<T extends SuppliesCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSuppliesCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuppliesCategory[P]>
      : GetScalarType<T[P], AggregateSuppliesCategory[P]>
  }




  export type SuppliesCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesCategoryWhereInput
    orderBy?: SuppliesCategoryOrderByWithAggregationInput | SuppliesCategoryOrderByWithAggregationInput[]
    by: SuppliesCategoryScalarFieldEnum[] | SuppliesCategoryScalarFieldEnum
    having?: SuppliesCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuppliesCategoryCountAggregateInputType | true
    _min?: SuppliesCategoryMinAggregateInputType
    _max?: SuppliesCategoryMaxAggregateInputType
  }

  export type SuppliesCategoryGroupByOutputType = {
    id: string
    name: string
    description: string | null
    createdAt: Date
    _count: SuppliesCategoryCountAggregateOutputType | null
    _min: SuppliesCategoryMinAggregateOutputType | null
    _max: SuppliesCategoryMaxAggregateOutputType | null
  }

  type GetSuppliesCategoryGroupByPayload<T extends SuppliesCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuppliesCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuppliesCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuppliesCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], SuppliesCategoryGroupByOutputType[P]>
        }
      >
    >


  export type SuppliesCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    supplies?: boolean | SuppliesCategory$suppliesArgs<ExtArgs>
    _count?: boolean | SuppliesCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesCategory"]>

  export type SuppliesCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["suppliesCategory"]>

  export type SuppliesCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["suppliesCategory"]>

  export type SuppliesCategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
  }

  export type SuppliesCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "createdAt", ExtArgs["result"]["suppliesCategory"]>
  export type SuppliesCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supplies?: boolean | SuppliesCategory$suppliesArgs<ExtArgs>
    _count?: boolean | SuppliesCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SuppliesCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SuppliesCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SuppliesCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SuppliesCategory"
    objects: {
      supplies: Prisma.$SuppliesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      createdAt: Date
    }, ExtArgs["result"]["suppliesCategory"]>
    composites: {}
  }

  type SuppliesCategoryGetPayload<S extends boolean | null | undefined | SuppliesCategoryDefaultArgs> = $Result.GetResult<Prisma.$SuppliesCategoryPayload, S>

  type SuppliesCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SuppliesCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuppliesCategoryCountAggregateInputType | true
    }

  export interface SuppliesCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SuppliesCategory'], meta: { name: 'SuppliesCategory' } }
    /**
     * Find zero or one SuppliesCategory that matches the filter.
     * @param {SuppliesCategoryFindUniqueArgs} args - Arguments to find a SuppliesCategory
     * @example
     * // Get one SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SuppliesCategoryFindUniqueArgs>(args: SelectSubset<T, SuppliesCategoryFindUniqueArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SuppliesCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SuppliesCategoryFindUniqueOrThrowArgs} args - Arguments to find a SuppliesCategory
     * @example
     * // Get one SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SuppliesCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SuppliesCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryFindFirstArgs} args - Arguments to find a SuppliesCategory
     * @example
     * // Get one SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SuppliesCategoryFindFirstArgs>(args?: SelectSubset<T, SuppliesCategoryFindFirstArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryFindFirstOrThrowArgs} args - Arguments to find a SuppliesCategory
     * @example
     * // Get one SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SuppliesCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SuppliesCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SuppliesCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SuppliesCategories
     * const suppliesCategories = await prisma.suppliesCategory.findMany()
     * 
     * // Get first 10 SuppliesCategories
     * const suppliesCategories = await prisma.suppliesCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const suppliesCategoryWithIdOnly = await prisma.suppliesCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SuppliesCategoryFindManyArgs>(args?: SelectSubset<T, SuppliesCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SuppliesCategory.
     * @param {SuppliesCategoryCreateArgs} args - Arguments to create a SuppliesCategory.
     * @example
     * // Create one SuppliesCategory
     * const SuppliesCategory = await prisma.suppliesCategory.create({
     *   data: {
     *     // ... data to create a SuppliesCategory
     *   }
     * })
     * 
     */
    create<T extends SuppliesCategoryCreateArgs>(args: SelectSubset<T, SuppliesCategoryCreateArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SuppliesCategories.
     * @param {SuppliesCategoryCreateManyArgs} args - Arguments to create many SuppliesCategories.
     * @example
     * // Create many SuppliesCategories
     * const suppliesCategory = await prisma.suppliesCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SuppliesCategoryCreateManyArgs>(args?: SelectSubset<T, SuppliesCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SuppliesCategories and returns the data saved in the database.
     * @param {SuppliesCategoryCreateManyAndReturnArgs} args - Arguments to create many SuppliesCategories.
     * @example
     * // Create many SuppliesCategories
     * const suppliesCategory = await prisma.suppliesCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SuppliesCategories and only return the `id`
     * const suppliesCategoryWithIdOnly = await prisma.suppliesCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SuppliesCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SuppliesCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SuppliesCategory.
     * @param {SuppliesCategoryDeleteArgs} args - Arguments to delete one SuppliesCategory.
     * @example
     * // Delete one SuppliesCategory
     * const SuppliesCategory = await prisma.suppliesCategory.delete({
     *   where: {
     *     // ... filter to delete one SuppliesCategory
     *   }
     * })
     * 
     */
    delete<T extends SuppliesCategoryDeleteArgs>(args: SelectSubset<T, SuppliesCategoryDeleteArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SuppliesCategory.
     * @param {SuppliesCategoryUpdateArgs} args - Arguments to update one SuppliesCategory.
     * @example
     * // Update one SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SuppliesCategoryUpdateArgs>(args: SelectSubset<T, SuppliesCategoryUpdateArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SuppliesCategories.
     * @param {SuppliesCategoryDeleteManyArgs} args - Arguments to filter SuppliesCategories to delete.
     * @example
     * // Delete a few SuppliesCategories
     * const { count } = await prisma.suppliesCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SuppliesCategoryDeleteManyArgs>(args?: SelectSubset<T, SuppliesCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SuppliesCategories
     * const suppliesCategory = await prisma.suppliesCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SuppliesCategoryUpdateManyArgs>(args: SelectSubset<T, SuppliesCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesCategories and returns the data updated in the database.
     * @param {SuppliesCategoryUpdateManyAndReturnArgs} args - Arguments to update many SuppliesCategories.
     * @example
     * // Update many SuppliesCategories
     * const suppliesCategory = await prisma.suppliesCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SuppliesCategories and only return the `id`
     * const suppliesCategoryWithIdOnly = await prisma.suppliesCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SuppliesCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, SuppliesCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SuppliesCategory.
     * @param {SuppliesCategoryUpsertArgs} args - Arguments to update or create a SuppliesCategory.
     * @example
     * // Update or create a SuppliesCategory
     * const suppliesCategory = await prisma.suppliesCategory.upsert({
     *   create: {
     *     // ... data to create a SuppliesCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SuppliesCategory we want to update
     *   }
     * })
     */
    upsert<T extends SuppliesCategoryUpsertArgs>(args: SelectSubset<T, SuppliesCategoryUpsertArgs<ExtArgs>>): Prisma__SuppliesCategoryClient<$Result.GetResult<Prisma.$SuppliesCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SuppliesCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryCountArgs} args - Arguments to filter SuppliesCategories to count.
     * @example
     * // Count the number of SuppliesCategories
     * const count = await prisma.suppliesCategory.count({
     *   where: {
     *     // ... the filter for the SuppliesCategories we want to count
     *   }
     * })
    **/
    count<T extends SuppliesCategoryCountArgs>(
      args?: Subset<T, SuppliesCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuppliesCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SuppliesCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuppliesCategoryAggregateArgs>(args: Subset<T, SuppliesCategoryAggregateArgs>): Prisma.PrismaPromise<GetSuppliesCategoryAggregateType<T>>

    /**
     * Group by SuppliesCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SuppliesCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SuppliesCategoryGroupByArgs['orderBy'] }
        : { orderBy?: SuppliesCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SuppliesCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuppliesCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SuppliesCategory model
   */
  readonly fields: SuppliesCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SuppliesCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SuppliesCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supplies<T extends SuppliesCategory$suppliesArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesCategory$suppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SuppliesCategory model
   */
  interface SuppliesCategoryFieldRefs {
    readonly id: FieldRef<"SuppliesCategory", 'String'>
    readonly name: FieldRef<"SuppliesCategory", 'String'>
    readonly description: FieldRef<"SuppliesCategory", 'String'>
    readonly createdAt: FieldRef<"SuppliesCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SuppliesCategory findUnique
   */
  export type SuppliesCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesCategory to fetch.
     */
    where: SuppliesCategoryWhereUniqueInput
  }

  /**
   * SuppliesCategory findUniqueOrThrow
   */
  export type SuppliesCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesCategory to fetch.
     */
    where: SuppliesCategoryWhereUniqueInput
  }

  /**
   * SuppliesCategory findFirst
   */
  export type SuppliesCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesCategory to fetch.
     */
    where?: SuppliesCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesCategories to fetch.
     */
    orderBy?: SuppliesCategoryOrderByWithRelationInput | SuppliesCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesCategories.
     */
    cursor?: SuppliesCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesCategories.
     */
    distinct?: SuppliesCategoryScalarFieldEnum | SuppliesCategoryScalarFieldEnum[]
  }

  /**
   * SuppliesCategory findFirstOrThrow
   */
  export type SuppliesCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesCategory to fetch.
     */
    where?: SuppliesCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesCategories to fetch.
     */
    orderBy?: SuppliesCategoryOrderByWithRelationInput | SuppliesCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesCategories.
     */
    cursor?: SuppliesCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesCategories.
     */
    distinct?: SuppliesCategoryScalarFieldEnum | SuppliesCategoryScalarFieldEnum[]
  }

  /**
   * SuppliesCategory findMany
   */
  export type SuppliesCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesCategories to fetch.
     */
    where?: SuppliesCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesCategories to fetch.
     */
    orderBy?: SuppliesCategoryOrderByWithRelationInput | SuppliesCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SuppliesCategories.
     */
    cursor?: SuppliesCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesCategories.
     */
    skip?: number
    distinct?: SuppliesCategoryScalarFieldEnum | SuppliesCategoryScalarFieldEnum[]
  }

  /**
   * SuppliesCategory create
   */
  export type SuppliesCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SuppliesCategory.
     */
    data: XOR<SuppliesCategoryCreateInput, SuppliesCategoryUncheckedCreateInput>
  }

  /**
   * SuppliesCategory createMany
   */
  export type SuppliesCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SuppliesCategories.
     */
    data: SuppliesCategoryCreateManyInput | SuppliesCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SuppliesCategory createManyAndReturn
   */
  export type SuppliesCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many SuppliesCategories.
     */
    data: SuppliesCategoryCreateManyInput | SuppliesCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SuppliesCategory update
   */
  export type SuppliesCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SuppliesCategory.
     */
    data: XOR<SuppliesCategoryUpdateInput, SuppliesCategoryUncheckedUpdateInput>
    /**
     * Choose, which SuppliesCategory to update.
     */
    where: SuppliesCategoryWhereUniqueInput
  }

  /**
   * SuppliesCategory updateMany
   */
  export type SuppliesCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SuppliesCategories.
     */
    data: XOR<SuppliesCategoryUpdateManyMutationInput, SuppliesCategoryUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesCategories to update
     */
    where?: SuppliesCategoryWhereInput
    /**
     * Limit how many SuppliesCategories to update.
     */
    limit?: number
  }

  /**
   * SuppliesCategory updateManyAndReturn
   */
  export type SuppliesCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * The data used to update SuppliesCategories.
     */
    data: XOR<SuppliesCategoryUpdateManyMutationInput, SuppliesCategoryUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesCategories to update
     */
    where?: SuppliesCategoryWhereInput
    /**
     * Limit how many SuppliesCategories to update.
     */
    limit?: number
  }

  /**
   * SuppliesCategory upsert
   */
  export type SuppliesCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SuppliesCategory to update in case it exists.
     */
    where: SuppliesCategoryWhereUniqueInput
    /**
     * In case the SuppliesCategory found by the `where` argument doesn't exist, create a new SuppliesCategory with this data.
     */
    create: XOR<SuppliesCategoryCreateInput, SuppliesCategoryUncheckedCreateInput>
    /**
     * In case the SuppliesCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SuppliesCategoryUpdateInput, SuppliesCategoryUncheckedUpdateInput>
  }

  /**
   * SuppliesCategory delete
   */
  export type SuppliesCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
    /**
     * Filter which SuppliesCategory to delete.
     */
    where: SuppliesCategoryWhereUniqueInput
  }

  /**
   * SuppliesCategory deleteMany
   */
  export type SuppliesCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesCategories to delete
     */
    where?: SuppliesCategoryWhereInput
    /**
     * Limit how many SuppliesCategories to delete.
     */
    limit?: number
  }

  /**
   * SuppliesCategory.supplies
   */
  export type SuppliesCategory$suppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    cursor?: SuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * SuppliesCategory without action
   */
  export type SuppliesCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesCategory
     */
    select?: SuppliesCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesCategory
     */
    omit?: SuppliesCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesCategoryInclude<ExtArgs> | null
  }


  /**
   * Model SupplieRecieveHistory
   */

  export type AggregateSupplieRecieveHistory = {
    _count: SupplieRecieveHistoryCountAggregateOutputType | null
    _avg: SupplieRecieveHistoryAvgAggregateOutputType | null
    _sum: SupplieRecieveHistorySumAggregateOutputType | null
    _min: SupplieRecieveHistoryMinAggregateOutputType | null
    _max: SupplieRecieveHistoryMaxAggregateOutputType | null
  }

  export type SupplieRecieveHistoryAvgAggregateOutputType = {
    quantity: number | null
  }

  export type SupplieRecieveHistorySumAggregateOutputType = {
    quantity: number | null
  }

  export type SupplieRecieveHistoryMinAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    userId: string | null
    timestamp: Date | null
    quantity: number | null
    condition: string | null
  }

  export type SupplieRecieveHistoryMaxAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    userId: string | null
    timestamp: Date | null
    quantity: number | null
    condition: string | null
  }

  export type SupplieRecieveHistoryCountAggregateOutputType = {
    id: number
    suppliesId: number
    userId: number
    timestamp: number
    quantity: number
    condition: number
    _all: number
  }


  export type SupplieRecieveHistoryAvgAggregateInputType = {
    quantity?: true
  }

  export type SupplieRecieveHistorySumAggregateInputType = {
    quantity?: true
  }

  export type SupplieRecieveHistoryMinAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    timestamp?: true
    quantity?: true
    condition?: true
  }

  export type SupplieRecieveHistoryMaxAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    timestamp?: true
    quantity?: true
    condition?: true
  }

  export type SupplieRecieveHistoryCountAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    timestamp?: true
    quantity?: true
    condition?: true
    _all?: true
  }

  export type SupplieRecieveHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplieRecieveHistory to aggregate.
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplieRecieveHistories to fetch.
     */
    orderBy?: SupplieRecieveHistoryOrderByWithRelationInput | SupplieRecieveHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplieRecieveHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplieRecieveHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplieRecieveHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupplieRecieveHistories
    **/
    _count?: true | SupplieRecieveHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplieRecieveHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplieRecieveHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplieRecieveHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplieRecieveHistoryMaxAggregateInputType
  }

  export type GetSupplieRecieveHistoryAggregateType<T extends SupplieRecieveHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplieRecieveHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplieRecieveHistory[P]>
      : GetScalarType<T[P], AggregateSupplieRecieveHistory[P]>
  }




  export type SupplieRecieveHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplieRecieveHistoryWhereInput
    orderBy?: SupplieRecieveHistoryOrderByWithAggregationInput | SupplieRecieveHistoryOrderByWithAggregationInput[]
    by: SupplieRecieveHistoryScalarFieldEnum[] | SupplieRecieveHistoryScalarFieldEnum
    having?: SupplieRecieveHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplieRecieveHistoryCountAggregateInputType | true
    _avg?: SupplieRecieveHistoryAvgAggregateInputType
    _sum?: SupplieRecieveHistorySumAggregateInputType
    _min?: SupplieRecieveHistoryMinAggregateInputType
    _max?: SupplieRecieveHistoryMaxAggregateInputType
  }

  export type SupplieRecieveHistoryGroupByOutputType = {
    id: string
    suppliesId: string
    userId: string
    timestamp: Date
    quantity: number
    condition: string | null
    _count: SupplieRecieveHistoryCountAggregateOutputType | null
    _avg: SupplieRecieveHistoryAvgAggregateOutputType | null
    _sum: SupplieRecieveHistorySumAggregateOutputType | null
    _min: SupplieRecieveHistoryMinAggregateOutputType | null
    _max: SupplieRecieveHistoryMaxAggregateOutputType | null
  }

  type GetSupplieRecieveHistoryGroupByPayload<T extends SupplieRecieveHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplieRecieveHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplieRecieveHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplieRecieveHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], SupplieRecieveHistoryGroupByOutputType[P]>
        }
      >
    >


  export type SupplieRecieveHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    timestamp?: boolean
    quantity?: boolean
    condition?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplieRecieveHistory"]>

  export type SupplieRecieveHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    timestamp?: boolean
    quantity?: boolean
    condition?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplieRecieveHistory"]>

  export type SupplieRecieveHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    timestamp?: boolean
    quantity?: boolean
    condition?: boolean
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplieRecieveHistory"]>

  export type SupplieRecieveHistorySelectScalar = {
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    timestamp?: boolean
    quantity?: boolean
    condition?: boolean
  }

  export type SupplieRecieveHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "suppliesId" | "userId" | "timestamp" | "quantity" | "condition", ExtArgs["result"]["supplieRecieveHistory"]>
  export type SupplieRecieveHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplieRecieveHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }
  export type SupplieRecieveHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | SuppliesDefaultArgs<ExtArgs>
  }

  export type $SupplieRecieveHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupplieRecieveHistory"
    objects: {
      supply: Prisma.$SuppliesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      suppliesId: string
      userId: string
      timestamp: Date
      quantity: number
      condition: string | null
    }, ExtArgs["result"]["supplieRecieveHistory"]>
    composites: {}
  }

  type SupplieRecieveHistoryGetPayload<S extends boolean | null | undefined | SupplieRecieveHistoryDefaultArgs> = $Result.GetResult<Prisma.$SupplieRecieveHistoryPayload, S>

  type SupplieRecieveHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplieRecieveHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplieRecieveHistoryCountAggregateInputType | true
    }

  export interface SupplieRecieveHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupplieRecieveHistory'], meta: { name: 'SupplieRecieveHistory' } }
    /**
     * Find zero or one SupplieRecieveHistory that matches the filter.
     * @param {SupplieRecieveHistoryFindUniqueArgs} args - Arguments to find a SupplieRecieveHistory
     * @example
     * // Get one SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplieRecieveHistoryFindUniqueArgs>(args: SelectSubset<T, SupplieRecieveHistoryFindUniqueArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupplieRecieveHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplieRecieveHistoryFindUniqueOrThrowArgs} args - Arguments to find a SupplieRecieveHistory
     * @example
     * // Get one SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplieRecieveHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplieRecieveHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplieRecieveHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryFindFirstArgs} args - Arguments to find a SupplieRecieveHistory
     * @example
     * // Get one SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplieRecieveHistoryFindFirstArgs>(args?: SelectSubset<T, SupplieRecieveHistoryFindFirstArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupplieRecieveHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryFindFirstOrThrowArgs} args - Arguments to find a SupplieRecieveHistory
     * @example
     * // Get one SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplieRecieveHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplieRecieveHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupplieRecieveHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupplieRecieveHistories
     * const supplieRecieveHistories = await prisma.supplieRecieveHistory.findMany()
     * 
     * // Get first 10 SupplieRecieveHistories
     * const supplieRecieveHistories = await prisma.supplieRecieveHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplieRecieveHistoryWithIdOnly = await prisma.supplieRecieveHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplieRecieveHistoryFindManyArgs>(args?: SelectSubset<T, SupplieRecieveHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupplieRecieveHistory.
     * @param {SupplieRecieveHistoryCreateArgs} args - Arguments to create a SupplieRecieveHistory.
     * @example
     * // Create one SupplieRecieveHistory
     * const SupplieRecieveHistory = await prisma.supplieRecieveHistory.create({
     *   data: {
     *     // ... data to create a SupplieRecieveHistory
     *   }
     * })
     * 
     */
    create<T extends SupplieRecieveHistoryCreateArgs>(args: SelectSubset<T, SupplieRecieveHistoryCreateArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupplieRecieveHistories.
     * @param {SupplieRecieveHistoryCreateManyArgs} args - Arguments to create many SupplieRecieveHistories.
     * @example
     * // Create many SupplieRecieveHistories
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplieRecieveHistoryCreateManyArgs>(args?: SelectSubset<T, SupplieRecieveHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupplieRecieveHistories and returns the data saved in the database.
     * @param {SupplieRecieveHistoryCreateManyAndReturnArgs} args - Arguments to create many SupplieRecieveHistories.
     * @example
     * // Create many SupplieRecieveHistories
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupplieRecieveHistories and only return the `id`
     * const supplieRecieveHistoryWithIdOnly = await prisma.supplieRecieveHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupplieRecieveHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SupplieRecieveHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupplieRecieveHistory.
     * @param {SupplieRecieveHistoryDeleteArgs} args - Arguments to delete one SupplieRecieveHistory.
     * @example
     * // Delete one SupplieRecieveHistory
     * const SupplieRecieveHistory = await prisma.supplieRecieveHistory.delete({
     *   where: {
     *     // ... filter to delete one SupplieRecieveHistory
     *   }
     * })
     * 
     */
    delete<T extends SupplieRecieveHistoryDeleteArgs>(args: SelectSubset<T, SupplieRecieveHistoryDeleteArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupplieRecieveHistory.
     * @param {SupplieRecieveHistoryUpdateArgs} args - Arguments to update one SupplieRecieveHistory.
     * @example
     * // Update one SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplieRecieveHistoryUpdateArgs>(args: SelectSubset<T, SupplieRecieveHistoryUpdateArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupplieRecieveHistories.
     * @param {SupplieRecieveHistoryDeleteManyArgs} args - Arguments to filter SupplieRecieveHistories to delete.
     * @example
     * // Delete a few SupplieRecieveHistories
     * const { count } = await prisma.supplieRecieveHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplieRecieveHistoryDeleteManyArgs>(args?: SelectSubset<T, SupplieRecieveHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplieRecieveHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupplieRecieveHistories
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplieRecieveHistoryUpdateManyArgs>(args: SelectSubset<T, SupplieRecieveHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupplieRecieveHistories and returns the data updated in the database.
     * @param {SupplieRecieveHistoryUpdateManyAndReturnArgs} args - Arguments to update many SupplieRecieveHistories.
     * @example
     * // Update many SupplieRecieveHistories
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupplieRecieveHistories and only return the `id`
     * const supplieRecieveHistoryWithIdOnly = await prisma.supplieRecieveHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupplieRecieveHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, SupplieRecieveHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupplieRecieveHistory.
     * @param {SupplieRecieveHistoryUpsertArgs} args - Arguments to update or create a SupplieRecieveHistory.
     * @example
     * // Update or create a SupplieRecieveHistory
     * const supplieRecieveHistory = await prisma.supplieRecieveHistory.upsert({
     *   create: {
     *     // ... data to create a SupplieRecieveHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupplieRecieveHistory we want to update
     *   }
     * })
     */
    upsert<T extends SupplieRecieveHistoryUpsertArgs>(args: SelectSubset<T, SupplieRecieveHistoryUpsertArgs<ExtArgs>>): Prisma__SupplieRecieveHistoryClient<$Result.GetResult<Prisma.$SupplieRecieveHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupplieRecieveHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryCountArgs} args - Arguments to filter SupplieRecieveHistories to count.
     * @example
     * // Count the number of SupplieRecieveHistories
     * const count = await prisma.supplieRecieveHistory.count({
     *   where: {
     *     // ... the filter for the SupplieRecieveHistories we want to count
     *   }
     * })
    **/
    count<T extends SupplieRecieveHistoryCountArgs>(
      args?: Subset<T, SupplieRecieveHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplieRecieveHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupplieRecieveHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplieRecieveHistoryAggregateArgs>(args: Subset<T, SupplieRecieveHistoryAggregateArgs>): Prisma.PrismaPromise<GetSupplieRecieveHistoryAggregateType<T>>

    /**
     * Group by SupplieRecieveHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplieRecieveHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplieRecieveHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplieRecieveHistoryGroupByArgs['orderBy'] }
        : { orderBy?: SupplieRecieveHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplieRecieveHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplieRecieveHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupplieRecieveHistory model
   */
  readonly fields: SupplieRecieveHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupplieRecieveHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplieRecieveHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supply<T extends SuppliesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDefaultArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupplieRecieveHistory model
   */
  interface SupplieRecieveHistoryFieldRefs {
    readonly id: FieldRef<"SupplieRecieveHistory", 'String'>
    readonly suppliesId: FieldRef<"SupplieRecieveHistory", 'String'>
    readonly userId: FieldRef<"SupplieRecieveHistory", 'String'>
    readonly timestamp: FieldRef<"SupplieRecieveHistory", 'DateTime'>
    readonly quantity: FieldRef<"SupplieRecieveHistory", 'Int'>
    readonly condition: FieldRef<"SupplieRecieveHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupplieRecieveHistory findUnique
   */
  export type SupplieRecieveHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SupplieRecieveHistory to fetch.
     */
    where: SupplieRecieveHistoryWhereUniqueInput
  }

  /**
   * SupplieRecieveHistory findUniqueOrThrow
   */
  export type SupplieRecieveHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SupplieRecieveHistory to fetch.
     */
    where: SupplieRecieveHistoryWhereUniqueInput
  }

  /**
   * SupplieRecieveHistory findFirst
   */
  export type SupplieRecieveHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SupplieRecieveHistory to fetch.
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplieRecieveHistories to fetch.
     */
    orderBy?: SupplieRecieveHistoryOrderByWithRelationInput | SupplieRecieveHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplieRecieveHistories.
     */
    cursor?: SupplieRecieveHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplieRecieveHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplieRecieveHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplieRecieveHistories.
     */
    distinct?: SupplieRecieveHistoryScalarFieldEnum | SupplieRecieveHistoryScalarFieldEnum[]
  }

  /**
   * SupplieRecieveHistory findFirstOrThrow
   */
  export type SupplieRecieveHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SupplieRecieveHistory to fetch.
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplieRecieveHistories to fetch.
     */
    orderBy?: SupplieRecieveHistoryOrderByWithRelationInput | SupplieRecieveHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupplieRecieveHistories.
     */
    cursor?: SupplieRecieveHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplieRecieveHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplieRecieveHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupplieRecieveHistories.
     */
    distinct?: SupplieRecieveHistoryScalarFieldEnum | SupplieRecieveHistoryScalarFieldEnum[]
  }

  /**
   * SupplieRecieveHistory findMany
   */
  export type SupplieRecieveHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SupplieRecieveHistories to fetch.
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupplieRecieveHistories to fetch.
     */
    orderBy?: SupplieRecieveHistoryOrderByWithRelationInput | SupplieRecieveHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupplieRecieveHistories.
     */
    cursor?: SupplieRecieveHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupplieRecieveHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupplieRecieveHistories.
     */
    skip?: number
    distinct?: SupplieRecieveHistoryScalarFieldEnum | SupplieRecieveHistoryScalarFieldEnum[]
  }

  /**
   * SupplieRecieveHistory create
   */
  export type SupplieRecieveHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SupplieRecieveHistory.
     */
    data: XOR<SupplieRecieveHistoryCreateInput, SupplieRecieveHistoryUncheckedCreateInput>
  }

  /**
   * SupplieRecieveHistory createMany
   */
  export type SupplieRecieveHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupplieRecieveHistories.
     */
    data: SupplieRecieveHistoryCreateManyInput | SupplieRecieveHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupplieRecieveHistory createManyAndReturn
   */
  export type SupplieRecieveHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many SupplieRecieveHistories.
     */
    data: SupplieRecieveHistoryCreateManyInput | SupplieRecieveHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplieRecieveHistory update
   */
  export type SupplieRecieveHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SupplieRecieveHistory.
     */
    data: XOR<SupplieRecieveHistoryUpdateInput, SupplieRecieveHistoryUncheckedUpdateInput>
    /**
     * Choose, which SupplieRecieveHistory to update.
     */
    where: SupplieRecieveHistoryWhereUniqueInput
  }

  /**
   * SupplieRecieveHistory updateMany
   */
  export type SupplieRecieveHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupplieRecieveHistories.
     */
    data: XOR<SupplieRecieveHistoryUpdateManyMutationInput, SupplieRecieveHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SupplieRecieveHistories to update
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * Limit how many SupplieRecieveHistories to update.
     */
    limit?: number
  }

  /**
   * SupplieRecieveHistory updateManyAndReturn
   */
  export type SupplieRecieveHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * The data used to update SupplieRecieveHistories.
     */
    data: XOR<SupplieRecieveHistoryUpdateManyMutationInput, SupplieRecieveHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SupplieRecieveHistories to update
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * Limit how many SupplieRecieveHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupplieRecieveHistory upsert
   */
  export type SupplieRecieveHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SupplieRecieveHistory to update in case it exists.
     */
    where: SupplieRecieveHistoryWhereUniqueInput
    /**
     * In case the SupplieRecieveHistory found by the `where` argument doesn't exist, create a new SupplieRecieveHistory with this data.
     */
    create: XOR<SupplieRecieveHistoryCreateInput, SupplieRecieveHistoryUncheckedCreateInput>
    /**
     * In case the SupplieRecieveHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplieRecieveHistoryUpdateInput, SupplieRecieveHistoryUncheckedUpdateInput>
  }

  /**
   * SupplieRecieveHistory delete
   */
  export type SupplieRecieveHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
    /**
     * Filter which SupplieRecieveHistory to delete.
     */
    where: SupplieRecieveHistoryWhereUniqueInput
  }

  /**
   * SupplieRecieveHistory deleteMany
   */
  export type SupplieRecieveHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupplieRecieveHistories to delete
     */
    where?: SupplieRecieveHistoryWhereInput
    /**
     * Limit how many SupplieRecieveHistories to delete.
     */
    limit?: number
  }

  /**
   * SupplieRecieveHistory without action
   */
  export type SupplieRecieveHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplieRecieveHistory
     */
    select?: SupplieRecieveHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplieRecieveHistory
     */
    omit?: SupplieRecieveHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplieRecieveHistoryInclude<ExtArgs> | null
  }


  /**
   * Model TransferredSupplies
   */

  export type AggregateTransferredSupplies = {
    _count: TransferredSuppliesCountAggregateOutputType | null
    _min: TransferredSuppliesMinAggregateOutputType | null
    _max: TransferredSuppliesMaxAggregateOutputType | null
  }

  export type TransferredSuppliesMinAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    userId: string | null
    transferredToId: string | null
    timestamp: Date | null
    condition: string | null
  }

  export type TransferredSuppliesMaxAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    userId: string | null
    transferredToId: string | null
    timestamp: Date | null
    condition: string | null
  }

  export type TransferredSuppliesCountAggregateOutputType = {
    id: number
    suppliesId: number
    userId: number
    transferredToId: number
    timestamp: number
    condition: number
    _all: number
  }


  export type TransferredSuppliesMinAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    transferredToId?: true
    timestamp?: true
    condition?: true
  }

  export type TransferredSuppliesMaxAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    transferredToId?: true
    timestamp?: true
    condition?: true
  }

  export type TransferredSuppliesCountAggregateInputType = {
    id?: true
    suppliesId?: true
    userId?: true
    transferredToId?: true
    timestamp?: true
    condition?: true
    _all?: true
  }

  export type TransferredSuppliesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransferredSupplies to aggregate.
     */
    where?: TransferredSuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferredSupplies to fetch.
     */
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransferredSuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferredSupplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferredSupplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransferredSupplies
    **/
    _count?: true | TransferredSuppliesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransferredSuppliesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransferredSuppliesMaxAggregateInputType
  }

  export type GetTransferredSuppliesAggregateType<T extends TransferredSuppliesAggregateArgs> = {
        [P in keyof T & keyof AggregateTransferredSupplies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransferredSupplies[P]>
      : GetScalarType<T[P], AggregateTransferredSupplies[P]>
  }




  export type TransferredSuppliesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferredSuppliesWhereInput
    orderBy?: TransferredSuppliesOrderByWithAggregationInput | TransferredSuppliesOrderByWithAggregationInput[]
    by: TransferredSuppliesScalarFieldEnum[] | TransferredSuppliesScalarFieldEnum
    having?: TransferredSuppliesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransferredSuppliesCountAggregateInputType | true
    _min?: TransferredSuppliesMinAggregateInputType
    _max?: TransferredSuppliesMaxAggregateInputType
  }

  export type TransferredSuppliesGroupByOutputType = {
    id: string
    suppliesId: string | null
    userId: string
    transferredToId: string
    timestamp: Date
    condition: string | null
    _count: TransferredSuppliesCountAggregateOutputType | null
    _min: TransferredSuppliesMinAggregateOutputType | null
    _max: TransferredSuppliesMaxAggregateOutputType | null
  }

  type GetTransferredSuppliesGroupByPayload<T extends TransferredSuppliesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransferredSuppliesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransferredSuppliesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransferredSuppliesGroupByOutputType[P]>
            : GetScalarType<T[P], TransferredSuppliesGroupByOutputType[P]>
        }
      >
    >


  export type TransferredSuppliesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    transferredToId?: boolean
    timestamp?: boolean
    condition?: boolean
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferredSupplies"]>

  export type TransferredSuppliesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    transferredToId?: boolean
    timestamp?: boolean
    condition?: boolean
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferredSupplies"]>

  export type TransferredSuppliesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    transferredToId?: boolean
    timestamp?: boolean
    condition?: boolean
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferredSupplies"]>

  export type TransferredSuppliesSelectScalar = {
    id?: boolean
    suppliesId?: boolean
    userId?: boolean
    transferredToId?: boolean
    timestamp?: boolean
    condition?: boolean
  }

  export type TransferredSuppliesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "suppliesId" | "userId" | "transferredToId" | "timestamp" | "condition", ExtArgs["result"]["transferredSupplies"]>
  export type TransferredSuppliesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TransferredSuppliesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TransferredSuppliesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supply?: boolean | TransferredSupplies$supplyArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transferredTo?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TransferredSuppliesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransferredSupplies"
    objects: {
      supply: Prisma.$SuppliesPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
      transferredTo: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      suppliesId: string | null
      userId: string
      transferredToId: string
      timestamp: Date
      condition: string | null
    }, ExtArgs["result"]["transferredSupplies"]>
    composites: {}
  }

  type TransferredSuppliesGetPayload<S extends boolean | null | undefined | TransferredSuppliesDefaultArgs> = $Result.GetResult<Prisma.$TransferredSuppliesPayload, S>

  type TransferredSuppliesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransferredSuppliesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransferredSuppliesCountAggregateInputType | true
    }

  export interface TransferredSuppliesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransferredSupplies'], meta: { name: 'TransferredSupplies' } }
    /**
     * Find zero or one TransferredSupplies that matches the filter.
     * @param {TransferredSuppliesFindUniqueArgs} args - Arguments to find a TransferredSupplies
     * @example
     * // Get one TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransferredSuppliesFindUniqueArgs>(args: SelectSubset<T, TransferredSuppliesFindUniqueArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TransferredSupplies that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransferredSuppliesFindUniqueOrThrowArgs} args - Arguments to find a TransferredSupplies
     * @example
     * // Get one TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransferredSuppliesFindUniqueOrThrowArgs>(args: SelectSubset<T, TransferredSuppliesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransferredSupplies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesFindFirstArgs} args - Arguments to find a TransferredSupplies
     * @example
     * // Get one TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransferredSuppliesFindFirstArgs>(args?: SelectSubset<T, TransferredSuppliesFindFirstArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransferredSupplies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesFindFirstOrThrowArgs} args - Arguments to find a TransferredSupplies
     * @example
     * // Get one TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransferredSuppliesFindFirstOrThrowArgs>(args?: SelectSubset<T, TransferredSuppliesFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TransferredSupplies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findMany()
     * 
     * // Get first 10 TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transferredSuppliesWithIdOnly = await prisma.transferredSupplies.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransferredSuppliesFindManyArgs>(args?: SelectSubset<T, TransferredSuppliesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TransferredSupplies.
     * @param {TransferredSuppliesCreateArgs} args - Arguments to create a TransferredSupplies.
     * @example
     * // Create one TransferredSupplies
     * const TransferredSupplies = await prisma.transferredSupplies.create({
     *   data: {
     *     // ... data to create a TransferredSupplies
     *   }
     * })
     * 
     */
    create<T extends TransferredSuppliesCreateArgs>(args: SelectSubset<T, TransferredSuppliesCreateArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TransferredSupplies.
     * @param {TransferredSuppliesCreateManyArgs} args - Arguments to create many TransferredSupplies.
     * @example
     * // Create many TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransferredSuppliesCreateManyArgs>(args?: SelectSubset<T, TransferredSuppliesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransferredSupplies and returns the data saved in the database.
     * @param {TransferredSuppliesCreateManyAndReturnArgs} args - Arguments to create many TransferredSupplies.
     * @example
     * // Create many TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransferredSupplies and only return the `id`
     * const transferredSuppliesWithIdOnly = await prisma.transferredSupplies.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransferredSuppliesCreateManyAndReturnArgs>(args?: SelectSubset<T, TransferredSuppliesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TransferredSupplies.
     * @param {TransferredSuppliesDeleteArgs} args - Arguments to delete one TransferredSupplies.
     * @example
     * // Delete one TransferredSupplies
     * const TransferredSupplies = await prisma.transferredSupplies.delete({
     *   where: {
     *     // ... filter to delete one TransferredSupplies
     *   }
     * })
     * 
     */
    delete<T extends TransferredSuppliesDeleteArgs>(args: SelectSubset<T, TransferredSuppliesDeleteArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TransferredSupplies.
     * @param {TransferredSuppliesUpdateArgs} args - Arguments to update one TransferredSupplies.
     * @example
     * // Update one TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransferredSuppliesUpdateArgs>(args: SelectSubset<T, TransferredSuppliesUpdateArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TransferredSupplies.
     * @param {TransferredSuppliesDeleteManyArgs} args - Arguments to filter TransferredSupplies to delete.
     * @example
     * // Delete a few TransferredSupplies
     * const { count } = await prisma.transferredSupplies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransferredSuppliesDeleteManyArgs>(args?: SelectSubset<T, TransferredSuppliesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransferredSupplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransferredSuppliesUpdateManyArgs>(args: SelectSubset<T, TransferredSuppliesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransferredSupplies and returns the data updated in the database.
     * @param {TransferredSuppliesUpdateManyAndReturnArgs} args - Arguments to update many TransferredSupplies.
     * @example
     * // Update many TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TransferredSupplies and only return the `id`
     * const transferredSuppliesWithIdOnly = await prisma.transferredSupplies.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransferredSuppliesUpdateManyAndReturnArgs>(args: SelectSubset<T, TransferredSuppliesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TransferredSupplies.
     * @param {TransferredSuppliesUpsertArgs} args - Arguments to update or create a TransferredSupplies.
     * @example
     * // Update or create a TransferredSupplies
     * const transferredSupplies = await prisma.transferredSupplies.upsert({
     *   create: {
     *     // ... data to create a TransferredSupplies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransferredSupplies we want to update
     *   }
     * })
     */
    upsert<T extends TransferredSuppliesUpsertArgs>(args: SelectSubset<T, TransferredSuppliesUpsertArgs<ExtArgs>>): Prisma__TransferredSuppliesClient<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TransferredSupplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesCountArgs} args - Arguments to filter TransferredSupplies to count.
     * @example
     * // Count the number of TransferredSupplies
     * const count = await prisma.transferredSupplies.count({
     *   where: {
     *     // ... the filter for the TransferredSupplies we want to count
     *   }
     * })
    **/
    count<T extends TransferredSuppliesCountArgs>(
      args?: Subset<T, TransferredSuppliesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransferredSuppliesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransferredSupplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransferredSuppliesAggregateArgs>(args: Subset<T, TransferredSuppliesAggregateArgs>): Prisma.PrismaPromise<GetTransferredSuppliesAggregateType<T>>

    /**
     * Group by TransferredSupplies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferredSuppliesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransferredSuppliesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransferredSuppliesGroupByArgs['orderBy'] }
        : { orderBy?: TransferredSuppliesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransferredSuppliesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransferredSuppliesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransferredSupplies model
   */
  readonly fields: TransferredSuppliesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransferredSupplies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransferredSuppliesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supply<T extends TransferredSupplies$supplyArgs<ExtArgs> = {}>(args?: Subset<T, TransferredSupplies$supplyArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transferredTo<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransferredSupplies model
   */
  interface TransferredSuppliesFieldRefs {
    readonly id: FieldRef<"TransferredSupplies", 'String'>
    readonly suppliesId: FieldRef<"TransferredSupplies", 'String'>
    readonly userId: FieldRef<"TransferredSupplies", 'String'>
    readonly transferredToId: FieldRef<"TransferredSupplies", 'String'>
    readonly timestamp: FieldRef<"TransferredSupplies", 'DateTime'>
    readonly condition: FieldRef<"TransferredSupplies", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TransferredSupplies findUnique
   */
  export type TransferredSuppliesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter, which TransferredSupplies to fetch.
     */
    where: TransferredSuppliesWhereUniqueInput
  }

  /**
   * TransferredSupplies findUniqueOrThrow
   */
  export type TransferredSuppliesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter, which TransferredSupplies to fetch.
     */
    where: TransferredSuppliesWhereUniqueInput
  }

  /**
   * TransferredSupplies findFirst
   */
  export type TransferredSuppliesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter, which TransferredSupplies to fetch.
     */
    where?: TransferredSuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferredSupplies to fetch.
     */
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransferredSupplies.
     */
    cursor?: TransferredSuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferredSupplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferredSupplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransferredSupplies.
     */
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * TransferredSupplies findFirstOrThrow
   */
  export type TransferredSuppliesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter, which TransferredSupplies to fetch.
     */
    where?: TransferredSuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferredSupplies to fetch.
     */
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransferredSupplies.
     */
    cursor?: TransferredSuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferredSupplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferredSupplies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransferredSupplies.
     */
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * TransferredSupplies findMany
   */
  export type TransferredSuppliesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter, which TransferredSupplies to fetch.
     */
    where?: TransferredSuppliesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferredSupplies to fetch.
     */
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransferredSupplies.
     */
    cursor?: TransferredSuppliesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferredSupplies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferredSupplies.
     */
    skip?: number
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * TransferredSupplies create
   */
  export type TransferredSuppliesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * The data needed to create a TransferredSupplies.
     */
    data: XOR<TransferredSuppliesCreateInput, TransferredSuppliesUncheckedCreateInput>
  }

  /**
   * TransferredSupplies createMany
   */
  export type TransferredSuppliesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransferredSupplies.
     */
    data: TransferredSuppliesCreateManyInput | TransferredSuppliesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransferredSupplies createManyAndReturn
   */
  export type TransferredSuppliesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * The data used to create many TransferredSupplies.
     */
    data: TransferredSuppliesCreateManyInput | TransferredSuppliesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransferredSupplies update
   */
  export type TransferredSuppliesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * The data needed to update a TransferredSupplies.
     */
    data: XOR<TransferredSuppliesUpdateInput, TransferredSuppliesUncheckedUpdateInput>
    /**
     * Choose, which TransferredSupplies to update.
     */
    where: TransferredSuppliesWhereUniqueInput
  }

  /**
   * TransferredSupplies updateMany
   */
  export type TransferredSuppliesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransferredSupplies.
     */
    data: XOR<TransferredSuppliesUpdateManyMutationInput, TransferredSuppliesUncheckedUpdateManyInput>
    /**
     * Filter which TransferredSupplies to update
     */
    where?: TransferredSuppliesWhereInput
    /**
     * Limit how many TransferredSupplies to update.
     */
    limit?: number
  }

  /**
   * TransferredSupplies updateManyAndReturn
   */
  export type TransferredSuppliesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * The data used to update TransferredSupplies.
     */
    data: XOR<TransferredSuppliesUpdateManyMutationInput, TransferredSuppliesUncheckedUpdateManyInput>
    /**
     * Filter which TransferredSupplies to update
     */
    where?: TransferredSuppliesWhereInput
    /**
     * Limit how many TransferredSupplies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransferredSupplies upsert
   */
  export type TransferredSuppliesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * The filter to search for the TransferredSupplies to update in case it exists.
     */
    where: TransferredSuppliesWhereUniqueInput
    /**
     * In case the TransferredSupplies found by the `where` argument doesn't exist, create a new TransferredSupplies with this data.
     */
    create: XOR<TransferredSuppliesCreateInput, TransferredSuppliesUncheckedCreateInput>
    /**
     * In case the TransferredSupplies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransferredSuppliesUpdateInput, TransferredSuppliesUncheckedUpdateInput>
  }

  /**
   * TransferredSupplies delete
   */
  export type TransferredSuppliesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    /**
     * Filter which TransferredSupplies to delete.
     */
    where: TransferredSuppliesWhereUniqueInput
  }

  /**
   * TransferredSupplies deleteMany
   */
  export type TransferredSuppliesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransferredSupplies to delete
     */
    where?: TransferredSuppliesWhereInput
    /**
     * Limit how many TransferredSupplies to delete.
     */
    limit?: number
  }

  /**
   * TransferredSupplies.supply
   */
  export type TransferredSupplies$supplyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
  }

  /**
   * TransferredSupplies without action
   */
  export type TransferredSuppliesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
  }


  /**
   * Model SuppliesRecord
   */

  export type AggregateSuppliesRecord = {
    _count: SuppliesRecordCountAggregateOutputType | null
    _avg: SuppliesRecordAvgAggregateOutputType | null
    _sum: SuppliesRecordSumAggregateOutputType | null
    _min: SuppliesRecordMinAggregateOutputType | null
    _max: SuppliesRecordMaxAggregateOutputType | null
  }

  export type SuppliesRecordAvgAggregateOutputType = {
    status: number | null
  }

  export type SuppliesRecordSumAggregateOutputType = {
    status: number | null
  }

  export type SuppliesRecordMinAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    timestamp: Date | null
    userId: string | null
    action: string | null
    status: number | null
    description: string | null
    modifiedId: string | null
  }

  export type SuppliesRecordMaxAggregateOutputType = {
    id: string | null
    suppliesId: string | null
    timestamp: Date | null
    userId: string | null
    action: string | null
    status: number | null
    description: string | null
    modifiedId: string | null
  }

  export type SuppliesRecordCountAggregateOutputType = {
    id: number
    suppliesId: number
    timestamp: number
    userId: number
    action: number
    status: number
    description: number
    modifiedId: number
    _all: number
  }


  export type SuppliesRecordAvgAggregateInputType = {
    status?: true
  }

  export type SuppliesRecordSumAggregateInputType = {
    status?: true
  }

  export type SuppliesRecordMinAggregateInputType = {
    id?: true
    suppliesId?: true
    timestamp?: true
    userId?: true
    action?: true
    status?: true
    description?: true
    modifiedId?: true
  }

  export type SuppliesRecordMaxAggregateInputType = {
    id?: true
    suppliesId?: true
    timestamp?: true
    userId?: true
    action?: true
    status?: true
    description?: true
    modifiedId?: true
  }

  export type SuppliesRecordCountAggregateInputType = {
    id?: true
    suppliesId?: true
    timestamp?: true
    userId?: true
    action?: true
    status?: true
    description?: true
    modifiedId?: true
    _all?: true
  }

  export type SuppliesRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesRecord to aggregate.
     */
    where?: SuppliesRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesRecords to fetch.
     */
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SuppliesRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SuppliesRecords
    **/
    _count?: true | SuppliesRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SuppliesRecordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SuppliesRecordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuppliesRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuppliesRecordMaxAggregateInputType
  }

  export type GetSuppliesRecordAggregateType<T extends SuppliesRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateSuppliesRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuppliesRecord[P]>
      : GetScalarType<T[P], AggregateSuppliesRecord[P]>
  }




  export type SuppliesRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SuppliesRecordWhereInput
    orderBy?: SuppliesRecordOrderByWithAggregationInput | SuppliesRecordOrderByWithAggregationInput[]
    by: SuppliesRecordScalarFieldEnum[] | SuppliesRecordScalarFieldEnum
    having?: SuppliesRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuppliesRecordCountAggregateInputType | true
    _avg?: SuppliesRecordAvgAggregateInputType
    _sum?: SuppliesRecordSumAggregateInputType
    _min?: SuppliesRecordMinAggregateInputType
    _max?: SuppliesRecordMaxAggregateInputType
  }

  export type SuppliesRecordGroupByOutputType = {
    id: string
    suppliesId: string
    timestamp: Date
    userId: string
    action: string
    status: number
    description: string | null
    modifiedId: string | null
    _count: SuppliesRecordCountAggregateOutputType | null
    _avg: SuppliesRecordAvgAggregateOutputType | null
    _sum: SuppliesRecordSumAggregateOutputType | null
    _min: SuppliesRecordMinAggregateOutputType | null
    _max: SuppliesRecordMaxAggregateOutputType | null
  }

  type GetSuppliesRecordGroupByPayload<T extends SuppliesRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuppliesRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuppliesRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuppliesRecordGroupByOutputType[P]>
            : GetScalarType<T[P], SuppliesRecordGroupByOutputType[P]>
        }
      >
    >


  export type SuppliesRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    userId?: boolean
    action?: boolean
    status?: boolean
    description?: boolean
    modifiedId?: boolean
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesRecord"]>

  export type SuppliesRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    userId?: boolean
    action?: boolean
    status?: boolean
    description?: boolean
    modifiedId?: boolean
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesRecord"]>

  export type SuppliesRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    userId?: boolean
    action?: boolean
    status?: boolean
    description?: boolean
    modifiedId?: boolean
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }, ExtArgs["result"]["suppliesRecord"]>

  export type SuppliesRecordSelectScalar = {
    id?: boolean
    suppliesId?: boolean
    timestamp?: boolean
    userId?: boolean
    action?: boolean
    status?: boolean
    description?: boolean
    modifiedId?: boolean
  }

  export type SuppliesRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "suppliesId" | "timestamp" | "userId" | "action" | "status" | "description" | "modifiedId", ExtArgs["result"]["suppliesRecord"]>
  export type SuppliesRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }
  export type SuppliesRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }
  export type SuppliesRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    suppyId?: boolean | SuppliesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    modified?: boolean | SuppliesRecord$modifiedArgs<ExtArgs>
  }

  export type $SuppliesRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SuppliesRecord"
    objects: {
      suppyId: Prisma.$SuppliesPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      modified: Prisma.$SuppliesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      suppliesId: string
      timestamp: Date
      userId: string
      action: string
      status: number
      description: string | null
      modifiedId: string | null
    }, ExtArgs["result"]["suppliesRecord"]>
    composites: {}
  }

  type SuppliesRecordGetPayload<S extends boolean | null | undefined | SuppliesRecordDefaultArgs> = $Result.GetResult<Prisma.$SuppliesRecordPayload, S>

  type SuppliesRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SuppliesRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuppliesRecordCountAggregateInputType | true
    }

  export interface SuppliesRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SuppliesRecord'], meta: { name: 'SuppliesRecord' } }
    /**
     * Find zero or one SuppliesRecord that matches the filter.
     * @param {SuppliesRecordFindUniqueArgs} args - Arguments to find a SuppliesRecord
     * @example
     * // Get one SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SuppliesRecordFindUniqueArgs>(args: SelectSubset<T, SuppliesRecordFindUniqueArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SuppliesRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SuppliesRecordFindUniqueOrThrowArgs} args - Arguments to find a SuppliesRecord
     * @example
     * // Get one SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SuppliesRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, SuppliesRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordFindFirstArgs} args - Arguments to find a SuppliesRecord
     * @example
     * // Get one SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SuppliesRecordFindFirstArgs>(args?: SelectSubset<T, SuppliesRecordFindFirstArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SuppliesRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordFindFirstOrThrowArgs} args - Arguments to find a SuppliesRecord
     * @example
     * // Get one SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SuppliesRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, SuppliesRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SuppliesRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SuppliesRecords
     * const suppliesRecords = await prisma.suppliesRecord.findMany()
     * 
     * // Get first 10 SuppliesRecords
     * const suppliesRecords = await prisma.suppliesRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const suppliesRecordWithIdOnly = await prisma.suppliesRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SuppliesRecordFindManyArgs>(args?: SelectSubset<T, SuppliesRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SuppliesRecord.
     * @param {SuppliesRecordCreateArgs} args - Arguments to create a SuppliesRecord.
     * @example
     * // Create one SuppliesRecord
     * const SuppliesRecord = await prisma.suppliesRecord.create({
     *   data: {
     *     // ... data to create a SuppliesRecord
     *   }
     * })
     * 
     */
    create<T extends SuppliesRecordCreateArgs>(args: SelectSubset<T, SuppliesRecordCreateArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SuppliesRecords.
     * @param {SuppliesRecordCreateManyArgs} args - Arguments to create many SuppliesRecords.
     * @example
     * // Create many SuppliesRecords
     * const suppliesRecord = await prisma.suppliesRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SuppliesRecordCreateManyArgs>(args?: SelectSubset<T, SuppliesRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SuppliesRecords and returns the data saved in the database.
     * @param {SuppliesRecordCreateManyAndReturnArgs} args - Arguments to create many SuppliesRecords.
     * @example
     * // Create many SuppliesRecords
     * const suppliesRecord = await prisma.suppliesRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SuppliesRecords and only return the `id`
     * const suppliesRecordWithIdOnly = await prisma.suppliesRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SuppliesRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, SuppliesRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SuppliesRecord.
     * @param {SuppliesRecordDeleteArgs} args - Arguments to delete one SuppliesRecord.
     * @example
     * // Delete one SuppliesRecord
     * const SuppliesRecord = await prisma.suppliesRecord.delete({
     *   where: {
     *     // ... filter to delete one SuppliesRecord
     *   }
     * })
     * 
     */
    delete<T extends SuppliesRecordDeleteArgs>(args: SelectSubset<T, SuppliesRecordDeleteArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SuppliesRecord.
     * @param {SuppliesRecordUpdateArgs} args - Arguments to update one SuppliesRecord.
     * @example
     * // Update one SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SuppliesRecordUpdateArgs>(args: SelectSubset<T, SuppliesRecordUpdateArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SuppliesRecords.
     * @param {SuppliesRecordDeleteManyArgs} args - Arguments to filter SuppliesRecords to delete.
     * @example
     * // Delete a few SuppliesRecords
     * const { count } = await prisma.suppliesRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SuppliesRecordDeleteManyArgs>(args?: SelectSubset<T, SuppliesRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SuppliesRecords
     * const suppliesRecord = await prisma.suppliesRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SuppliesRecordUpdateManyArgs>(args: SelectSubset<T, SuppliesRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SuppliesRecords and returns the data updated in the database.
     * @param {SuppliesRecordUpdateManyAndReturnArgs} args - Arguments to update many SuppliesRecords.
     * @example
     * // Update many SuppliesRecords
     * const suppliesRecord = await prisma.suppliesRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SuppliesRecords and only return the `id`
     * const suppliesRecordWithIdOnly = await prisma.suppliesRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SuppliesRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, SuppliesRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SuppliesRecord.
     * @param {SuppliesRecordUpsertArgs} args - Arguments to update or create a SuppliesRecord.
     * @example
     * // Update or create a SuppliesRecord
     * const suppliesRecord = await prisma.suppliesRecord.upsert({
     *   create: {
     *     // ... data to create a SuppliesRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SuppliesRecord we want to update
     *   }
     * })
     */
    upsert<T extends SuppliesRecordUpsertArgs>(args: SelectSubset<T, SuppliesRecordUpsertArgs<ExtArgs>>): Prisma__SuppliesRecordClient<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SuppliesRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordCountArgs} args - Arguments to filter SuppliesRecords to count.
     * @example
     * // Count the number of SuppliesRecords
     * const count = await prisma.suppliesRecord.count({
     *   where: {
     *     // ... the filter for the SuppliesRecords we want to count
     *   }
     * })
    **/
    count<T extends SuppliesRecordCountArgs>(
      args?: Subset<T, SuppliesRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuppliesRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SuppliesRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuppliesRecordAggregateArgs>(args: Subset<T, SuppliesRecordAggregateArgs>): Prisma.PrismaPromise<GetSuppliesRecordAggregateType<T>>

    /**
     * Group by SuppliesRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuppliesRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SuppliesRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SuppliesRecordGroupByArgs['orderBy'] }
        : { orderBy?: SuppliesRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SuppliesRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuppliesRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SuppliesRecord model
   */
  readonly fields: SuppliesRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SuppliesRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SuppliesRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    suppyId<T extends SuppliesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesDefaultArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    modified<T extends SuppliesRecord$modifiedArgs<ExtArgs> = {}>(args?: Subset<T, SuppliesRecord$modifiedArgs<ExtArgs>>): Prisma__SuppliesClient<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SuppliesRecord model
   */
  interface SuppliesRecordFieldRefs {
    readonly id: FieldRef<"SuppliesRecord", 'String'>
    readonly suppliesId: FieldRef<"SuppliesRecord", 'String'>
    readonly timestamp: FieldRef<"SuppliesRecord", 'DateTime'>
    readonly userId: FieldRef<"SuppliesRecord", 'String'>
    readonly action: FieldRef<"SuppliesRecord", 'String'>
    readonly status: FieldRef<"SuppliesRecord", 'Int'>
    readonly description: FieldRef<"SuppliesRecord", 'String'>
    readonly modifiedId: FieldRef<"SuppliesRecord", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SuppliesRecord findUnique
   */
  export type SuppliesRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesRecord to fetch.
     */
    where: SuppliesRecordWhereUniqueInput
  }

  /**
   * SuppliesRecord findUniqueOrThrow
   */
  export type SuppliesRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesRecord to fetch.
     */
    where: SuppliesRecordWhereUniqueInput
  }

  /**
   * SuppliesRecord findFirst
   */
  export type SuppliesRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesRecord to fetch.
     */
    where?: SuppliesRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesRecords to fetch.
     */
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesRecords.
     */
    cursor?: SuppliesRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesRecords.
     */
    distinct?: SuppliesRecordScalarFieldEnum | SuppliesRecordScalarFieldEnum[]
  }

  /**
   * SuppliesRecord findFirstOrThrow
   */
  export type SuppliesRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesRecord to fetch.
     */
    where?: SuppliesRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesRecords to fetch.
     */
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SuppliesRecords.
     */
    cursor?: SuppliesRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SuppliesRecords.
     */
    distinct?: SuppliesRecordScalarFieldEnum | SuppliesRecordScalarFieldEnum[]
  }

  /**
   * SuppliesRecord findMany
   */
  export type SuppliesRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter, which SuppliesRecords to fetch.
     */
    where?: SuppliesRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SuppliesRecords to fetch.
     */
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SuppliesRecords.
     */
    cursor?: SuppliesRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SuppliesRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SuppliesRecords.
     */
    skip?: number
    distinct?: SuppliesRecordScalarFieldEnum | SuppliesRecordScalarFieldEnum[]
  }

  /**
   * SuppliesRecord create
   */
  export type SuppliesRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a SuppliesRecord.
     */
    data: XOR<SuppliesRecordCreateInput, SuppliesRecordUncheckedCreateInput>
  }

  /**
   * SuppliesRecord createMany
   */
  export type SuppliesRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SuppliesRecords.
     */
    data: SuppliesRecordCreateManyInput | SuppliesRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SuppliesRecord createManyAndReturn
   */
  export type SuppliesRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * The data used to create many SuppliesRecords.
     */
    data: SuppliesRecordCreateManyInput | SuppliesRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesRecord update
   */
  export type SuppliesRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a SuppliesRecord.
     */
    data: XOR<SuppliesRecordUpdateInput, SuppliesRecordUncheckedUpdateInput>
    /**
     * Choose, which SuppliesRecord to update.
     */
    where: SuppliesRecordWhereUniqueInput
  }

  /**
   * SuppliesRecord updateMany
   */
  export type SuppliesRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SuppliesRecords.
     */
    data: XOR<SuppliesRecordUpdateManyMutationInput, SuppliesRecordUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesRecords to update
     */
    where?: SuppliesRecordWhereInput
    /**
     * Limit how many SuppliesRecords to update.
     */
    limit?: number
  }

  /**
   * SuppliesRecord updateManyAndReturn
   */
  export type SuppliesRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * The data used to update SuppliesRecords.
     */
    data: XOR<SuppliesRecordUpdateManyMutationInput, SuppliesRecordUncheckedUpdateManyInput>
    /**
     * Filter which SuppliesRecords to update
     */
    where?: SuppliesRecordWhereInput
    /**
     * Limit how many SuppliesRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SuppliesRecord upsert
   */
  export type SuppliesRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the SuppliesRecord to update in case it exists.
     */
    where: SuppliesRecordWhereUniqueInput
    /**
     * In case the SuppliesRecord found by the `where` argument doesn't exist, create a new SuppliesRecord with this data.
     */
    create: XOR<SuppliesRecordCreateInput, SuppliesRecordUncheckedCreateInput>
    /**
     * In case the SuppliesRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SuppliesRecordUpdateInput, SuppliesRecordUncheckedUpdateInput>
  }

  /**
   * SuppliesRecord delete
   */
  export type SuppliesRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    /**
     * Filter which SuppliesRecord to delete.
     */
    where: SuppliesRecordWhereUniqueInput
  }

  /**
   * SuppliesRecord deleteMany
   */
  export type SuppliesRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SuppliesRecords to delete
     */
    where?: SuppliesRecordWhereInput
    /**
     * Limit how many SuppliesRecords to delete.
     */
    limit?: number
  }

  /**
   * SuppliesRecord.modified
   */
  export type SuppliesRecord$modifiedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
  }

  /**
   * SuppliesRecord without action
   */
  export type SuppliesRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
  }


  /**
   * Model Application
   */

  export type AggregateApplication = {
    _count: ApplicationCountAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  export type ApplicationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    positionId: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    positionId: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationCountAggregateOutputType = {
    id: number
    userId: number
    positionId: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ApplicationMinAggregateInputType = {
    id?: true
    userId?: true
    positionId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationMaxAggregateInputType = {
    id?: true
    userId?: true
    positionId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationCountAggregateInputType = {
    id?: true
    userId?: true
    positionId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Application to aggregate.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Applications
    **/
    _count?: true | ApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationMaxAggregateInputType
  }

  export type GetApplicationAggregateType<T extends ApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplication[P]>
      : GetScalarType<T[P], AggregateApplication[P]>
  }




  export type ApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithAggregationInput | ApplicationOrderByWithAggregationInput[]
    by: ApplicationScalarFieldEnum[] | ApplicationScalarFieldEnum
    having?: ApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationCountAggregateInputType | true
    _min?: ApplicationMinAggregateInputType
    _max?: ApplicationMaxAggregateInputType
  }

  export type ApplicationGroupByOutputType = {
    id: string
    userId: string
    positionId: string
    status: string
    createdAt: Date
    updatedAt: Date
    _count: ApplicationCountAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  type GetApplicationGroupByPayload<T extends ApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    positionId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    positionId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    positionId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectScalar = {
    id?: boolean
    userId?: boolean
    positionId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "positionId" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["application"]>
  export type ApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }
  export type ApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }
  export type ApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    position?: boolean | PositionDefaultArgs<ExtArgs>
  }

  export type $ApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Application"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      position: Prisma.$PositionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      positionId: string
      status: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["application"]>
    composites: {}
  }

  type ApplicationGetPayload<S extends boolean | null | undefined | ApplicationDefaultArgs> = $Result.GetResult<Prisma.$ApplicationPayload, S>

  type ApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationCountAggregateInputType | true
    }

  export interface ApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Application'], meta: { name: 'Application' } }
    /**
     * Find zero or one Application that matches the filter.
     * @param {ApplicationFindUniqueArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationFindUniqueArgs>(args: SelectSubset<T, ApplicationFindUniqueArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Application that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationFindUniqueOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationFindFirstArgs>(args?: SelectSubset<T, ApplicationFindFirstArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Applications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Applications
     * const applications = await prisma.application.findMany()
     * 
     * // Get first 10 Applications
     * const applications = await prisma.application.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationWithIdOnly = await prisma.application.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationFindManyArgs>(args?: SelectSubset<T, ApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Application.
     * @param {ApplicationCreateArgs} args - Arguments to create a Application.
     * @example
     * // Create one Application
     * const Application = await prisma.application.create({
     *   data: {
     *     // ... data to create a Application
     *   }
     * })
     * 
     */
    create<T extends ApplicationCreateArgs>(args: SelectSubset<T, ApplicationCreateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Applications.
     * @param {ApplicationCreateManyArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationCreateManyArgs>(args?: SelectSubset<T, ApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Applications and returns the data saved in the database.
     * @param {ApplicationCreateManyAndReturnArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Application.
     * @param {ApplicationDeleteArgs} args - Arguments to delete one Application.
     * @example
     * // Delete one Application
     * const Application = await prisma.application.delete({
     *   where: {
     *     // ... filter to delete one Application
     *   }
     * })
     * 
     */
    delete<T extends ApplicationDeleteArgs>(args: SelectSubset<T, ApplicationDeleteArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Application.
     * @param {ApplicationUpdateArgs} args - Arguments to update one Application.
     * @example
     * // Update one Application
     * const application = await prisma.application.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationUpdateArgs>(args: SelectSubset<T, ApplicationUpdateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Applications.
     * @param {ApplicationDeleteManyArgs} args - Arguments to filter Applications to delete.
     * @example
     * // Delete a few Applications
     * const { count } = await prisma.application.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationDeleteManyArgs>(args?: SelectSubset<T, ApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationUpdateManyArgs>(args: SelectSubset<T, ApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications and returns the data updated in the database.
     * @param {ApplicationUpdateManyAndReturnArgs} args - Arguments to update many Applications.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Application.
     * @param {ApplicationUpsertArgs} args - Arguments to update or create a Application.
     * @example
     * // Update or create a Application
     * const application = await prisma.application.upsert({
     *   create: {
     *     // ... data to create a Application
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Application we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationUpsertArgs>(args: SelectSubset<T, ApplicationUpsertArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCountArgs} args - Arguments to filter Applications to count.
     * @example
     * // Count the number of Applications
     * const count = await prisma.application.count({
     *   where: {
     *     // ... the filter for the Applications we want to count
     *   }
     * })
    **/
    count<T extends ApplicationCountArgs>(
      args?: Subset<T, ApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationAggregateArgs>(args: Subset<T, ApplicationAggregateArgs>): Prisma.PrismaPromise<GetApplicationAggregateType<T>>

    /**
     * Group by Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Application model
   */
  readonly fields: ApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Application.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    position<T extends PositionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PositionDefaultArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Application model
   */
  interface ApplicationFieldRefs {
    readonly id: FieldRef<"Application", 'String'>
    readonly userId: FieldRef<"Application", 'String'>
    readonly positionId: FieldRef<"Application", 'String'>
    readonly status: FieldRef<"Application", 'String'>
    readonly createdAt: FieldRef<"Application", 'DateTime'>
    readonly updatedAt: FieldRef<"Application", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Application findUnique
   */
  export type ApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findUniqueOrThrow
   */
  export type ApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findFirst
   */
  export type ApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findFirstOrThrow
   */
  export type ApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findMany
   */
  export type ApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Applications to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application create
   */
  export type ApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Application.
     */
    data: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
  }

  /**
   * Application createMany
   */
  export type ApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Application createManyAndReturn
   */
  export type ApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application update
   */
  export type ApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Application.
     */
    data: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
    /**
     * Choose, which Application to update.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application updateMany
   */
  export type ApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
  }

  /**
   * Application updateManyAndReturn
   */
  export type ApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application upsert
   */
  export type ApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Application to update in case it exists.
     */
    where: ApplicationWhereUniqueInput
    /**
     * In case the Application found by the `where` argument doesn't exist, create a new Application with this data.
     */
    create: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
    /**
     * In case the Application was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
  }

  /**
   * Application delete
   */
  export type ApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter which Application to delete.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application deleteMany
   */
  export type ApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Applications to delete
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to delete.
     */
    limit?: number
  }

  /**
   * Application without action
   */
  export type ApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
  }


  /**
   * Model Department
   */

  export type AggregateDepartment = {
    _count: DepartmentCountAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  export type DepartmentMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    headId: string | null
    idCode: string | null
    lineId: string | null
  }

  export type DepartmentMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    headId: string | null
    idCode: string | null
    lineId: string | null
  }

  export type DepartmentCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    headId: number
    idCode: number
    lineId: number
    _all: number
  }


  export type DepartmentMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    headId?: true
    idCode?: true
    lineId?: true
  }

  export type DepartmentMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    headId?: true
    idCode?: true
    lineId?: true
  }

  export type DepartmentCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    headId?: true
    idCode?: true
    lineId?: true
    _all?: true
  }

  export type DepartmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Department to aggregate.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departments
    **/
    _count?: true | DepartmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartmentMaxAggregateInputType
  }

  export type GetDepartmentAggregateType<T extends DepartmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartment[P]>
      : GetScalarType<T[P], AggregateDepartment[P]>
  }




  export type DepartmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithAggregationInput | DepartmentOrderByWithAggregationInput[]
    by: DepartmentScalarFieldEnum[] | DepartmentScalarFieldEnum
    having?: DepartmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartmentCountAggregateInputType | true
    _min?: DepartmentMinAggregateInputType
    _max?: DepartmentMaxAggregateInputType
  }

  export type DepartmentGroupByOutputType = {
    id: string
    name: string
    description: string | null
    createdAt: Date
    headId: string | null
    idCode: string | null
    lineId: string | null
    _count: DepartmentCountAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  type GetDepartmentGroupByPayload<T extends DepartmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
            : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
        }
      >
    >


  export type DepartmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    headId?: boolean
    idCode?: boolean
    lineId?: boolean
    head?: boolean | Department$headArgs<ExtArgs>
    users?: boolean | Department$usersArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
    Position?: boolean | Department$PositionArgs<ExtArgs>
    Announcement?: boolean | Department$AnnouncementArgs<ExtArgs>
    Group?: boolean | Department$GroupArgs<ExtArgs>
    InventoryBox?: boolean | Department$InventoryBoxArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    headId?: boolean
    idCode?: boolean
    lineId?: boolean
    head?: boolean | Department$headArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    headId?: boolean
    idCode?: boolean
    lineId?: boolean
    head?: boolean | Department$headArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    headId?: boolean
    idCode?: boolean
    lineId?: boolean
  }

  export type DepartmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "createdAt" | "headId" | "idCode" | "lineId", ExtArgs["result"]["department"]>
  export type DepartmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | Department$headArgs<ExtArgs>
    users?: boolean | Department$usersArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
    Position?: boolean | Department$PositionArgs<ExtArgs>
    Announcement?: boolean | Department$AnnouncementArgs<ExtArgs>
    Group?: boolean | Department$GroupArgs<ExtArgs>
    InventoryBox?: boolean | Department$InventoryBoxArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | Department$headArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
  }
  export type DepartmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | Department$headArgs<ExtArgs>
    line?: boolean | Department$lineArgs<ExtArgs>
  }

  export type $DepartmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Department"
    objects: {
      head: Prisma.$UserPayload<ExtArgs> | null
      users: Prisma.$UserPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
      Position: Prisma.$PositionPayload<ExtArgs>[]
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      Group: Prisma.$GroupPayload<ExtArgs>[]
      InventoryBox: Prisma.$InventoryBoxPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      createdAt: Date
      headId: string | null
      idCode: string | null
      lineId: string | null
    }, ExtArgs["result"]["department"]>
    composites: {}
  }

  type DepartmentGetPayload<S extends boolean | null | undefined | DepartmentDefaultArgs> = $Result.GetResult<Prisma.$DepartmentPayload, S>

  type DepartmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DepartmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartmentCountAggregateInputType | true
    }

  export interface DepartmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Department'], meta: { name: 'Department' } }
    /**
     * Find zero or one Department that matches the filter.
     * @param {DepartmentFindUniqueArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepartmentFindUniqueArgs>(args: SelectSubset<T, DepartmentFindUniqueArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Department that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DepartmentFindUniqueOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepartmentFindUniqueOrThrowArgs>(args: SelectSubset<T, DepartmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepartmentFindFirstArgs>(args?: SelectSubset<T, DepartmentFindFirstArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepartmentFindFirstOrThrowArgs>(args?: SelectSubset<T, DepartmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departments
     * const departments = await prisma.department.findMany()
     * 
     * // Get first 10 Departments
     * const departments = await prisma.department.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departmentWithIdOnly = await prisma.department.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepartmentFindManyArgs>(args?: SelectSubset<T, DepartmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Department.
     * @param {DepartmentCreateArgs} args - Arguments to create a Department.
     * @example
     * // Create one Department
     * const Department = await prisma.department.create({
     *   data: {
     *     // ... data to create a Department
     *   }
     * })
     * 
     */
    create<T extends DepartmentCreateArgs>(args: SelectSubset<T, DepartmentCreateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departments.
     * @param {DepartmentCreateManyArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepartmentCreateManyArgs>(args?: SelectSubset<T, DepartmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departments and returns the data saved in the database.
     * @param {DepartmentCreateManyAndReturnArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepartmentCreateManyAndReturnArgs>(args?: SelectSubset<T, DepartmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Department.
     * @param {DepartmentDeleteArgs} args - Arguments to delete one Department.
     * @example
     * // Delete one Department
     * const Department = await prisma.department.delete({
     *   where: {
     *     // ... filter to delete one Department
     *   }
     * })
     * 
     */
    delete<T extends DepartmentDeleteArgs>(args: SelectSubset<T, DepartmentDeleteArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Department.
     * @param {DepartmentUpdateArgs} args - Arguments to update one Department.
     * @example
     * // Update one Department
     * const department = await prisma.department.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepartmentUpdateArgs>(args: SelectSubset<T, DepartmentUpdateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departments.
     * @param {DepartmentDeleteManyArgs} args - Arguments to filter Departments to delete.
     * @example
     * // Delete a few Departments
     * const { count } = await prisma.department.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepartmentDeleteManyArgs>(args?: SelectSubset<T, DepartmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepartmentUpdateManyArgs>(args: SelectSubset<T, DepartmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments and returns the data updated in the database.
     * @param {DepartmentUpdateManyAndReturnArgs} args - Arguments to update many Departments.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DepartmentUpdateManyAndReturnArgs>(args: SelectSubset<T, DepartmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Department.
     * @param {DepartmentUpsertArgs} args - Arguments to update or create a Department.
     * @example
     * // Update or create a Department
     * const department = await prisma.department.upsert({
     *   create: {
     *     // ... data to create a Department
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Department we want to update
     *   }
     * })
     */
    upsert<T extends DepartmentUpsertArgs>(args: SelectSubset<T, DepartmentUpsertArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentCountArgs} args - Arguments to filter Departments to count.
     * @example
     * // Count the number of Departments
     * const count = await prisma.department.count({
     *   where: {
     *     // ... the filter for the Departments we want to count
     *   }
     * })
    **/
    count<T extends DepartmentCountArgs>(
      args?: Subset<T, DepartmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartmentAggregateArgs>(args: Subset<T, DepartmentAggregateArgs>): Prisma.PrismaPromise<GetDepartmentAggregateType<T>>

    /**
     * Group by Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartmentGroupByArgs['orderBy'] }
        : { orderBy?: DepartmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Department model
   */
  readonly fields: DepartmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Department.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    head<T extends Department$headArgs<ExtArgs> = {}>(args?: Subset<T, Department$headArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends Department$usersArgs<ExtArgs> = {}>(args?: Subset<T, Department$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends Department$lineArgs<ExtArgs> = {}>(args?: Subset<T, Department$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Position<T extends Department$PositionArgs<ExtArgs> = {}>(args?: Subset<T, Department$PositionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Announcement<T extends Department$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, Department$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Group<T extends Department$GroupArgs<ExtArgs> = {}>(args?: Subset<T, Department$GroupArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InventoryBox<T extends Department$InventoryBoxArgs<ExtArgs> = {}>(args?: Subset<T, Department$InventoryBoxArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Department model
   */
  interface DepartmentFieldRefs {
    readonly id: FieldRef<"Department", 'String'>
    readonly name: FieldRef<"Department", 'String'>
    readonly description: FieldRef<"Department", 'String'>
    readonly createdAt: FieldRef<"Department", 'DateTime'>
    readonly headId: FieldRef<"Department", 'String'>
    readonly idCode: FieldRef<"Department", 'String'>
    readonly lineId: FieldRef<"Department", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Department findUnique
   */
  export type DepartmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findUniqueOrThrow
   */
  export type DepartmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findFirst
   */
  export type DepartmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findFirstOrThrow
   */
  export type DepartmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findMany
   */
  export type DepartmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Departments to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department create
   */
  export type DepartmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Department.
     */
    data: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
  }

  /**
   * Department createMany
   */
  export type DepartmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Department createManyAndReturn
   */
  export type DepartmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department update
   */
  export type DepartmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Department.
     */
    data: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
    /**
     * Choose, which Department to update.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department updateMany
   */
  export type DepartmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
  }

  /**
   * Department updateManyAndReturn
   */
  export type DepartmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department upsert
   */
  export type DepartmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Department to update in case it exists.
     */
    where: DepartmentWhereUniqueInput
    /**
     * In case the Department found by the `where` argument doesn't exist, create a new Department with this data.
     */
    create: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
    /**
     * In case the Department was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
  }

  /**
   * Department delete
   */
  export type DepartmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter which Department to delete.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department deleteMany
   */
  export type DepartmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departments to delete
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to delete.
     */
    limit?: number
  }

  /**
   * Department.head
   */
  export type Department$headArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Department.users
   */
  export type Department$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Department.line
   */
  export type Department$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * Department.Position
   */
  export type Department$PositionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    where?: PositionWhereInput
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    cursor?: PositionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * Department.Announcement
   */
  export type Department$AnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * Department.Group
   */
  export type Department$GroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    where?: GroupWhereInput
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    cursor?: GroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * Department.InventoryBox
   */
  export type Department$InventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    where?: InventoryBoxWhereInput
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    cursor?: InventoryBoxWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * Department without action
   */
  export type DepartmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
  }


  /**
   * Model Group
   */

  export type AggregateGroup = {
    _count: GroupCountAggregateOutputType | null
    _min: GroupMinAggregateOutputType | null
    _max: GroupMaxAggregateOutputType | null
  }

  export type GroupMinAggregateOutputType = {
    id: string | null
    departmentId: string | null
    name: string | null
    createdAt: Date | null
    lineId: string | null
    userId: string | null
  }

  export type GroupMaxAggregateOutputType = {
    id: string | null
    departmentId: string | null
    name: string | null
    createdAt: Date | null
    lineId: string | null
    userId: string | null
  }

  export type GroupCountAggregateOutputType = {
    id: number
    departmentId: number
    name: number
    createdAt: number
    lineId: number
    userId: number
    _all: number
  }


  export type GroupMinAggregateInputType = {
    id?: true
    departmentId?: true
    name?: true
    createdAt?: true
    lineId?: true
    userId?: true
  }

  export type GroupMaxAggregateInputType = {
    id?: true
    departmentId?: true
    name?: true
    createdAt?: true
    lineId?: true
    userId?: true
  }

  export type GroupCountAggregateInputType = {
    id?: true
    departmentId?: true
    name?: true
    createdAt?: true
    lineId?: true
    userId?: true
    _all?: true
  }

  export type GroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Group to aggregate.
     */
    where?: GroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Groups to fetch.
     */
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Groups
    **/
    _count?: true | GroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroupMaxAggregateInputType
  }

  export type GetGroupAggregateType<T extends GroupAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup[P]>
      : GetScalarType<T[P], AggregateGroup[P]>
  }




  export type GroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroupWhereInput
    orderBy?: GroupOrderByWithAggregationInput | GroupOrderByWithAggregationInput[]
    by: GroupScalarFieldEnum[] | GroupScalarFieldEnum
    having?: GroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroupCountAggregateInputType | true
    _min?: GroupMinAggregateInputType
    _max?: GroupMaxAggregateInputType
  }

  export type GroupGroupByOutputType = {
    id: string
    departmentId: string
    name: string | null
    createdAt: Date
    lineId: string | null
    userId: string | null
    _count: GroupCountAggregateOutputType | null
    _min: GroupMinAggregateOutputType | null
    _max: GroupMaxAggregateOutputType | null
  }

  type GetGroupGroupByPayload<T extends GroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroupGroupByOutputType[P]>
            : GetScalarType<T[P], GroupGroupByOutputType[P]>
        }
      >
    >


  export type GroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    departmentId?: boolean
    name?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    users?: boolean | Group$usersArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
    _count?: boolean | GroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group"]>

  export type GroupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    departmentId?: boolean
    name?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
  }, ExtArgs["result"]["group"]>

  export type GroupSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    departmentId?: boolean
    name?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
  }, ExtArgs["result"]["group"]>

  export type GroupSelectScalar = {
    id?: boolean
    departmentId?: boolean
    name?: boolean
    createdAt?: boolean
    lineId?: boolean
    userId?: boolean
  }

  export type GroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "departmentId" | "name" | "createdAt" | "lineId" | "userId", ExtArgs["result"]["group"]>
  export type GroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    users?: boolean | Group$usersArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
    _count?: boolean | GroupCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GroupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
  }
  export type GroupIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    unit?: boolean | DepartmentDefaultArgs<ExtArgs>
    line?: boolean | Group$lineArgs<ExtArgs>
    chief?: boolean | Group$chiefArgs<ExtArgs>
  }

  export type $GroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Group"
    objects: {
      unit: Prisma.$DepartmentPayload<ExtArgs>
      users: Prisma.$UserPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
      chief: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      departmentId: string
      name: string | null
      createdAt: Date
      lineId: string | null
      userId: string | null
    }, ExtArgs["result"]["group"]>
    composites: {}
  }

  type GroupGetPayload<S extends boolean | null | undefined | GroupDefaultArgs> = $Result.GetResult<Prisma.$GroupPayload, S>

  type GroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroupCountAggregateInputType | true
    }

  export interface GroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Group'], meta: { name: 'Group' } }
    /**
     * Find zero or one Group that matches the filter.
     * @param {GroupFindUniqueArgs} args - Arguments to find a Group
     * @example
     * // Get one Group
     * const group = await prisma.group.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GroupFindUniqueArgs>(args: SelectSubset<T, GroupFindUniqueArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Group that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GroupFindUniqueOrThrowArgs} args - Arguments to find a Group
     * @example
     * // Get one Group
     * const group = await prisma.group.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GroupFindUniqueOrThrowArgs>(args: SelectSubset<T, GroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupFindFirstArgs} args - Arguments to find a Group
     * @example
     * // Get one Group
     * const group = await prisma.group.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GroupFindFirstArgs>(args?: SelectSubset<T, GroupFindFirstArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupFindFirstOrThrowArgs} args - Arguments to find a Group
     * @example
     * // Get one Group
     * const group = await prisma.group.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GroupFindFirstOrThrowArgs>(args?: SelectSubset<T, GroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Groups
     * const groups = await prisma.group.findMany()
     * 
     * // Get first 10 Groups
     * const groups = await prisma.group.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const groupWithIdOnly = await prisma.group.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GroupFindManyArgs>(args?: SelectSubset<T, GroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Group.
     * @param {GroupCreateArgs} args - Arguments to create a Group.
     * @example
     * // Create one Group
     * const Group = await prisma.group.create({
     *   data: {
     *     // ... data to create a Group
     *   }
     * })
     * 
     */
    create<T extends GroupCreateArgs>(args: SelectSubset<T, GroupCreateArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Groups.
     * @param {GroupCreateManyArgs} args - Arguments to create many Groups.
     * @example
     * // Create many Groups
     * const group = await prisma.group.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GroupCreateManyArgs>(args?: SelectSubset<T, GroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Groups and returns the data saved in the database.
     * @param {GroupCreateManyAndReturnArgs} args - Arguments to create many Groups.
     * @example
     * // Create many Groups
     * const group = await prisma.group.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Groups and only return the `id`
     * const groupWithIdOnly = await prisma.group.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GroupCreateManyAndReturnArgs>(args?: SelectSubset<T, GroupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Group.
     * @param {GroupDeleteArgs} args - Arguments to delete one Group.
     * @example
     * // Delete one Group
     * const Group = await prisma.group.delete({
     *   where: {
     *     // ... filter to delete one Group
     *   }
     * })
     * 
     */
    delete<T extends GroupDeleteArgs>(args: SelectSubset<T, GroupDeleteArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Group.
     * @param {GroupUpdateArgs} args - Arguments to update one Group.
     * @example
     * // Update one Group
     * const group = await prisma.group.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GroupUpdateArgs>(args: SelectSubset<T, GroupUpdateArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Groups.
     * @param {GroupDeleteManyArgs} args - Arguments to filter Groups to delete.
     * @example
     * // Delete a few Groups
     * const { count } = await prisma.group.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GroupDeleteManyArgs>(args?: SelectSubset<T, GroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Groups
     * const group = await prisma.group.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GroupUpdateManyArgs>(args: SelectSubset<T, GroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups and returns the data updated in the database.
     * @param {GroupUpdateManyAndReturnArgs} args - Arguments to update many Groups.
     * @example
     * // Update many Groups
     * const group = await prisma.group.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Groups and only return the `id`
     * const groupWithIdOnly = await prisma.group.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GroupUpdateManyAndReturnArgs>(args: SelectSubset<T, GroupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Group.
     * @param {GroupUpsertArgs} args - Arguments to update or create a Group.
     * @example
     * // Update or create a Group
     * const group = await prisma.group.upsert({
     *   create: {
     *     // ... data to create a Group
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group we want to update
     *   }
     * })
     */
    upsert<T extends GroupUpsertArgs>(args: SelectSubset<T, GroupUpsertArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupCountArgs} args - Arguments to filter Groups to count.
     * @example
     * // Count the number of Groups
     * const count = await prisma.group.count({
     *   where: {
     *     // ... the filter for the Groups we want to count
     *   }
     * })
    **/
    count<T extends GroupCountArgs>(
      args?: Subset<T, GroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroupAggregateArgs>(args: Subset<T, GroupAggregateArgs>): Prisma.PrismaPromise<GetGroupAggregateType<T>>

    /**
     * Group by Group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GroupGroupByArgs['orderBy'] }
        : { orderBy?: GroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Group model
   */
  readonly fields: GroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Group.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    unit<T extends DepartmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartmentDefaultArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends Group$usersArgs<ExtArgs> = {}>(args?: Subset<T, Group$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends Group$lineArgs<ExtArgs> = {}>(args?: Subset<T, Group$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    chief<T extends Group$chiefArgs<ExtArgs> = {}>(args?: Subset<T, Group$chiefArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Group model
   */
  interface GroupFieldRefs {
    readonly id: FieldRef<"Group", 'String'>
    readonly departmentId: FieldRef<"Group", 'String'>
    readonly name: FieldRef<"Group", 'String'>
    readonly createdAt: FieldRef<"Group", 'DateTime'>
    readonly lineId: FieldRef<"Group", 'String'>
    readonly userId: FieldRef<"Group", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Group findUnique
   */
  export type GroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter, which Group to fetch.
     */
    where: GroupWhereUniqueInput
  }

  /**
   * Group findUniqueOrThrow
   */
  export type GroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter, which Group to fetch.
     */
    where: GroupWhereUniqueInput
  }

  /**
   * Group findFirst
   */
  export type GroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter, which Group to fetch.
     */
    where?: GroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Groups to fetch.
     */
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Groups.
     */
    cursor?: GroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Groups.
     */
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * Group findFirstOrThrow
   */
  export type GroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter, which Group to fetch.
     */
    where?: GroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Groups to fetch.
     */
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Groups.
     */
    cursor?: GroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Groups.
     */
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * Group findMany
   */
  export type GroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter, which Groups to fetch.
     */
    where?: GroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Groups to fetch.
     */
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Groups.
     */
    cursor?: GroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Groups.
     */
    skip?: number
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * Group create
   */
  export type GroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * The data needed to create a Group.
     */
    data: XOR<GroupCreateInput, GroupUncheckedCreateInput>
  }

  /**
   * Group createMany
   */
  export type GroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Groups.
     */
    data: GroupCreateManyInput | GroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Group createManyAndReturn
   */
  export type GroupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * The data used to create many Groups.
     */
    data: GroupCreateManyInput | GroupCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Group update
   */
  export type GroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * The data needed to update a Group.
     */
    data: XOR<GroupUpdateInput, GroupUncheckedUpdateInput>
    /**
     * Choose, which Group to update.
     */
    where: GroupWhereUniqueInput
  }

  /**
   * Group updateMany
   */
  export type GroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Groups.
     */
    data: XOR<GroupUpdateManyMutationInput, GroupUncheckedUpdateManyInput>
    /**
     * Filter which Groups to update
     */
    where?: GroupWhereInput
    /**
     * Limit how many Groups to update.
     */
    limit?: number
  }

  /**
   * Group updateManyAndReturn
   */
  export type GroupUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * The data used to update Groups.
     */
    data: XOR<GroupUpdateManyMutationInput, GroupUncheckedUpdateManyInput>
    /**
     * Filter which Groups to update
     */
    where?: GroupWhereInput
    /**
     * Limit how many Groups to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Group upsert
   */
  export type GroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * The filter to search for the Group to update in case it exists.
     */
    where: GroupWhereUniqueInput
    /**
     * In case the Group found by the `where` argument doesn't exist, create a new Group with this data.
     */
    create: XOR<GroupCreateInput, GroupUncheckedCreateInput>
    /**
     * In case the Group was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GroupUpdateInput, GroupUncheckedUpdateInput>
  }

  /**
   * Group delete
   */
  export type GroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    /**
     * Filter which Group to delete.
     */
    where: GroupWhereUniqueInput
  }

  /**
   * Group deleteMany
   */
  export type GroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Groups to delete
     */
    where?: GroupWhereInput
    /**
     * Limit how many Groups to delete.
     */
    limit?: number
  }

  /**
   * Group.users
   */
  export type Group$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Group.line
   */
  export type Group$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * Group.chief
   */
  export type Group$chiefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Group without action
   */
  export type GroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
  }


  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    username: number
    password: number
    _all: number
  }


  export type AdminMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: string
    username: string
    password: string
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
  }

  export type AdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password", ExtArgs["result"]["admin"]>

  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminFindUniqueArgs>(args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminFindFirstArgs>(args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminFindManyArgs>(args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends AdminCreateArgs>(args: SelectSubset<T, AdminCreateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminCreateManyArgs>(args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends AdminDeleteArgs>(args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminUpdateArgs>(args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminDeleteManyArgs>(args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminUpdateManyArgs>(args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {AdminUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends AdminUpsertArgs>(args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin model
   */
  interface AdminFieldRefs {
    readonly id: FieldRef<"Admin", 'String'>
    readonly username: FieldRef<"Admin", 'String'>
    readonly password: FieldRef<"Admin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }

  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin createManyAndReturn
   */
  export type AdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin updateManyAndReturn
   */
  export type AdminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }

  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to delete.
     */
    limit?: number
  }

  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
  }


  /**
   * Model AdminProfile
   */

  export type AggregateAdminProfile = {
    _count: AdminProfileCountAggregateOutputType | null
    _min: AdminProfileMinAggregateOutputType | null
    _max: AdminProfileMaxAggregateOutputType | null
  }

  export type AdminProfileMinAggregateOutputType = {
    id: string | null
    username: string | null
  }

  export type AdminProfileMaxAggregateOutputType = {
    id: string | null
    username: string | null
  }

  export type AdminProfileCountAggregateOutputType = {
    id: number
    username: number
    _all: number
  }


  export type AdminProfileMinAggregateInputType = {
    id?: true
    username?: true
  }

  export type AdminProfileMaxAggregateInputType = {
    id?: true
    username?: true
  }

  export type AdminProfileCountAggregateInputType = {
    id?: true
    username?: true
    _all?: true
  }

  export type AdminProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminProfile to aggregate.
     */
    where?: AdminProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminProfiles to fetch.
     */
    orderBy?: AdminProfileOrderByWithRelationInput | AdminProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdminProfiles
    **/
    _count?: true | AdminProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminProfileMaxAggregateInputType
  }

  export type GetAdminProfileAggregateType<T extends AdminProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateAdminProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdminProfile[P]>
      : GetScalarType<T[P], AggregateAdminProfile[P]>
  }




  export type AdminProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminProfileWhereInput
    orderBy?: AdminProfileOrderByWithAggregationInput | AdminProfileOrderByWithAggregationInput[]
    by: AdminProfileScalarFieldEnum[] | AdminProfileScalarFieldEnum
    having?: AdminProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminProfileCountAggregateInputType | true
    _min?: AdminProfileMinAggregateInputType
    _max?: AdminProfileMaxAggregateInputType
  }

  export type AdminProfileGroupByOutputType = {
    id: string
    username: string
    _count: AdminProfileCountAggregateOutputType | null
    _min: AdminProfileMinAggregateOutputType | null
    _max: AdminProfileMaxAggregateOutputType | null
  }

  type GetAdminProfileGroupByPayload<T extends AdminProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminProfileGroupByOutputType[P]>
            : GetScalarType<T[P], AdminProfileGroupByOutputType[P]>
        }
      >
    >


  export type AdminProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    line?: boolean | AdminProfile$lineArgs<ExtArgs>
    _count?: boolean | AdminProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adminProfile"]>

  export type AdminProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
  }, ExtArgs["result"]["adminProfile"]>

  export type AdminProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
  }, ExtArgs["result"]["adminProfile"]>

  export type AdminProfileSelectScalar = {
    id?: boolean
    username?: boolean
  }

  export type AdminProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username", ExtArgs["result"]["adminProfile"]>
  export type AdminProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | AdminProfile$lineArgs<ExtArgs>
    _count?: boolean | AdminProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdminProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AdminProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AdminProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdminProfile"
    objects: {
      line: Prisma.$LinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
    }, ExtArgs["result"]["adminProfile"]>
    composites: {}
  }

  type AdminProfileGetPayload<S extends boolean | null | undefined | AdminProfileDefaultArgs> = $Result.GetResult<Prisma.$AdminProfilePayload, S>

  type AdminProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminProfileCountAggregateInputType | true
    }

  export interface AdminProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdminProfile'], meta: { name: 'AdminProfile' } }
    /**
     * Find zero or one AdminProfile that matches the filter.
     * @param {AdminProfileFindUniqueArgs} args - Arguments to find a AdminProfile
     * @example
     * // Get one AdminProfile
     * const adminProfile = await prisma.adminProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminProfileFindUniqueArgs>(args: SelectSubset<T, AdminProfileFindUniqueArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdminProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminProfileFindUniqueOrThrowArgs} args - Arguments to find a AdminProfile
     * @example
     * // Get one AdminProfile
     * const adminProfile = await prisma.adminProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileFindFirstArgs} args - Arguments to find a AdminProfile
     * @example
     * // Get one AdminProfile
     * const adminProfile = await prisma.adminProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminProfileFindFirstArgs>(args?: SelectSubset<T, AdminProfileFindFirstArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileFindFirstOrThrowArgs} args - Arguments to find a AdminProfile
     * @example
     * // Get one AdminProfile
     * const adminProfile = await prisma.adminProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdminProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdminProfiles
     * const adminProfiles = await prisma.adminProfile.findMany()
     * 
     * // Get first 10 AdminProfiles
     * const adminProfiles = await prisma.adminProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminProfileWithIdOnly = await prisma.adminProfile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminProfileFindManyArgs>(args?: SelectSubset<T, AdminProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdminProfile.
     * @param {AdminProfileCreateArgs} args - Arguments to create a AdminProfile.
     * @example
     * // Create one AdminProfile
     * const AdminProfile = await prisma.adminProfile.create({
     *   data: {
     *     // ... data to create a AdminProfile
     *   }
     * })
     * 
     */
    create<T extends AdminProfileCreateArgs>(args: SelectSubset<T, AdminProfileCreateArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdminProfiles.
     * @param {AdminProfileCreateManyArgs} args - Arguments to create many AdminProfiles.
     * @example
     * // Create many AdminProfiles
     * const adminProfile = await prisma.adminProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminProfileCreateManyArgs>(args?: SelectSubset<T, AdminProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdminProfiles and returns the data saved in the database.
     * @param {AdminProfileCreateManyAndReturnArgs} args - Arguments to create many AdminProfiles.
     * @example
     * // Create many AdminProfiles
     * const adminProfile = await prisma.adminProfile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdminProfiles and only return the `id`
     * const adminProfileWithIdOnly = await prisma.adminProfile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AdminProfile.
     * @param {AdminProfileDeleteArgs} args - Arguments to delete one AdminProfile.
     * @example
     * // Delete one AdminProfile
     * const AdminProfile = await prisma.adminProfile.delete({
     *   where: {
     *     // ... filter to delete one AdminProfile
     *   }
     * })
     * 
     */
    delete<T extends AdminProfileDeleteArgs>(args: SelectSubset<T, AdminProfileDeleteArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdminProfile.
     * @param {AdminProfileUpdateArgs} args - Arguments to update one AdminProfile.
     * @example
     * // Update one AdminProfile
     * const adminProfile = await prisma.adminProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminProfileUpdateArgs>(args: SelectSubset<T, AdminProfileUpdateArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdminProfiles.
     * @param {AdminProfileDeleteManyArgs} args - Arguments to filter AdminProfiles to delete.
     * @example
     * // Delete a few AdminProfiles
     * const { count } = await prisma.adminProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminProfileDeleteManyArgs>(args?: SelectSubset<T, AdminProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdminProfiles
     * const adminProfile = await prisma.adminProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminProfileUpdateManyArgs>(args: SelectSubset<T, AdminProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminProfiles and returns the data updated in the database.
     * @param {AdminProfileUpdateManyAndReturnArgs} args - Arguments to update many AdminProfiles.
     * @example
     * // Update many AdminProfiles
     * const adminProfile = await prisma.adminProfile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AdminProfiles and only return the `id`
     * const adminProfileWithIdOnly = await prisma.adminProfile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AdminProfile.
     * @param {AdminProfileUpsertArgs} args - Arguments to update or create a AdminProfile.
     * @example
     * // Update or create a AdminProfile
     * const adminProfile = await prisma.adminProfile.upsert({
     *   create: {
     *     // ... data to create a AdminProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdminProfile we want to update
     *   }
     * })
     */
    upsert<T extends AdminProfileUpsertArgs>(args: SelectSubset<T, AdminProfileUpsertArgs<ExtArgs>>): Prisma__AdminProfileClient<$Result.GetResult<Prisma.$AdminProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdminProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileCountArgs} args - Arguments to filter AdminProfiles to count.
     * @example
     * // Count the number of AdminProfiles
     * const count = await prisma.adminProfile.count({
     *   where: {
     *     // ... the filter for the AdminProfiles we want to count
     *   }
     * })
    **/
    count<T extends AdminProfileCountArgs>(
      args?: Subset<T, AdminProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdminProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminProfileAggregateArgs>(args: Subset<T, AdminProfileAggregateArgs>): Prisma.PrismaPromise<GetAdminProfileAggregateType<T>>

    /**
     * Group by AdminProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminProfileGroupByArgs['orderBy'] }
        : { orderBy?: AdminProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdminProfile model
   */
  readonly fields: AdminProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdminProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    line<T extends AdminProfile$lineArgs<ExtArgs> = {}>(args?: Subset<T, AdminProfile$lineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdminProfile model
   */
  interface AdminProfileFieldRefs {
    readonly id: FieldRef<"AdminProfile", 'String'>
    readonly username: FieldRef<"AdminProfile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AdminProfile findUnique
   */
  export type AdminProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter, which AdminProfile to fetch.
     */
    where: AdminProfileWhereUniqueInput
  }

  /**
   * AdminProfile findUniqueOrThrow
   */
  export type AdminProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter, which AdminProfile to fetch.
     */
    where: AdminProfileWhereUniqueInput
  }

  /**
   * AdminProfile findFirst
   */
  export type AdminProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter, which AdminProfile to fetch.
     */
    where?: AdminProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminProfiles to fetch.
     */
    orderBy?: AdminProfileOrderByWithRelationInput | AdminProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminProfiles.
     */
    cursor?: AdminProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminProfiles.
     */
    distinct?: AdminProfileScalarFieldEnum | AdminProfileScalarFieldEnum[]
  }

  /**
   * AdminProfile findFirstOrThrow
   */
  export type AdminProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter, which AdminProfile to fetch.
     */
    where?: AdminProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminProfiles to fetch.
     */
    orderBy?: AdminProfileOrderByWithRelationInput | AdminProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminProfiles.
     */
    cursor?: AdminProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminProfiles.
     */
    distinct?: AdminProfileScalarFieldEnum | AdminProfileScalarFieldEnum[]
  }

  /**
   * AdminProfile findMany
   */
  export type AdminProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter, which AdminProfiles to fetch.
     */
    where?: AdminProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminProfiles to fetch.
     */
    orderBy?: AdminProfileOrderByWithRelationInput | AdminProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdminProfiles.
     */
    cursor?: AdminProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminProfiles.
     */
    skip?: number
    distinct?: AdminProfileScalarFieldEnum | AdminProfileScalarFieldEnum[]
  }

  /**
   * AdminProfile create
   */
  export type AdminProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a AdminProfile.
     */
    data: XOR<AdminProfileCreateInput, AdminProfileUncheckedCreateInput>
  }

  /**
   * AdminProfile createMany
   */
  export type AdminProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdminProfiles.
     */
    data: AdminProfileCreateManyInput | AdminProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdminProfile createManyAndReturn
   */
  export type AdminProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * The data used to create many AdminProfiles.
     */
    data: AdminProfileCreateManyInput | AdminProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdminProfile update
   */
  export type AdminProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a AdminProfile.
     */
    data: XOR<AdminProfileUpdateInput, AdminProfileUncheckedUpdateInput>
    /**
     * Choose, which AdminProfile to update.
     */
    where: AdminProfileWhereUniqueInput
  }

  /**
   * AdminProfile updateMany
   */
  export type AdminProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdminProfiles.
     */
    data: XOR<AdminProfileUpdateManyMutationInput, AdminProfileUncheckedUpdateManyInput>
    /**
     * Filter which AdminProfiles to update
     */
    where?: AdminProfileWhereInput
    /**
     * Limit how many AdminProfiles to update.
     */
    limit?: number
  }

  /**
   * AdminProfile updateManyAndReturn
   */
  export type AdminProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * The data used to update AdminProfiles.
     */
    data: XOR<AdminProfileUpdateManyMutationInput, AdminProfileUncheckedUpdateManyInput>
    /**
     * Filter which AdminProfiles to update
     */
    where?: AdminProfileWhereInput
    /**
     * Limit how many AdminProfiles to update.
     */
    limit?: number
  }

  /**
   * AdminProfile upsert
   */
  export type AdminProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the AdminProfile to update in case it exists.
     */
    where: AdminProfileWhereUniqueInput
    /**
     * In case the AdminProfile found by the `where` argument doesn't exist, create a new AdminProfile with this data.
     */
    create: XOR<AdminProfileCreateInput, AdminProfileUncheckedCreateInput>
    /**
     * In case the AdminProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminProfileUpdateInput, AdminProfileUncheckedUpdateInput>
  }

  /**
   * AdminProfile delete
   */
  export type AdminProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
    /**
     * Filter which AdminProfile to delete.
     */
    where: AdminProfileWhereUniqueInput
  }

  /**
   * AdminProfile deleteMany
   */
  export type AdminProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminProfiles to delete
     */
    where?: AdminProfileWhereInput
    /**
     * Limit how many AdminProfiles to delete.
     */
    limit?: number
  }

  /**
   * AdminProfile.line
   */
  export type AdminProfile$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    cursor?: LineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * AdminProfile without action
   */
  export type AdminProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminProfile
     */
    select?: AdminProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminProfile
     */
    omit?: AdminProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminProfileInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    status: number | null
  }

  export type AccountSumAggregateOutputType = {
    status: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    status: number | null
    role: string | null
    active: boolean | null
    lineId: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    status: number | null
    role: string | null
    active: boolean | null
    lineId: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    username: number
    password: number
    createdAt: number
    status: number
    role: number
    active: number
    lineId: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    status?: true
  }

  export type AccountSumAggregateInputType = {
    status?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    status?: true
    role?: true
    active?: true
    lineId?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    status?: true
    role?: true
    active?: true
    lineId?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    status?: true
    role?: true
    active?: true
    lineId?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    username: string
    password: string
    createdAt: Date
    status: number
    role: string
    active: boolean
    lineId: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    status?: boolean
    role?: boolean
    active?: boolean
    lineId?: boolean
    User?: boolean | Account$UserArgs<ExtArgs>
    line?: boolean | Account$lineArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    status?: boolean
    role?: boolean
    active?: boolean
    lineId?: boolean
    line?: boolean | Account$lineArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    status?: boolean
    role?: boolean
    active?: boolean
    lineId?: boolean
    line?: boolean | Account$lineArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    status?: boolean
    role?: boolean
    active?: boolean
    lineId?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "createdAt" | "status" | "role" | "active" | "lineId", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | Account$UserArgs<ExtArgs>
    line?: boolean | Account$lineArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | Account$lineArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | Account$lineArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      User: Prisma.$UserPayload<ExtArgs> | null
      line: Prisma.$LinePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      createdAt: Date
      status: number
      role: string
      active: boolean
      lineId: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends Account$UserArgs<ExtArgs> = {}>(args?: Subset<T, Account$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    line<T extends Account$lineArgs<ExtArgs> = {}>(args?: Subset<T, Account$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly username: FieldRef<"Account", 'String'>
    readonly password: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly status: FieldRef<"Account", 'Int'>
    readonly role: FieldRef<"Account", 'String'>
    readonly active: FieldRef<"Account", 'Boolean'>
    readonly lineId: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account.User
   */
  export type Account$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Account.line
   */
  export type Account$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Privilege
   */

  export type AggregatePrivilege = {
    _count: PrivilegeCountAggregateOutputType | null
    _min: PrivilegeMinAggregateOutputType | null
    _max: PrivilegeMaxAggregateOutputType | null
  }

  export type PrivilegeMinAggregateOutputType = {
    id: string | null
    humanResources: boolean | null
    inventory: boolean | null
    super: boolean | null
  }

  export type PrivilegeMaxAggregateOutputType = {
    id: string | null
    humanResources: boolean | null
    inventory: boolean | null
    super: boolean | null
  }

  export type PrivilegeCountAggregateOutputType = {
    id: number
    humanResources: number
    inventory: number
    super: number
    _all: number
  }


  export type PrivilegeMinAggregateInputType = {
    id?: true
    humanResources?: true
    inventory?: true
    super?: true
  }

  export type PrivilegeMaxAggregateInputType = {
    id?: true
    humanResources?: true
    inventory?: true
    super?: true
  }

  export type PrivilegeCountAggregateInputType = {
    id?: true
    humanResources?: true
    inventory?: true
    super?: true
    _all?: true
  }

  export type PrivilegeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Privilege to aggregate.
     */
    where?: PrivilegeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Privileges to fetch.
     */
    orderBy?: PrivilegeOrderByWithRelationInput | PrivilegeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PrivilegeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Privileges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Privileges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Privileges
    **/
    _count?: true | PrivilegeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrivilegeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrivilegeMaxAggregateInputType
  }

  export type GetPrivilegeAggregateType<T extends PrivilegeAggregateArgs> = {
        [P in keyof T & keyof AggregatePrivilege]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrivilege[P]>
      : GetScalarType<T[P], AggregatePrivilege[P]>
  }




  export type PrivilegeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrivilegeWhereInput
    orderBy?: PrivilegeOrderByWithAggregationInput | PrivilegeOrderByWithAggregationInput[]
    by: PrivilegeScalarFieldEnum[] | PrivilegeScalarFieldEnum
    having?: PrivilegeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrivilegeCountAggregateInputType | true
    _min?: PrivilegeMinAggregateInputType
    _max?: PrivilegeMaxAggregateInputType
  }

  export type PrivilegeGroupByOutputType = {
    id: string
    humanResources: boolean
    inventory: boolean
    super: boolean
    _count: PrivilegeCountAggregateOutputType | null
    _min: PrivilegeMinAggregateOutputType | null
    _max: PrivilegeMaxAggregateOutputType | null
  }

  type GetPrivilegeGroupByPayload<T extends PrivilegeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PrivilegeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrivilegeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrivilegeGroupByOutputType[P]>
            : GetScalarType<T[P], PrivilegeGroupByOutputType[P]>
        }
      >
    >


  export type PrivilegeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
    User?: boolean | Privilege$UserArgs<ExtArgs>
  }, ExtArgs["result"]["privilege"]>

  export type PrivilegeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }, ExtArgs["result"]["privilege"]>

  export type PrivilegeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }, ExtArgs["result"]["privilege"]>

  export type PrivilegeSelectScalar = {
    id?: boolean
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }

  export type PrivilegeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "humanResources" | "inventory" | "super", ExtArgs["result"]["privilege"]>
  export type PrivilegeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | Privilege$UserArgs<ExtArgs>
  }
  export type PrivilegeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PrivilegeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PrivilegePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Privilege"
    objects: {
      User: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      humanResources: boolean
      inventory: boolean
      super: boolean
    }, ExtArgs["result"]["privilege"]>
    composites: {}
  }

  type PrivilegeGetPayload<S extends boolean | null | undefined | PrivilegeDefaultArgs> = $Result.GetResult<Prisma.$PrivilegePayload, S>

  type PrivilegeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PrivilegeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PrivilegeCountAggregateInputType | true
    }

  export interface PrivilegeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Privilege'], meta: { name: 'Privilege' } }
    /**
     * Find zero or one Privilege that matches the filter.
     * @param {PrivilegeFindUniqueArgs} args - Arguments to find a Privilege
     * @example
     * // Get one Privilege
     * const privilege = await prisma.privilege.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PrivilegeFindUniqueArgs>(args: SelectSubset<T, PrivilegeFindUniqueArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Privilege that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PrivilegeFindUniqueOrThrowArgs} args - Arguments to find a Privilege
     * @example
     * // Get one Privilege
     * const privilege = await prisma.privilege.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PrivilegeFindUniqueOrThrowArgs>(args: SelectSubset<T, PrivilegeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Privilege that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeFindFirstArgs} args - Arguments to find a Privilege
     * @example
     * // Get one Privilege
     * const privilege = await prisma.privilege.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PrivilegeFindFirstArgs>(args?: SelectSubset<T, PrivilegeFindFirstArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Privilege that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeFindFirstOrThrowArgs} args - Arguments to find a Privilege
     * @example
     * // Get one Privilege
     * const privilege = await prisma.privilege.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PrivilegeFindFirstOrThrowArgs>(args?: SelectSubset<T, PrivilegeFindFirstOrThrowArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Privileges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Privileges
     * const privileges = await prisma.privilege.findMany()
     * 
     * // Get first 10 Privileges
     * const privileges = await prisma.privilege.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const privilegeWithIdOnly = await prisma.privilege.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PrivilegeFindManyArgs>(args?: SelectSubset<T, PrivilegeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Privilege.
     * @param {PrivilegeCreateArgs} args - Arguments to create a Privilege.
     * @example
     * // Create one Privilege
     * const Privilege = await prisma.privilege.create({
     *   data: {
     *     // ... data to create a Privilege
     *   }
     * })
     * 
     */
    create<T extends PrivilegeCreateArgs>(args: SelectSubset<T, PrivilegeCreateArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Privileges.
     * @param {PrivilegeCreateManyArgs} args - Arguments to create many Privileges.
     * @example
     * // Create many Privileges
     * const privilege = await prisma.privilege.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PrivilegeCreateManyArgs>(args?: SelectSubset<T, PrivilegeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Privileges and returns the data saved in the database.
     * @param {PrivilegeCreateManyAndReturnArgs} args - Arguments to create many Privileges.
     * @example
     * // Create many Privileges
     * const privilege = await prisma.privilege.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Privileges and only return the `id`
     * const privilegeWithIdOnly = await prisma.privilege.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PrivilegeCreateManyAndReturnArgs>(args?: SelectSubset<T, PrivilegeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Privilege.
     * @param {PrivilegeDeleteArgs} args - Arguments to delete one Privilege.
     * @example
     * // Delete one Privilege
     * const Privilege = await prisma.privilege.delete({
     *   where: {
     *     // ... filter to delete one Privilege
     *   }
     * })
     * 
     */
    delete<T extends PrivilegeDeleteArgs>(args: SelectSubset<T, PrivilegeDeleteArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Privilege.
     * @param {PrivilegeUpdateArgs} args - Arguments to update one Privilege.
     * @example
     * // Update one Privilege
     * const privilege = await prisma.privilege.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PrivilegeUpdateArgs>(args: SelectSubset<T, PrivilegeUpdateArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Privileges.
     * @param {PrivilegeDeleteManyArgs} args - Arguments to filter Privileges to delete.
     * @example
     * // Delete a few Privileges
     * const { count } = await prisma.privilege.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PrivilegeDeleteManyArgs>(args?: SelectSubset<T, PrivilegeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Privileges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Privileges
     * const privilege = await prisma.privilege.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PrivilegeUpdateManyArgs>(args: SelectSubset<T, PrivilegeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Privileges and returns the data updated in the database.
     * @param {PrivilegeUpdateManyAndReturnArgs} args - Arguments to update many Privileges.
     * @example
     * // Update many Privileges
     * const privilege = await prisma.privilege.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Privileges and only return the `id`
     * const privilegeWithIdOnly = await prisma.privilege.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PrivilegeUpdateManyAndReturnArgs>(args: SelectSubset<T, PrivilegeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Privilege.
     * @param {PrivilegeUpsertArgs} args - Arguments to update or create a Privilege.
     * @example
     * // Update or create a Privilege
     * const privilege = await prisma.privilege.upsert({
     *   create: {
     *     // ... data to create a Privilege
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Privilege we want to update
     *   }
     * })
     */
    upsert<T extends PrivilegeUpsertArgs>(args: SelectSubset<T, PrivilegeUpsertArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Privileges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeCountArgs} args - Arguments to filter Privileges to count.
     * @example
     * // Count the number of Privileges
     * const count = await prisma.privilege.count({
     *   where: {
     *     // ... the filter for the Privileges we want to count
     *   }
     * })
    **/
    count<T extends PrivilegeCountArgs>(
      args?: Subset<T, PrivilegeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrivilegeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Privilege.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrivilegeAggregateArgs>(args: Subset<T, PrivilegeAggregateArgs>): Prisma.PrismaPromise<GetPrivilegeAggregateType<T>>

    /**
     * Group by Privilege.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrivilegeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrivilegeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrivilegeGroupByArgs['orderBy'] }
        : { orderBy?: PrivilegeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrivilegeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrivilegeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Privilege model
   */
  readonly fields: PrivilegeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Privilege.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PrivilegeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends Privilege$UserArgs<ExtArgs> = {}>(args?: Subset<T, Privilege$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Privilege model
   */
  interface PrivilegeFieldRefs {
    readonly id: FieldRef<"Privilege", 'String'>
    readonly humanResources: FieldRef<"Privilege", 'Boolean'>
    readonly inventory: FieldRef<"Privilege", 'Boolean'>
    readonly super: FieldRef<"Privilege", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Privilege findUnique
   */
  export type PrivilegeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter, which Privilege to fetch.
     */
    where: PrivilegeWhereUniqueInput
  }

  /**
   * Privilege findUniqueOrThrow
   */
  export type PrivilegeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter, which Privilege to fetch.
     */
    where: PrivilegeWhereUniqueInput
  }

  /**
   * Privilege findFirst
   */
  export type PrivilegeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter, which Privilege to fetch.
     */
    where?: PrivilegeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Privileges to fetch.
     */
    orderBy?: PrivilegeOrderByWithRelationInput | PrivilegeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Privileges.
     */
    cursor?: PrivilegeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Privileges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Privileges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Privileges.
     */
    distinct?: PrivilegeScalarFieldEnum | PrivilegeScalarFieldEnum[]
  }

  /**
   * Privilege findFirstOrThrow
   */
  export type PrivilegeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter, which Privilege to fetch.
     */
    where?: PrivilegeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Privileges to fetch.
     */
    orderBy?: PrivilegeOrderByWithRelationInput | PrivilegeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Privileges.
     */
    cursor?: PrivilegeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Privileges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Privileges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Privileges.
     */
    distinct?: PrivilegeScalarFieldEnum | PrivilegeScalarFieldEnum[]
  }

  /**
   * Privilege findMany
   */
  export type PrivilegeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter, which Privileges to fetch.
     */
    where?: PrivilegeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Privileges to fetch.
     */
    orderBy?: PrivilegeOrderByWithRelationInput | PrivilegeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Privileges.
     */
    cursor?: PrivilegeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Privileges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Privileges.
     */
    skip?: number
    distinct?: PrivilegeScalarFieldEnum | PrivilegeScalarFieldEnum[]
  }

  /**
   * Privilege create
   */
  export type PrivilegeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * The data needed to create a Privilege.
     */
    data?: XOR<PrivilegeCreateInput, PrivilegeUncheckedCreateInput>
  }

  /**
   * Privilege createMany
   */
  export type PrivilegeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Privileges.
     */
    data: PrivilegeCreateManyInput | PrivilegeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Privilege createManyAndReturn
   */
  export type PrivilegeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * The data used to create many Privileges.
     */
    data: PrivilegeCreateManyInput | PrivilegeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Privilege update
   */
  export type PrivilegeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * The data needed to update a Privilege.
     */
    data: XOR<PrivilegeUpdateInput, PrivilegeUncheckedUpdateInput>
    /**
     * Choose, which Privilege to update.
     */
    where: PrivilegeWhereUniqueInput
  }

  /**
   * Privilege updateMany
   */
  export type PrivilegeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Privileges.
     */
    data: XOR<PrivilegeUpdateManyMutationInput, PrivilegeUncheckedUpdateManyInput>
    /**
     * Filter which Privileges to update
     */
    where?: PrivilegeWhereInput
    /**
     * Limit how many Privileges to update.
     */
    limit?: number
  }

  /**
   * Privilege updateManyAndReturn
   */
  export type PrivilegeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * The data used to update Privileges.
     */
    data: XOR<PrivilegeUpdateManyMutationInput, PrivilegeUncheckedUpdateManyInput>
    /**
     * Filter which Privileges to update
     */
    where?: PrivilegeWhereInput
    /**
     * Limit how many Privileges to update.
     */
    limit?: number
  }

  /**
   * Privilege upsert
   */
  export type PrivilegeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * The filter to search for the Privilege to update in case it exists.
     */
    where: PrivilegeWhereUniqueInput
    /**
     * In case the Privilege found by the `where` argument doesn't exist, create a new Privilege with this data.
     */
    create: XOR<PrivilegeCreateInput, PrivilegeUncheckedCreateInput>
    /**
     * In case the Privilege was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PrivilegeUpdateInput, PrivilegeUncheckedUpdateInput>
  }

  /**
   * Privilege delete
   */
  export type PrivilegeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    /**
     * Filter which Privilege to delete.
     */
    where: PrivilegeWhereUniqueInput
  }

  /**
   * Privilege deleteMany
   */
  export type PrivilegeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Privileges to delete
     */
    where?: PrivilegeWhereInput
    /**
     * Limit how many Privileges to delete.
     */
    limit?: number
  }

  /**
   * Privilege.User
   */
  export type Privilege$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Privilege without action
   */
  export type PrivilegeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    level: number | null
    step: number | null
  }

  export type UserSumAggregateOutputType = {
    level: number | null
    step: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    middleName: string | null
    suffix: string | null
    birthDate: Date | null
    email: string | null
    username: string | null
    gender: string | null
    profilePicture: string | null
    createdAt: Date | null
    level: number | null
    type: string | null
    step: number | null
    status: string | null
    departmentId: string | null
    positionId: string | null
    salaryGradeId: string | null
    accountId: string | null
    regionId: string | null
    municipalId: string | null
    provinceId: string | null
    barangayId: string | null
    lineId: string | null
    privilegeId: string | null
    groupId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    middleName: string | null
    suffix: string | null
    birthDate: Date | null
    email: string | null
    username: string | null
    gender: string | null
    profilePicture: string | null
    createdAt: Date | null
    level: number | null
    type: string | null
    step: number | null
    status: string | null
    departmentId: string | null
    positionId: string | null
    salaryGradeId: string | null
    accountId: string | null
    regionId: string | null
    municipalId: string | null
    provinceId: string | null
    barangayId: string | null
    lineId: string | null
    privilegeId: string | null
    groupId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firstName: number
    lastName: number
    middleName: number
    suffix: number
    birthDate: number
    email: number
    username: number
    gender: number
    profilePicture: number
    createdAt: number
    level: number
    type: number
    step: number
    status: number
    departmentId: number
    positionId: number
    salaryGradeId: number
    accountId: number
    regionId: number
    municipalId: number
    provinceId: number
    barangayId: number
    lineId: number
    privilegeId: number
    groupId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    level?: true
    step?: true
  }

  export type UserSumAggregateInputType = {
    level?: true
    step?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    middleName?: true
    suffix?: true
    birthDate?: true
    email?: true
    username?: true
    gender?: true
    profilePicture?: true
    createdAt?: true
    level?: true
    type?: true
    step?: true
    status?: true
    departmentId?: true
    positionId?: true
    salaryGradeId?: true
    accountId?: true
    regionId?: true
    municipalId?: true
    provinceId?: true
    barangayId?: true
    lineId?: true
    privilegeId?: true
    groupId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    middleName?: true
    suffix?: true
    birthDate?: true
    email?: true
    username?: true
    gender?: true
    profilePicture?: true
    createdAt?: true
    level?: true
    type?: true
    step?: true
    status?: true
    departmentId?: true
    positionId?: true
    salaryGradeId?: true
    accountId?: true
    regionId?: true
    municipalId?: true
    provinceId?: true
    barangayId?: true
    lineId?: true
    privilegeId?: true
    groupId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    middleName?: true
    suffix?: true
    birthDate?: true
    email?: true
    username?: true
    gender?: true
    profilePicture?: true
    createdAt?: true
    level?: true
    type?: true
    step?: true
    status?: true
    departmentId?: true
    positionId?: true
    salaryGradeId?: true
    accountId?: true
    regionId?: true
    municipalId?: true
    provinceId?: true
    barangayId?: true
    lineId?: true
    privilegeId?: true
    groupId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    firstName: string
    lastName: string
    middleName: string | null
    suffix: string | null
    birthDate: Date | null
    email: string
    username: string
    gender: string | null
    profilePicture: string | null
    createdAt: Date
    level: number
    type: string
    step: number
    status: string
    departmentId: string | null
    positionId: string | null
    salaryGradeId: string | null
    accountId: string | null
    regionId: string | null
    municipalId: string | null
    provinceId: string | null
    barangayId: string | null
    lineId: string | null
    privilegeId: string | null
    groupId: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    suffix?: boolean
    birthDate?: boolean
    email?: boolean
    username?: boolean
    gender?: boolean
    profilePicture?: boolean
    createdAt?: boolean
    level?: boolean
    type?: boolean
    step?: boolean
    status?: boolean
    departmentId?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    accountId?: boolean
    regionId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    barangayId?: boolean
    lineId?: boolean
    privilegeId?: boolean
    groupId?: boolean
    sentNotifications?: boolean | User$sentNotificationsArgs<ExtArgs>
    receivedNotifications?: boolean | User$receivedNotificationsArgs<ExtArgs>
    department?: boolean | User$departmentArgs<ExtArgs>
    headedDepartment?: boolean | User$headedDepartmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    Leave?: boolean | User$LeaveArgs<ExtArgs>
    Announcement?: boolean | User$AnnouncementArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    Promotions?: boolean | User$PromotionsArgs<ExtArgs>
    bdaySender?: boolean | User$bdaySenderArgs<ExtArgs>
    bdayRecipient?: boolean | User$bdayRecipientArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    PositionSlot?: boolean | User$PositionSlotArgs<ExtArgs>
    Accomplishment?: boolean | User$AccomplishmentArgs<ExtArgs>
    headResponse?: boolean | User$headResponseArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    Supplies?: boolean | User$SuppliesArgs<ExtArgs>
    SuppliesRecord?: boolean | User$SuppliesRecordArgs<ExtArgs>
    LogRecord?: boolean | User$LogRecordArgs<ExtArgs>
    transferTo?: boolean | User$transferToArgs<ExtArgs>
    TransferredSupplies?: boolean | User$TransferredSuppliesArgs<ExtArgs>
    ProfilePicture?: boolean | User$ProfilePictureArgs<ExtArgs>
    Application?: boolean | User$ApplicationArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    SupplyBatchOrder?: boolean | User$SupplyBatchOrderArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
    chief?: boolean | User$chiefArgs<ExtArgs>
    InventoryBox?: boolean | User$InventoryBoxArgs<ExtArgs>
    InventoryAccessLogs?: boolean | User$InventoryAccessLogsArgs<ExtArgs>
    ContainerAllowedUser?: boolean | User$ContainerAllowedUserArgs<ExtArgs>
    GrantContainer?: boolean | User$GrantContainerArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    suffix?: boolean
    birthDate?: boolean
    email?: boolean
    username?: boolean
    gender?: boolean
    profilePicture?: boolean
    createdAt?: boolean
    level?: boolean
    type?: boolean
    step?: boolean
    status?: boolean
    departmentId?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    accountId?: boolean
    regionId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    barangayId?: boolean
    lineId?: boolean
    privilegeId?: boolean
    groupId?: boolean
    department?: boolean | User$departmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    suffix?: boolean
    birthDate?: boolean
    email?: boolean
    username?: boolean
    gender?: boolean
    profilePicture?: boolean
    createdAt?: boolean
    level?: boolean
    type?: boolean
    step?: boolean
    status?: boolean
    departmentId?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    accountId?: boolean
    regionId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    barangayId?: boolean
    lineId?: boolean
    privilegeId?: boolean
    groupId?: boolean
    department?: boolean | User$departmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    suffix?: boolean
    birthDate?: boolean
    email?: boolean
    username?: boolean
    gender?: boolean
    profilePicture?: boolean
    createdAt?: boolean
    level?: boolean
    type?: boolean
    step?: boolean
    status?: boolean
    departmentId?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    accountId?: boolean
    regionId?: boolean
    municipalId?: boolean
    provinceId?: boolean
    barangayId?: boolean
    lineId?: boolean
    privilegeId?: boolean
    groupId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstName" | "lastName" | "middleName" | "suffix" | "birthDate" | "email" | "username" | "gender" | "profilePicture" | "createdAt" | "level" | "type" | "step" | "status" | "departmentId" | "positionId" | "salaryGradeId" | "accountId" | "regionId" | "municipalId" | "provinceId" | "barangayId" | "lineId" | "privilegeId" | "groupId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sentNotifications?: boolean | User$sentNotificationsArgs<ExtArgs>
    receivedNotifications?: boolean | User$receivedNotificationsArgs<ExtArgs>
    department?: boolean | User$departmentArgs<ExtArgs>
    headedDepartment?: boolean | User$headedDepartmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    Leave?: boolean | User$LeaveArgs<ExtArgs>
    Announcement?: boolean | User$AnnouncementArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    Promotions?: boolean | User$PromotionsArgs<ExtArgs>
    bdaySender?: boolean | User$bdaySenderArgs<ExtArgs>
    bdayRecipient?: boolean | User$bdayRecipientArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    PositionSlot?: boolean | User$PositionSlotArgs<ExtArgs>
    Accomplishment?: boolean | User$AccomplishmentArgs<ExtArgs>
    headResponse?: boolean | User$headResponseArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    Supplies?: boolean | User$SuppliesArgs<ExtArgs>
    SuppliesRecord?: boolean | User$SuppliesRecordArgs<ExtArgs>
    LogRecord?: boolean | User$LogRecordArgs<ExtArgs>
    transferTo?: boolean | User$transferToArgs<ExtArgs>
    TransferredSupplies?: boolean | User$TransferredSuppliesArgs<ExtArgs>
    ProfilePicture?: boolean | User$ProfilePictureArgs<ExtArgs>
    Application?: boolean | User$ApplicationArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    SupplyBatchOrder?: boolean | User$SupplyBatchOrderArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
    chief?: boolean | User$chiefArgs<ExtArgs>
    InventoryBox?: boolean | User$InventoryBoxArgs<ExtArgs>
    InventoryAccessLogs?: boolean | User$InventoryAccessLogsArgs<ExtArgs>
    ContainerAllowedUser?: boolean | User$ContainerAllowedUserArgs<ExtArgs>
    GrantContainer?: boolean | User$GrantContainerArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | User$departmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | User$departmentArgs<ExtArgs>
    Position?: boolean | User$PositionArgs<ExtArgs>
    SalaryGrade?: boolean | User$SalaryGradeArgs<ExtArgs>
    account?: boolean | User$accountArgs<ExtArgs>
    region?: boolean | User$regionArgs<ExtArgs>
    province?: boolean | User$provinceArgs<ExtArgs>
    municipal?: boolean | User$municipalArgs<ExtArgs>
    barangay?: boolean | User$barangayArgs<ExtArgs>
    line?: boolean | User$lineArgs<ExtArgs>
    privilege?: boolean | User$privilegeArgs<ExtArgs>
    Group?: boolean | User$GroupArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      sentNotifications: Prisma.$NotificationPayload<ExtArgs>[]
      receivedNotifications: Prisma.$NotificationPayload<ExtArgs>[]
      department: Prisma.$DepartmentPayload<ExtArgs> | null
      headedDepartment: Prisma.$DepartmentPayload<ExtArgs> | null
      Position: Prisma.$PositionPayload<ExtArgs> | null
      SalaryGrade: Prisma.$SalaryGradePayload<ExtArgs> | null
      Leave: Prisma.$LeavePayload<ExtArgs>[]
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      account: Prisma.$AccountPayload<ExtArgs> | null
      Promotions: Prisma.$PromotionPayload<ExtArgs>[]
      bdaySender: Prisma.$BirthdayNoticeResponsePayload<ExtArgs>[]
      bdayRecipient: Prisma.$BirthdayNoticeResponsePayload<ExtArgs>[]
      region: Prisma.$RegionPayload<ExtArgs> | null
      province: Prisma.$ProvincePayload<ExtArgs> | null
      municipal: Prisma.$MunicipalPayload<ExtArgs> | null
      barangay: Prisma.$BarangayPayload<ExtArgs> | null
      PositionSlot: Prisma.$PositionSlotPayload<ExtArgs> | null
      Accomplishment: Prisma.$AccomplishmentPayload<ExtArgs>[]
      headResponse: Prisma.$AccomplishmentResponsePayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
      Supplies: Prisma.$SuppliesPayload<ExtArgs>[]
      SuppliesRecord: Prisma.$SuppliesRecordPayload<ExtArgs>[]
      LogRecord: Prisma.$LogRecordPayload<ExtArgs>[]
      transferTo: Prisma.$TransferredSuppliesPayload<ExtArgs>[]
      TransferredSupplies: Prisma.$TransferredSuppliesPayload<ExtArgs>[]
      ProfilePicture: Prisma.$ProfilePicturePayload<ExtArgs> | null
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      privilege: Prisma.$PrivilegePayload<ExtArgs> | null
      SupplyBatchOrder: Prisma.$SupplyBatchOrderPayload<ExtArgs>[]
      Group: Prisma.$GroupPayload<ExtArgs> | null
      chief: Prisma.$GroupPayload<ExtArgs>[]
      InventoryBox: Prisma.$InventoryBoxPayload<ExtArgs>[]
      InventoryAccessLogs: Prisma.$InventoryAccessLogsPayload<ExtArgs>[]
      ContainerAllowedUser: Prisma.$ContainerAllowedUserPayload<ExtArgs>[]
      GrantContainer: Prisma.$ContainerAllowedUserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstName: string
      lastName: string
      middleName: string | null
      suffix: string | null
      birthDate: Date | null
      email: string
      username: string
      gender: string | null
      profilePicture: string | null
      createdAt: Date
      level: number
      type: string
      step: number
      status: string
      departmentId: string | null
      positionId: string | null
      salaryGradeId: string | null
      accountId: string | null
      regionId: string | null
      municipalId: string | null
      provinceId: string | null
      barangayId: string | null
      lineId: string | null
      privilegeId: string | null
      groupId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sentNotifications<T extends User$sentNotificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$sentNotificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedNotifications<T extends User$receivedNotificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedNotificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    department<T extends User$departmentArgs<ExtArgs> = {}>(args?: Subset<T, User$departmentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    headedDepartment<T extends User$headedDepartmentArgs<ExtArgs> = {}>(args?: Subset<T, User$headedDepartmentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Position<T extends User$PositionArgs<ExtArgs> = {}>(args?: Subset<T, User$PositionArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SalaryGrade<T extends User$SalaryGradeArgs<ExtArgs> = {}>(args?: Subset<T, User$SalaryGradeArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Leave<T extends User$LeaveArgs<ExtArgs> = {}>(args?: Subset<T, User$LeaveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Announcement<T extends User$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, User$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    account<T extends User$accountArgs<ExtArgs> = {}>(args?: Subset<T, User$accountArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Promotions<T extends User$PromotionsArgs<ExtArgs> = {}>(args?: Subset<T, User$PromotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bdaySender<T extends User$bdaySenderArgs<ExtArgs> = {}>(args?: Subset<T, User$bdaySenderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bdayRecipient<T extends User$bdayRecipientArgs<ExtArgs> = {}>(args?: Subset<T, User$bdayRecipientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    region<T extends User$regionArgs<ExtArgs> = {}>(args?: Subset<T, User$regionArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    province<T extends User$provinceArgs<ExtArgs> = {}>(args?: Subset<T, User$provinceArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    municipal<T extends User$municipalArgs<ExtArgs> = {}>(args?: Subset<T, User$municipalArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    barangay<T extends User$barangayArgs<ExtArgs> = {}>(args?: Subset<T, User$barangayArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    PositionSlot<T extends User$PositionSlotArgs<ExtArgs> = {}>(args?: Subset<T, User$PositionSlotArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Accomplishment<T extends User$AccomplishmentArgs<ExtArgs> = {}>(args?: Subset<T, User$AccomplishmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    headResponse<T extends User$headResponseArgs<ExtArgs> = {}>(args?: Subset<T, User$headResponseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends User$lineArgs<ExtArgs> = {}>(args?: Subset<T, User$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Supplies<T extends User$SuppliesArgs<ExtArgs> = {}>(args?: Subset<T, User$SuppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SuppliesRecord<T extends User$SuppliesRecordArgs<ExtArgs> = {}>(args?: Subset<T, User$SuppliesRecordArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SuppliesRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    LogRecord<T extends User$LogRecordArgs<ExtArgs> = {}>(args?: Subset<T, User$LogRecordArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferTo<T extends User$transferToArgs<ExtArgs> = {}>(args?: Subset<T, User$transferToArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TransferredSupplies<T extends User$TransferredSuppliesArgs<ExtArgs> = {}>(args?: Subset<T, User$TransferredSuppliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferredSuppliesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProfilePicture<T extends User$ProfilePictureArgs<ExtArgs> = {}>(args?: Subset<T, User$ProfilePictureArgs<ExtArgs>>): Prisma__ProfilePictureClient<$Result.GetResult<Prisma.$ProfilePicturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Application<T extends User$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, User$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    privilege<T extends User$privilegeArgs<ExtArgs> = {}>(args?: Subset<T, User$privilegeArgs<ExtArgs>>): Prisma__PrivilegeClient<$Result.GetResult<Prisma.$PrivilegePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SupplyBatchOrder<T extends User$SupplyBatchOrderArgs<ExtArgs> = {}>(args?: Subset<T, User$SupplyBatchOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplyBatchOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Group<T extends User$GroupArgs<ExtArgs> = {}>(args?: Subset<T, User$GroupArgs<ExtArgs>>): Prisma__GroupClient<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    chief<T extends User$chiefArgs<ExtArgs> = {}>(args?: Subset<T, User$chiefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InventoryBox<T extends User$InventoryBoxArgs<ExtArgs> = {}>(args?: Subset<T, User$InventoryBoxArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryBoxPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InventoryAccessLogs<T extends User$InventoryAccessLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$InventoryAccessLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventoryAccessLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ContainerAllowedUser<T extends User$ContainerAllowedUserArgs<ExtArgs> = {}>(args?: Subset<T, User$ContainerAllowedUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    GrantContainer<T extends User$GrantContainerArgs<ExtArgs> = {}>(args?: Subset<T, User$GrantContainerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContainerAllowedUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly middleName: FieldRef<"User", 'String'>
    readonly suffix: FieldRef<"User", 'String'>
    readonly birthDate: FieldRef<"User", 'DateTime'>
    readonly email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly gender: FieldRef<"User", 'String'>
    readonly profilePicture: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly level: FieldRef<"User", 'Int'>
    readonly type: FieldRef<"User", 'String'>
    readonly step: FieldRef<"User", 'Int'>
    readonly status: FieldRef<"User", 'String'>
    readonly departmentId: FieldRef<"User", 'String'>
    readonly positionId: FieldRef<"User", 'String'>
    readonly salaryGradeId: FieldRef<"User", 'String'>
    readonly accountId: FieldRef<"User", 'String'>
    readonly regionId: FieldRef<"User", 'String'>
    readonly municipalId: FieldRef<"User", 'String'>
    readonly provinceId: FieldRef<"User", 'String'>
    readonly barangayId: FieldRef<"User", 'String'>
    readonly lineId: FieldRef<"User", 'String'>
    readonly privilegeId: FieldRef<"User", 'String'>
    readonly groupId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.sentNotifications
   */
  export type User$sentNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.receivedNotifications
   */
  export type User$receivedNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.department
   */
  export type User$departmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * User.headedDepartment
   */
  export type User$headedDepartmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * User.Position
   */
  export type User$PositionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    where?: PositionWhereInput
  }

  /**
   * User.SalaryGrade
   */
  export type User$SalaryGradeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    where?: SalaryGradeWhereInput
  }

  /**
   * User.Leave
   */
  export type User$LeaveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    where?: LeaveWhereInput
    orderBy?: LeaveOrderByWithRelationInput | LeaveOrderByWithRelationInput[]
    cursor?: LeaveWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeaveScalarFieldEnum | LeaveScalarFieldEnum[]
  }

  /**
   * User.Announcement
   */
  export type User$AnnouncementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * User.account
   */
  export type User$accountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
  }

  /**
   * User.Promotions
   */
  export type User$PromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * User.bdaySender
   */
  export type User$bdaySenderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    where?: BirthdayNoticeResponseWhereInput
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * User.bdayRecipient
   */
  export type User$bdayRecipientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    where?: BirthdayNoticeResponseWhereInput
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * User.region
   */
  export type User$regionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    where?: RegionWhereInput
  }

  /**
   * User.province
   */
  export type User$provinceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    where?: ProvinceWhereInput
  }

  /**
   * User.municipal
   */
  export type User$municipalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    where?: MunicipalWhereInput
  }

  /**
   * User.barangay
   */
  export type User$barangayArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    where?: BarangayWhereInput
  }

  /**
   * User.PositionSlot
   */
  export type User$PositionSlotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    where?: PositionSlotWhereInput
  }

  /**
   * User.Accomplishment
   */
  export type User$AccomplishmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    where?: AccomplishmentWhereInput
    orderBy?: AccomplishmentOrderByWithRelationInput | AccomplishmentOrderByWithRelationInput[]
    cursor?: AccomplishmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccomplishmentScalarFieldEnum | AccomplishmentScalarFieldEnum[]
  }

  /**
   * User.headResponse
   */
  export type User$headResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    where?: AccomplishmentResponseWhereInput
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    cursor?: AccomplishmentResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccomplishmentResponseScalarFieldEnum | AccomplishmentResponseScalarFieldEnum[]
  }

  /**
   * User.line
   */
  export type User$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * User.Supplies
   */
  export type User$SuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplies
     */
    select?: SuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplies
     */
    omit?: SuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesInclude<ExtArgs> | null
    where?: SuppliesWhereInput
    orderBy?: SuppliesOrderByWithRelationInput | SuppliesOrderByWithRelationInput[]
    cursor?: SuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesScalarFieldEnum | SuppliesScalarFieldEnum[]
  }

  /**
   * User.SuppliesRecord
   */
  export type User$SuppliesRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SuppliesRecord
     */
    select?: SuppliesRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SuppliesRecord
     */
    omit?: SuppliesRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SuppliesRecordInclude<ExtArgs> | null
    where?: SuppliesRecordWhereInput
    orderBy?: SuppliesRecordOrderByWithRelationInput | SuppliesRecordOrderByWithRelationInput[]
    cursor?: SuppliesRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuppliesRecordScalarFieldEnum | SuppliesRecordScalarFieldEnum[]
  }

  /**
   * User.LogRecord
   */
  export type User$LogRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    where?: LogRecordWhereInput
    orderBy?: LogRecordOrderByWithRelationInput | LogRecordOrderByWithRelationInput[]
    cursor?: LogRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogRecordScalarFieldEnum | LogRecordScalarFieldEnum[]
  }

  /**
   * User.transferTo
   */
  export type User$transferToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    where?: TransferredSuppliesWhereInput
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    cursor?: TransferredSuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * User.TransferredSupplies
   */
  export type User$TransferredSuppliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferredSupplies
     */
    select?: TransferredSuppliesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransferredSupplies
     */
    omit?: TransferredSuppliesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferredSuppliesInclude<ExtArgs> | null
    where?: TransferredSuppliesWhereInput
    orderBy?: TransferredSuppliesOrderByWithRelationInput | TransferredSuppliesOrderByWithRelationInput[]
    cursor?: TransferredSuppliesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferredSuppliesScalarFieldEnum | TransferredSuppliesScalarFieldEnum[]
  }

  /**
   * User.ProfilePicture
   */
  export type User$ProfilePictureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfilePicture
     */
    select?: ProfilePictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfilePicture
     */
    omit?: ProfilePictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfilePictureInclude<ExtArgs> | null
    where?: ProfilePictureWhereInput
  }

  /**
   * User.Application
   */
  export type User$ApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * User.privilege
   */
  export type User$privilegeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Privilege
     */
    select?: PrivilegeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Privilege
     */
    omit?: PrivilegeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrivilegeInclude<ExtArgs> | null
    where?: PrivilegeWhereInput
  }

  /**
   * User.SupplyBatchOrder
   */
  export type User$SupplyBatchOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplyBatchOrder
     */
    select?: SupplyBatchOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupplyBatchOrder
     */
    omit?: SupplyBatchOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplyBatchOrderInclude<ExtArgs> | null
    where?: SupplyBatchOrderWhereInput
    orderBy?: SupplyBatchOrderOrderByWithRelationInput | SupplyBatchOrderOrderByWithRelationInput[]
    cursor?: SupplyBatchOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupplyBatchOrderScalarFieldEnum | SupplyBatchOrderScalarFieldEnum[]
  }

  /**
   * User.Group
   */
  export type User$GroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    where?: GroupWhereInput
  }

  /**
   * User.chief
   */
  export type User$chiefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Group
     */
    select?: GroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Group
     */
    omit?: GroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroupInclude<ExtArgs> | null
    where?: GroupWhereInput
    orderBy?: GroupOrderByWithRelationInput | GroupOrderByWithRelationInput[]
    cursor?: GroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroupScalarFieldEnum | GroupScalarFieldEnum[]
  }

  /**
   * User.InventoryBox
   */
  export type User$InventoryBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryBox
     */
    select?: InventoryBoxSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryBox
     */
    omit?: InventoryBoxOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryBoxInclude<ExtArgs> | null
    where?: InventoryBoxWhereInput
    orderBy?: InventoryBoxOrderByWithRelationInput | InventoryBoxOrderByWithRelationInput[]
    cursor?: InventoryBoxWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryBoxScalarFieldEnum | InventoryBoxScalarFieldEnum[]
  }

  /**
   * User.InventoryAccessLogs
   */
  export type User$InventoryAccessLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventoryAccessLogs
     */
    select?: InventoryAccessLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InventoryAccessLogs
     */
    omit?: InventoryAccessLogsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventoryAccessLogsInclude<ExtArgs> | null
    where?: InventoryAccessLogsWhereInput
    orderBy?: InventoryAccessLogsOrderByWithRelationInput | InventoryAccessLogsOrderByWithRelationInput[]
    cursor?: InventoryAccessLogsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventoryAccessLogsScalarFieldEnum | InventoryAccessLogsScalarFieldEnum[]
  }

  /**
   * User.ContainerAllowedUser
   */
  export type User$ContainerAllowedUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    where?: ContainerAllowedUserWhereInput
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    cursor?: ContainerAllowedUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * User.GrantContainer
   */
  export type User$GrantContainerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContainerAllowedUser
     */
    select?: ContainerAllowedUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ContainerAllowedUser
     */
    omit?: ContainerAllowedUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContainerAllowedUserInclude<ExtArgs> | null
    where?: ContainerAllowedUserWhereInput
    orderBy?: ContainerAllowedUserOrderByWithRelationInput | ContainerAllowedUserOrderByWithRelationInput[]
    cursor?: ContainerAllowedUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContainerAllowedUserScalarFieldEnum | ContainerAllowedUserScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model LogRecord
   */

  export type AggregateLogRecord = {
    _count: LogRecordCountAggregateOutputType | null
    _min: LogRecordMinAggregateOutputType | null
    _max: LogRecordMaxAggregateOutputType | null
  }

  export type LogRecordMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    timestamp: Date | null
  }

  export type LogRecordMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    timestamp: Date | null
  }

  export type LogRecordCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    timestamp: number
    _all: number
  }


  export type LogRecordMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    timestamp?: true
  }

  export type LogRecordMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    timestamp?: true
  }

  export type LogRecordCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    timestamp?: true
    _all?: true
  }

  export type LogRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LogRecord to aggregate.
     */
    where?: LogRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LogRecords to fetch.
     */
    orderBy?: LogRecordOrderByWithRelationInput | LogRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LogRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LogRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LogRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LogRecords
    **/
    _count?: true | LogRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LogRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LogRecordMaxAggregateInputType
  }

  export type GetLogRecordAggregateType<T extends LogRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateLogRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLogRecord[P]>
      : GetScalarType<T[P], AggregateLogRecord[P]>
  }




  export type LogRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LogRecordWhereInput
    orderBy?: LogRecordOrderByWithAggregationInput | LogRecordOrderByWithAggregationInput[]
    by: LogRecordScalarFieldEnum[] | LogRecordScalarFieldEnum
    having?: LogRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LogRecordCountAggregateInputType | true
    _min?: LogRecordMinAggregateInputType
    _max?: LogRecordMaxAggregateInputType
  }

  export type LogRecordGroupByOutputType = {
    id: string
    userId: string
    action: string
    timestamp: Date
    _count: LogRecordCountAggregateOutputType | null
    _min: LogRecordMinAggregateOutputType | null
    _max: LogRecordMaxAggregateOutputType | null
  }

  type GetLogRecordGroupByPayload<T extends LogRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LogRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LogRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LogRecordGroupByOutputType[P]>
            : GetScalarType<T[P], LogRecordGroupByOutputType[P]>
        }
      >
    >


  export type LogRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["logRecord"]>

  export type LogRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["logRecord"]>

  export type LogRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["logRecord"]>

  export type LogRecordSelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    timestamp?: boolean
  }

  export type LogRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "action" | "timestamp", ExtArgs["result"]["logRecord"]>
  export type LogRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LogRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LogRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LogRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LogRecord"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      action: string
      timestamp: Date
    }, ExtArgs["result"]["logRecord"]>
    composites: {}
  }

  type LogRecordGetPayload<S extends boolean | null | undefined | LogRecordDefaultArgs> = $Result.GetResult<Prisma.$LogRecordPayload, S>

  type LogRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LogRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LogRecordCountAggregateInputType | true
    }

  export interface LogRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LogRecord'], meta: { name: 'LogRecord' } }
    /**
     * Find zero or one LogRecord that matches the filter.
     * @param {LogRecordFindUniqueArgs} args - Arguments to find a LogRecord
     * @example
     * // Get one LogRecord
     * const logRecord = await prisma.logRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LogRecordFindUniqueArgs>(args: SelectSubset<T, LogRecordFindUniqueArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LogRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LogRecordFindUniqueOrThrowArgs} args - Arguments to find a LogRecord
     * @example
     * // Get one LogRecord
     * const logRecord = await prisma.logRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LogRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, LogRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LogRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordFindFirstArgs} args - Arguments to find a LogRecord
     * @example
     * // Get one LogRecord
     * const logRecord = await prisma.logRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LogRecordFindFirstArgs>(args?: SelectSubset<T, LogRecordFindFirstArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LogRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordFindFirstOrThrowArgs} args - Arguments to find a LogRecord
     * @example
     * // Get one LogRecord
     * const logRecord = await prisma.logRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LogRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, LogRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LogRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LogRecords
     * const logRecords = await prisma.logRecord.findMany()
     * 
     * // Get first 10 LogRecords
     * const logRecords = await prisma.logRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const logRecordWithIdOnly = await prisma.logRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LogRecordFindManyArgs>(args?: SelectSubset<T, LogRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LogRecord.
     * @param {LogRecordCreateArgs} args - Arguments to create a LogRecord.
     * @example
     * // Create one LogRecord
     * const LogRecord = await prisma.logRecord.create({
     *   data: {
     *     // ... data to create a LogRecord
     *   }
     * })
     * 
     */
    create<T extends LogRecordCreateArgs>(args: SelectSubset<T, LogRecordCreateArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LogRecords.
     * @param {LogRecordCreateManyArgs} args - Arguments to create many LogRecords.
     * @example
     * // Create many LogRecords
     * const logRecord = await prisma.logRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LogRecordCreateManyArgs>(args?: SelectSubset<T, LogRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LogRecords and returns the data saved in the database.
     * @param {LogRecordCreateManyAndReturnArgs} args - Arguments to create many LogRecords.
     * @example
     * // Create many LogRecords
     * const logRecord = await prisma.logRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LogRecords and only return the `id`
     * const logRecordWithIdOnly = await prisma.logRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LogRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, LogRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LogRecord.
     * @param {LogRecordDeleteArgs} args - Arguments to delete one LogRecord.
     * @example
     * // Delete one LogRecord
     * const LogRecord = await prisma.logRecord.delete({
     *   where: {
     *     // ... filter to delete one LogRecord
     *   }
     * })
     * 
     */
    delete<T extends LogRecordDeleteArgs>(args: SelectSubset<T, LogRecordDeleteArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LogRecord.
     * @param {LogRecordUpdateArgs} args - Arguments to update one LogRecord.
     * @example
     * // Update one LogRecord
     * const logRecord = await prisma.logRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LogRecordUpdateArgs>(args: SelectSubset<T, LogRecordUpdateArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LogRecords.
     * @param {LogRecordDeleteManyArgs} args - Arguments to filter LogRecords to delete.
     * @example
     * // Delete a few LogRecords
     * const { count } = await prisma.logRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LogRecordDeleteManyArgs>(args?: SelectSubset<T, LogRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LogRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LogRecords
     * const logRecord = await prisma.logRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LogRecordUpdateManyArgs>(args: SelectSubset<T, LogRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LogRecords and returns the data updated in the database.
     * @param {LogRecordUpdateManyAndReturnArgs} args - Arguments to update many LogRecords.
     * @example
     * // Update many LogRecords
     * const logRecord = await prisma.logRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LogRecords and only return the `id`
     * const logRecordWithIdOnly = await prisma.logRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LogRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, LogRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LogRecord.
     * @param {LogRecordUpsertArgs} args - Arguments to update or create a LogRecord.
     * @example
     * // Update or create a LogRecord
     * const logRecord = await prisma.logRecord.upsert({
     *   create: {
     *     // ... data to create a LogRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LogRecord we want to update
     *   }
     * })
     */
    upsert<T extends LogRecordUpsertArgs>(args: SelectSubset<T, LogRecordUpsertArgs<ExtArgs>>): Prisma__LogRecordClient<$Result.GetResult<Prisma.$LogRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LogRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordCountArgs} args - Arguments to filter LogRecords to count.
     * @example
     * // Count the number of LogRecords
     * const count = await prisma.logRecord.count({
     *   where: {
     *     // ... the filter for the LogRecords we want to count
     *   }
     * })
    **/
    count<T extends LogRecordCountArgs>(
      args?: Subset<T, LogRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LogRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LogRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LogRecordAggregateArgs>(args: Subset<T, LogRecordAggregateArgs>): Prisma.PrismaPromise<GetLogRecordAggregateType<T>>

    /**
     * Group by LogRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LogRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LogRecordGroupByArgs['orderBy'] }
        : { orderBy?: LogRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LogRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLogRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LogRecord model
   */
  readonly fields: LogRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LogRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LogRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LogRecord model
   */
  interface LogRecordFieldRefs {
    readonly id: FieldRef<"LogRecord", 'String'>
    readonly userId: FieldRef<"LogRecord", 'String'>
    readonly action: FieldRef<"LogRecord", 'String'>
    readonly timestamp: FieldRef<"LogRecord", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LogRecord findUnique
   */
  export type LogRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter, which LogRecord to fetch.
     */
    where: LogRecordWhereUniqueInput
  }

  /**
   * LogRecord findUniqueOrThrow
   */
  export type LogRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter, which LogRecord to fetch.
     */
    where: LogRecordWhereUniqueInput
  }

  /**
   * LogRecord findFirst
   */
  export type LogRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter, which LogRecord to fetch.
     */
    where?: LogRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LogRecords to fetch.
     */
    orderBy?: LogRecordOrderByWithRelationInput | LogRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LogRecords.
     */
    cursor?: LogRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LogRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LogRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LogRecords.
     */
    distinct?: LogRecordScalarFieldEnum | LogRecordScalarFieldEnum[]
  }

  /**
   * LogRecord findFirstOrThrow
   */
  export type LogRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter, which LogRecord to fetch.
     */
    where?: LogRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LogRecords to fetch.
     */
    orderBy?: LogRecordOrderByWithRelationInput | LogRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LogRecords.
     */
    cursor?: LogRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LogRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LogRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LogRecords.
     */
    distinct?: LogRecordScalarFieldEnum | LogRecordScalarFieldEnum[]
  }

  /**
   * LogRecord findMany
   */
  export type LogRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter, which LogRecords to fetch.
     */
    where?: LogRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LogRecords to fetch.
     */
    orderBy?: LogRecordOrderByWithRelationInput | LogRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LogRecords.
     */
    cursor?: LogRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LogRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LogRecords.
     */
    skip?: number
    distinct?: LogRecordScalarFieldEnum | LogRecordScalarFieldEnum[]
  }

  /**
   * LogRecord create
   */
  export type LogRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a LogRecord.
     */
    data: XOR<LogRecordCreateInput, LogRecordUncheckedCreateInput>
  }

  /**
   * LogRecord createMany
   */
  export type LogRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LogRecords.
     */
    data: LogRecordCreateManyInput | LogRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LogRecord createManyAndReturn
   */
  export type LogRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * The data used to create many LogRecords.
     */
    data: LogRecordCreateManyInput | LogRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LogRecord update
   */
  export type LogRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a LogRecord.
     */
    data: XOR<LogRecordUpdateInput, LogRecordUncheckedUpdateInput>
    /**
     * Choose, which LogRecord to update.
     */
    where: LogRecordWhereUniqueInput
  }

  /**
   * LogRecord updateMany
   */
  export type LogRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LogRecords.
     */
    data: XOR<LogRecordUpdateManyMutationInput, LogRecordUncheckedUpdateManyInput>
    /**
     * Filter which LogRecords to update
     */
    where?: LogRecordWhereInput
    /**
     * Limit how many LogRecords to update.
     */
    limit?: number
  }

  /**
   * LogRecord updateManyAndReturn
   */
  export type LogRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * The data used to update LogRecords.
     */
    data: XOR<LogRecordUpdateManyMutationInput, LogRecordUncheckedUpdateManyInput>
    /**
     * Filter which LogRecords to update
     */
    where?: LogRecordWhereInput
    /**
     * Limit how many LogRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LogRecord upsert
   */
  export type LogRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the LogRecord to update in case it exists.
     */
    where: LogRecordWhereUniqueInput
    /**
     * In case the LogRecord found by the `where` argument doesn't exist, create a new LogRecord with this data.
     */
    create: XOR<LogRecordCreateInput, LogRecordUncheckedCreateInput>
    /**
     * In case the LogRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LogRecordUpdateInput, LogRecordUncheckedUpdateInput>
  }

  /**
   * LogRecord delete
   */
  export type LogRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
    /**
     * Filter which LogRecord to delete.
     */
    where: LogRecordWhereUniqueInput
  }

  /**
   * LogRecord deleteMany
   */
  export type LogRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LogRecords to delete
     */
    where?: LogRecordWhereInput
    /**
     * Limit how many LogRecords to delete.
     */
    limit?: number
  }

  /**
   * LogRecord without action
   */
  export type LogRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LogRecord
     */
    select?: LogRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LogRecord
     */
    omit?: LogRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogRecordInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    createdAt: Date | null
    recipientId: string | null
    senderId: string | null
    path: string | null
    isRead: boolean | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    createdAt: Date | null
    recipientId: string | null
    senderId: string | null
    path: string | null
    isRead: boolean | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    title: number
    content: number
    createdAt: number
    recipientId: number
    senderId: number
    path: number
    isRead: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    recipientId?: true
    senderId?: true
    path?: true
    isRead?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    recipientId?: true
    senderId?: true
    path?: true
    isRead?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    recipientId?: true
    senderId?: true
    path?: true
    isRead?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    title: string
    content: string
    createdAt: Date
    recipientId: string
    senderId: string
    path: string | null
    isRead: boolean
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    recipientId?: boolean
    senderId?: boolean
    path?: boolean
    isRead?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    recipientId?: boolean
    senderId?: boolean
    path?: boolean
    isRead?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    recipientId?: boolean
    senderId?: boolean
    path?: boolean
    isRead?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    recipientId?: boolean
    senderId?: boolean
    path?: boolean
    isRead?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "content" | "createdAt" | "recipientId" | "senderId" | "path" | "isRead", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      sender: Prisma.$UserPayload<ExtArgs>
      recipient: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      createdAt: Date
      recipientId: string
      senderId: string
      path: string | null
      isRead: boolean
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    recipient<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly content: FieldRef<"Notification", 'String'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly recipientId: FieldRef<"Notification", 'String'>
    readonly senderId: FieldRef<"Notification", 'String'>
    readonly path: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Position
   */

  export type AggregatePosition = {
    _count: PositionCountAggregateOutputType | null
    _avg: PositionAvgAggregateOutputType | null
    _sum: PositionSumAggregateOutputType | null
    _min: PositionMinAggregateOutputType | null
    _max: PositionMaxAggregateOutputType | null
  }

  export type PositionAvgAggregateOutputType = {
    max: number | null
  }

  export type PositionSumAggregateOutputType = {
    max: number | null
  }

  export type PositionMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    max: number | null
    createdAt: Date | null
    itemNumber: string | null
    salaryGradeId: string | null
    plantilla: boolean | null
    lineId: string | null
    departmentId: string | null
  }

  export type PositionMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    max: number | null
    createdAt: Date | null
    itemNumber: string | null
    salaryGradeId: string | null
    plantilla: boolean | null
    lineId: string | null
    departmentId: string | null
  }

  export type PositionCountAggregateOutputType = {
    id: number
    name: number
    description: number
    max: number
    createdAt: number
    itemNumber: number
    salaryGradeId: number
    plantilla: number
    lineId: number
    departmentId: number
    _all: number
  }


  export type PositionAvgAggregateInputType = {
    max?: true
  }

  export type PositionSumAggregateInputType = {
    max?: true
  }

  export type PositionMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    max?: true
    createdAt?: true
    itemNumber?: true
    salaryGradeId?: true
    plantilla?: true
    lineId?: true
    departmentId?: true
  }

  export type PositionMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    max?: true
    createdAt?: true
    itemNumber?: true
    salaryGradeId?: true
    plantilla?: true
    lineId?: true
    departmentId?: true
  }

  export type PositionCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    max?: true
    createdAt?: true
    itemNumber?: true
    salaryGradeId?: true
    plantilla?: true
    lineId?: true
    departmentId?: true
    _all?: true
  }

  export type PositionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Position to aggregate.
     */
    where?: PositionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Positions to fetch.
     */
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PositionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Positions
    **/
    _count?: true | PositionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PositionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PositionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PositionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PositionMaxAggregateInputType
  }

  export type GetPositionAggregateType<T extends PositionAggregateArgs> = {
        [P in keyof T & keyof AggregatePosition]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosition[P]>
      : GetScalarType<T[P], AggregatePosition[P]>
  }




  export type PositionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionWhereInput
    orderBy?: PositionOrderByWithAggregationInput | PositionOrderByWithAggregationInput[]
    by: PositionScalarFieldEnum[] | PositionScalarFieldEnum
    having?: PositionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PositionCountAggregateInputType | true
    _avg?: PositionAvgAggregateInputType
    _sum?: PositionSumAggregateInputType
    _min?: PositionMinAggregateInputType
    _max?: PositionMaxAggregateInputType
  }

  export type PositionGroupByOutputType = {
    id: string
    name: string
    description: string | null
    max: number
    createdAt: Date
    itemNumber: string | null
    salaryGradeId: string | null
    plantilla: boolean
    lineId: string | null
    departmentId: string | null
    _count: PositionCountAggregateOutputType | null
    _avg: PositionAvgAggregateOutputType | null
    _sum: PositionSumAggregateOutputType | null
    _min: PositionMinAggregateOutputType | null
    _max: PositionMaxAggregateOutputType | null
  }

  type GetPositionGroupByPayload<T extends PositionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PositionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PositionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PositionGroupByOutputType[P]>
            : GetScalarType<T[P], PositionGroupByOutputType[P]>
        }
      >
    >


  export type PositionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    max?: boolean
    createdAt?: boolean
    itemNumber?: boolean
    salaryGradeId?: boolean
    plantilla?: boolean
    lineId?: boolean
    departmentId?: boolean
    users?: boolean | Position$usersArgs<ExtArgs>
    Promotion?: boolean | Position$PromotionArgs<ExtArgs>
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    PositionSlot?: boolean | Position$PositionSlotArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
    Application?: boolean | Position$ApplicationArgs<ExtArgs>
    _count?: boolean | PositionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["position"]>

  export type PositionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    max?: boolean
    createdAt?: boolean
    itemNumber?: boolean
    salaryGradeId?: boolean
    plantilla?: boolean
    lineId?: boolean
    departmentId?: boolean
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
  }, ExtArgs["result"]["position"]>

  export type PositionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    max?: boolean
    createdAt?: boolean
    itemNumber?: boolean
    salaryGradeId?: boolean
    plantilla?: boolean
    lineId?: boolean
    departmentId?: boolean
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
  }, ExtArgs["result"]["position"]>

  export type PositionSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    max?: boolean
    createdAt?: boolean
    itemNumber?: boolean
    salaryGradeId?: boolean
    plantilla?: boolean
    lineId?: boolean
    departmentId?: boolean
  }

  export type PositionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "max" | "createdAt" | "itemNumber" | "salaryGradeId" | "plantilla" | "lineId" | "departmentId", ExtArgs["result"]["position"]>
  export type PositionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Position$usersArgs<ExtArgs>
    Promotion?: boolean | Position$PromotionArgs<ExtArgs>
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    PositionSlot?: boolean | Position$PositionSlotArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
    Application?: boolean | Position$ApplicationArgs<ExtArgs>
    _count?: boolean | PositionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PositionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
  }
  export type PositionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SalaryGrade?: boolean | Position$SalaryGradeArgs<ExtArgs>
    line?: boolean | Position$lineArgs<ExtArgs>
    department?: boolean | Position$departmentArgs<ExtArgs>
  }

  export type $PositionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Position"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      Promotion: Prisma.$PromotionPayload<ExtArgs>[]
      SalaryGrade: Prisma.$SalaryGradePayload<ExtArgs> | null
      PositionSlot: Prisma.$PositionSlotPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
      department: Prisma.$DepartmentPayload<ExtArgs> | null
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      max: number
      createdAt: Date
      itemNumber: string | null
      salaryGradeId: string | null
      plantilla: boolean
      lineId: string | null
      departmentId: string | null
    }, ExtArgs["result"]["position"]>
    composites: {}
  }

  type PositionGetPayload<S extends boolean | null | undefined | PositionDefaultArgs> = $Result.GetResult<Prisma.$PositionPayload, S>

  type PositionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PositionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PositionCountAggregateInputType | true
    }

  export interface PositionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Position'], meta: { name: 'Position' } }
    /**
     * Find zero or one Position that matches the filter.
     * @param {PositionFindUniqueArgs} args - Arguments to find a Position
     * @example
     * // Get one Position
     * const position = await prisma.position.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PositionFindUniqueArgs>(args: SelectSubset<T, PositionFindUniqueArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Position that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PositionFindUniqueOrThrowArgs} args - Arguments to find a Position
     * @example
     * // Get one Position
     * const position = await prisma.position.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PositionFindUniqueOrThrowArgs>(args: SelectSubset<T, PositionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Position that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionFindFirstArgs} args - Arguments to find a Position
     * @example
     * // Get one Position
     * const position = await prisma.position.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PositionFindFirstArgs>(args?: SelectSubset<T, PositionFindFirstArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Position that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionFindFirstOrThrowArgs} args - Arguments to find a Position
     * @example
     * // Get one Position
     * const position = await prisma.position.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PositionFindFirstOrThrowArgs>(args?: SelectSubset<T, PositionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Positions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Positions
     * const positions = await prisma.position.findMany()
     * 
     * // Get first 10 Positions
     * const positions = await prisma.position.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const positionWithIdOnly = await prisma.position.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PositionFindManyArgs>(args?: SelectSubset<T, PositionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Position.
     * @param {PositionCreateArgs} args - Arguments to create a Position.
     * @example
     * // Create one Position
     * const Position = await prisma.position.create({
     *   data: {
     *     // ... data to create a Position
     *   }
     * })
     * 
     */
    create<T extends PositionCreateArgs>(args: SelectSubset<T, PositionCreateArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Positions.
     * @param {PositionCreateManyArgs} args - Arguments to create many Positions.
     * @example
     * // Create many Positions
     * const position = await prisma.position.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PositionCreateManyArgs>(args?: SelectSubset<T, PositionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Positions and returns the data saved in the database.
     * @param {PositionCreateManyAndReturnArgs} args - Arguments to create many Positions.
     * @example
     * // Create many Positions
     * const position = await prisma.position.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Positions and only return the `id`
     * const positionWithIdOnly = await prisma.position.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PositionCreateManyAndReturnArgs>(args?: SelectSubset<T, PositionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Position.
     * @param {PositionDeleteArgs} args - Arguments to delete one Position.
     * @example
     * // Delete one Position
     * const Position = await prisma.position.delete({
     *   where: {
     *     // ... filter to delete one Position
     *   }
     * })
     * 
     */
    delete<T extends PositionDeleteArgs>(args: SelectSubset<T, PositionDeleteArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Position.
     * @param {PositionUpdateArgs} args - Arguments to update one Position.
     * @example
     * // Update one Position
     * const position = await prisma.position.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PositionUpdateArgs>(args: SelectSubset<T, PositionUpdateArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Positions.
     * @param {PositionDeleteManyArgs} args - Arguments to filter Positions to delete.
     * @example
     * // Delete a few Positions
     * const { count } = await prisma.position.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PositionDeleteManyArgs>(args?: SelectSubset<T, PositionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Positions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Positions
     * const position = await prisma.position.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PositionUpdateManyArgs>(args: SelectSubset<T, PositionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Positions and returns the data updated in the database.
     * @param {PositionUpdateManyAndReturnArgs} args - Arguments to update many Positions.
     * @example
     * // Update many Positions
     * const position = await prisma.position.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Positions and only return the `id`
     * const positionWithIdOnly = await prisma.position.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PositionUpdateManyAndReturnArgs>(args: SelectSubset<T, PositionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Position.
     * @param {PositionUpsertArgs} args - Arguments to update or create a Position.
     * @example
     * // Update or create a Position
     * const position = await prisma.position.upsert({
     *   create: {
     *     // ... data to create a Position
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Position we want to update
     *   }
     * })
     */
    upsert<T extends PositionUpsertArgs>(args: SelectSubset<T, PositionUpsertArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Positions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionCountArgs} args - Arguments to filter Positions to count.
     * @example
     * // Count the number of Positions
     * const count = await prisma.position.count({
     *   where: {
     *     // ... the filter for the Positions we want to count
     *   }
     * })
    **/
    count<T extends PositionCountArgs>(
      args?: Subset<T, PositionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PositionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Position.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PositionAggregateArgs>(args: Subset<T, PositionAggregateArgs>): Prisma.PrismaPromise<GetPositionAggregateType<T>>

    /**
     * Group by Position.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PositionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PositionGroupByArgs['orderBy'] }
        : { orderBy?: PositionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PositionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPositionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Position model
   */
  readonly fields: PositionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Position.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PositionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Position$usersArgs<ExtArgs> = {}>(args?: Subset<T, Position$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Promotion<T extends Position$PromotionArgs<ExtArgs> = {}>(args?: Subset<T, Position$PromotionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SalaryGrade<T extends Position$SalaryGradeArgs<ExtArgs> = {}>(args?: Subset<T, Position$SalaryGradeArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    PositionSlot<T extends Position$PositionSlotArgs<ExtArgs> = {}>(args?: Subset<T, Position$PositionSlotArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends Position$lineArgs<ExtArgs> = {}>(args?: Subset<T, Position$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    department<T extends Position$departmentArgs<ExtArgs> = {}>(args?: Subset<T, Position$departmentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Application<T extends Position$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, Position$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Position model
   */
  interface PositionFieldRefs {
    readonly id: FieldRef<"Position", 'String'>
    readonly name: FieldRef<"Position", 'String'>
    readonly description: FieldRef<"Position", 'String'>
    readonly max: FieldRef<"Position", 'Int'>
    readonly createdAt: FieldRef<"Position", 'DateTime'>
    readonly itemNumber: FieldRef<"Position", 'String'>
    readonly salaryGradeId: FieldRef<"Position", 'String'>
    readonly plantilla: FieldRef<"Position", 'Boolean'>
    readonly lineId: FieldRef<"Position", 'String'>
    readonly departmentId: FieldRef<"Position", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Position findUnique
   */
  export type PositionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter, which Position to fetch.
     */
    where: PositionWhereUniqueInput
  }

  /**
   * Position findUniqueOrThrow
   */
  export type PositionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter, which Position to fetch.
     */
    where: PositionWhereUniqueInput
  }

  /**
   * Position findFirst
   */
  export type PositionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter, which Position to fetch.
     */
    where?: PositionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Positions to fetch.
     */
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Positions.
     */
    cursor?: PositionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Positions.
     */
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * Position findFirstOrThrow
   */
  export type PositionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter, which Position to fetch.
     */
    where?: PositionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Positions to fetch.
     */
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Positions.
     */
    cursor?: PositionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Positions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Positions.
     */
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * Position findMany
   */
  export type PositionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter, which Positions to fetch.
     */
    where?: PositionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Positions to fetch.
     */
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Positions.
     */
    cursor?: PositionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Positions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Positions.
     */
    skip?: number
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * Position create
   */
  export type PositionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * The data needed to create a Position.
     */
    data: XOR<PositionCreateInput, PositionUncheckedCreateInput>
  }

  /**
   * Position createMany
   */
  export type PositionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Positions.
     */
    data: PositionCreateManyInput | PositionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Position createManyAndReturn
   */
  export type PositionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * The data used to create many Positions.
     */
    data: PositionCreateManyInput | PositionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Position update
   */
  export type PositionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * The data needed to update a Position.
     */
    data: XOR<PositionUpdateInput, PositionUncheckedUpdateInput>
    /**
     * Choose, which Position to update.
     */
    where: PositionWhereUniqueInput
  }

  /**
   * Position updateMany
   */
  export type PositionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Positions.
     */
    data: XOR<PositionUpdateManyMutationInput, PositionUncheckedUpdateManyInput>
    /**
     * Filter which Positions to update
     */
    where?: PositionWhereInput
    /**
     * Limit how many Positions to update.
     */
    limit?: number
  }

  /**
   * Position updateManyAndReturn
   */
  export type PositionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * The data used to update Positions.
     */
    data: XOR<PositionUpdateManyMutationInput, PositionUncheckedUpdateManyInput>
    /**
     * Filter which Positions to update
     */
    where?: PositionWhereInput
    /**
     * Limit how many Positions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Position upsert
   */
  export type PositionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * The filter to search for the Position to update in case it exists.
     */
    where: PositionWhereUniqueInput
    /**
     * In case the Position found by the `where` argument doesn't exist, create a new Position with this data.
     */
    create: XOR<PositionCreateInput, PositionUncheckedCreateInput>
    /**
     * In case the Position was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PositionUpdateInput, PositionUncheckedUpdateInput>
  }

  /**
   * Position delete
   */
  export type PositionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    /**
     * Filter which Position to delete.
     */
    where: PositionWhereUniqueInput
  }

  /**
   * Position deleteMany
   */
  export type PositionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Positions to delete
     */
    where?: PositionWhereInput
    /**
     * Limit how many Positions to delete.
     */
    limit?: number
  }

  /**
   * Position.users
   */
  export type Position$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Position.Promotion
   */
  export type Position$PromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Position.SalaryGrade
   */
  export type Position$SalaryGradeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    where?: SalaryGradeWhereInput
  }

  /**
   * Position.PositionSlot
   */
  export type Position$PositionSlotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    where?: PositionSlotWhereInput
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    cursor?: PositionSlotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PositionSlotScalarFieldEnum | PositionSlotScalarFieldEnum[]
  }

  /**
   * Position.line
   */
  export type Position$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * Position.department
   */
  export type Position$departmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * Position.Application
   */
  export type Position$ApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Position without action
   */
  export type PositionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
  }


  /**
   * Model PositionSlot
   */

  export type AggregatePositionSlot = {
    _count: PositionSlotCountAggregateOutputType | null
    _min: PositionSlotMinAggregateOutputType | null
    _max: PositionSlotMaxAggregateOutputType | null
  }

  export type PositionSlotMinAggregateOutputType = {
    id: string | null
    positionId: string | null
    salaryGradeId: string | null
    userId: string | null
  }

  export type PositionSlotMaxAggregateOutputType = {
    id: string | null
    positionId: string | null
    salaryGradeId: string | null
    userId: string | null
  }

  export type PositionSlotCountAggregateOutputType = {
    id: number
    positionId: number
    salaryGradeId: number
    userId: number
    _all: number
  }


  export type PositionSlotMinAggregateInputType = {
    id?: true
    positionId?: true
    salaryGradeId?: true
    userId?: true
  }

  export type PositionSlotMaxAggregateInputType = {
    id?: true
    positionId?: true
    salaryGradeId?: true
    userId?: true
  }

  export type PositionSlotCountAggregateInputType = {
    id?: true
    positionId?: true
    salaryGradeId?: true
    userId?: true
    _all?: true
  }

  export type PositionSlotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PositionSlot to aggregate.
     */
    where?: PositionSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PositionSlots to fetch.
     */
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PositionSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PositionSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PositionSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PositionSlots
    **/
    _count?: true | PositionSlotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PositionSlotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PositionSlotMaxAggregateInputType
  }

  export type GetPositionSlotAggregateType<T extends PositionSlotAggregateArgs> = {
        [P in keyof T & keyof AggregatePositionSlot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePositionSlot[P]>
      : GetScalarType<T[P], AggregatePositionSlot[P]>
  }




  export type PositionSlotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PositionSlotWhereInput
    orderBy?: PositionSlotOrderByWithAggregationInput | PositionSlotOrderByWithAggregationInput[]
    by: PositionSlotScalarFieldEnum[] | PositionSlotScalarFieldEnum
    having?: PositionSlotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PositionSlotCountAggregateInputType | true
    _min?: PositionSlotMinAggregateInputType
    _max?: PositionSlotMaxAggregateInputType
  }

  export type PositionSlotGroupByOutputType = {
    id: string
    positionId: string
    salaryGradeId: string
    userId: string | null
    _count: PositionSlotCountAggregateOutputType | null
    _min: PositionSlotMinAggregateOutputType | null
    _max: PositionSlotMaxAggregateOutputType | null
  }

  type GetPositionSlotGroupByPayload<T extends PositionSlotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PositionSlotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PositionSlotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PositionSlotGroupByOutputType[P]>
            : GetScalarType<T[P], PositionSlotGroupByOutputType[P]>
        }
      >
    >


  export type PositionSlotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    userId?: boolean
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }, ExtArgs["result"]["positionSlot"]>

  export type PositionSlotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    userId?: boolean
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }, ExtArgs["result"]["positionSlot"]>

  export type PositionSlotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    userId?: boolean
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }, ExtArgs["result"]["positionSlot"]>

  export type PositionSlotSelectScalar = {
    id?: boolean
    positionId?: boolean
    salaryGradeId?: boolean
    userId?: boolean
  }

  export type PositionSlotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "positionId" | "salaryGradeId" | "userId", ExtArgs["result"]["positionSlot"]>
  export type PositionSlotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }
  export type PositionSlotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }
  export type PositionSlotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pos?: boolean | PositionDefaultArgs<ExtArgs>
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
    user?: boolean | PositionSlot$userArgs<ExtArgs>
  }

  export type $PositionSlotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PositionSlot"
    objects: {
      pos: Prisma.$PositionPayload<ExtArgs>
      salaryGrade: Prisma.$SalaryGradePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      positionId: string
      salaryGradeId: string
      userId: string | null
    }, ExtArgs["result"]["positionSlot"]>
    composites: {}
  }

  type PositionSlotGetPayload<S extends boolean | null | undefined | PositionSlotDefaultArgs> = $Result.GetResult<Prisma.$PositionSlotPayload, S>

  type PositionSlotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PositionSlotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PositionSlotCountAggregateInputType | true
    }

  export interface PositionSlotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PositionSlot'], meta: { name: 'PositionSlot' } }
    /**
     * Find zero or one PositionSlot that matches the filter.
     * @param {PositionSlotFindUniqueArgs} args - Arguments to find a PositionSlot
     * @example
     * // Get one PositionSlot
     * const positionSlot = await prisma.positionSlot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PositionSlotFindUniqueArgs>(args: SelectSubset<T, PositionSlotFindUniqueArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PositionSlot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PositionSlotFindUniqueOrThrowArgs} args - Arguments to find a PositionSlot
     * @example
     * // Get one PositionSlot
     * const positionSlot = await prisma.positionSlot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PositionSlotFindUniqueOrThrowArgs>(args: SelectSubset<T, PositionSlotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PositionSlot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotFindFirstArgs} args - Arguments to find a PositionSlot
     * @example
     * // Get one PositionSlot
     * const positionSlot = await prisma.positionSlot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PositionSlotFindFirstArgs>(args?: SelectSubset<T, PositionSlotFindFirstArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PositionSlot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotFindFirstOrThrowArgs} args - Arguments to find a PositionSlot
     * @example
     * // Get one PositionSlot
     * const positionSlot = await prisma.positionSlot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PositionSlotFindFirstOrThrowArgs>(args?: SelectSubset<T, PositionSlotFindFirstOrThrowArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PositionSlots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PositionSlots
     * const positionSlots = await prisma.positionSlot.findMany()
     * 
     * // Get first 10 PositionSlots
     * const positionSlots = await prisma.positionSlot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const positionSlotWithIdOnly = await prisma.positionSlot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PositionSlotFindManyArgs>(args?: SelectSubset<T, PositionSlotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PositionSlot.
     * @param {PositionSlotCreateArgs} args - Arguments to create a PositionSlot.
     * @example
     * // Create one PositionSlot
     * const PositionSlot = await prisma.positionSlot.create({
     *   data: {
     *     // ... data to create a PositionSlot
     *   }
     * })
     * 
     */
    create<T extends PositionSlotCreateArgs>(args: SelectSubset<T, PositionSlotCreateArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PositionSlots.
     * @param {PositionSlotCreateManyArgs} args - Arguments to create many PositionSlots.
     * @example
     * // Create many PositionSlots
     * const positionSlot = await prisma.positionSlot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PositionSlotCreateManyArgs>(args?: SelectSubset<T, PositionSlotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PositionSlots and returns the data saved in the database.
     * @param {PositionSlotCreateManyAndReturnArgs} args - Arguments to create many PositionSlots.
     * @example
     * // Create many PositionSlots
     * const positionSlot = await prisma.positionSlot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PositionSlots and only return the `id`
     * const positionSlotWithIdOnly = await prisma.positionSlot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PositionSlotCreateManyAndReturnArgs>(args?: SelectSubset<T, PositionSlotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PositionSlot.
     * @param {PositionSlotDeleteArgs} args - Arguments to delete one PositionSlot.
     * @example
     * // Delete one PositionSlot
     * const PositionSlot = await prisma.positionSlot.delete({
     *   where: {
     *     // ... filter to delete one PositionSlot
     *   }
     * })
     * 
     */
    delete<T extends PositionSlotDeleteArgs>(args: SelectSubset<T, PositionSlotDeleteArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PositionSlot.
     * @param {PositionSlotUpdateArgs} args - Arguments to update one PositionSlot.
     * @example
     * // Update one PositionSlot
     * const positionSlot = await prisma.positionSlot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PositionSlotUpdateArgs>(args: SelectSubset<T, PositionSlotUpdateArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PositionSlots.
     * @param {PositionSlotDeleteManyArgs} args - Arguments to filter PositionSlots to delete.
     * @example
     * // Delete a few PositionSlots
     * const { count } = await prisma.positionSlot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PositionSlotDeleteManyArgs>(args?: SelectSubset<T, PositionSlotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PositionSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PositionSlots
     * const positionSlot = await prisma.positionSlot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PositionSlotUpdateManyArgs>(args: SelectSubset<T, PositionSlotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PositionSlots and returns the data updated in the database.
     * @param {PositionSlotUpdateManyAndReturnArgs} args - Arguments to update many PositionSlots.
     * @example
     * // Update many PositionSlots
     * const positionSlot = await prisma.positionSlot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PositionSlots and only return the `id`
     * const positionSlotWithIdOnly = await prisma.positionSlot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PositionSlotUpdateManyAndReturnArgs>(args: SelectSubset<T, PositionSlotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PositionSlot.
     * @param {PositionSlotUpsertArgs} args - Arguments to update or create a PositionSlot.
     * @example
     * // Update or create a PositionSlot
     * const positionSlot = await prisma.positionSlot.upsert({
     *   create: {
     *     // ... data to create a PositionSlot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PositionSlot we want to update
     *   }
     * })
     */
    upsert<T extends PositionSlotUpsertArgs>(args: SelectSubset<T, PositionSlotUpsertArgs<ExtArgs>>): Prisma__PositionSlotClient<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PositionSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotCountArgs} args - Arguments to filter PositionSlots to count.
     * @example
     * // Count the number of PositionSlots
     * const count = await prisma.positionSlot.count({
     *   where: {
     *     // ... the filter for the PositionSlots we want to count
     *   }
     * })
    **/
    count<T extends PositionSlotCountArgs>(
      args?: Subset<T, PositionSlotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PositionSlotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PositionSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PositionSlotAggregateArgs>(args: Subset<T, PositionSlotAggregateArgs>): Prisma.PrismaPromise<GetPositionSlotAggregateType<T>>

    /**
     * Group by PositionSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PositionSlotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PositionSlotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PositionSlotGroupByArgs['orderBy'] }
        : { orderBy?: PositionSlotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PositionSlotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPositionSlotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PositionSlot model
   */
  readonly fields: PositionSlotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PositionSlot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PositionSlotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pos<T extends PositionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PositionDefaultArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    salaryGrade<T extends SalaryGradeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGradeDefaultArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends PositionSlot$userArgs<ExtArgs> = {}>(args?: Subset<T, PositionSlot$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PositionSlot model
   */
  interface PositionSlotFieldRefs {
    readonly id: FieldRef<"PositionSlot", 'String'>
    readonly positionId: FieldRef<"PositionSlot", 'String'>
    readonly salaryGradeId: FieldRef<"PositionSlot", 'String'>
    readonly userId: FieldRef<"PositionSlot", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PositionSlot findUnique
   */
  export type PositionSlotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter, which PositionSlot to fetch.
     */
    where: PositionSlotWhereUniqueInput
  }

  /**
   * PositionSlot findUniqueOrThrow
   */
  export type PositionSlotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter, which PositionSlot to fetch.
     */
    where: PositionSlotWhereUniqueInput
  }

  /**
   * PositionSlot findFirst
   */
  export type PositionSlotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter, which PositionSlot to fetch.
     */
    where?: PositionSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PositionSlots to fetch.
     */
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PositionSlots.
     */
    cursor?: PositionSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PositionSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PositionSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PositionSlots.
     */
    distinct?: PositionSlotScalarFieldEnum | PositionSlotScalarFieldEnum[]
  }

  /**
   * PositionSlot findFirstOrThrow
   */
  export type PositionSlotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter, which PositionSlot to fetch.
     */
    where?: PositionSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PositionSlots to fetch.
     */
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PositionSlots.
     */
    cursor?: PositionSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PositionSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PositionSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PositionSlots.
     */
    distinct?: PositionSlotScalarFieldEnum | PositionSlotScalarFieldEnum[]
  }

  /**
   * PositionSlot findMany
   */
  export type PositionSlotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter, which PositionSlots to fetch.
     */
    where?: PositionSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PositionSlots to fetch.
     */
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PositionSlots.
     */
    cursor?: PositionSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PositionSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PositionSlots.
     */
    skip?: number
    distinct?: PositionSlotScalarFieldEnum | PositionSlotScalarFieldEnum[]
  }

  /**
   * PositionSlot create
   */
  export type PositionSlotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * The data needed to create a PositionSlot.
     */
    data: XOR<PositionSlotCreateInput, PositionSlotUncheckedCreateInput>
  }

  /**
   * PositionSlot createMany
   */
  export type PositionSlotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PositionSlots.
     */
    data: PositionSlotCreateManyInput | PositionSlotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PositionSlot createManyAndReturn
   */
  export type PositionSlotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * The data used to create many PositionSlots.
     */
    data: PositionSlotCreateManyInput | PositionSlotCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PositionSlot update
   */
  export type PositionSlotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * The data needed to update a PositionSlot.
     */
    data: XOR<PositionSlotUpdateInput, PositionSlotUncheckedUpdateInput>
    /**
     * Choose, which PositionSlot to update.
     */
    where: PositionSlotWhereUniqueInput
  }

  /**
   * PositionSlot updateMany
   */
  export type PositionSlotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PositionSlots.
     */
    data: XOR<PositionSlotUpdateManyMutationInput, PositionSlotUncheckedUpdateManyInput>
    /**
     * Filter which PositionSlots to update
     */
    where?: PositionSlotWhereInput
    /**
     * Limit how many PositionSlots to update.
     */
    limit?: number
  }

  /**
   * PositionSlot updateManyAndReturn
   */
  export type PositionSlotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * The data used to update PositionSlots.
     */
    data: XOR<PositionSlotUpdateManyMutationInput, PositionSlotUncheckedUpdateManyInput>
    /**
     * Filter which PositionSlots to update
     */
    where?: PositionSlotWhereInput
    /**
     * Limit how many PositionSlots to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PositionSlot upsert
   */
  export type PositionSlotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * The filter to search for the PositionSlot to update in case it exists.
     */
    where: PositionSlotWhereUniqueInput
    /**
     * In case the PositionSlot found by the `where` argument doesn't exist, create a new PositionSlot with this data.
     */
    create: XOR<PositionSlotCreateInput, PositionSlotUncheckedCreateInput>
    /**
     * In case the PositionSlot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PositionSlotUpdateInput, PositionSlotUncheckedUpdateInput>
  }

  /**
   * PositionSlot delete
   */
  export type PositionSlotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    /**
     * Filter which PositionSlot to delete.
     */
    where: PositionSlotWhereUniqueInput
  }

  /**
   * PositionSlot deleteMany
   */
  export type PositionSlotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PositionSlots to delete
     */
    where?: PositionSlotWhereInput
    /**
     * Limit how many PositionSlots to delete.
     */
    limit?: number
  }

  /**
   * PositionSlot.user
   */
  export type PositionSlot$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * PositionSlot without action
   */
  export type PositionSlotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
  }


  /**
   * Model SalaryGrade
   */

  export type AggregateSalaryGrade = {
    _count: SalaryGradeCountAggregateOutputType | null
    _avg: SalaryGradeAvgAggregateOutputType | null
    _sum: SalaryGradeSumAggregateOutputType | null
    _min: SalaryGradeMinAggregateOutputType | null
    _max: SalaryGradeMaxAggregateOutputType | null
  }

  export type SalaryGradeAvgAggregateOutputType = {
    grade: number | null
    amount: number | null
  }

  export type SalaryGradeSumAggregateOutputType = {
    grade: number | null
    amount: number | null
  }

  export type SalaryGradeMinAggregateOutputType = {
    id: string | null
    grade: number | null
    amount: number | null
    createdAt: Date | null
    lineId: string | null
  }

  export type SalaryGradeMaxAggregateOutputType = {
    id: string | null
    grade: number | null
    amount: number | null
    createdAt: Date | null
    lineId: string | null
  }

  export type SalaryGradeCountAggregateOutputType = {
    id: number
    grade: number
    amount: number
    createdAt: number
    lineId: number
    _all: number
  }


  export type SalaryGradeAvgAggregateInputType = {
    grade?: true
    amount?: true
  }

  export type SalaryGradeSumAggregateInputType = {
    grade?: true
    amount?: true
  }

  export type SalaryGradeMinAggregateInputType = {
    id?: true
    grade?: true
    amount?: true
    createdAt?: true
    lineId?: true
  }

  export type SalaryGradeMaxAggregateInputType = {
    id?: true
    grade?: true
    amount?: true
    createdAt?: true
    lineId?: true
  }

  export type SalaryGradeCountAggregateInputType = {
    id?: true
    grade?: true
    amount?: true
    createdAt?: true
    lineId?: true
    _all?: true
  }

  export type SalaryGradeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalaryGrade to aggregate.
     */
    where?: SalaryGradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGrades to fetch.
     */
    orderBy?: SalaryGradeOrderByWithRelationInput | SalaryGradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalaryGradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGrades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGrades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalaryGrades
    **/
    _count?: true | SalaryGradeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalaryGradeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalaryGradeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalaryGradeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalaryGradeMaxAggregateInputType
  }

  export type GetSalaryGradeAggregateType<T extends SalaryGradeAggregateArgs> = {
        [P in keyof T & keyof AggregateSalaryGrade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalaryGrade[P]>
      : GetScalarType<T[P], AggregateSalaryGrade[P]>
  }




  export type SalaryGradeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalaryGradeWhereInput
    orderBy?: SalaryGradeOrderByWithAggregationInput | SalaryGradeOrderByWithAggregationInput[]
    by: SalaryGradeScalarFieldEnum[] | SalaryGradeScalarFieldEnum
    having?: SalaryGradeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalaryGradeCountAggregateInputType | true
    _avg?: SalaryGradeAvgAggregateInputType
    _sum?: SalaryGradeSumAggregateInputType
    _min?: SalaryGradeMinAggregateInputType
    _max?: SalaryGradeMaxAggregateInputType
  }

  export type SalaryGradeGroupByOutputType = {
    id: string
    grade: number
    amount: number
    createdAt: Date
    lineId: string | null
    _count: SalaryGradeCountAggregateOutputType | null
    _avg: SalaryGradeAvgAggregateOutputType | null
    _sum: SalaryGradeSumAggregateOutputType | null
    _min: SalaryGradeMinAggregateOutputType | null
    _max: SalaryGradeMaxAggregateOutputType | null
  }

  type GetSalaryGradeGroupByPayload<T extends SalaryGradeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalaryGradeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalaryGradeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalaryGradeGroupByOutputType[P]>
            : GetScalarType<T[P], SalaryGradeGroupByOutputType[P]>
        }
      >
    >


  export type SalaryGradeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    grade?: boolean
    amount?: boolean
    createdAt?: boolean
    lineId?: boolean
    users?: boolean | SalaryGrade$usersArgs<ExtArgs>
    SalaryGradeHistory?: boolean | SalaryGrade$SalaryGradeHistoryArgs<ExtArgs>
    positions?: boolean | SalaryGrade$positionsArgs<ExtArgs>
    PositionSlot?: boolean | SalaryGrade$PositionSlotArgs<ExtArgs>
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
    _count?: boolean | SalaryGradeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGrade"]>

  export type SalaryGradeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    grade?: boolean
    amount?: boolean
    createdAt?: boolean
    lineId?: boolean
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGrade"]>

  export type SalaryGradeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    grade?: boolean
    amount?: boolean
    createdAt?: boolean
    lineId?: boolean
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGrade"]>

  export type SalaryGradeSelectScalar = {
    id?: boolean
    grade?: boolean
    amount?: boolean
    createdAt?: boolean
    lineId?: boolean
  }

  export type SalaryGradeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "grade" | "amount" | "createdAt" | "lineId", ExtArgs["result"]["salaryGrade"]>
  export type SalaryGradeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | SalaryGrade$usersArgs<ExtArgs>
    SalaryGradeHistory?: boolean | SalaryGrade$SalaryGradeHistoryArgs<ExtArgs>
    positions?: boolean | SalaryGrade$positionsArgs<ExtArgs>
    PositionSlot?: boolean | SalaryGrade$PositionSlotArgs<ExtArgs>
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
    _count?: boolean | SalaryGradeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SalaryGradeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
  }
  export type SalaryGradeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    line?: boolean | SalaryGrade$lineArgs<ExtArgs>
  }

  export type $SalaryGradePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalaryGrade"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      SalaryGradeHistory: Prisma.$SalaryGradeHistoryPayload<ExtArgs>[]
      positions: Prisma.$PositionPayload<ExtArgs>[]
      PositionSlot: Prisma.$PositionSlotPayload<ExtArgs>[]
      line: Prisma.$LinePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      grade: number
      amount: number
      createdAt: Date
      lineId: string | null
    }, ExtArgs["result"]["salaryGrade"]>
    composites: {}
  }

  type SalaryGradeGetPayload<S extends boolean | null | undefined | SalaryGradeDefaultArgs> = $Result.GetResult<Prisma.$SalaryGradePayload, S>

  type SalaryGradeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalaryGradeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalaryGradeCountAggregateInputType | true
    }

  export interface SalaryGradeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalaryGrade'], meta: { name: 'SalaryGrade' } }
    /**
     * Find zero or one SalaryGrade that matches the filter.
     * @param {SalaryGradeFindUniqueArgs} args - Arguments to find a SalaryGrade
     * @example
     * // Get one SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalaryGradeFindUniqueArgs>(args: SelectSubset<T, SalaryGradeFindUniqueArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalaryGrade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalaryGradeFindUniqueOrThrowArgs} args - Arguments to find a SalaryGrade
     * @example
     * // Get one SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalaryGradeFindUniqueOrThrowArgs>(args: SelectSubset<T, SalaryGradeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalaryGrade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeFindFirstArgs} args - Arguments to find a SalaryGrade
     * @example
     * // Get one SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalaryGradeFindFirstArgs>(args?: SelectSubset<T, SalaryGradeFindFirstArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalaryGrade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeFindFirstOrThrowArgs} args - Arguments to find a SalaryGrade
     * @example
     * // Get one SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalaryGradeFindFirstOrThrowArgs>(args?: SelectSubset<T, SalaryGradeFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalaryGrades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalaryGrades
     * const salaryGrades = await prisma.salaryGrade.findMany()
     * 
     * // Get first 10 SalaryGrades
     * const salaryGrades = await prisma.salaryGrade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salaryGradeWithIdOnly = await prisma.salaryGrade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalaryGradeFindManyArgs>(args?: SelectSubset<T, SalaryGradeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalaryGrade.
     * @param {SalaryGradeCreateArgs} args - Arguments to create a SalaryGrade.
     * @example
     * // Create one SalaryGrade
     * const SalaryGrade = await prisma.salaryGrade.create({
     *   data: {
     *     // ... data to create a SalaryGrade
     *   }
     * })
     * 
     */
    create<T extends SalaryGradeCreateArgs>(args: SelectSubset<T, SalaryGradeCreateArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalaryGrades.
     * @param {SalaryGradeCreateManyArgs} args - Arguments to create many SalaryGrades.
     * @example
     * // Create many SalaryGrades
     * const salaryGrade = await prisma.salaryGrade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalaryGradeCreateManyArgs>(args?: SelectSubset<T, SalaryGradeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SalaryGrades and returns the data saved in the database.
     * @param {SalaryGradeCreateManyAndReturnArgs} args - Arguments to create many SalaryGrades.
     * @example
     * // Create many SalaryGrades
     * const salaryGrade = await prisma.salaryGrade.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SalaryGrades and only return the `id`
     * const salaryGradeWithIdOnly = await prisma.salaryGrade.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SalaryGradeCreateManyAndReturnArgs>(args?: SelectSubset<T, SalaryGradeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SalaryGrade.
     * @param {SalaryGradeDeleteArgs} args - Arguments to delete one SalaryGrade.
     * @example
     * // Delete one SalaryGrade
     * const SalaryGrade = await prisma.salaryGrade.delete({
     *   where: {
     *     // ... filter to delete one SalaryGrade
     *   }
     * })
     * 
     */
    delete<T extends SalaryGradeDeleteArgs>(args: SelectSubset<T, SalaryGradeDeleteArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalaryGrade.
     * @param {SalaryGradeUpdateArgs} args - Arguments to update one SalaryGrade.
     * @example
     * // Update one SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalaryGradeUpdateArgs>(args: SelectSubset<T, SalaryGradeUpdateArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalaryGrades.
     * @param {SalaryGradeDeleteManyArgs} args - Arguments to filter SalaryGrades to delete.
     * @example
     * // Delete a few SalaryGrades
     * const { count } = await prisma.salaryGrade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalaryGradeDeleteManyArgs>(args?: SelectSubset<T, SalaryGradeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalaryGrades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalaryGrades
     * const salaryGrade = await prisma.salaryGrade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalaryGradeUpdateManyArgs>(args: SelectSubset<T, SalaryGradeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalaryGrades and returns the data updated in the database.
     * @param {SalaryGradeUpdateManyAndReturnArgs} args - Arguments to update many SalaryGrades.
     * @example
     * // Update many SalaryGrades
     * const salaryGrade = await prisma.salaryGrade.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SalaryGrades and only return the `id`
     * const salaryGradeWithIdOnly = await prisma.salaryGrade.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SalaryGradeUpdateManyAndReturnArgs>(args: SelectSubset<T, SalaryGradeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SalaryGrade.
     * @param {SalaryGradeUpsertArgs} args - Arguments to update or create a SalaryGrade.
     * @example
     * // Update or create a SalaryGrade
     * const salaryGrade = await prisma.salaryGrade.upsert({
     *   create: {
     *     // ... data to create a SalaryGrade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalaryGrade we want to update
     *   }
     * })
     */
    upsert<T extends SalaryGradeUpsertArgs>(args: SelectSubset<T, SalaryGradeUpsertArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalaryGrades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeCountArgs} args - Arguments to filter SalaryGrades to count.
     * @example
     * // Count the number of SalaryGrades
     * const count = await prisma.salaryGrade.count({
     *   where: {
     *     // ... the filter for the SalaryGrades we want to count
     *   }
     * })
    **/
    count<T extends SalaryGradeCountArgs>(
      args?: Subset<T, SalaryGradeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalaryGradeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalaryGrade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalaryGradeAggregateArgs>(args: Subset<T, SalaryGradeAggregateArgs>): Prisma.PrismaPromise<GetSalaryGradeAggregateType<T>>

    /**
     * Group by SalaryGrade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalaryGradeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalaryGradeGroupByArgs['orderBy'] }
        : { orderBy?: SalaryGradeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalaryGradeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalaryGradeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalaryGrade model
   */
  readonly fields: SalaryGradeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalaryGrade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalaryGradeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends SalaryGrade$usersArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGrade$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SalaryGradeHistory<T extends SalaryGrade$SalaryGradeHistoryArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGrade$SalaryGradeHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    positions<T extends SalaryGrade$positionsArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGrade$positionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PositionSlot<T extends SalaryGrade$PositionSlotArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGrade$PositionSlotArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PositionSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    line<T extends SalaryGrade$lineArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGrade$lineArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalaryGrade model
   */
  interface SalaryGradeFieldRefs {
    readonly id: FieldRef<"SalaryGrade", 'String'>
    readonly grade: FieldRef<"SalaryGrade", 'Int'>
    readonly amount: FieldRef<"SalaryGrade", 'Float'>
    readonly createdAt: FieldRef<"SalaryGrade", 'DateTime'>
    readonly lineId: FieldRef<"SalaryGrade", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SalaryGrade findUnique
   */
  export type SalaryGradeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGrade to fetch.
     */
    where: SalaryGradeWhereUniqueInput
  }

  /**
   * SalaryGrade findUniqueOrThrow
   */
  export type SalaryGradeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGrade to fetch.
     */
    where: SalaryGradeWhereUniqueInput
  }

  /**
   * SalaryGrade findFirst
   */
  export type SalaryGradeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGrade to fetch.
     */
    where?: SalaryGradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGrades to fetch.
     */
    orderBy?: SalaryGradeOrderByWithRelationInput | SalaryGradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalaryGrades.
     */
    cursor?: SalaryGradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGrades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGrades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalaryGrades.
     */
    distinct?: SalaryGradeScalarFieldEnum | SalaryGradeScalarFieldEnum[]
  }

  /**
   * SalaryGrade findFirstOrThrow
   */
  export type SalaryGradeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGrade to fetch.
     */
    where?: SalaryGradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGrades to fetch.
     */
    orderBy?: SalaryGradeOrderByWithRelationInput | SalaryGradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalaryGrades.
     */
    cursor?: SalaryGradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGrades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGrades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalaryGrades.
     */
    distinct?: SalaryGradeScalarFieldEnum | SalaryGradeScalarFieldEnum[]
  }

  /**
   * SalaryGrade findMany
   */
  export type SalaryGradeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGrades to fetch.
     */
    where?: SalaryGradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGrades to fetch.
     */
    orderBy?: SalaryGradeOrderByWithRelationInput | SalaryGradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalaryGrades.
     */
    cursor?: SalaryGradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGrades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGrades.
     */
    skip?: number
    distinct?: SalaryGradeScalarFieldEnum | SalaryGradeScalarFieldEnum[]
  }

  /**
   * SalaryGrade create
   */
  export type SalaryGradeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * The data needed to create a SalaryGrade.
     */
    data: XOR<SalaryGradeCreateInput, SalaryGradeUncheckedCreateInput>
  }

  /**
   * SalaryGrade createMany
   */
  export type SalaryGradeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalaryGrades.
     */
    data: SalaryGradeCreateManyInput | SalaryGradeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalaryGrade createManyAndReturn
   */
  export type SalaryGradeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * The data used to create many SalaryGrades.
     */
    data: SalaryGradeCreateManyInput | SalaryGradeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SalaryGrade update
   */
  export type SalaryGradeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * The data needed to update a SalaryGrade.
     */
    data: XOR<SalaryGradeUpdateInput, SalaryGradeUncheckedUpdateInput>
    /**
     * Choose, which SalaryGrade to update.
     */
    where: SalaryGradeWhereUniqueInput
  }

  /**
   * SalaryGrade updateMany
   */
  export type SalaryGradeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalaryGrades.
     */
    data: XOR<SalaryGradeUpdateManyMutationInput, SalaryGradeUncheckedUpdateManyInput>
    /**
     * Filter which SalaryGrades to update
     */
    where?: SalaryGradeWhereInput
    /**
     * Limit how many SalaryGrades to update.
     */
    limit?: number
  }

  /**
   * SalaryGrade updateManyAndReturn
   */
  export type SalaryGradeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * The data used to update SalaryGrades.
     */
    data: XOR<SalaryGradeUpdateManyMutationInput, SalaryGradeUncheckedUpdateManyInput>
    /**
     * Filter which SalaryGrades to update
     */
    where?: SalaryGradeWhereInput
    /**
     * Limit how many SalaryGrades to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SalaryGrade upsert
   */
  export type SalaryGradeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * The filter to search for the SalaryGrade to update in case it exists.
     */
    where: SalaryGradeWhereUniqueInput
    /**
     * In case the SalaryGrade found by the `where` argument doesn't exist, create a new SalaryGrade with this data.
     */
    create: XOR<SalaryGradeCreateInput, SalaryGradeUncheckedCreateInput>
    /**
     * In case the SalaryGrade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalaryGradeUpdateInput, SalaryGradeUncheckedUpdateInput>
  }

  /**
   * SalaryGrade delete
   */
  export type SalaryGradeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
    /**
     * Filter which SalaryGrade to delete.
     */
    where: SalaryGradeWhereUniqueInput
  }

  /**
   * SalaryGrade deleteMany
   */
  export type SalaryGradeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalaryGrades to delete
     */
    where?: SalaryGradeWhereInput
    /**
     * Limit how many SalaryGrades to delete.
     */
    limit?: number
  }

  /**
   * SalaryGrade.users
   */
  export type SalaryGrade$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * SalaryGrade.SalaryGradeHistory
   */
  export type SalaryGrade$SalaryGradeHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    where?: SalaryGradeHistoryWhereInput
    orderBy?: SalaryGradeHistoryOrderByWithRelationInput | SalaryGradeHistoryOrderByWithRelationInput[]
    cursor?: SalaryGradeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalaryGradeHistoryScalarFieldEnum | SalaryGradeHistoryScalarFieldEnum[]
  }

  /**
   * SalaryGrade.positions
   */
  export type SalaryGrade$positionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Position
     */
    select?: PositionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Position
     */
    omit?: PositionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionInclude<ExtArgs> | null
    where?: PositionWhereInput
    orderBy?: PositionOrderByWithRelationInput | PositionOrderByWithRelationInput[]
    cursor?: PositionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PositionScalarFieldEnum | PositionScalarFieldEnum[]
  }

  /**
   * SalaryGrade.PositionSlot
   */
  export type SalaryGrade$PositionSlotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PositionSlot
     */
    select?: PositionSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PositionSlot
     */
    omit?: PositionSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PositionSlotInclude<ExtArgs> | null
    where?: PositionSlotWhereInput
    orderBy?: PositionSlotOrderByWithRelationInput | PositionSlotOrderByWithRelationInput[]
    cursor?: PositionSlotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PositionSlotScalarFieldEnum | PositionSlotScalarFieldEnum[]
  }

  /**
   * SalaryGrade.line
   */
  export type SalaryGrade$lineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
  }

  /**
   * SalaryGrade without action
   */
  export type SalaryGradeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGrade
     */
    select?: SalaryGradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGrade
     */
    omit?: SalaryGradeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeInclude<ExtArgs> | null
  }


  /**
   * Model SalaryGradeHistory
   */

  export type AggregateSalaryGradeHistory = {
    _count: SalaryGradeHistoryCountAggregateOutputType | null
    _avg: SalaryGradeHistoryAvgAggregateOutputType | null
    _sum: SalaryGradeHistorySumAggregateOutputType | null
    _min: SalaryGradeHistoryMinAggregateOutputType | null
    _max: SalaryGradeHistoryMaxAggregateOutputType | null
  }

  export type SalaryGradeHistoryAvgAggregateOutputType = {
    amount: number | null
  }

  export type SalaryGradeHistorySumAggregateOutputType = {
    amount: number | null
  }

  export type SalaryGradeHistoryMinAggregateOutputType = {
    id: string | null
    userId: string | null
    salaryGradeId: string | null
    effectiveDate: Date | null
    createdAt: Date | null
    amount: number | null
  }

  export type SalaryGradeHistoryMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    salaryGradeId: string | null
    effectiveDate: Date | null
    createdAt: Date | null
    amount: number | null
  }

  export type SalaryGradeHistoryCountAggregateOutputType = {
    id: number
    userId: number
    salaryGradeId: number
    effectiveDate: number
    createdAt: number
    amount: number
    _all: number
  }


  export type SalaryGradeHistoryAvgAggregateInputType = {
    amount?: true
  }

  export type SalaryGradeHistorySumAggregateInputType = {
    amount?: true
  }

  export type SalaryGradeHistoryMinAggregateInputType = {
    id?: true
    userId?: true
    salaryGradeId?: true
    effectiveDate?: true
    createdAt?: true
    amount?: true
  }

  export type SalaryGradeHistoryMaxAggregateInputType = {
    id?: true
    userId?: true
    salaryGradeId?: true
    effectiveDate?: true
    createdAt?: true
    amount?: true
  }

  export type SalaryGradeHistoryCountAggregateInputType = {
    id?: true
    userId?: true
    salaryGradeId?: true
    effectiveDate?: true
    createdAt?: true
    amount?: true
    _all?: true
  }

  export type SalaryGradeHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalaryGradeHistory to aggregate.
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGradeHistories to fetch.
     */
    orderBy?: SalaryGradeHistoryOrderByWithRelationInput | SalaryGradeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalaryGradeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGradeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGradeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalaryGradeHistories
    **/
    _count?: true | SalaryGradeHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalaryGradeHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalaryGradeHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalaryGradeHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalaryGradeHistoryMaxAggregateInputType
  }

  export type GetSalaryGradeHistoryAggregateType<T extends SalaryGradeHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSalaryGradeHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalaryGradeHistory[P]>
      : GetScalarType<T[P], AggregateSalaryGradeHistory[P]>
  }




  export type SalaryGradeHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalaryGradeHistoryWhereInput
    orderBy?: SalaryGradeHistoryOrderByWithAggregationInput | SalaryGradeHistoryOrderByWithAggregationInput[]
    by: SalaryGradeHistoryScalarFieldEnum[] | SalaryGradeHistoryScalarFieldEnum
    having?: SalaryGradeHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalaryGradeHistoryCountAggregateInputType | true
    _avg?: SalaryGradeHistoryAvgAggregateInputType
    _sum?: SalaryGradeHistorySumAggregateInputType
    _min?: SalaryGradeHistoryMinAggregateInputType
    _max?: SalaryGradeHistoryMaxAggregateInputType
  }

  export type SalaryGradeHistoryGroupByOutputType = {
    id: string
    userId: string
    salaryGradeId: string
    effectiveDate: Date
    createdAt: Date
    amount: number
    _count: SalaryGradeHistoryCountAggregateOutputType | null
    _avg: SalaryGradeHistoryAvgAggregateOutputType | null
    _sum: SalaryGradeHistorySumAggregateOutputType | null
    _min: SalaryGradeHistoryMinAggregateOutputType | null
    _max: SalaryGradeHistoryMaxAggregateOutputType | null
  }

  type GetSalaryGradeHistoryGroupByPayload<T extends SalaryGradeHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalaryGradeHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalaryGradeHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalaryGradeHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], SalaryGradeHistoryGroupByOutputType[P]>
        }
      >
    >


  export type SalaryGradeHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    salaryGradeId?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    amount?: boolean
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGradeHistory"]>

  export type SalaryGradeHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    salaryGradeId?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    amount?: boolean
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGradeHistory"]>

  export type SalaryGradeHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    salaryGradeId?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    amount?: boolean
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salaryGradeHistory"]>

  export type SalaryGradeHistorySelectScalar = {
    id?: boolean
    userId?: boolean
    salaryGradeId?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    amount?: boolean
  }

  export type SalaryGradeHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "salaryGradeId" | "effectiveDate" | "createdAt" | "amount", ExtArgs["result"]["salaryGradeHistory"]>
  export type SalaryGradeHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }
  export type SalaryGradeHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }
  export type SalaryGradeHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salaryGrade?: boolean | SalaryGradeDefaultArgs<ExtArgs>
  }

  export type $SalaryGradeHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalaryGradeHistory"
    objects: {
      salaryGrade: Prisma.$SalaryGradePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      salaryGradeId: string
      effectiveDate: Date
      createdAt: Date
      amount: number
    }, ExtArgs["result"]["salaryGradeHistory"]>
    composites: {}
  }

  type SalaryGradeHistoryGetPayload<S extends boolean | null | undefined | SalaryGradeHistoryDefaultArgs> = $Result.GetResult<Prisma.$SalaryGradeHistoryPayload, S>

  type SalaryGradeHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalaryGradeHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalaryGradeHistoryCountAggregateInputType | true
    }

  export interface SalaryGradeHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalaryGradeHistory'], meta: { name: 'SalaryGradeHistory' } }
    /**
     * Find zero or one SalaryGradeHistory that matches the filter.
     * @param {SalaryGradeHistoryFindUniqueArgs} args - Arguments to find a SalaryGradeHistory
     * @example
     * // Get one SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalaryGradeHistoryFindUniqueArgs>(args: SelectSubset<T, SalaryGradeHistoryFindUniqueArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalaryGradeHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalaryGradeHistoryFindUniqueOrThrowArgs} args - Arguments to find a SalaryGradeHistory
     * @example
     * // Get one SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalaryGradeHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SalaryGradeHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalaryGradeHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryFindFirstArgs} args - Arguments to find a SalaryGradeHistory
     * @example
     * // Get one SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalaryGradeHistoryFindFirstArgs>(args?: SelectSubset<T, SalaryGradeHistoryFindFirstArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalaryGradeHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryFindFirstOrThrowArgs} args - Arguments to find a SalaryGradeHistory
     * @example
     * // Get one SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalaryGradeHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SalaryGradeHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalaryGradeHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalaryGradeHistories
     * const salaryGradeHistories = await prisma.salaryGradeHistory.findMany()
     * 
     * // Get first 10 SalaryGradeHistories
     * const salaryGradeHistories = await prisma.salaryGradeHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salaryGradeHistoryWithIdOnly = await prisma.salaryGradeHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalaryGradeHistoryFindManyArgs>(args?: SelectSubset<T, SalaryGradeHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalaryGradeHistory.
     * @param {SalaryGradeHistoryCreateArgs} args - Arguments to create a SalaryGradeHistory.
     * @example
     * // Create one SalaryGradeHistory
     * const SalaryGradeHistory = await prisma.salaryGradeHistory.create({
     *   data: {
     *     // ... data to create a SalaryGradeHistory
     *   }
     * })
     * 
     */
    create<T extends SalaryGradeHistoryCreateArgs>(args: SelectSubset<T, SalaryGradeHistoryCreateArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalaryGradeHistories.
     * @param {SalaryGradeHistoryCreateManyArgs} args - Arguments to create many SalaryGradeHistories.
     * @example
     * // Create many SalaryGradeHistories
     * const salaryGradeHistory = await prisma.salaryGradeHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalaryGradeHistoryCreateManyArgs>(args?: SelectSubset<T, SalaryGradeHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SalaryGradeHistories and returns the data saved in the database.
     * @param {SalaryGradeHistoryCreateManyAndReturnArgs} args - Arguments to create many SalaryGradeHistories.
     * @example
     * // Create many SalaryGradeHistories
     * const salaryGradeHistory = await prisma.salaryGradeHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SalaryGradeHistories and only return the `id`
     * const salaryGradeHistoryWithIdOnly = await prisma.salaryGradeHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SalaryGradeHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SalaryGradeHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SalaryGradeHistory.
     * @param {SalaryGradeHistoryDeleteArgs} args - Arguments to delete one SalaryGradeHistory.
     * @example
     * // Delete one SalaryGradeHistory
     * const SalaryGradeHistory = await prisma.salaryGradeHistory.delete({
     *   where: {
     *     // ... filter to delete one SalaryGradeHistory
     *   }
     * })
     * 
     */
    delete<T extends SalaryGradeHistoryDeleteArgs>(args: SelectSubset<T, SalaryGradeHistoryDeleteArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalaryGradeHistory.
     * @param {SalaryGradeHistoryUpdateArgs} args - Arguments to update one SalaryGradeHistory.
     * @example
     * // Update one SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalaryGradeHistoryUpdateArgs>(args: SelectSubset<T, SalaryGradeHistoryUpdateArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalaryGradeHistories.
     * @param {SalaryGradeHistoryDeleteManyArgs} args - Arguments to filter SalaryGradeHistories to delete.
     * @example
     * // Delete a few SalaryGradeHistories
     * const { count } = await prisma.salaryGradeHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalaryGradeHistoryDeleteManyArgs>(args?: SelectSubset<T, SalaryGradeHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalaryGradeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalaryGradeHistories
     * const salaryGradeHistory = await prisma.salaryGradeHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalaryGradeHistoryUpdateManyArgs>(args: SelectSubset<T, SalaryGradeHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalaryGradeHistories and returns the data updated in the database.
     * @param {SalaryGradeHistoryUpdateManyAndReturnArgs} args - Arguments to update many SalaryGradeHistories.
     * @example
     * // Update many SalaryGradeHistories
     * const salaryGradeHistory = await prisma.salaryGradeHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SalaryGradeHistories and only return the `id`
     * const salaryGradeHistoryWithIdOnly = await prisma.salaryGradeHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SalaryGradeHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, SalaryGradeHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SalaryGradeHistory.
     * @param {SalaryGradeHistoryUpsertArgs} args - Arguments to update or create a SalaryGradeHistory.
     * @example
     * // Update or create a SalaryGradeHistory
     * const salaryGradeHistory = await prisma.salaryGradeHistory.upsert({
     *   create: {
     *     // ... data to create a SalaryGradeHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalaryGradeHistory we want to update
     *   }
     * })
     */
    upsert<T extends SalaryGradeHistoryUpsertArgs>(args: SelectSubset<T, SalaryGradeHistoryUpsertArgs<ExtArgs>>): Prisma__SalaryGradeHistoryClient<$Result.GetResult<Prisma.$SalaryGradeHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalaryGradeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryCountArgs} args - Arguments to filter SalaryGradeHistories to count.
     * @example
     * // Count the number of SalaryGradeHistories
     * const count = await prisma.salaryGradeHistory.count({
     *   where: {
     *     // ... the filter for the SalaryGradeHistories we want to count
     *   }
     * })
    **/
    count<T extends SalaryGradeHistoryCountArgs>(
      args?: Subset<T, SalaryGradeHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalaryGradeHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalaryGradeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalaryGradeHistoryAggregateArgs>(args: Subset<T, SalaryGradeHistoryAggregateArgs>): Prisma.PrismaPromise<GetSalaryGradeHistoryAggregateType<T>>

    /**
     * Group by SalaryGradeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaryGradeHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalaryGradeHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalaryGradeHistoryGroupByArgs['orderBy'] }
        : { orderBy?: SalaryGradeHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalaryGradeHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalaryGradeHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalaryGradeHistory model
   */
  readonly fields: SalaryGradeHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalaryGradeHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalaryGradeHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    salaryGrade<T extends SalaryGradeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalaryGradeDefaultArgs<ExtArgs>>): Prisma__SalaryGradeClient<$Result.GetResult<Prisma.$SalaryGradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalaryGradeHistory model
   */
  interface SalaryGradeHistoryFieldRefs {
    readonly id: FieldRef<"SalaryGradeHistory", 'String'>
    readonly userId: FieldRef<"SalaryGradeHistory", 'String'>
    readonly salaryGradeId: FieldRef<"SalaryGradeHistory", 'String'>
    readonly effectiveDate: FieldRef<"SalaryGradeHistory", 'DateTime'>
    readonly createdAt: FieldRef<"SalaryGradeHistory", 'DateTime'>
    readonly amount: FieldRef<"SalaryGradeHistory", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SalaryGradeHistory findUnique
   */
  export type SalaryGradeHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGradeHistory to fetch.
     */
    where: SalaryGradeHistoryWhereUniqueInput
  }

  /**
   * SalaryGradeHistory findUniqueOrThrow
   */
  export type SalaryGradeHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGradeHistory to fetch.
     */
    where: SalaryGradeHistoryWhereUniqueInput
  }

  /**
   * SalaryGradeHistory findFirst
   */
  export type SalaryGradeHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGradeHistory to fetch.
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGradeHistories to fetch.
     */
    orderBy?: SalaryGradeHistoryOrderByWithRelationInput | SalaryGradeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalaryGradeHistories.
     */
    cursor?: SalaryGradeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGradeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGradeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalaryGradeHistories.
     */
    distinct?: SalaryGradeHistoryScalarFieldEnum | SalaryGradeHistoryScalarFieldEnum[]
  }

  /**
   * SalaryGradeHistory findFirstOrThrow
   */
  export type SalaryGradeHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGradeHistory to fetch.
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGradeHistories to fetch.
     */
    orderBy?: SalaryGradeHistoryOrderByWithRelationInput | SalaryGradeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalaryGradeHistories.
     */
    cursor?: SalaryGradeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGradeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGradeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalaryGradeHistories.
     */
    distinct?: SalaryGradeHistoryScalarFieldEnum | SalaryGradeHistoryScalarFieldEnum[]
  }

  /**
   * SalaryGradeHistory findMany
   */
  export type SalaryGradeHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SalaryGradeHistories to fetch.
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalaryGradeHistories to fetch.
     */
    orderBy?: SalaryGradeHistoryOrderByWithRelationInput | SalaryGradeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalaryGradeHistories.
     */
    cursor?: SalaryGradeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalaryGradeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalaryGradeHistories.
     */
    skip?: number
    distinct?: SalaryGradeHistoryScalarFieldEnum | SalaryGradeHistoryScalarFieldEnum[]
  }

  /**
   * SalaryGradeHistory create
   */
  export type SalaryGradeHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SalaryGradeHistory.
     */
    data: XOR<SalaryGradeHistoryCreateInput, SalaryGradeHistoryUncheckedCreateInput>
  }

  /**
   * SalaryGradeHistory createMany
   */
  export type SalaryGradeHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalaryGradeHistories.
     */
    data: SalaryGradeHistoryCreateManyInput | SalaryGradeHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalaryGradeHistory createManyAndReturn
   */
  export type SalaryGradeHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many SalaryGradeHistories.
     */
    data: SalaryGradeHistoryCreateManyInput | SalaryGradeHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SalaryGradeHistory update
   */
  export type SalaryGradeHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SalaryGradeHistory.
     */
    data: XOR<SalaryGradeHistoryUpdateInput, SalaryGradeHistoryUncheckedUpdateInput>
    /**
     * Choose, which SalaryGradeHistory to update.
     */
    where: SalaryGradeHistoryWhereUniqueInput
  }

  /**
   * SalaryGradeHistory updateMany
   */
  export type SalaryGradeHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalaryGradeHistories.
     */
    data: XOR<SalaryGradeHistoryUpdateManyMutationInput, SalaryGradeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SalaryGradeHistories to update
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * Limit how many SalaryGradeHistories to update.
     */
    limit?: number
  }

  /**
   * SalaryGradeHistory updateManyAndReturn
   */
  export type SalaryGradeHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * The data used to update SalaryGradeHistories.
     */
    data: XOR<SalaryGradeHistoryUpdateManyMutationInput, SalaryGradeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SalaryGradeHistories to update
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * Limit how many SalaryGradeHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SalaryGradeHistory upsert
   */
  export type SalaryGradeHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SalaryGradeHistory to update in case it exists.
     */
    where: SalaryGradeHistoryWhereUniqueInput
    /**
     * In case the SalaryGradeHistory found by the `where` argument doesn't exist, create a new SalaryGradeHistory with this data.
     */
    create: XOR<SalaryGradeHistoryCreateInput, SalaryGradeHistoryUncheckedCreateInput>
    /**
     * In case the SalaryGradeHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalaryGradeHistoryUpdateInput, SalaryGradeHistoryUncheckedUpdateInput>
  }

  /**
   * SalaryGradeHistory delete
   */
  export type SalaryGradeHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
    /**
     * Filter which SalaryGradeHistory to delete.
     */
    where: SalaryGradeHistoryWhereUniqueInput
  }

  /**
   * SalaryGradeHistory deleteMany
   */
  export type SalaryGradeHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalaryGradeHistories to delete
     */
    where?: SalaryGradeHistoryWhereInput
    /**
     * Limit how many SalaryGradeHistories to delete.
     */
    limit?: number
  }

  /**
   * SalaryGradeHistory without action
   */
  export type SalaryGradeHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaryGradeHistory
     */
    select?: SalaryGradeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalaryGradeHistory
     */
    omit?: SalaryGradeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalaryGradeHistoryInclude<ExtArgs> | null
  }


  /**
   * Model Leave
   */

  export type AggregateLeave = {
    _count: LeaveCountAggregateOutputType | null
    _min: LeaveMinAggregateOutputType | null
    _max: LeaveMaxAggregateOutputType | null
  }

  export type LeaveMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    startDate: Date | null
    endDate: Date | null
    reason: string | null
    status: string | null
    createdAt: Date | null
  }

  export type LeaveMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    startDate: Date | null
    endDate: Date | null
    reason: string | null
    status: string | null
    createdAt: Date | null
  }

  export type LeaveCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    startDate: number
    endDate: number
    reason: number
    status: number
    createdAt: number
    _all: number
  }


  export type LeaveMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    startDate?: true
    endDate?: true
    reason?: true
    status?: true
    createdAt?: true
  }

  export type LeaveMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    startDate?: true
    endDate?: true
    reason?: true
    status?: true
    createdAt?: true
  }

  export type LeaveCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    startDate?: true
    endDate?: true
    reason?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type LeaveAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leave to aggregate.
     */
    where?: LeaveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leaves to fetch.
     */
    orderBy?: LeaveOrderByWithRelationInput | LeaveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeaveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leaves from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leaves.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Leaves
    **/
    _count?: true | LeaveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeaveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeaveMaxAggregateInputType
  }

  export type GetLeaveAggregateType<T extends LeaveAggregateArgs> = {
        [P in keyof T & keyof AggregateLeave]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeave[P]>
      : GetScalarType<T[P], AggregateLeave[P]>
  }




  export type LeaveGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeaveWhereInput
    orderBy?: LeaveOrderByWithAggregationInput | LeaveOrderByWithAggregationInput[]
    by: LeaveScalarFieldEnum[] | LeaveScalarFieldEnum
    having?: LeaveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeaveCountAggregateInputType | true
    _min?: LeaveMinAggregateInputType
    _max?: LeaveMaxAggregateInputType
  }

  export type LeaveGroupByOutputType = {
    id: string
    userId: string
    type: string
    startDate: Date
    endDate: Date
    reason: string | null
    status: string
    createdAt: Date
    _count: LeaveCountAggregateOutputType | null
    _min: LeaveMinAggregateOutputType | null
    _max: LeaveMaxAggregateOutputType | null
  }

  type GetLeaveGroupByPayload<T extends LeaveGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeaveGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeaveGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeaveGroupByOutputType[P]>
            : GetScalarType<T[P], LeaveGroupByOutputType[P]>
        }
      >
    >


  export type LeaveSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    status?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave"]>

  export type LeaveSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    status?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave"]>

  export type LeaveSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    status?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leave"]>

  export type LeaveSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    reason?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type LeaveOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "startDate" | "endDate" | "reason" | "status" | "createdAt", ExtArgs["result"]["leave"]>
  export type LeaveInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LeaveIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LeaveIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LeavePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Leave"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      startDate: Date
      endDate: Date
      reason: string | null
      status: string
      createdAt: Date
    }, ExtArgs["result"]["leave"]>
    composites: {}
  }

  type LeaveGetPayload<S extends boolean | null | undefined | LeaveDefaultArgs> = $Result.GetResult<Prisma.$LeavePayload, S>

  type LeaveCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LeaveFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeaveCountAggregateInputType | true
    }

  export interface LeaveDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Leave'], meta: { name: 'Leave' } }
    /**
     * Find zero or one Leave that matches the filter.
     * @param {LeaveFindUniqueArgs} args - Arguments to find a Leave
     * @example
     * // Get one Leave
     * const leave = await prisma.leave.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeaveFindUniqueArgs>(args: SelectSubset<T, LeaveFindUniqueArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leave that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LeaveFindUniqueOrThrowArgs} args - Arguments to find a Leave
     * @example
     * // Get one Leave
     * const leave = await prisma.leave.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeaveFindUniqueOrThrowArgs>(args: SelectSubset<T, LeaveFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveFindFirstArgs} args - Arguments to find a Leave
     * @example
     * // Get one Leave
     * const leave = await prisma.leave.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeaveFindFirstArgs>(args?: SelectSubset<T, LeaveFindFirstArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leave that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveFindFirstOrThrowArgs} args - Arguments to find a Leave
     * @example
     * // Get one Leave
     * const leave = await prisma.leave.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeaveFindFirstOrThrowArgs>(args?: SelectSubset<T, LeaveFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leaves that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leaves
     * const leaves = await prisma.leave.findMany()
     * 
     * // Get first 10 Leaves
     * const leaves = await prisma.leave.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leaveWithIdOnly = await prisma.leave.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeaveFindManyArgs>(args?: SelectSubset<T, LeaveFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leave.
     * @param {LeaveCreateArgs} args - Arguments to create a Leave.
     * @example
     * // Create one Leave
     * const Leave = await prisma.leave.create({
     *   data: {
     *     // ... data to create a Leave
     *   }
     * })
     * 
     */
    create<T extends LeaveCreateArgs>(args: SelectSubset<T, LeaveCreateArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leaves.
     * @param {LeaveCreateManyArgs} args - Arguments to create many Leaves.
     * @example
     * // Create many Leaves
     * const leave = await prisma.leave.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeaveCreateManyArgs>(args?: SelectSubset<T, LeaveCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leaves and returns the data saved in the database.
     * @param {LeaveCreateManyAndReturnArgs} args - Arguments to create many Leaves.
     * @example
     * // Create many Leaves
     * const leave = await prisma.leave.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leaves and only return the `id`
     * const leaveWithIdOnly = await prisma.leave.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeaveCreateManyAndReturnArgs>(args?: SelectSubset<T, LeaveCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leave.
     * @param {LeaveDeleteArgs} args - Arguments to delete one Leave.
     * @example
     * // Delete one Leave
     * const Leave = await prisma.leave.delete({
     *   where: {
     *     // ... filter to delete one Leave
     *   }
     * })
     * 
     */
    delete<T extends LeaveDeleteArgs>(args: SelectSubset<T, LeaveDeleteArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leave.
     * @param {LeaveUpdateArgs} args - Arguments to update one Leave.
     * @example
     * // Update one Leave
     * const leave = await prisma.leave.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeaveUpdateArgs>(args: SelectSubset<T, LeaveUpdateArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leaves.
     * @param {LeaveDeleteManyArgs} args - Arguments to filter Leaves to delete.
     * @example
     * // Delete a few Leaves
     * const { count } = await prisma.leave.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeaveDeleteManyArgs>(args?: SelectSubset<T, LeaveDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leaves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leaves
     * const leave = await prisma.leave.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeaveUpdateManyArgs>(args: SelectSubset<T, LeaveUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leaves and returns the data updated in the database.
     * @param {LeaveUpdateManyAndReturnArgs} args - Arguments to update many Leaves.
     * @example
     * // Update many Leaves
     * const leave = await prisma.leave.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leaves and only return the `id`
     * const leaveWithIdOnly = await prisma.leave.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LeaveUpdateManyAndReturnArgs>(args: SelectSubset<T, LeaveUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leave.
     * @param {LeaveUpsertArgs} args - Arguments to update or create a Leave.
     * @example
     * // Update or create a Leave
     * const leave = await prisma.leave.upsert({
     *   create: {
     *     // ... data to create a Leave
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leave we want to update
     *   }
     * })
     */
    upsert<T extends LeaveUpsertArgs>(args: SelectSubset<T, LeaveUpsertArgs<ExtArgs>>): Prisma__LeaveClient<$Result.GetResult<Prisma.$LeavePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leaves.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveCountArgs} args - Arguments to filter Leaves to count.
     * @example
     * // Count the number of Leaves
     * const count = await prisma.leave.count({
     *   where: {
     *     // ... the filter for the Leaves we want to count
     *   }
     * })
    **/
    count<T extends LeaveCountArgs>(
      args?: Subset<T, LeaveCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeaveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leave.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeaveAggregateArgs>(args: Subset<T, LeaveAggregateArgs>): Prisma.PrismaPromise<GetLeaveAggregateType<T>>

    /**
     * Group by Leave.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeaveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeaveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeaveGroupByArgs['orderBy'] }
        : { orderBy?: LeaveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeaveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeaveGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Leave model
   */
  readonly fields: LeaveFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Leave.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeaveClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Leave model
   */
  interface LeaveFieldRefs {
    readonly id: FieldRef<"Leave", 'String'>
    readonly userId: FieldRef<"Leave", 'String'>
    readonly type: FieldRef<"Leave", 'String'>
    readonly startDate: FieldRef<"Leave", 'DateTime'>
    readonly endDate: FieldRef<"Leave", 'DateTime'>
    readonly reason: FieldRef<"Leave", 'String'>
    readonly status: FieldRef<"Leave", 'String'>
    readonly createdAt: FieldRef<"Leave", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Leave findUnique
   */
  export type LeaveFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter, which Leave to fetch.
     */
    where: LeaveWhereUniqueInput
  }

  /**
   * Leave findUniqueOrThrow
   */
  export type LeaveFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter, which Leave to fetch.
     */
    where: LeaveWhereUniqueInput
  }

  /**
   * Leave findFirst
   */
  export type LeaveFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter, which Leave to fetch.
     */
    where?: LeaveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leaves to fetch.
     */
    orderBy?: LeaveOrderByWithRelationInput | LeaveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leaves.
     */
    cursor?: LeaveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leaves from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leaves.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leaves.
     */
    distinct?: LeaveScalarFieldEnum | LeaveScalarFieldEnum[]
  }

  /**
   * Leave findFirstOrThrow
   */
  export type LeaveFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter, which Leave to fetch.
     */
    where?: LeaveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leaves to fetch.
     */
    orderBy?: LeaveOrderByWithRelationInput | LeaveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leaves.
     */
    cursor?: LeaveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leaves from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leaves.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leaves.
     */
    distinct?: LeaveScalarFieldEnum | LeaveScalarFieldEnum[]
  }

  /**
   * Leave findMany
   */
  export type LeaveFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter, which Leaves to fetch.
     */
    where?: LeaveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leaves to fetch.
     */
    orderBy?: LeaveOrderByWithRelationInput | LeaveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Leaves.
     */
    cursor?: LeaveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leaves from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leaves.
     */
    skip?: number
    distinct?: LeaveScalarFieldEnum | LeaveScalarFieldEnum[]
  }

  /**
   * Leave create
   */
  export type LeaveCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * The data needed to create a Leave.
     */
    data: XOR<LeaveCreateInput, LeaveUncheckedCreateInput>
  }

  /**
   * Leave createMany
   */
  export type LeaveCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Leaves.
     */
    data: LeaveCreateManyInput | LeaveCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Leave createManyAndReturn
   */
  export type LeaveCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * The data used to create many Leaves.
     */
    data: LeaveCreateManyInput | LeaveCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Leave update
   */
  export type LeaveUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * The data needed to update a Leave.
     */
    data: XOR<LeaveUpdateInput, LeaveUncheckedUpdateInput>
    /**
     * Choose, which Leave to update.
     */
    where: LeaveWhereUniqueInput
  }

  /**
   * Leave updateMany
   */
  export type LeaveUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Leaves.
     */
    data: XOR<LeaveUpdateManyMutationInput, LeaveUncheckedUpdateManyInput>
    /**
     * Filter which Leaves to update
     */
    where?: LeaveWhereInput
    /**
     * Limit how many Leaves to update.
     */
    limit?: number
  }

  /**
   * Leave updateManyAndReturn
   */
  export type LeaveUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * The data used to update Leaves.
     */
    data: XOR<LeaveUpdateManyMutationInput, LeaveUncheckedUpdateManyInput>
    /**
     * Filter which Leaves to update
     */
    where?: LeaveWhereInput
    /**
     * Limit how many Leaves to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Leave upsert
   */
  export type LeaveUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * The filter to search for the Leave to update in case it exists.
     */
    where: LeaveWhereUniqueInput
    /**
     * In case the Leave found by the `where` argument doesn't exist, create a new Leave with this data.
     */
    create: XOR<LeaveCreateInput, LeaveUncheckedCreateInput>
    /**
     * In case the Leave was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeaveUpdateInput, LeaveUncheckedUpdateInput>
  }

  /**
   * Leave delete
   */
  export type LeaveDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
    /**
     * Filter which Leave to delete.
     */
    where: LeaveWhereUniqueInput
  }

  /**
   * Leave deleteMany
   */
  export type LeaveDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leaves to delete
     */
    where?: LeaveWhereInput
    /**
     * Limit how many Leaves to delete.
     */
    limit?: number
  }

  /**
   * Leave without action
   */
  export type LeaveDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leave
     */
    select?: LeaveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leave
     */
    omit?: LeaveOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeaveInclude<ExtArgs> | null
  }


  /**
   * Model Announcement
   */

  export type AggregateAnnouncement = {
    _count: AnnouncementCountAggregateOutputType | null
    _min: AnnouncementMinAggregateOutputType | null
    _max: AnnouncementMaxAggregateOutputType | null
  }

  export type AnnouncementMinAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    createdAt: Date | null
    authorId: string | null
    lineId: string | null
    path: string | null
    important: boolean | null
    departmentId: string | null
  }

  export type AnnouncementMaxAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    createdAt: Date | null
    authorId: string | null
    lineId: string | null
    path: string | null
    important: boolean | null
    departmentId: string | null
  }

  export type AnnouncementCountAggregateOutputType = {
    id: number
    title: number
    content: number
    createdAt: number
    authorId: number
    lineId: number
    path: number
    important: number
    departmentId: number
    _all: number
  }


  export type AnnouncementMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    authorId?: true
    lineId?: true
    path?: true
    important?: true
    departmentId?: true
  }

  export type AnnouncementMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    authorId?: true
    lineId?: true
    path?: true
    important?: true
    departmentId?: true
  }

  export type AnnouncementCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    createdAt?: true
    authorId?: true
    lineId?: true
    path?: true
    important?: true
    departmentId?: true
    _all?: true
  }

  export type AnnouncementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Announcement to aggregate.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Announcements
    **/
    _count?: true | AnnouncementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnnouncementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnnouncementMaxAggregateInputType
  }

  export type GetAnnouncementAggregateType<T extends AnnouncementAggregateArgs> = {
        [P in keyof T & keyof AggregateAnnouncement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnnouncement[P]>
      : GetScalarType<T[P], AggregateAnnouncement[P]>
  }




  export type AnnouncementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithAggregationInput | AnnouncementOrderByWithAggregationInput[]
    by: AnnouncementScalarFieldEnum[] | AnnouncementScalarFieldEnum
    having?: AnnouncementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnnouncementCountAggregateInputType | true
    _min?: AnnouncementMinAggregateInputType
    _max?: AnnouncementMaxAggregateInputType
  }

  export type AnnouncementGroupByOutputType = {
    id: string
    title: string
    content: string
    createdAt: Date
    authorId: string
    lineId: string
    path: string | null
    important: boolean
    departmentId: string | null
    _count: AnnouncementCountAggregateOutputType | null
    _min: AnnouncementMinAggregateOutputType | null
    _max: AnnouncementMaxAggregateOutputType | null
  }

  type GetAnnouncementGroupByPayload<T extends AnnouncementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnnouncementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnnouncementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
            : GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
        }
      >
    >


  export type AnnouncementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    authorId?: boolean
    lineId?: boolean
    path?: boolean
    important?: boolean
    departmentId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }, ExtArgs["result"]["announcement"]>

  export type AnnouncementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    authorId?: boolean
    lineId?: boolean
    path?: boolean
    important?: boolean
    departmentId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }, ExtArgs["result"]["announcement"]>

  export type AnnouncementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    authorId?: boolean
    lineId?: boolean
    path?: boolean
    important?: boolean
    departmentId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }, ExtArgs["result"]["announcement"]>

  export type AnnouncementSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    createdAt?: boolean
    authorId?: boolean
    lineId?: boolean
    path?: boolean
    important?: boolean
    departmentId?: boolean
  }

  export type AnnouncementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "content" | "createdAt" | "authorId" | "lineId" | "path" | "important" | "departmentId", ExtArgs["result"]["announcement"]>
  export type AnnouncementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }
  export type AnnouncementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }
  export type AnnouncementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
    unit?: boolean | Announcement$unitArgs<ExtArgs>
  }

  export type $AnnouncementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Announcement"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      line: Prisma.$LinePayload<ExtArgs>
      unit: Prisma.$DepartmentPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      createdAt: Date
      authorId: string
      lineId: string
      path: string | null
      important: boolean
      departmentId: string | null
    }, ExtArgs["result"]["announcement"]>
    composites: {}
  }

  type AnnouncementGetPayload<S extends boolean | null | undefined | AnnouncementDefaultArgs> = $Result.GetResult<Prisma.$AnnouncementPayload, S>

  type AnnouncementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AnnouncementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AnnouncementCountAggregateInputType | true
    }

  export interface AnnouncementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Announcement'], meta: { name: 'Announcement' } }
    /**
     * Find zero or one Announcement that matches the filter.
     * @param {AnnouncementFindUniqueArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AnnouncementFindUniqueArgs>(args: SelectSubset<T, AnnouncementFindUniqueArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Announcement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AnnouncementFindUniqueOrThrowArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AnnouncementFindUniqueOrThrowArgs>(args: SelectSubset<T, AnnouncementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Announcement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindFirstArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AnnouncementFindFirstArgs>(args?: SelectSubset<T, AnnouncementFindFirstArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Announcement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindFirstOrThrowArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AnnouncementFindFirstOrThrowArgs>(args?: SelectSubset<T, AnnouncementFindFirstOrThrowArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Announcements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Announcements
     * const announcements = await prisma.announcement.findMany()
     * 
     * // Get first 10 Announcements
     * const announcements = await prisma.announcement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const announcementWithIdOnly = await prisma.announcement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AnnouncementFindManyArgs>(args?: SelectSubset<T, AnnouncementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Announcement.
     * @param {AnnouncementCreateArgs} args - Arguments to create a Announcement.
     * @example
     * // Create one Announcement
     * const Announcement = await prisma.announcement.create({
     *   data: {
     *     // ... data to create a Announcement
     *   }
     * })
     * 
     */
    create<T extends AnnouncementCreateArgs>(args: SelectSubset<T, AnnouncementCreateArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Announcements.
     * @param {AnnouncementCreateManyArgs} args - Arguments to create many Announcements.
     * @example
     * // Create many Announcements
     * const announcement = await prisma.announcement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AnnouncementCreateManyArgs>(args?: SelectSubset<T, AnnouncementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Announcements and returns the data saved in the database.
     * @param {AnnouncementCreateManyAndReturnArgs} args - Arguments to create many Announcements.
     * @example
     * // Create many Announcements
     * const announcement = await prisma.announcement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Announcements and only return the `id`
     * const announcementWithIdOnly = await prisma.announcement.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AnnouncementCreateManyAndReturnArgs>(args?: SelectSubset<T, AnnouncementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Announcement.
     * @param {AnnouncementDeleteArgs} args - Arguments to delete one Announcement.
     * @example
     * // Delete one Announcement
     * const Announcement = await prisma.announcement.delete({
     *   where: {
     *     // ... filter to delete one Announcement
     *   }
     * })
     * 
     */
    delete<T extends AnnouncementDeleteArgs>(args: SelectSubset<T, AnnouncementDeleteArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Announcement.
     * @param {AnnouncementUpdateArgs} args - Arguments to update one Announcement.
     * @example
     * // Update one Announcement
     * const announcement = await prisma.announcement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AnnouncementUpdateArgs>(args: SelectSubset<T, AnnouncementUpdateArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Announcements.
     * @param {AnnouncementDeleteManyArgs} args - Arguments to filter Announcements to delete.
     * @example
     * // Delete a few Announcements
     * const { count } = await prisma.announcement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AnnouncementDeleteManyArgs>(args?: SelectSubset<T, AnnouncementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Announcements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Announcements
     * const announcement = await prisma.announcement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AnnouncementUpdateManyArgs>(args: SelectSubset<T, AnnouncementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Announcements and returns the data updated in the database.
     * @param {AnnouncementUpdateManyAndReturnArgs} args - Arguments to update many Announcements.
     * @example
     * // Update many Announcements
     * const announcement = await prisma.announcement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Announcements and only return the `id`
     * const announcementWithIdOnly = await prisma.announcement.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AnnouncementUpdateManyAndReturnArgs>(args: SelectSubset<T, AnnouncementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Announcement.
     * @param {AnnouncementUpsertArgs} args - Arguments to update or create a Announcement.
     * @example
     * // Update or create a Announcement
     * const announcement = await prisma.announcement.upsert({
     *   create: {
     *     // ... data to create a Announcement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Announcement we want to update
     *   }
     * })
     */
    upsert<T extends AnnouncementUpsertArgs>(args: SelectSubset<T, AnnouncementUpsertArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Announcements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementCountArgs} args - Arguments to filter Announcements to count.
     * @example
     * // Count the number of Announcements
     * const count = await prisma.announcement.count({
     *   where: {
     *     // ... the filter for the Announcements we want to count
     *   }
     * })
    **/
    count<T extends AnnouncementCountArgs>(
      args?: Subset<T, AnnouncementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnnouncementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Announcement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnnouncementAggregateArgs>(args: Subset<T, AnnouncementAggregateArgs>): Prisma.PrismaPromise<GetAnnouncementAggregateType<T>>

    /**
     * Group by Announcement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnnouncementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnnouncementGroupByArgs['orderBy'] }
        : { orderBy?: AnnouncementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnnouncementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnnouncementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Announcement model
   */
  readonly fields: AnnouncementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Announcement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnnouncementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unit<T extends Announcement$unitArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$unitArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Announcement model
   */
  interface AnnouncementFieldRefs {
    readonly id: FieldRef<"Announcement", 'String'>
    readonly title: FieldRef<"Announcement", 'String'>
    readonly content: FieldRef<"Announcement", 'String'>
    readonly createdAt: FieldRef<"Announcement", 'DateTime'>
    readonly authorId: FieldRef<"Announcement", 'String'>
    readonly lineId: FieldRef<"Announcement", 'String'>
    readonly path: FieldRef<"Announcement", 'String'>
    readonly important: FieldRef<"Announcement", 'Boolean'>
    readonly departmentId: FieldRef<"Announcement", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Announcement findUnique
   */
  export type AnnouncementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where: AnnouncementWhereUniqueInput
  }

  /**
   * Announcement findUniqueOrThrow
   */
  export type AnnouncementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where: AnnouncementWhereUniqueInput
  }

  /**
   * Announcement findFirst
   */
  export type AnnouncementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Announcements.
     */
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * Announcement findFirstOrThrow
   */
  export type AnnouncementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Announcements.
     */
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * Announcement findMany
   */
  export type AnnouncementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcements to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }

  /**
   * Announcement create
   */
  export type AnnouncementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The data needed to create a Announcement.
     */
    data: XOR<AnnouncementCreateInput, AnnouncementUncheckedCreateInput>
  }

  /**
   * Announcement createMany
   */
  export type AnnouncementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Announcements.
     */
    data: AnnouncementCreateManyInput | AnnouncementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Announcement createManyAndReturn
   */
  export type AnnouncementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * The data used to create many Announcements.
     */
    data: AnnouncementCreateManyInput | AnnouncementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Announcement update
   */
  export type AnnouncementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The data needed to update a Announcement.
     */
    data: XOR<AnnouncementUpdateInput, AnnouncementUncheckedUpdateInput>
    /**
     * Choose, which Announcement to update.
     */
    where: AnnouncementWhereUniqueInput
  }

  /**
   * Announcement updateMany
   */
  export type AnnouncementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Announcements.
     */
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyInput>
    /**
     * Filter which Announcements to update
     */
    where?: AnnouncementWhereInput
    /**
     * Limit how many Announcements to update.
     */
    limit?: number
  }

  /**
   * Announcement updateManyAndReturn
   */
  export type AnnouncementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * The data used to update Announcements.
     */
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyInput>
    /**
     * Filter which Announcements to update
     */
    where?: AnnouncementWhereInput
    /**
     * Limit how many Announcements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Announcement upsert
   */
  export type AnnouncementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The filter to search for the Announcement to update in case it exists.
     */
    where: AnnouncementWhereUniqueInput
    /**
     * In case the Announcement found by the `where` argument doesn't exist, create a new Announcement with this data.
     */
    create: XOR<AnnouncementCreateInput, AnnouncementUncheckedCreateInput>
    /**
     * In case the Announcement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnnouncementUpdateInput, AnnouncementUncheckedUpdateInput>
  }

  /**
   * Announcement delete
   */
  export type AnnouncementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter which Announcement to delete.
     */
    where: AnnouncementWhereUniqueInput
  }

  /**
   * Announcement deleteMany
   */
  export type AnnouncementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Announcements to delete
     */
    where?: AnnouncementWhereInput
    /**
     * Limit how many Announcements to delete.
     */
    limit?: number
  }

  /**
   * Announcement.unit
   */
  export type Announcement$unitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * Announcement without action
   */
  export type AnnouncementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Announcement
     */
    omit?: AnnouncementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnnouncementInclude<ExtArgs> | null
  }


  /**
   * Model Promotion
   */

  export type AggregatePromotion = {
    _count: PromotionCountAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  export type PromotionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    timestamp: Date | null
    positionId: string | null
  }

  export type PromotionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    timestamp: Date | null
    positionId: string | null
  }

  export type PromotionCountAggregateOutputType = {
    id: number
    userId: number
    timestamp: number
    positionId: number
    _all: number
  }


  export type PromotionMinAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    positionId?: true
  }

  export type PromotionMaxAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    positionId?: true
  }

  export type PromotionCountAggregateInputType = {
    id?: true
    userId?: true
    timestamp?: true
    positionId?: true
    _all?: true
  }

  export type PromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotion to aggregate.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promotions
    **/
    _count?: true | PromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionMaxAggregateInputType
  }

  export type GetPromotionAggregateType<T extends PromotionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion[P]>
      : GetScalarType<T[P], AggregatePromotion[P]>
  }




  export type PromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithAggregationInput | PromotionOrderByWithAggregationInput[]
    by: PromotionScalarFieldEnum[] | PromotionScalarFieldEnum
    having?: PromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCountAggregateInputType | true
    _min?: PromotionMinAggregateInputType
    _max?: PromotionMaxAggregateInputType
  }

  export type PromotionGroupByOutputType = {
    id: string
    userId: string
    timestamp: Date
    positionId: string
    _count: PromotionCountAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  type GetPromotionGroupByPayload<T extends PromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionGroupByOutputType[P]>
        }
      >
    >


  export type PromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    positionId?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    positionId?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    positionId?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectScalar = {
    id?: boolean
    userId?: boolean
    timestamp?: boolean
    positionId?: boolean
  }

  export type PromotionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "timestamp" | "positionId", ExtArgs["result"]["promotion"]>
  export type PromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }
  export type PromotionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }
  export type PromotionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    postion?: boolean | PositionDefaultArgs<ExtArgs>
  }

  export type $PromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promotion"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      postion: Prisma.$PositionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      timestamp: Date
      positionId: string
    }, ExtArgs["result"]["promotion"]>
    composites: {}
  }

  type PromotionGetPayload<S extends boolean | null | undefined | PromotionDefaultArgs> = $Result.GetResult<Prisma.$PromotionPayload, S>

  type PromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionCountAggregateInputType | true
    }

  export interface PromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promotion'], meta: { name: 'Promotion' } }
    /**
     * Find zero or one Promotion that matches the filter.
     * @param {PromotionFindUniqueArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionFindUniqueArgs>(args: SelectSubset<T, PromotionFindUniqueArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promotion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionFindUniqueOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionFindFirstArgs>(args?: SelectSubset<T, PromotionFindFirstArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotion.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionWithIdOnly = await prisma.promotion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionFindManyArgs>(args?: SelectSubset<T, PromotionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promotion.
     * @param {PromotionCreateArgs} args - Arguments to create a Promotion.
     * @example
     * // Create one Promotion
     * const Promotion = await prisma.promotion.create({
     *   data: {
     *     // ... data to create a Promotion
     *   }
     * })
     * 
     */
    create<T extends PromotionCreateArgs>(args: SelectSubset<T, PromotionCreateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promotions.
     * @param {PromotionCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionCreateManyArgs>(args?: SelectSubset<T, PromotionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promotions and returns the data saved in the database.
     * @param {PromotionCreateManyAndReturnArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promotions and only return the `id`
     * const promotionWithIdOnly = await prisma.promotion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Promotion.
     * @param {PromotionDeleteArgs} args - Arguments to delete one Promotion.
     * @example
     * // Delete one Promotion
     * const Promotion = await prisma.promotion.delete({
     *   where: {
     *     // ... filter to delete one Promotion
     *   }
     * })
     * 
     */
    delete<T extends PromotionDeleteArgs>(args: SelectSubset<T, PromotionDeleteArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promotion.
     * @param {PromotionUpdateArgs} args - Arguments to update one Promotion.
     * @example
     * // Update one Promotion
     * const promotion = await prisma.promotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionUpdateArgs>(args: SelectSubset<T, PromotionUpdateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promotions.
     * @param {PromotionDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionDeleteManyArgs>(args?: SelectSubset<T, PromotionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionUpdateManyArgs>(args: SelectSubset<T, PromotionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions and returns the data updated in the database.
     * @param {PromotionUpdateManyAndReturnArgs} args - Arguments to update many Promotions.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Promotions and only return the `id`
     * const promotionWithIdOnly = await prisma.promotion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PromotionUpdateManyAndReturnArgs>(args: SelectSubset<T, PromotionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Promotion.
     * @param {PromotionUpsertArgs} args - Arguments to update or create a Promotion.
     * @example
     * // Update or create a Promotion
     * const promotion = await prisma.promotion.upsert({
     *   create: {
     *     // ... data to create a Promotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion we want to update
     *   }
     * })
     */
    upsert<T extends PromotionUpsertArgs>(args: SelectSubset<T, PromotionUpsertArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotion.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends PromotionCountArgs>(
      args?: Subset<T, PromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionAggregateArgs>(args: Subset<T, PromotionAggregateArgs>): Prisma.PrismaPromise<GetPromotionAggregateType<T>>

    /**
     * Group by Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionGroupByArgs['orderBy'] }
        : { orderBy?: PromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promotion model
   */
  readonly fields: PromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    postion<T extends PositionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PositionDefaultArgs<ExtArgs>>): Prisma__PositionClient<$Result.GetResult<Prisma.$PositionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Promotion model
   */
  interface PromotionFieldRefs {
    readonly id: FieldRef<"Promotion", 'String'>
    readonly userId: FieldRef<"Promotion", 'String'>
    readonly timestamp: FieldRef<"Promotion", 'DateTime'>
    readonly positionId: FieldRef<"Promotion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Promotion findUnique
   */
  export type PromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findUniqueOrThrow
   */
  export type PromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findFirst
   */
  export type PromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findFirstOrThrow
   */
  export type PromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findMany
   */
  export type PromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotions to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion create
   */
  export type PromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a Promotion.
     */
    data: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
  }

  /**
   * Promotion createMany
   */
  export type PromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion createManyAndReturn
   */
  export type PromotionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Promotion update
   */
  export type PromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a Promotion.
     */
    data: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
    /**
     * Choose, which Promotion to update.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion updateMany
   */
  export type PromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
    /**
     * Limit how many Promotions to update.
     */
    limit?: number
  }

  /**
   * Promotion updateManyAndReturn
   */
  export type PromotionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
    /**
     * Limit how many Promotions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Promotion upsert
   */
  export type PromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the Promotion to update in case it exists.
     */
    where: PromotionWhereUniqueInput
    /**
     * In case the Promotion found by the `where` argument doesn't exist, create a new Promotion with this data.
     */
    create: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
    /**
     * In case the Promotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
  }

  /**
   * Promotion delete
   */
  export type PromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter which Promotion to delete.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion deleteMany
   */
  export type PromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotions to delete
     */
    where?: PromotionWhereInput
    /**
     * Limit how many Promotions to delete.
     */
    limit?: number
  }

  /**
   * Promotion without action
   */
  export type PromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
  }


  /**
   * Model BirthdayNoticeResponse
   */

  export type AggregateBirthdayNoticeResponse = {
    _count: BirthdayNoticeResponseCountAggregateOutputType | null
    _min: BirthdayNoticeResponseMinAggregateOutputType | null
    _max: BirthdayNoticeResponseMaxAggregateOutputType | null
  }

  export type BirthdayNoticeResponseMinAggregateOutputType = {
    id: string | null
    message: string | null
    like: boolean | null
    timestamp: Date | null
    senderId: string | null
    recipientId: string | null
    lineId: string | null
  }

  export type BirthdayNoticeResponseMaxAggregateOutputType = {
    id: string | null
    message: string | null
    like: boolean | null
    timestamp: Date | null
    senderId: string | null
    recipientId: string | null
    lineId: string | null
  }

  export type BirthdayNoticeResponseCountAggregateOutputType = {
    id: number
    message: number
    like: number
    timestamp: number
    senderId: number
    recipientId: number
    lineId: number
    _all: number
  }


  export type BirthdayNoticeResponseMinAggregateInputType = {
    id?: true
    message?: true
    like?: true
    timestamp?: true
    senderId?: true
    recipientId?: true
    lineId?: true
  }

  export type BirthdayNoticeResponseMaxAggregateInputType = {
    id?: true
    message?: true
    like?: true
    timestamp?: true
    senderId?: true
    recipientId?: true
    lineId?: true
  }

  export type BirthdayNoticeResponseCountAggregateInputType = {
    id?: true
    message?: true
    like?: true
    timestamp?: true
    senderId?: true
    recipientId?: true
    lineId?: true
    _all?: true
  }

  export type BirthdayNoticeResponseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BirthdayNoticeResponse to aggregate.
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BirthdayNoticeResponses to fetch.
     */
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BirthdayNoticeResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BirthdayNoticeResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BirthdayNoticeResponses
    **/
    _count?: true | BirthdayNoticeResponseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BirthdayNoticeResponseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BirthdayNoticeResponseMaxAggregateInputType
  }

  export type GetBirthdayNoticeResponseAggregateType<T extends BirthdayNoticeResponseAggregateArgs> = {
        [P in keyof T & keyof AggregateBirthdayNoticeResponse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBirthdayNoticeResponse[P]>
      : GetScalarType<T[P], AggregateBirthdayNoticeResponse[P]>
  }




  export type BirthdayNoticeResponseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BirthdayNoticeResponseWhereInput
    orderBy?: BirthdayNoticeResponseOrderByWithAggregationInput | BirthdayNoticeResponseOrderByWithAggregationInput[]
    by: BirthdayNoticeResponseScalarFieldEnum[] | BirthdayNoticeResponseScalarFieldEnum
    having?: BirthdayNoticeResponseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BirthdayNoticeResponseCountAggregateInputType | true
    _min?: BirthdayNoticeResponseMinAggregateInputType
    _max?: BirthdayNoticeResponseMaxAggregateInputType
  }

  export type BirthdayNoticeResponseGroupByOutputType = {
    id: string
    message: string | null
    like: boolean
    timestamp: Date
    senderId: string
    recipientId: string | null
    lineId: string
    _count: BirthdayNoticeResponseCountAggregateOutputType | null
    _min: BirthdayNoticeResponseMinAggregateOutputType | null
    _max: BirthdayNoticeResponseMaxAggregateOutputType | null
  }

  type GetBirthdayNoticeResponseGroupByPayload<T extends BirthdayNoticeResponseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BirthdayNoticeResponseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BirthdayNoticeResponseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BirthdayNoticeResponseGroupByOutputType[P]>
            : GetScalarType<T[P], BirthdayNoticeResponseGroupByOutputType[P]>
        }
      >
    >


  export type BirthdayNoticeResponseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    like?: boolean
    timestamp?: boolean
    senderId?: boolean
    recipientId?: boolean
    lineId?: boolean
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["birthdayNoticeResponse"]>

  export type BirthdayNoticeResponseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    like?: boolean
    timestamp?: boolean
    senderId?: boolean
    recipientId?: boolean
    lineId?: boolean
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["birthdayNoticeResponse"]>

  export type BirthdayNoticeResponseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    like?: boolean
    timestamp?: boolean
    senderId?: boolean
    recipientId?: boolean
    lineId?: boolean
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["birthdayNoticeResponse"]>

  export type BirthdayNoticeResponseSelectScalar = {
    id?: boolean
    message?: boolean
    like?: boolean
    timestamp?: boolean
    senderId?: boolean
    recipientId?: boolean
    lineId?: boolean
  }

  export type BirthdayNoticeResponseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "message" | "like" | "timestamp" | "senderId" | "recipientId" | "lineId", ExtArgs["result"]["birthdayNoticeResponse"]>
  export type BirthdayNoticeResponseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }
  export type BirthdayNoticeResponseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }
  export type BirthdayNoticeResponseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Sender?: boolean | UserDefaultArgs<ExtArgs>
    Recipient?: boolean | BirthdayNoticeResponse$RecipientArgs<ExtArgs>
    line?: boolean | LineDefaultArgs<ExtArgs>
  }

  export type $BirthdayNoticeResponsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BirthdayNoticeResponse"
    objects: {
      Sender: Prisma.$UserPayload<ExtArgs>
      Recipient: Prisma.$UserPayload<ExtArgs> | null
      line: Prisma.$LinePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      message: string | null
      like: boolean
      timestamp: Date
      senderId: string
      recipientId: string | null
      lineId: string
    }, ExtArgs["result"]["birthdayNoticeResponse"]>
    composites: {}
  }

  type BirthdayNoticeResponseGetPayload<S extends boolean | null | undefined | BirthdayNoticeResponseDefaultArgs> = $Result.GetResult<Prisma.$BirthdayNoticeResponsePayload, S>

  type BirthdayNoticeResponseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BirthdayNoticeResponseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BirthdayNoticeResponseCountAggregateInputType | true
    }

  export interface BirthdayNoticeResponseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BirthdayNoticeResponse'], meta: { name: 'BirthdayNoticeResponse' } }
    /**
     * Find zero or one BirthdayNoticeResponse that matches the filter.
     * @param {BirthdayNoticeResponseFindUniqueArgs} args - Arguments to find a BirthdayNoticeResponse
     * @example
     * // Get one BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BirthdayNoticeResponseFindUniqueArgs>(args: SelectSubset<T, BirthdayNoticeResponseFindUniqueArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BirthdayNoticeResponse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BirthdayNoticeResponseFindUniqueOrThrowArgs} args - Arguments to find a BirthdayNoticeResponse
     * @example
     * // Get one BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BirthdayNoticeResponseFindUniqueOrThrowArgs>(args: SelectSubset<T, BirthdayNoticeResponseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BirthdayNoticeResponse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseFindFirstArgs} args - Arguments to find a BirthdayNoticeResponse
     * @example
     * // Get one BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BirthdayNoticeResponseFindFirstArgs>(args?: SelectSubset<T, BirthdayNoticeResponseFindFirstArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BirthdayNoticeResponse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseFindFirstOrThrowArgs} args - Arguments to find a BirthdayNoticeResponse
     * @example
     * // Get one BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BirthdayNoticeResponseFindFirstOrThrowArgs>(args?: SelectSubset<T, BirthdayNoticeResponseFindFirstOrThrowArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BirthdayNoticeResponses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BirthdayNoticeResponses
     * const birthdayNoticeResponses = await prisma.birthdayNoticeResponse.findMany()
     * 
     * // Get first 10 BirthdayNoticeResponses
     * const birthdayNoticeResponses = await prisma.birthdayNoticeResponse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const birthdayNoticeResponseWithIdOnly = await prisma.birthdayNoticeResponse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BirthdayNoticeResponseFindManyArgs>(args?: SelectSubset<T, BirthdayNoticeResponseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BirthdayNoticeResponse.
     * @param {BirthdayNoticeResponseCreateArgs} args - Arguments to create a BirthdayNoticeResponse.
     * @example
     * // Create one BirthdayNoticeResponse
     * const BirthdayNoticeResponse = await prisma.birthdayNoticeResponse.create({
     *   data: {
     *     // ... data to create a BirthdayNoticeResponse
     *   }
     * })
     * 
     */
    create<T extends BirthdayNoticeResponseCreateArgs>(args: SelectSubset<T, BirthdayNoticeResponseCreateArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BirthdayNoticeResponses.
     * @param {BirthdayNoticeResponseCreateManyArgs} args - Arguments to create many BirthdayNoticeResponses.
     * @example
     * // Create many BirthdayNoticeResponses
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BirthdayNoticeResponseCreateManyArgs>(args?: SelectSubset<T, BirthdayNoticeResponseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BirthdayNoticeResponses and returns the data saved in the database.
     * @param {BirthdayNoticeResponseCreateManyAndReturnArgs} args - Arguments to create many BirthdayNoticeResponses.
     * @example
     * // Create many BirthdayNoticeResponses
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BirthdayNoticeResponses and only return the `id`
     * const birthdayNoticeResponseWithIdOnly = await prisma.birthdayNoticeResponse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BirthdayNoticeResponseCreateManyAndReturnArgs>(args?: SelectSubset<T, BirthdayNoticeResponseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BirthdayNoticeResponse.
     * @param {BirthdayNoticeResponseDeleteArgs} args - Arguments to delete one BirthdayNoticeResponse.
     * @example
     * // Delete one BirthdayNoticeResponse
     * const BirthdayNoticeResponse = await prisma.birthdayNoticeResponse.delete({
     *   where: {
     *     // ... filter to delete one BirthdayNoticeResponse
     *   }
     * })
     * 
     */
    delete<T extends BirthdayNoticeResponseDeleteArgs>(args: SelectSubset<T, BirthdayNoticeResponseDeleteArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BirthdayNoticeResponse.
     * @param {BirthdayNoticeResponseUpdateArgs} args - Arguments to update one BirthdayNoticeResponse.
     * @example
     * // Update one BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BirthdayNoticeResponseUpdateArgs>(args: SelectSubset<T, BirthdayNoticeResponseUpdateArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BirthdayNoticeResponses.
     * @param {BirthdayNoticeResponseDeleteManyArgs} args - Arguments to filter BirthdayNoticeResponses to delete.
     * @example
     * // Delete a few BirthdayNoticeResponses
     * const { count } = await prisma.birthdayNoticeResponse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BirthdayNoticeResponseDeleteManyArgs>(args?: SelectSubset<T, BirthdayNoticeResponseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BirthdayNoticeResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BirthdayNoticeResponses
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BirthdayNoticeResponseUpdateManyArgs>(args: SelectSubset<T, BirthdayNoticeResponseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BirthdayNoticeResponses and returns the data updated in the database.
     * @param {BirthdayNoticeResponseUpdateManyAndReturnArgs} args - Arguments to update many BirthdayNoticeResponses.
     * @example
     * // Update many BirthdayNoticeResponses
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BirthdayNoticeResponses and only return the `id`
     * const birthdayNoticeResponseWithIdOnly = await prisma.birthdayNoticeResponse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BirthdayNoticeResponseUpdateManyAndReturnArgs>(args: SelectSubset<T, BirthdayNoticeResponseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BirthdayNoticeResponse.
     * @param {BirthdayNoticeResponseUpsertArgs} args - Arguments to update or create a BirthdayNoticeResponse.
     * @example
     * // Update or create a BirthdayNoticeResponse
     * const birthdayNoticeResponse = await prisma.birthdayNoticeResponse.upsert({
     *   create: {
     *     // ... data to create a BirthdayNoticeResponse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BirthdayNoticeResponse we want to update
     *   }
     * })
     */
    upsert<T extends BirthdayNoticeResponseUpsertArgs>(args: SelectSubset<T, BirthdayNoticeResponseUpsertArgs<ExtArgs>>): Prisma__BirthdayNoticeResponseClient<$Result.GetResult<Prisma.$BirthdayNoticeResponsePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BirthdayNoticeResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseCountArgs} args - Arguments to filter BirthdayNoticeResponses to count.
     * @example
     * // Count the number of BirthdayNoticeResponses
     * const count = await prisma.birthdayNoticeResponse.count({
     *   where: {
     *     // ... the filter for the BirthdayNoticeResponses we want to count
     *   }
     * })
    **/
    count<T extends BirthdayNoticeResponseCountArgs>(
      args?: Subset<T, BirthdayNoticeResponseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BirthdayNoticeResponseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BirthdayNoticeResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BirthdayNoticeResponseAggregateArgs>(args: Subset<T, BirthdayNoticeResponseAggregateArgs>): Prisma.PrismaPromise<GetBirthdayNoticeResponseAggregateType<T>>

    /**
     * Group by BirthdayNoticeResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BirthdayNoticeResponseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BirthdayNoticeResponseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BirthdayNoticeResponseGroupByArgs['orderBy'] }
        : { orderBy?: BirthdayNoticeResponseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BirthdayNoticeResponseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBirthdayNoticeResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BirthdayNoticeResponse model
   */
  readonly fields: BirthdayNoticeResponseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BirthdayNoticeResponse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BirthdayNoticeResponseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Recipient<T extends BirthdayNoticeResponse$RecipientArgs<ExtArgs> = {}>(args?: Subset<T, BirthdayNoticeResponse$RecipientArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    line<T extends LineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LineDefaultArgs<ExtArgs>>): Prisma__LineClient<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BirthdayNoticeResponse model
   */
  interface BirthdayNoticeResponseFieldRefs {
    readonly id: FieldRef<"BirthdayNoticeResponse", 'String'>
    readonly message: FieldRef<"BirthdayNoticeResponse", 'String'>
    readonly like: FieldRef<"BirthdayNoticeResponse", 'Boolean'>
    readonly timestamp: FieldRef<"BirthdayNoticeResponse", 'DateTime'>
    readonly senderId: FieldRef<"BirthdayNoticeResponse", 'String'>
    readonly recipientId: FieldRef<"BirthdayNoticeResponse", 'String'>
    readonly lineId: FieldRef<"BirthdayNoticeResponse", 'String'>
  }
    

  // Custom InputTypes
  /**
   * BirthdayNoticeResponse findUnique
   */
  export type BirthdayNoticeResponseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter, which BirthdayNoticeResponse to fetch.
     */
    where: BirthdayNoticeResponseWhereUniqueInput
  }

  /**
   * BirthdayNoticeResponse findUniqueOrThrow
   */
  export type BirthdayNoticeResponseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter, which BirthdayNoticeResponse to fetch.
     */
    where: BirthdayNoticeResponseWhereUniqueInput
  }

  /**
   * BirthdayNoticeResponse findFirst
   */
  export type BirthdayNoticeResponseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter, which BirthdayNoticeResponse to fetch.
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BirthdayNoticeResponses to fetch.
     */
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BirthdayNoticeResponses.
     */
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BirthdayNoticeResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BirthdayNoticeResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BirthdayNoticeResponses.
     */
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * BirthdayNoticeResponse findFirstOrThrow
   */
  export type BirthdayNoticeResponseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter, which BirthdayNoticeResponse to fetch.
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BirthdayNoticeResponses to fetch.
     */
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BirthdayNoticeResponses.
     */
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BirthdayNoticeResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BirthdayNoticeResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BirthdayNoticeResponses.
     */
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * BirthdayNoticeResponse findMany
   */
  export type BirthdayNoticeResponseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter, which BirthdayNoticeResponses to fetch.
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BirthdayNoticeResponses to fetch.
     */
    orderBy?: BirthdayNoticeResponseOrderByWithRelationInput | BirthdayNoticeResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BirthdayNoticeResponses.
     */
    cursor?: BirthdayNoticeResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BirthdayNoticeResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BirthdayNoticeResponses.
     */
    skip?: number
    distinct?: BirthdayNoticeResponseScalarFieldEnum | BirthdayNoticeResponseScalarFieldEnum[]
  }

  /**
   * BirthdayNoticeResponse create
   */
  export type BirthdayNoticeResponseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * The data needed to create a BirthdayNoticeResponse.
     */
    data: XOR<BirthdayNoticeResponseCreateInput, BirthdayNoticeResponseUncheckedCreateInput>
  }

  /**
   * BirthdayNoticeResponse createMany
   */
  export type BirthdayNoticeResponseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BirthdayNoticeResponses.
     */
    data: BirthdayNoticeResponseCreateManyInput | BirthdayNoticeResponseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BirthdayNoticeResponse createManyAndReturn
   */
  export type BirthdayNoticeResponseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * The data used to create many BirthdayNoticeResponses.
     */
    data: BirthdayNoticeResponseCreateManyInput | BirthdayNoticeResponseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BirthdayNoticeResponse update
   */
  export type BirthdayNoticeResponseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * The data needed to update a BirthdayNoticeResponse.
     */
    data: XOR<BirthdayNoticeResponseUpdateInput, BirthdayNoticeResponseUncheckedUpdateInput>
    /**
     * Choose, which BirthdayNoticeResponse to update.
     */
    where: BirthdayNoticeResponseWhereUniqueInput
  }

  /**
   * BirthdayNoticeResponse updateMany
   */
  export type BirthdayNoticeResponseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BirthdayNoticeResponses.
     */
    data: XOR<BirthdayNoticeResponseUpdateManyMutationInput, BirthdayNoticeResponseUncheckedUpdateManyInput>
    /**
     * Filter which BirthdayNoticeResponses to update
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * Limit how many BirthdayNoticeResponses to update.
     */
    limit?: number
  }

  /**
   * BirthdayNoticeResponse updateManyAndReturn
   */
  export type BirthdayNoticeResponseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * The data used to update BirthdayNoticeResponses.
     */
    data: XOR<BirthdayNoticeResponseUpdateManyMutationInput, BirthdayNoticeResponseUncheckedUpdateManyInput>
    /**
     * Filter which BirthdayNoticeResponses to update
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * Limit how many BirthdayNoticeResponses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BirthdayNoticeResponse upsert
   */
  export type BirthdayNoticeResponseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * The filter to search for the BirthdayNoticeResponse to update in case it exists.
     */
    where: BirthdayNoticeResponseWhereUniqueInput
    /**
     * In case the BirthdayNoticeResponse found by the `where` argument doesn't exist, create a new BirthdayNoticeResponse with this data.
     */
    create: XOR<BirthdayNoticeResponseCreateInput, BirthdayNoticeResponseUncheckedCreateInput>
    /**
     * In case the BirthdayNoticeResponse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BirthdayNoticeResponseUpdateInput, BirthdayNoticeResponseUncheckedUpdateInput>
  }

  /**
   * BirthdayNoticeResponse delete
   */
  export type BirthdayNoticeResponseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
    /**
     * Filter which BirthdayNoticeResponse to delete.
     */
    where: BirthdayNoticeResponseWhereUniqueInput
  }

  /**
   * BirthdayNoticeResponse deleteMany
   */
  export type BirthdayNoticeResponseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BirthdayNoticeResponses to delete
     */
    where?: BirthdayNoticeResponseWhereInput
    /**
     * Limit how many BirthdayNoticeResponses to delete.
     */
    limit?: number
  }

  /**
   * BirthdayNoticeResponse.Recipient
   */
  export type BirthdayNoticeResponse$RecipientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * BirthdayNoticeResponse without action
   */
  export type BirthdayNoticeResponseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BirthdayNoticeResponse
     */
    select?: BirthdayNoticeResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BirthdayNoticeResponse
     */
    omit?: BirthdayNoticeResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BirthdayNoticeResponseInclude<ExtArgs> | null
  }


  /**
   * Model Region
   */

  export type AggregateRegion = {
    _count: RegionCountAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  export type RegionMinAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type RegionMaxAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type RegionCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type RegionMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type RegionMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type RegionCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type RegionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Region to aggregate.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Regions
    **/
    _count?: true | RegionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegionMaxAggregateInputType
  }

  export type GetRegionAggregateType<T extends RegionAggregateArgs> = {
        [P in keyof T & keyof AggregateRegion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegion[P]>
      : GetScalarType<T[P], AggregateRegion[P]>
  }




  export type RegionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegionWhereInput
    orderBy?: RegionOrderByWithAggregationInput | RegionOrderByWithAggregationInput[]
    by: RegionScalarFieldEnum[] | RegionScalarFieldEnum
    having?: RegionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegionCountAggregateInputType | true
    _min?: RegionMinAggregateInputType
    _max?: RegionMaxAggregateInputType
  }

  export type RegionGroupByOutputType = {
    id: string
    name: string
    _count: RegionCountAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  type GetRegionGroupByPayload<T extends RegionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegionGroupByOutputType[P]>
            : GetScalarType<T[P], RegionGroupByOutputType[P]>
        }
      >
    >


  export type RegionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    provices?: boolean | Region$provicesArgs<ExtArgs>
    User?: boolean | Region$UserArgs<ExtArgs>
    Line?: boolean | Region$LineArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["region"]>

  export type RegionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["region"]>

  export type RegionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["region"]>

  export type RegionSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type RegionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["region"]>
  export type RegionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provices?: boolean | Region$provicesArgs<ExtArgs>
    User?: boolean | Region$UserArgs<ExtArgs>
    Line?: boolean | Region$LineArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RegionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RegionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Region"
    objects: {
      provices: Prisma.$ProvincePayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
      Line: Prisma.$LinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
    }, ExtArgs["result"]["region"]>
    composites: {}
  }

  type RegionGetPayload<S extends boolean | null | undefined | RegionDefaultArgs> = $Result.GetResult<Prisma.$RegionPayload, S>

  type RegionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegionCountAggregateInputType | true
    }

  export interface RegionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Region'], meta: { name: 'Region' } }
    /**
     * Find zero or one Region that matches the filter.
     * @param {RegionFindUniqueArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegionFindUniqueArgs>(args: SelectSubset<T, RegionFindUniqueArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Region that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegionFindUniqueOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegionFindUniqueOrThrowArgs>(args: SelectSubset<T, RegionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Region that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegionFindFirstArgs>(args?: SelectSubset<T, RegionFindFirstArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Region that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegionFindFirstOrThrowArgs>(args?: SelectSubset<T, RegionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Regions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Regions
     * const regions = await prisma.region.findMany()
     * 
     * // Get first 10 Regions
     * const regions = await prisma.region.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const regionWithIdOnly = await prisma.region.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegionFindManyArgs>(args?: SelectSubset<T, RegionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Region.
     * @param {RegionCreateArgs} args - Arguments to create a Region.
     * @example
     * // Create one Region
     * const Region = await prisma.region.create({
     *   data: {
     *     // ... data to create a Region
     *   }
     * })
     * 
     */
    create<T extends RegionCreateArgs>(args: SelectSubset<T, RegionCreateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Regions.
     * @param {RegionCreateManyArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegionCreateManyArgs>(args?: SelectSubset<T, RegionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Regions and returns the data saved in the database.
     * @param {RegionCreateManyAndReturnArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Regions and only return the `id`
     * const regionWithIdOnly = await prisma.region.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegionCreateManyAndReturnArgs>(args?: SelectSubset<T, RegionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Region.
     * @param {RegionDeleteArgs} args - Arguments to delete one Region.
     * @example
     * // Delete one Region
     * const Region = await prisma.region.delete({
     *   where: {
     *     // ... filter to delete one Region
     *   }
     * })
     * 
     */
    delete<T extends RegionDeleteArgs>(args: SelectSubset<T, RegionDeleteArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Region.
     * @param {RegionUpdateArgs} args - Arguments to update one Region.
     * @example
     * // Update one Region
     * const region = await prisma.region.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegionUpdateArgs>(args: SelectSubset<T, RegionUpdateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Regions.
     * @param {RegionDeleteManyArgs} args - Arguments to filter Regions to delete.
     * @example
     * // Delete a few Regions
     * const { count } = await prisma.region.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegionDeleteManyArgs>(args?: SelectSubset<T, RegionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegionUpdateManyArgs>(args: SelectSubset<T, RegionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regions and returns the data updated in the database.
     * @param {RegionUpdateManyAndReturnArgs} args - Arguments to update many Regions.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Regions and only return the `id`
     * const regionWithIdOnly = await prisma.region.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegionUpdateManyAndReturnArgs>(args: SelectSubset<T, RegionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Region.
     * @param {RegionUpsertArgs} args - Arguments to update or create a Region.
     * @example
     * // Update or create a Region
     * const region = await prisma.region.upsert({
     *   create: {
     *     // ... data to create a Region
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Region we want to update
     *   }
     * })
     */
    upsert<T extends RegionUpsertArgs>(args: SelectSubset<T, RegionUpsertArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionCountArgs} args - Arguments to filter Regions to count.
     * @example
     * // Count the number of Regions
     * const count = await prisma.region.count({
     *   where: {
     *     // ... the filter for the Regions we want to count
     *   }
     * })
    **/
    count<T extends RegionCountArgs>(
      args?: Subset<T, RegionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegionAggregateArgs>(args: Subset<T, RegionAggregateArgs>): Prisma.PrismaPromise<GetRegionAggregateType<T>>

    /**
     * Group by Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegionGroupByArgs['orderBy'] }
        : { orderBy?: RegionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Region model
   */
  readonly fields: RegionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Region.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provices<T extends Region$provicesArgs<ExtArgs> = {}>(args?: Subset<T, Region$provicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Region$UserArgs<ExtArgs> = {}>(args?: Subset<T, Region$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Line<T extends Region$LineArgs<ExtArgs> = {}>(args?: Subset<T, Region$LineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Region model
   */
  interface RegionFieldRefs {
    readonly id: FieldRef<"Region", 'String'>
    readonly name: FieldRef<"Region", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Region findUnique
   */
  export type RegionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findUniqueOrThrow
   */
  export type RegionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findFirst
   */
  export type RegionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findFirstOrThrow
   */
  export type RegionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findMany
   */
  export type RegionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Regions to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region create
   */
  export type RegionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to create a Region.
     */
    data: XOR<RegionCreateInput, RegionUncheckedCreateInput>
  }

  /**
   * Region createMany
   */
  export type RegionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region createManyAndReturn
   */
  export type RegionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region update
   */
  export type RegionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to update a Region.
     */
    data: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
    /**
     * Choose, which Region to update.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region updateMany
   */
  export type RegionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Regions.
     */
    data: XOR<RegionUpdateManyMutationInput, RegionUncheckedUpdateManyInput>
    /**
     * Filter which Regions to update
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to update.
     */
    limit?: number
  }

  /**
   * Region updateManyAndReturn
   */
  export type RegionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * The data used to update Regions.
     */
    data: XOR<RegionUpdateManyMutationInput, RegionUncheckedUpdateManyInput>
    /**
     * Filter which Regions to update
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to update.
     */
    limit?: number
  }

  /**
   * Region upsert
   */
  export type RegionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The filter to search for the Region to update in case it exists.
     */
    where: RegionWhereUniqueInput
    /**
     * In case the Region found by the `where` argument doesn't exist, create a new Region with this data.
     */
    create: XOR<RegionCreateInput, RegionUncheckedCreateInput>
    /**
     * In case the Region was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
  }

  /**
   * Region delete
   */
  export type RegionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter which Region to delete.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region deleteMany
   */
  export type RegionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Regions to delete
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to delete.
     */
    limit?: number
  }

  /**
   * Region.provices
   */
  export type Region$provicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    where?: ProvinceWhereInput
    orderBy?: ProvinceOrderByWithRelationInput | ProvinceOrderByWithRelationInput[]
    cursor?: ProvinceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProvinceScalarFieldEnum | ProvinceScalarFieldEnum[]
  }

  /**
   * Region.User
   */
  export type Region$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Region.Line
   */
  export type Region$LineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    cursor?: LineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Region without action
   */
  export type RegionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
  }


  /**
   * Model Province
   */

  export type AggregateProvince = {
    _count: ProvinceCountAggregateOutputType | null
    _min: ProvinceMinAggregateOutputType | null
    _max: ProvinceMaxAggregateOutputType | null
  }

  export type ProvinceMinAggregateOutputType = {
    id: string | null
    name: string | null
    regionId: string | null
  }

  export type ProvinceMaxAggregateOutputType = {
    id: string | null
    name: string | null
    regionId: string | null
  }

  export type ProvinceCountAggregateOutputType = {
    id: number
    name: number
    regionId: number
    _all: number
  }


  export type ProvinceMinAggregateInputType = {
    id?: true
    name?: true
    regionId?: true
  }

  export type ProvinceMaxAggregateInputType = {
    id?: true
    name?: true
    regionId?: true
  }

  export type ProvinceCountAggregateInputType = {
    id?: true
    name?: true
    regionId?: true
    _all?: true
  }

  export type ProvinceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Province to aggregate.
     */
    where?: ProvinceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinces to fetch.
     */
    orderBy?: ProvinceOrderByWithRelationInput | ProvinceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProvinceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Provinces
    **/
    _count?: true | ProvinceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinceMaxAggregateInputType
  }

  export type GetProvinceAggregateType<T extends ProvinceAggregateArgs> = {
        [P in keyof T & keyof AggregateProvince]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvince[P]>
      : GetScalarType<T[P], AggregateProvince[P]>
  }




  export type ProvinceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinceWhereInput
    orderBy?: ProvinceOrderByWithAggregationInput | ProvinceOrderByWithAggregationInput[]
    by: ProvinceScalarFieldEnum[] | ProvinceScalarFieldEnum
    having?: ProvinceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinceCountAggregateInputType | true
    _min?: ProvinceMinAggregateInputType
    _max?: ProvinceMaxAggregateInputType
  }

  export type ProvinceGroupByOutputType = {
    id: string
    name: string
    regionId: string | null
    _count: ProvinceCountAggregateOutputType | null
    _min: ProvinceMinAggregateOutputType | null
    _max: ProvinceMaxAggregateOutputType | null
  }

  type GetProvinceGroupByPayload<T extends ProvinceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinceGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinceGroupByOutputType[P]>
        }
      >
    >


  export type ProvinceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    regionId?: boolean
    Region?: boolean | Province$RegionArgs<ExtArgs>
    municipals?: boolean | Province$municipalsArgs<ExtArgs>
    User?: boolean | Province$UserArgs<ExtArgs>
    Line?: boolean | Province$LineArgs<ExtArgs>
    _count?: boolean | ProvinceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["province"]>

  export type ProvinceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    regionId?: boolean
    Region?: boolean | Province$RegionArgs<ExtArgs>
  }, ExtArgs["result"]["province"]>

  export type ProvinceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    regionId?: boolean
    Region?: boolean | Province$RegionArgs<ExtArgs>
  }, ExtArgs["result"]["province"]>

  export type ProvinceSelectScalar = {
    id?: boolean
    name?: boolean
    regionId?: boolean
  }

  export type ProvinceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "regionId", ExtArgs["result"]["province"]>
  export type ProvinceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | Province$RegionArgs<ExtArgs>
    municipals?: boolean | Province$municipalsArgs<ExtArgs>
    User?: boolean | Province$UserArgs<ExtArgs>
    Line?: boolean | Province$LineArgs<ExtArgs>
    _count?: boolean | ProvinceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProvinceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | Province$RegionArgs<ExtArgs>
  }
  export type ProvinceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | Province$RegionArgs<ExtArgs>
  }

  export type $ProvincePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Province"
    objects: {
      Region: Prisma.$RegionPayload<ExtArgs> | null
      municipals: Prisma.$MunicipalPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
      Line: Prisma.$LinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      regionId: string | null
    }, ExtArgs["result"]["province"]>
    composites: {}
  }

  type ProvinceGetPayload<S extends boolean | null | undefined | ProvinceDefaultArgs> = $Result.GetResult<Prisma.$ProvincePayload, S>

  type ProvinceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProvinceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProvinceCountAggregateInputType | true
    }

  export interface ProvinceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Province'], meta: { name: 'Province' } }
    /**
     * Find zero or one Province that matches the filter.
     * @param {ProvinceFindUniqueArgs} args - Arguments to find a Province
     * @example
     * // Get one Province
     * const province = await prisma.province.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProvinceFindUniqueArgs>(args: SelectSubset<T, ProvinceFindUniqueArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Province that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProvinceFindUniqueOrThrowArgs} args - Arguments to find a Province
     * @example
     * // Get one Province
     * const province = await prisma.province.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProvinceFindUniqueOrThrowArgs>(args: SelectSubset<T, ProvinceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Province that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceFindFirstArgs} args - Arguments to find a Province
     * @example
     * // Get one Province
     * const province = await prisma.province.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProvinceFindFirstArgs>(args?: SelectSubset<T, ProvinceFindFirstArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Province that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceFindFirstOrThrowArgs} args - Arguments to find a Province
     * @example
     * // Get one Province
     * const province = await prisma.province.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProvinceFindFirstOrThrowArgs>(args?: SelectSubset<T, ProvinceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provinces that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provinces
     * const provinces = await prisma.province.findMany()
     * 
     * // Get first 10 Provinces
     * const provinces = await prisma.province.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provinceWithIdOnly = await prisma.province.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProvinceFindManyArgs>(args?: SelectSubset<T, ProvinceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Province.
     * @param {ProvinceCreateArgs} args - Arguments to create a Province.
     * @example
     * // Create one Province
     * const Province = await prisma.province.create({
     *   data: {
     *     // ... data to create a Province
     *   }
     * })
     * 
     */
    create<T extends ProvinceCreateArgs>(args: SelectSubset<T, ProvinceCreateArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provinces.
     * @param {ProvinceCreateManyArgs} args - Arguments to create many Provinces.
     * @example
     * // Create many Provinces
     * const province = await prisma.province.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProvinceCreateManyArgs>(args?: SelectSubset<T, ProvinceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provinces and returns the data saved in the database.
     * @param {ProvinceCreateManyAndReturnArgs} args - Arguments to create many Provinces.
     * @example
     * // Create many Provinces
     * const province = await prisma.province.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provinces and only return the `id`
     * const provinceWithIdOnly = await prisma.province.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProvinceCreateManyAndReturnArgs>(args?: SelectSubset<T, ProvinceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Province.
     * @param {ProvinceDeleteArgs} args - Arguments to delete one Province.
     * @example
     * // Delete one Province
     * const Province = await prisma.province.delete({
     *   where: {
     *     // ... filter to delete one Province
     *   }
     * })
     * 
     */
    delete<T extends ProvinceDeleteArgs>(args: SelectSubset<T, ProvinceDeleteArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Province.
     * @param {ProvinceUpdateArgs} args - Arguments to update one Province.
     * @example
     * // Update one Province
     * const province = await prisma.province.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProvinceUpdateArgs>(args: SelectSubset<T, ProvinceUpdateArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provinces.
     * @param {ProvinceDeleteManyArgs} args - Arguments to filter Provinces to delete.
     * @example
     * // Delete a few Provinces
     * const { count } = await prisma.province.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProvinceDeleteManyArgs>(args?: SelectSubset<T, ProvinceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provinces
     * const province = await prisma.province.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProvinceUpdateManyArgs>(args: SelectSubset<T, ProvinceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinces and returns the data updated in the database.
     * @param {ProvinceUpdateManyAndReturnArgs} args - Arguments to update many Provinces.
     * @example
     * // Update many Provinces
     * const province = await prisma.province.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provinces and only return the `id`
     * const provinceWithIdOnly = await prisma.province.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProvinceUpdateManyAndReturnArgs>(args: SelectSubset<T, ProvinceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Province.
     * @param {ProvinceUpsertArgs} args - Arguments to update or create a Province.
     * @example
     * // Update or create a Province
     * const province = await prisma.province.upsert({
     *   create: {
     *     // ... data to create a Province
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Province we want to update
     *   }
     * })
     */
    upsert<T extends ProvinceUpsertArgs>(args: SelectSubset<T, ProvinceUpsertArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provinces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceCountArgs} args - Arguments to filter Provinces to count.
     * @example
     * // Count the number of Provinces
     * const count = await prisma.province.count({
     *   where: {
     *     // ... the filter for the Provinces we want to count
     *   }
     * })
    **/
    count<T extends ProvinceCountArgs>(
      args?: Subset<T, ProvinceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Province.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinceAggregateArgs>(args: Subset<T, ProvinceAggregateArgs>): Prisma.PrismaPromise<GetProvinceAggregateType<T>>

    /**
     * Group by Province.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProvinceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProvinceGroupByArgs['orderBy'] }
        : { orderBy?: ProvinceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProvinceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Province model
   */
  readonly fields: ProvinceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Province.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProvinceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Region<T extends Province$RegionArgs<ExtArgs> = {}>(args?: Subset<T, Province$RegionArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    municipals<T extends Province$municipalsArgs<ExtArgs> = {}>(args?: Subset<T, Province$municipalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Province$UserArgs<ExtArgs> = {}>(args?: Subset<T, Province$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Line<T extends Province$LineArgs<ExtArgs> = {}>(args?: Subset<T, Province$LineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Province model
   */
  interface ProvinceFieldRefs {
    readonly id: FieldRef<"Province", 'String'>
    readonly name: FieldRef<"Province", 'String'>
    readonly regionId: FieldRef<"Province", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Province findUnique
   */
  export type ProvinceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter, which Province to fetch.
     */
    where: ProvinceWhereUniqueInput
  }

  /**
   * Province findUniqueOrThrow
   */
  export type ProvinceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter, which Province to fetch.
     */
    where: ProvinceWhereUniqueInput
  }

  /**
   * Province findFirst
   */
  export type ProvinceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter, which Province to fetch.
     */
    where?: ProvinceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinces to fetch.
     */
    orderBy?: ProvinceOrderByWithRelationInput | ProvinceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinces.
     */
    cursor?: ProvinceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinces.
     */
    distinct?: ProvinceScalarFieldEnum | ProvinceScalarFieldEnum[]
  }

  /**
   * Province findFirstOrThrow
   */
  export type ProvinceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter, which Province to fetch.
     */
    where?: ProvinceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinces to fetch.
     */
    orderBy?: ProvinceOrderByWithRelationInput | ProvinceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinces.
     */
    cursor?: ProvinceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinces.
     */
    distinct?: ProvinceScalarFieldEnum | ProvinceScalarFieldEnum[]
  }

  /**
   * Province findMany
   */
  export type ProvinceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter, which Provinces to fetch.
     */
    where?: ProvinceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinces to fetch.
     */
    orderBy?: ProvinceOrderByWithRelationInput | ProvinceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Provinces.
     */
    cursor?: ProvinceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinces.
     */
    skip?: number
    distinct?: ProvinceScalarFieldEnum | ProvinceScalarFieldEnum[]
  }

  /**
   * Province create
   */
  export type ProvinceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * The data needed to create a Province.
     */
    data: XOR<ProvinceCreateInput, ProvinceUncheckedCreateInput>
  }

  /**
   * Province createMany
   */
  export type ProvinceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Provinces.
     */
    data: ProvinceCreateManyInput | ProvinceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Province createManyAndReturn
   */
  export type ProvinceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * The data used to create many Provinces.
     */
    data: ProvinceCreateManyInput | ProvinceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Province update
   */
  export type ProvinceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * The data needed to update a Province.
     */
    data: XOR<ProvinceUpdateInput, ProvinceUncheckedUpdateInput>
    /**
     * Choose, which Province to update.
     */
    where: ProvinceWhereUniqueInput
  }

  /**
   * Province updateMany
   */
  export type ProvinceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Provinces.
     */
    data: XOR<ProvinceUpdateManyMutationInput, ProvinceUncheckedUpdateManyInput>
    /**
     * Filter which Provinces to update
     */
    where?: ProvinceWhereInput
    /**
     * Limit how many Provinces to update.
     */
    limit?: number
  }

  /**
   * Province updateManyAndReturn
   */
  export type ProvinceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * The data used to update Provinces.
     */
    data: XOR<ProvinceUpdateManyMutationInput, ProvinceUncheckedUpdateManyInput>
    /**
     * Filter which Provinces to update
     */
    where?: ProvinceWhereInput
    /**
     * Limit how many Provinces to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Province upsert
   */
  export type ProvinceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * The filter to search for the Province to update in case it exists.
     */
    where: ProvinceWhereUniqueInput
    /**
     * In case the Province found by the `where` argument doesn't exist, create a new Province with this data.
     */
    create: XOR<ProvinceCreateInput, ProvinceUncheckedCreateInput>
    /**
     * In case the Province was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProvinceUpdateInput, ProvinceUncheckedUpdateInput>
  }

  /**
   * Province delete
   */
  export type ProvinceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    /**
     * Filter which Province to delete.
     */
    where: ProvinceWhereUniqueInput
  }

  /**
   * Province deleteMany
   */
  export type ProvinceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provinces to delete
     */
    where?: ProvinceWhereInput
    /**
     * Limit how many Provinces to delete.
     */
    limit?: number
  }

  /**
   * Province.Region
   */
  export type Province$RegionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    where?: RegionWhereInput
  }

  /**
   * Province.municipals
   */
  export type Province$municipalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    where?: MunicipalWhereInput
    orderBy?: MunicipalOrderByWithRelationInput | MunicipalOrderByWithRelationInput[]
    cursor?: MunicipalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MunicipalScalarFieldEnum | MunicipalScalarFieldEnum[]
  }

  /**
   * Province.User
   */
  export type Province$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Province.Line
   */
  export type Province$LineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    cursor?: LineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Province without action
   */
  export type ProvinceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
  }


  /**
   * Model Municipal
   */

  export type AggregateMunicipal = {
    _count: MunicipalCountAggregateOutputType | null
    _min: MunicipalMinAggregateOutputType | null
    _max: MunicipalMaxAggregateOutputType | null
  }

  export type MunicipalMinAggregateOutputType = {
    id: string | null
    name: string | null
    provinceId: string | null
  }

  export type MunicipalMaxAggregateOutputType = {
    id: string | null
    name: string | null
    provinceId: string | null
  }

  export type MunicipalCountAggregateOutputType = {
    id: number
    name: number
    provinceId: number
    _all: number
  }


  export type MunicipalMinAggregateInputType = {
    id?: true
    name?: true
    provinceId?: true
  }

  export type MunicipalMaxAggregateInputType = {
    id?: true
    name?: true
    provinceId?: true
  }

  export type MunicipalCountAggregateInputType = {
    id?: true
    name?: true
    provinceId?: true
    _all?: true
  }

  export type MunicipalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipal to aggregate.
     */
    where?: MunicipalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipals to fetch.
     */
    orderBy?: MunicipalOrderByWithRelationInput | MunicipalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MunicipalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Municipals
    **/
    _count?: true | MunicipalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MunicipalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MunicipalMaxAggregateInputType
  }

  export type GetMunicipalAggregateType<T extends MunicipalAggregateArgs> = {
        [P in keyof T & keyof AggregateMunicipal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMunicipal[P]>
      : GetScalarType<T[P], AggregateMunicipal[P]>
  }




  export type MunicipalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipalWhereInput
    orderBy?: MunicipalOrderByWithAggregationInput | MunicipalOrderByWithAggregationInput[]
    by: MunicipalScalarFieldEnum[] | MunicipalScalarFieldEnum
    having?: MunicipalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MunicipalCountAggregateInputType | true
    _min?: MunicipalMinAggregateInputType
    _max?: MunicipalMaxAggregateInputType
  }

  export type MunicipalGroupByOutputType = {
    id: string
    name: string
    provinceId: string | null
    _count: MunicipalCountAggregateOutputType | null
    _min: MunicipalMinAggregateOutputType | null
    _max: MunicipalMaxAggregateOutputType | null
  }

  type GetMunicipalGroupByPayload<T extends MunicipalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MunicipalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MunicipalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MunicipalGroupByOutputType[P]>
            : GetScalarType<T[P], MunicipalGroupByOutputType[P]>
        }
      >
    >


  export type MunicipalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    provinceId?: boolean
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
    barangays?: boolean | Municipal$barangaysArgs<ExtArgs>
    User?: boolean | Municipal$UserArgs<ExtArgs>
    Line?: boolean | Municipal$LineArgs<ExtArgs>
    _count?: boolean | MunicipalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipal"]>

  export type MunicipalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    provinceId?: boolean
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
  }, ExtArgs["result"]["municipal"]>

  export type MunicipalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    provinceId?: boolean
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
  }, ExtArgs["result"]["municipal"]>

  export type MunicipalSelectScalar = {
    id?: boolean
    name?: boolean
    provinceId?: boolean
  }

  export type MunicipalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "provinceId", ExtArgs["result"]["municipal"]>
  export type MunicipalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
    barangays?: boolean | Municipal$barangaysArgs<ExtArgs>
    User?: boolean | Municipal$UserArgs<ExtArgs>
    Line?: boolean | Municipal$LineArgs<ExtArgs>
    _count?: boolean | MunicipalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MunicipalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
  }
  export type MunicipalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Province?: boolean | Municipal$ProvinceArgs<ExtArgs>
  }

  export type $MunicipalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Municipal"
    objects: {
      Province: Prisma.$ProvincePayload<ExtArgs> | null
      barangays: Prisma.$BarangayPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
      Line: Prisma.$LinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      provinceId: string | null
    }, ExtArgs["result"]["municipal"]>
    composites: {}
  }

  type MunicipalGetPayload<S extends boolean | null | undefined | MunicipalDefaultArgs> = $Result.GetResult<Prisma.$MunicipalPayload, S>

  type MunicipalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MunicipalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MunicipalCountAggregateInputType | true
    }

  export interface MunicipalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Municipal'], meta: { name: 'Municipal' } }
    /**
     * Find zero or one Municipal that matches the filter.
     * @param {MunicipalFindUniqueArgs} args - Arguments to find a Municipal
     * @example
     * // Get one Municipal
     * const municipal = await prisma.municipal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MunicipalFindUniqueArgs>(args: SelectSubset<T, MunicipalFindUniqueArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Municipal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MunicipalFindUniqueOrThrowArgs} args - Arguments to find a Municipal
     * @example
     * // Get one Municipal
     * const municipal = await prisma.municipal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MunicipalFindUniqueOrThrowArgs>(args: SelectSubset<T, MunicipalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Municipal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalFindFirstArgs} args - Arguments to find a Municipal
     * @example
     * // Get one Municipal
     * const municipal = await prisma.municipal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MunicipalFindFirstArgs>(args?: SelectSubset<T, MunicipalFindFirstArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Municipal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalFindFirstOrThrowArgs} args - Arguments to find a Municipal
     * @example
     * // Get one Municipal
     * const municipal = await prisma.municipal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MunicipalFindFirstOrThrowArgs>(args?: SelectSubset<T, MunicipalFindFirstOrThrowArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Municipals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Municipals
     * const municipals = await prisma.municipal.findMany()
     * 
     * // Get first 10 Municipals
     * const municipals = await prisma.municipal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const municipalWithIdOnly = await prisma.municipal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MunicipalFindManyArgs>(args?: SelectSubset<T, MunicipalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Municipal.
     * @param {MunicipalCreateArgs} args - Arguments to create a Municipal.
     * @example
     * // Create one Municipal
     * const Municipal = await prisma.municipal.create({
     *   data: {
     *     // ... data to create a Municipal
     *   }
     * })
     * 
     */
    create<T extends MunicipalCreateArgs>(args: SelectSubset<T, MunicipalCreateArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Municipals.
     * @param {MunicipalCreateManyArgs} args - Arguments to create many Municipals.
     * @example
     * // Create many Municipals
     * const municipal = await prisma.municipal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MunicipalCreateManyArgs>(args?: SelectSubset<T, MunicipalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Municipals and returns the data saved in the database.
     * @param {MunicipalCreateManyAndReturnArgs} args - Arguments to create many Municipals.
     * @example
     * // Create many Municipals
     * const municipal = await prisma.municipal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Municipals and only return the `id`
     * const municipalWithIdOnly = await prisma.municipal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MunicipalCreateManyAndReturnArgs>(args?: SelectSubset<T, MunicipalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Municipal.
     * @param {MunicipalDeleteArgs} args - Arguments to delete one Municipal.
     * @example
     * // Delete one Municipal
     * const Municipal = await prisma.municipal.delete({
     *   where: {
     *     // ... filter to delete one Municipal
     *   }
     * })
     * 
     */
    delete<T extends MunicipalDeleteArgs>(args: SelectSubset<T, MunicipalDeleteArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Municipal.
     * @param {MunicipalUpdateArgs} args - Arguments to update one Municipal.
     * @example
     * // Update one Municipal
     * const municipal = await prisma.municipal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MunicipalUpdateArgs>(args: SelectSubset<T, MunicipalUpdateArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Municipals.
     * @param {MunicipalDeleteManyArgs} args - Arguments to filter Municipals to delete.
     * @example
     * // Delete a few Municipals
     * const { count } = await prisma.municipal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MunicipalDeleteManyArgs>(args?: SelectSubset<T, MunicipalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Municipals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Municipals
     * const municipal = await prisma.municipal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MunicipalUpdateManyArgs>(args: SelectSubset<T, MunicipalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Municipals and returns the data updated in the database.
     * @param {MunicipalUpdateManyAndReturnArgs} args - Arguments to update many Municipals.
     * @example
     * // Update many Municipals
     * const municipal = await prisma.municipal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Municipals and only return the `id`
     * const municipalWithIdOnly = await prisma.municipal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MunicipalUpdateManyAndReturnArgs>(args: SelectSubset<T, MunicipalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Municipal.
     * @param {MunicipalUpsertArgs} args - Arguments to update or create a Municipal.
     * @example
     * // Update or create a Municipal
     * const municipal = await prisma.municipal.upsert({
     *   create: {
     *     // ... data to create a Municipal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Municipal we want to update
     *   }
     * })
     */
    upsert<T extends MunicipalUpsertArgs>(args: SelectSubset<T, MunicipalUpsertArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Municipals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalCountArgs} args - Arguments to filter Municipals to count.
     * @example
     * // Count the number of Municipals
     * const count = await prisma.municipal.count({
     *   where: {
     *     // ... the filter for the Municipals we want to count
     *   }
     * })
    **/
    count<T extends MunicipalCountArgs>(
      args?: Subset<T, MunicipalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MunicipalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Municipal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MunicipalAggregateArgs>(args: Subset<T, MunicipalAggregateArgs>): Prisma.PrismaPromise<GetMunicipalAggregateType<T>>

    /**
     * Group by Municipal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MunicipalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MunicipalGroupByArgs['orderBy'] }
        : { orderBy?: MunicipalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MunicipalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMunicipalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Municipal model
   */
  readonly fields: MunicipalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Municipal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MunicipalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Province<T extends Municipal$ProvinceArgs<ExtArgs> = {}>(args?: Subset<T, Municipal$ProvinceArgs<ExtArgs>>): Prisma__ProvinceClient<$Result.GetResult<Prisma.$ProvincePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    barangays<T extends Municipal$barangaysArgs<ExtArgs> = {}>(args?: Subset<T, Municipal$barangaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Municipal$UserArgs<ExtArgs> = {}>(args?: Subset<T, Municipal$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Line<T extends Municipal$LineArgs<ExtArgs> = {}>(args?: Subset<T, Municipal$LineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Municipal model
   */
  interface MunicipalFieldRefs {
    readonly id: FieldRef<"Municipal", 'String'>
    readonly name: FieldRef<"Municipal", 'String'>
    readonly provinceId: FieldRef<"Municipal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Municipal findUnique
   */
  export type MunicipalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter, which Municipal to fetch.
     */
    where: MunicipalWhereUniqueInput
  }

  /**
   * Municipal findUniqueOrThrow
   */
  export type MunicipalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter, which Municipal to fetch.
     */
    where: MunicipalWhereUniqueInput
  }

  /**
   * Municipal findFirst
   */
  export type MunicipalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter, which Municipal to fetch.
     */
    where?: MunicipalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipals to fetch.
     */
    orderBy?: MunicipalOrderByWithRelationInput | MunicipalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipals.
     */
    cursor?: MunicipalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipals.
     */
    distinct?: MunicipalScalarFieldEnum | MunicipalScalarFieldEnum[]
  }

  /**
   * Municipal findFirstOrThrow
   */
  export type MunicipalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter, which Municipal to fetch.
     */
    where?: MunicipalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipals to fetch.
     */
    orderBy?: MunicipalOrderByWithRelationInput | MunicipalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipals.
     */
    cursor?: MunicipalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipals.
     */
    distinct?: MunicipalScalarFieldEnum | MunicipalScalarFieldEnum[]
  }

  /**
   * Municipal findMany
   */
  export type MunicipalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter, which Municipals to fetch.
     */
    where?: MunicipalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipals to fetch.
     */
    orderBy?: MunicipalOrderByWithRelationInput | MunicipalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Municipals.
     */
    cursor?: MunicipalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipals.
     */
    skip?: number
    distinct?: MunicipalScalarFieldEnum | MunicipalScalarFieldEnum[]
  }

  /**
   * Municipal create
   */
  export type MunicipalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * The data needed to create a Municipal.
     */
    data: XOR<MunicipalCreateInput, MunicipalUncheckedCreateInput>
  }

  /**
   * Municipal createMany
   */
  export type MunicipalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Municipals.
     */
    data: MunicipalCreateManyInput | MunicipalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Municipal createManyAndReturn
   */
  export type MunicipalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * The data used to create many Municipals.
     */
    data: MunicipalCreateManyInput | MunicipalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Municipal update
   */
  export type MunicipalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * The data needed to update a Municipal.
     */
    data: XOR<MunicipalUpdateInput, MunicipalUncheckedUpdateInput>
    /**
     * Choose, which Municipal to update.
     */
    where: MunicipalWhereUniqueInput
  }

  /**
   * Municipal updateMany
   */
  export type MunicipalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Municipals.
     */
    data: XOR<MunicipalUpdateManyMutationInput, MunicipalUncheckedUpdateManyInput>
    /**
     * Filter which Municipals to update
     */
    where?: MunicipalWhereInput
    /**
     * Limit how many Municipals to update.
     */
    limit?: number
  }

  /**
   * Municipal updateManyAndReturn
   */
  export type MunicipalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * The data used to update Municipals.
     */
    data: XOR<MunicipalUpdateManyMutationInput, MunicipalUncheckedUpdateManyInput>
    /**
     * Filter which Municipals to update
     */
    where?: MunicipalWhereInput
    /**
     * Limit how many Municipals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Municipal upsert
   */
  export type MunicipalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * The filter to search for the Municipal to update in case it exists.
     */
    where: MunicipalWhereUniqueInput
    /**
     * In case the Municipal found by the `where` argument doesn't exist, create a new Municipal with this data.
     */
    create: XOR<MunicipalCreateInput, MunicipalUncheckedCreateInput>
    /**
     * In case the Municipal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MunicipalUpdateInput, MunicipalUncheckedUpdateInput>
  }

  /**
   * Municipal delete
   */
  export type MunicipalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    /**
     * Filter which Municipal to delete.
     */
    where: MunicipalWhereUniqueInput
  }

  /**
   * Municipal deleteMany
   */
  export type MunicipalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipals to delete
     */
    where?: MunicipalWhereInput
    /**
     * Limit how many Municipals to delete.
     */
    limit?: number
  }

  /**
   * Municipal.Province
   */
  export type Municipal$ProvinceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Province
     */
    select?: ProvinceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Province
     */
    omit?: ProvinceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinceInclude<ExtArgs> | null
    where?: ProvinceWhereInput
  }

  /**
   * Municipal.barangays
   */
  export type Municipal$barangaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    where?: BarangayWhereInput
    orderBy?: BarangayOrderByWithRelationInput | BarangayOrderByWithRelationInput[]
    cursor?: BarangayWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BarangayScalarFieldEnum | BarangayScalarFieldEnum[]
  }

  /**
   * Municipal.User
   */
  export type Municipal$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Municipal.Line
   */
  export type Municipal$LineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    cursor?: LineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Municipal without action
   */
  export type MunicipalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
  }


  /**
   * Model Barangay
   */

  export type AggregateBarangay = {
    _count: BarangayCountAggregateOutputType | null
    _min: BarangayMinAggregateOutputType | null
    _max: BarangayMaxAggregateOutputType | null
  }

  export type BarangayMinAggregateOutputType = {
    id: string | null
    name: string | null
    municipalId: string | null
  }

  export type BarangayMaxAggregateOutputType = {
    id: string | null
    name: string | null
    municipalId: string | null
  }

  export type BarangayCountAggregateOutputType = {
    id: number
    name: number
    municipalId: number
    _all: number
  }


  export type BarangayMinAggregateInputType = {
    id?: true
    name?: true
    municipalId?: true
  }

  export type BarangayMaxAggregateInputType = {
    id?: true
    name?: true
    municipalId?: true
  }

  export type BarangayCountAggregateInputType = {
    id?: true
    name?: true
    municipalId?: true
    _all?: true
  }

  export type BarangayAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Barangay to aggregate.
     */
    where?: BarangayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Barangays to fetch.
     */
    orderBy?: BarangayOrderByWithRelationInput | BarangayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BarangayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Barangays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Barangays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Barangays
    **/
    _count?: true | BarangayCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BarangayMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BarangayMaxAggregateInputType
  }

  export type GetBarangayAggregateType<T extends BarangayAggregateArgs> = {
        [P in keyof T & keyof AggregateBarangay]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBarangay[P]>
      : GetScalarType<T[P], AggregateBarangay[P]>
  }




  export type BarangayGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BarangayWhereInput
    orderBy?: BarangayOrderByWithAggregationInput | BarangayOrderByWithAggregationInput[]
    by: BarangayScalarFieldEnum[] | BarangayScalarFieldEnum
    having?: BarangayScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BarangayCountAggregateInputType | true
    _min?: BarangayMinAggregateInputType
    _max?: BarangayMaxAggregateInputType
  }

  export type BarangayGroupByOutputType = {
    id: string
    name: string
    municipalId: string | null
    _count: BarangayCountAggregateOutputType | null
    _min: BarangayMinAggregateOutputType | null
    _max: BarangayMaxAggregateOutputType | null
  }

  type GetBarangayGroupByPayload<T extends BarangayGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BarangayGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BarangayGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BarangayGroupByOutputType[P]>
            : GetScalarType<T[P], BarangayGroupByOutputType[P]>
        }
      >
    >


  export type BarangaySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    municipalId?: boolean
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
    User?: boolean | Barangay$UserArgs<ExtArgs>
    Line?: boolean | Barangay$LineArgs<ExtArgs>
    _count?: boolean | BarangayCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["barangay"]>

  export type BarangaySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    municipalId?: boolean
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
  }, ExtArgs["result"]["barangay"]>

  export type BarangaySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    municipalId?: boolean
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
  }, ExtArgs["result"]["barangay"]>

  export type BarangaySelectScalar = {
    id?: boolean
    name?: boolean
    municipalId?: boolean
  }

  export type BarangayOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "municipalId", ExtArgs["result"]["barangay"]>
  export type BarangayInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
    User?: boolean | Barangay$UserArgs<ExtArgs>
    Line?: boolean | Barangay$LineArgs<ExtArgs>
    _count?: boolean | BarangayCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BarangayIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
  }
  export type BarangayIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Municipal?: boolean | Barangay$MunicipalArgs<ExtArgs>
  }

  export type $BarangayPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Barangay"
    objects: {
      Municipal: Prisma.$MunicipalPayload<ExtArgs> | null
      User: Prisma.$UserPayload<ExtArgs>[]
      Line: Prisma.$LinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      municipalId: string | null
    }, ExtArgs["result"]["barangay"]>
    composites: {}
  }

  type BarangayGetPayload<S extends boolean | null | undefined | BarangayDefaultArgs> = $Result.GetResult<Prisma.$BarangayPayload, S>

  type BarangayCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BarangayFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BarangayCountAggregateInputType | true
    }

  export interface BarangayDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Barangay'], meta: { name: 'Barangay' } }
    /**
     * Find zero or one Barangay that matches the filter.
     * @param {BarangayFindUniqueArgs} args - Arguments to find a Barangay
     * @example
     * // Get one Barangay
     * const barangay = await prisma.barangay.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BarangayFindUniqueArgs>(args: SelectSubset<T, BarangayFindUniqueArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Barangay that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BarangayFindUniqueOrThrowArgs} args - Arguments to find a Barangay
     * @example
     * // Get one Barangay
     * const barangay = await prisma.barangay.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BarangayFindUniqueOrThrowArgs>(args: SelectSubset<T, BarangayFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Barangay that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayFindFirstArgs} args - Arguments to find a Barangay
     * @example
     * // Get one Barangay
     * const barangay = await prisma.barangay.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BarangayFindFirstArgs>(args?: SelectSubset<T, BarangayFindFirstArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Barangay that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayFindFirstOrThrowArgs} args - Arguments to find a Barangay
     * @example
     * // Get one Barangay
     * const barangay = await prisma.barangay.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BarangayFindFirstOrThrowArgs>(args?: SelectSubset<T, BarangayFindFirstOrThrowArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Barangays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Barangays
     * const barangays = await prisma.barangay.findMany()
     * 
     * // Get first 10 Barangays
     * const barangays = await prisma.barangay.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const barangayWithIdOnly = await prisma.barangay.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BarangayFindManyArgs>(args?: SelectSubset<T, BarangayFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Barangay.
     * @param {BarangayCreateArgs} args - Arguments to create a Barangay.
     * @example
     * // Create one Barangay
     * const Barangay = await prisma.barangay.create({
     *   data: {
     *     // ... data to create a Barangay
     *   }
     * })
     * 
     */
    create<T extends BarangayCreateArgs>(args: SelectSubset<T, BarangayCreateArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Barangays.
     * @param {BarangayCreateManyArgs} args - Arguments to create many Barangays.
     * @example
     * // Create many Barangays
     * const barangay = await prisma.barangay.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BarangayCreateManyArgs>(args?: SelectSubset<T, BarangayCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Barangays and returns the data saved in the database.
     * @param {BarangayCreateManyAndReturnArgs} args - Arguments to create many Barangays.
     * @example
     * // Create many Barangays
     * const barangay = await prisma.barangay.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Barangays and only return the `id`
     * const barangayWithIdOnly = await prisma.barangay.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BarangayCreateManyAndReturnArgs>(args?: SelectSubset<T, BarangayCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Barangay.
     * @param {BarangayDeleteArgs} args - Arguments to delete one Barangay.
     * @example
     * // Delete one Barangay
     * const Barangay = await prisma.barangay.delete({
     *   where: {
     *     // ... filter to delete one Barangay
     *   }
     * })
     * 
     */
    delete<T extends BarangayDeleteArgs>(args: SelectSubset<T, BarangayDeleteArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Barangay.
     * @param {BarangayUpdateArgs} args - Arguments to update one Barangay.
     * @example
     * // Update one Barangay
     * const barangay = await prisma.barangay.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BarangayUpdateArgs>(args: SelectSubset<T, BarangayUpdateArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Barangays.
     * @param {BarangayDeleteManyArgs} args - Arguments to filter Barangays to delete.
     * @example
     * // Delete a few Barangays
     * const { count } = await prisma.barangay.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BarangayDeleteManyArgs>(args?: SelectSubset<T, BarangayDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Barangays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Barangays
     * const barangay = await prisma.barangay.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BarangayUpdateManyArgs>(args: SelectSubset<T, BarangayUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Barangays and returns the data updated in the database.
     * @param {BarangayUpdateManyAndReturnArgs} args - Arguments to update many Barangays.
     * @example
     * // Update many Barangays
     * const barangay = await prisma.barangay.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Barangays and only return the `id`
     * const barangayWithIdOnly = await prisma.barangay.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BarangayUpdateManyAndReturnArgs>(args: SelectSubset<T, BarangayUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Barangay.
     * @param {BarangayUpsertArgs} args - Arguments to update or create a Barangay.
     * @example
     * // Update or create a Barangay
     * const barangay = await prisma.barangay.upsert({
     *   create: {
     *     // ... data to create a Barangay
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Barangay we want to update
     *   }
     * })
     */
    upsert<T extends BarangayUpsertArgs>(args: SelectSubset<T, BarangayUpsertArgs<ExtArgs>>): Prisma__BarangayClient<$Result.GetResult<Prisma.$BarangayPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Barangays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayCountArgs} args - Arguments to filter Barangays to count.
     * @example
     * // Count the number of Barangays
     * const count = await prisma.barangay.count({
     *   where: {
     *     // ... the filter for the Barangays we want to count
     *   }
     * })
    **/
    count<T extends BarangayCountArgs>(
      args?: Subset<T, BarangayCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BarangayCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Barangay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BarangayAggregateArgs>(args: Subset<T, BarangayAggregateArgs>): Prisma.PrismaPromise<GetBarangayAggregateType<T>>

    /**
     * Group by Barangay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarangayGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BarangayGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BarangayGroupByArgs['orderBy'] }
        : { orderBy?: BarangayGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BarangayGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBarangayGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Barangay model
   */
  readonly fields: BarangayFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Barangay.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BarangayClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Municipal<T extends Barangay$MunicipalArgs<ExtArgs> = {}>(args?: Subset<T, Barangay$MunicipalArgs<ExtArgs>>): Prisma__MunicipalClient<$Result.GetResult<Prisma.$MunicipalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User<T extends Barangay$UserArgs<ExtArgs> = {}>(args?: Subset<T, Barangay$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Line<T extends Barangay$LineArgs<ExtArgs> = {}>(args?: Subset<T, Barangay$LineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Barangay model
   */
  interface BarangayFieldRefs {
    readonly id: FieldRef<"Barangay", 'String'>
    readonly name: FieldRef<"Barangay", 'String'>
    readonly municipalId: FieldRef<"Barangay", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Barangay findUnique
   */
  export type BarangayFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter, which Barangay to fetch.
     */
    where: BarangayWhereUniqueInput
  }

  /**
   * Barangay findUniqueOrThrow
   */
  export type BarangayFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter, which Barangay to fetch.
     */
    where: BarangayWhereUniqueInput
  }

  /**
   * Barangay findFirst
   */
  export type BarangayFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter, which Barangay to fetch.
     */
    where?: BarangayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Barangays to fetch.
     */
    orderBy?: BarangayOrderByWithRelationInput | BarangayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Barangays.
     */
    cursor?: BarangayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Barangays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Barangays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Barangays.
     */
    distinct?: BarangayScalarFieldEnum | BarangayScalarFieldEnum[]
  }

  /**
   * Barangay findFirstOrThrow
   */
  export type BarangayFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter, which Barangay to fetch.
     */
    where?: BarangayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Barangays to fetch.
     */
    orderBy?: BarangayOrderByWithRelationInput | BarangayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Barangays.
     */
    cursor?: BarangayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Barangays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Barangays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Barangays.
     */
    distinct?: BarangayScalarFieldEnum | BarangayScalarFieldEnum[]
  }

  /**
   * Barangay findMany
   */
  export type BarangayFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter, which Barangays to fetch.
     */
    where?: BarangayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Barangays to fetch.
     */
    orderBy?: BarangayOrderByWithRelationInput | BarangayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Barangays.
     */
    cursor?: BarangayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Barangays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Barangays.
     */
    skip?: number
    distinct?: BarangayScalarFieldEnum | BarangayScalarFieldEnum[]
  }

  /**
   * Barangay create
   */
  export type BarangayCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * The data needed to create a Barangay.
     */
    data: XOR<BarangayCreateInput, BarangayUncheckedCreateInput>
  }

  /**
   * Barangay createMany
   */
  export type BarangayCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Barangays.
     */
    data: BarangayCreateManyInput | BarangayCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Barangay createManyAndReturn
   */
  export type BarangayCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * The data used to create many Barangays.
     */
    data: BarangayCreateManyInput | BarangayCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Barangay update
   */
  export type BarangayUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * The data needed to update a Barangay.
     */
    data: XOR<BarangayUpdateInput, BarangayUncheckedUpdateInput>
    /**
     * Choose, which Barangay to update.
     */
    where: BarangayWhereUniqueInput
  }

  /**
   * Barangay updateMany
   */
  export type BarangayUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Barangays.
     */
    data: XOR<BarangayUpdateManyMutationInput, BarangayUncheckedUpdateManyInput>
    /**
     * Filter which Barangays to update
     */
    where?: BarangayWhereInput
    /**
     * Limit how many Barangays to update.
     */
    limit?: number
  }

  /**
   * Barangay updateManyAndReturn
   */
  export type BarangayUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * The data used to update Barangays.
     */
    data: XOR<BarangayUpdateManyMutationInput, BarangayUncheckedUpdateManyInput>
    /**
     * Filter which Barangays to update
     */
    where?: BarangayWhereInput
    /**
     * Limit how many Barangays to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Barangay upsert
   */
  export type BarangayUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * The filter to search for the Barangay to update in case it exists.
     */
    where: BarangayWhereUniqueInput
    /**
     * In case the Barangay found by the `where` argument doesn't exist, create a new Barangay with this data.
     */
    create: XOR<BarangayCreateInput, BarangayUncheckedCreateInput>
    /**
     * In case the Barangay was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BarangayUpdateInput, BarangayUncheckedUpdateInput>
  }

  /**
   * Barangay delete
   */
  export type BarangayDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
    /**
     * Filter which Barangay to delete.
     */
    where: BarangayWhereUniqueInput
  }

  /**
   * Barangay deleteMany
   */
  export type BarangayDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Barangays to delete
     */
    where?: BarangayWhereInput
    /**
     * Limit how many Barangays to delete.
     */
    limit?: number
  }

  /**
   * Barangay.Municipal
   */
  export type Barangay$MunicipalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipal
     */
    select?: MunicipalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Municipal
     */
    omit?: MunicipalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalInclude<ExtArgs> | null
    where?: MunicipalWhereInput
  }

  /**
   * Barangay.User
   */
  export type Barangay$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Barangay.Line
   */
  export type Barangay$LineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Line
     */
    select?: LineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Line
     */
    omit?: LineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LineInclude<ExtArgs> | null
    where?: LineWhereInput
    orderBy?: LineOrderByWithRelationInput | LineOrderByWithRelationInput[]
    cursor?: LineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LineScalarFieldEnum | LineScalarFieldEnum[]
  }

  /**
   * Barangay without action
   */
  export type BarangayDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Barangay
     */
    select?: BarangaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Barangay
     */
    omit?: BarangayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarangayInclude<ExtArgs> | null
  }


  /**
   * Model Accomplishment
   */

  export type AggregateAccomplishment = {
    _count: AccomplishmentCountAggregateOutputType | null
    _min: AccomplishmentMinAggregateOutputType | null
    _max: AccomplishmentMaxAggregateOutputType | null
  }

  export type AccomplishmentMinAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    userId: string | null
    start: Date | null
    end: Date | null
    task: string | null
  }

  export type AccomplishmentMaxAggregateOutputType = {
    id: string | null
    timestamp: Date | null
    userId: string | null
    start: Date | null
    end: Date | null
    task: string | null
  }

  export type AccomplishmentCountAggregateOutputType = {
    id: number
    timestamp: number
    userId: number
    start: number
    end: number
    task: number
    _all: number
  }


  export type AccomplishmentMinAggregateInputType = {
    id?: true
    timestamp?: true
    userId?: true
    start?: true
    end?: true
    task?: true
  }

  export type AccomplishmentMaxAggregateInputType = {
    id?: true
    timestamp?: true
    userId?: true
    start?: true
    end?: true
    task?: true
  }

  export type AccomplishmentCountAggregateInputType = {
    id?: true
    timestamp?: true
    userId?: true
    start?: true
    end?: true
    task?: true
    _all?: true
  }

  export type AccomplishmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accomplishment to aggregate.
     */
    where?: AccomplishmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accomplishments to fetch.
     */
    orderBy?: AccomplishmentOrderByWithRelationInput | AccomplishmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccomplishmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accomplishments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accomplishments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accomplishments
    **/
    _count?: true | AccomplishmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccomplishmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccomplishmentMaxAggregateInputType
  }

  export type GetAccomplishmentAggregateType<T extends AccomplishmentAggregateArgs> = {
        [P in keyof T & keyof AggregateAccomplishment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccomplishment[P]>
      : GetScalarType<T[P], AggregateAccomplishment[P]>
  }




  export type AccomplishmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccomplishmentWhereInput
    orderBy?: AccomplishmentOrderByWithAggregationInput | AccomplishmentOrderByWithAggregationInput[]
    by: AccomplishmentScalarFieldEnum[] | AccomplishmentScalarFieldEnum
    having?: AccomplishmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccomplishmentCountAggregateInputType | true
    _min?: AccomplishmentMinAggregateInputType
    _max?: AccomplishmentMaxAggregateInputType
  }

  export type AccomplishmentGroupByOutputType = {
    id: string
    timestamp: Date
    userId: string | null
    start: Date
    end: Date
    task: string
    _count: AccomplishmentCountAggregateOutputType | null
    _min: AccomplishmentMinAggregateOutputType | null
    _max: AccomplishmentMaxAggregateOutputType | null
  }

  type GetAccomplishmentGroupByPayload<T extends AccomplishmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccomplishmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccomplishmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccomplishmentGroupByOutputType[P]>
            : GetScalarType<T[P], AccomplishmentGroupByOutputType[P]>
        }
      >
    >


  export type AccomplishmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    userId?: boolean
    start?: boolean
    end?: boolean
    task?: boolean
    user?: boolean | Accomplishment$userArgs<ExtArgs>
    AccomplishmentResponse?: boolean | Accomplishment$AccomplishmentResponseArgs<ExtArgs>
    _count?: boolean | AccomplishmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishment"]>

  export type AccomplishmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    userId?: boolean
    start?: boolean
    end?: boolean
    task?: boolean
    user?: boolean | Accomplishment$userArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishment"]>

  export type AccomplishmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    userId?: boolean
    start?: boolean
    end?: boolean
    task?: boolean
    user?: boolean | Accomplishment$userArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishment"]>

  export type AccomplishmentSelectScalar = {
    id?: boolean
    timestamp?: boolean
    userId?: boolean
    start?: boolean
    end?: boolean
    task?: boolean
  }

  export type AccomplishmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "timestamp" | "userId" | "start" | "end" | "task", ExtArgs["result"]["accomplishment"]>
  export type AccomplishmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Accomplishment$userArgs<ExtArgs>
    AccomplishmentResponse?: boolean | Accomplishment$AccomplishmentResponseArgs<ExtArgs>
    _count?: boolean | AccomplishmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AccomplishmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Accomplishment$userArgs<ExtArgs>
  }
  export type AccomplishmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Accomplishment$userArgs<ExtArgs>
  }

  export type $AccomplishmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Accomplishment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      AccomplishmentResponse: Prisma.$AccomplishmentResponsePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      timestamp: Date
      userId: string | null
      start: Date
      end: Date
      task: string
    }, ExtArgs["result"]["accomplishment"]>
    composites: {}
  }

  type AccomplishmentGetPayload<S extends boolean | null | undefined | AccomplishmentDefaultArgs> = $Result.GetResult<Prisma.$AccomplishmentPayload, S>

  type AccomplishmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccomplishmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccomplishmentCountAggregateInputType | true
    }

  export interface AccomplishmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Accomplishment'], meta: { name: 'Accomplishment' } }
    /**
     * Find zero or one Accomplishment that matches the filter.
     * @param {AccomplishmentFindUniqueArgs} args - Arguments to find a Accomplishment
     * @example
     * // Get one Accomplishment
     * const accomplishment = await prisma.accomplishment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccomplishmentFindUniqueArgs>(args: SelectSubset<T, AccomplishmentFindUniqueArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Accomplishment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccomplishmentFindUniqueOrThrowArgs} args - Arguments to find a Accomplishment
     * @example
     * // Get one Accomplishment
     * const accomplishment = await prisma.accomplishment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccomplishmentFindUniqueOrThrowArgs>(args: SelectSubset<T, AccomplishmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Accomplishment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentFindFirstArgs} args - Arguments to find a Accomplishment
     * @example
     * // Get one Accomplishment
     * const accomplishment = await prisma.accomplishment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccomplishmentFindFirstArgs>(args?: SelectSubset<T, AccomplishmentFindFirstArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Accomplishment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentFindFirstOrThrowArgs} args - Arguments to find a Accomplishment
     * @example
     * // Get one Accomplishment
     * const accomplishment = await prisma.accomplishment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccomplishmentFindFirstOrThrowArgs>(args?: SelectSubset<T, AccomplishmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accomplishments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accomplishments
     * const accomplishments = await prisma.accomplishment.findMany()
     * 
     * // Get first 10 Accomplishments
     * const accomplishments = await prisma.accomplishment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accomplishmentWithIdOnly = await prisma.accomplishment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccomplishmentFindManyArgs>(args?: SelectSubset<T, AccomplishmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Accomplishment.
     * @param {AccomplishmentCreateArgs} args - Arguments to create a Accomplishment.
     * @example
     * // Create one Accomplishment
     * const Accomplishment = await prisma.accomplishment.create({
     *   data: {
     *     // ... data to create a Accomplishment
     *   }
     * })
     * 
     */
    create<T extends AccomplishmentCreateArgs>(args: SelectSubset<T, AccomplishmentCreateArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accomplishments.
     * @param {AccomplishmentCreateManyArgs} args - Arguments to create many Accomplishments.
     * @example
     * // Create many Accomplishments
     * const accomplishment = await prisma.accomplishment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccomplishmentCreateManyArgs>(args?: SelectSubset<T, AccomplishmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accomplishments and returns the data saved in the database.
     * @param {AccomplishmentCreateManyAndReturnArgs} args - Arguments to create many Accomplishments.
     * @example
     * // Create many Accomplishments
     * const accomplishment = await prisma.accomplishment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accomplishments and only return the `id`
     * const accomplishmentWithIdOnly = await prisma.accomplishment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccomplishmentCreateManyAndReturnArgs>(args?: SelectSubset<T, AccomplishmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Accomplishment.
     * @param {AccomplishmentDeleteArgs} args - Arguments to delete one Accomplishment.
     * @example
     * // Delete one Accomplishment
     * const Accomplishment = await prisma.accomplishment.delete({
     *   where: {
     *     // ... filter to delete one Accomplishment
     *   }
     * })
     * 
     */
    delete<T extends AccomplishmentDeleteArgs>(args: SelectSubset<T, AccomplishmentDeleteArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Accomplishment.
     * @param {AccomplishmentUpdateArgs} args - Arguments to update one Accomplishment.
     * @example
     * // Update one Accomplishment
     * const accomplishment = await prisma.accomplishment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccomplishmentUpdateArgs>(args: SelectSubset<T, AccomplishmentUpdateArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accomplishments.
     * @param {AccomplishmentDeleteManyArgs} args - Arguments to filter Accomplishments to delete.
     * @example
     * // Delete a few Accomplishments
     * const { count } = await prisma.accomplishment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccomplishmentDeleteManyArgs>(args?: SelectSubset<T, AccomplishmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accomplishments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accomplishments
     * const accomplishment = await prisma.accomplishment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccomplishmentUpdateManyArgs>(args: SelectSubset<T, AccomplishmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accomplishments and returns the data updated in the database.
     * @param {AccomplishmentUpdateManyAndReturnArgs} args - Arguments to update many Accomplishments.
     * @example
     * // Update many Accomplishments
     * const accomplishment = await prisma.accomplishment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accomplishments and only return the `id`
     * const accomplishmentWithIdOnly = await prisma.accomplishment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccomplishmentUpdateManyAndReturnArgs>(args: SelectSubset<T, AccomplishmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Accomplishment.
     * @param {AccomplishmentUpsertArgs} args - Arguments to update or create a Accomplishment.
     * @example
     * // Update or create a Accomplishment
     * const accomplishment = await prisma.accomplishment.upsert({
     *   create: {
     *     // ... data to create a Accomplishment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Accomplishment we want to update
     *   }
     * })
     */
    upsert<T extends AccomplishmentUpsertArgs>(args: SelectSubset<T, AccomplishmentUpsertArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accomplishments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentCountArgs} args - Arguments to filter Accomplishments to count.
     * @example
     * // Count the number of Accomplishments
     * const count = await prisma.accomplishment.count({
     *   where: {
     *     // ... the filter for the Accomplishments we want to count
     *   }
     * })
    **/
    count<T extends AccomplishmentCountArgs>(
      args?: Subset<T, AccomplishmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccomplishmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Accomplishment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccomplishmentAggregateArgs>(args: Subset<T, AccomplishmentAggregateArgs>): Prisma.PrismaPromise<GetAccomplishmentAggregateType<T>>

    /**
     * Group by Accomplishment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccomplishmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccomplishmentGroupByArgs['orderBy'] }
        : { orderBy?: AccomplishmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccomplishmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccomplishmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Accomplishment model
   */
  readonly fields: AccomplishmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Accomplishment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccomplishmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Accomplishment$userArgs<ExtArgs> = {}>(args?: Subset<T, Accomplishment$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    AccomplishmentResponse<T extends Accomplishment$AccomplishmentResponseArgs<ExtArgs> = {}>(args?: Subset<T, Accomplishment$AccomplishmentResponseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Accomplishment model
   */
  interface AccomplishmentFieldRefs {
    readonly id: FieldRef<"Accomplishment", 'String'>
    readonly timestamp: FieldRef<"Accomplishment", 'DateTime'>
    readonly userId: FieldRef<"Accomplishment", 'String'>
    readonly start: FieldRef<"Accomplishment", 'DateTime'>
    readonly end: FieldRef<"Accomplishment", 'DateTime'>
    readonly task: FieldRef<"Accomplishment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Accomplishment findUnique
   */
  export type AccomplishmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter, which Accomplishment to fetch.
     */
    where: AccomplishmentWhereUniqueInput
  }

  /**
   * Accomplishment findUniqueOrThrow
   */
  export type AccomplishmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter, which Accomplishment to fetch.
     */
    where: AccomplishmentWhereUniqueInput
  }

  /**
   * Accomplishment findFirst
   */
  export type AccomplishmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter, which Accomplishment to fetch.
     */
    where?: AccomplishmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accomplishments to fetch.
     */
    orderBy?: AccomplishmentOrderByWithRelationInput | AccomplishmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accomplishments.
     */
    cursor?: AccomplishmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accomplishments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accomplishments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accomplishments.
     */
    distinct?: AccomplishmentScalarFieldEnum | AccomplishmentScalarFieldEnum[]
  }

  /**
   * Accomplishment findFirstOrThrow
   */
  export type AccomplishmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter, which Accomplishment to fetch.
     */
    where?: AccomplishmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accomplishments to fetch.
     */
    orderBy?: AccomplishmentOrderByWithRelationInput | AccomplishmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accomplishments.
     */
    cursor?: AccomplishmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accomplishments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accomplishments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accomplishments.
     */
    distinct?: AccomplishmentScalarFieldEnum | AccomplishmentScalarFieldEnum[]
  }

  /**
   * Accomplishment findMany
   */
  export type AccomplishmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter, which Accomplishments to fetch.
     */
    where?: AccomplishmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accomplishments to fetch.
     */
    orderBy?: AccomplishmentOrderByWithRelationInput | AccomplishmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accomplishments.
     */
    cursor?: AccomplishmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accomplishments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accomplishments.
     */
    skip?: number
    distinct?: AccomplishmentScalarFieldEnum | AccomplishmentScalarFieldEnum[]
  }

  /**
   * Accomplishment create
   */
  export type AccomplishmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Accomplishment.
     */
    data: XOR<AccomplishmentCreateInput, AccomplishmentUncheckedCreateInput>
  }

  /**
   * Accomplishment createMany
   */
  export type AccomplishmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accomplishments.
     */
    data: AccomplishmentCreateManyInput | AccomplishmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Accomplishment createManyAndReturn
   */
  export type AccomplishmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * The data used to create many Accomplishments.
     */
    data: AccomplishmentCreateManyInput | AccomplishmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Accomplishment update
   */
  export type AccomplishmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Accomplishment.
     */
    data: XOR<AccomplishmentUpdateInput, AccomplishmentUncheckedUpdateInput>
    /**
     * Choose, which Accomplishment to update.
     */
    where: AccomplishmentWhereUniqueInput
  }

  /**
   * Accomplishment updateMany
   */
  export type AccomplishmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accomplishments.
     */
    data: XOR<AccomplishmentUpdateManyMutationInput, AccomplishmentUncheckedUpdateManyInput>
    /**
     * Filter which Accomplishments to update
     */
    where?: AccomplishmentWhereInput
    /**
     * Limit how many Accomplishments to update.
     */
    limit?: number
  }

  /**
   * Accomplishment updateManyAndReturn
   */
  export type AccomplishmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * The data used to update Accomplishments.
     */
    data: XOR<AccomplishmentUpdateManyMutationInput, AccomplishmentUncheckedUpdateManyInput>
    /**
     * Filter which Accomplishments to update
     */
    where?: AccomplishmentWhereInput
    /**
     * Limit how many Accomplishments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Accomplishment upsert
   */
  export type AccomplishmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Accomplishment to update in case it exists.
     */
    where: AccomplishmentWhereUniqueInput
    /**
     * In case the Accomplishment found by the `where` argument doesn't exist, create a new Accomplishment with this data.
     */
    create: XOR<AccomplishmentCreateInput, AccomplishmentUncheckedCreateInput>
    /**
     * In case the Accomplishment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccomplishmentUpdateInput, AccomplishmentUncheckedUpdateInput>
  }

  /**
   * Accomplishment delete
   */
  export type AccomplishmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
    /**
     * Filter which Accomplishment to delete.
     */
    where: AccomplishmentWhereUniqueInput
  }

  /**
   * Accomplishment deleteMany
   */
  export type AccomplishmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accomplishments to delete
     */
    where?: AccomplishmentWhereInput
    /**
     * Limit how many Accomplishments to delete.
     */
    limit?: number
  }

  /**
   * Accomplishment.user
   */
  export type Accomplishment$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Accomplishment.AccomplishmentResponse
   */
  export type Accomplishment$AccomplishmentResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    where?: AccomplishmentResponseWhereInput
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    cursor?: AccomplishmentResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccomplishmentResponseScalarFieldEnum | AccomplishmentResponseScalarFieldEnum[]
  }

  /**
   * Accomplishment without action
   */
  export type AccomplishmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accomplishment
     */
    select?: AccomplishmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accomplishment
     */
    omit?: AccomplishmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentInclude<ExtArgs> | null
  }


  /**
   * Model AccomplishmentResponse
   */

  export type AggregateAccomplishmentResponse = {
    _count: AccomplishmentResponseCountAggregateOutputType | null
    _min: AccomplishmentResponseMinAggregateOutputType | null
    _max: AccomplishmentResponseMaxAggregateOutputType | null
  }

  export type AccomplishmentResponseMinAggregateOutputType = {
    id: string | null
    headId: string | null
    accomplishmentId: string | null
    message: string | null
    timestamp: Date | null
  }

  export type AccomplishmentResponseMaxAggregateOutputType = {
    id: string | null
    headId: string | null
    accomplishmentId: string | null
    message: string | null
    timestamp: Date | null
  }

  export type AccomplishmentResponseCountAggregateOutputType = {
    id: number
    headId: number
    accomplishmentId: number
    message: number
    timestamp: number
    _all: number
  }


  export type AccomplishmentResponseMinAggregateInputType = {
    id?: true
    headId?: true
    accomplishmentId?: true
    message?: true
    timestamp?: true
  }

  export type AccomplishmentResponseMaxAggregateInputType = {
    id?: true
    headId?: true
    accomplishmentId?: true
    message?: true
    timestamp?: true
  }

  export type AccomplishmentResponseCountAggregateInputType = {
    id?: true
    headId?: true
    accomplishmentId?: true
    message?: true
    timestamp?: true
    _all?: true
  }

  export type AccomplishmentResponseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccomplishmentResponse to aggregate.
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccomplishmentResponses to fetch.
     */
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccomplishmentResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccomplishmentResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccomplishmentResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AccomplishmentResponses
    **/
    _count?: true | AccomplishmentResponseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccomplishmentResponseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccomplishmentResponseMaxAggregateInputType
  }

  export type GetAccomplishmentResponseAggregateType<T extends AccomplishmentResponseAggregateArgs> = {
        [P in keyof T & keyof AggregateAccomplishmentResponse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccomplishmentResponse[P]>
      : GetScalarType<T[P], AggregateAccomplishmentResponse[P]>
  }




  export type AccomplishmentResponseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccomplishmentResponseWhereInput
    orderBy?: AccomplishmentResponseOrderByWithAggregationInput | AccomplishmentResponseOrderByWithAggregationInput[]
    by: AccomplishmentResponseScalarFieldEnum[] | AccomplishmentResponseScalarFieldEnum
    having?: AccomplishmentResponseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccomplishmentResponseCountAggregateInputType | true
    _min?: AccomplishmentResponseMinAggregateInputType
    _max?: AccomplishmentResponseMaxAggregateInputType
  }

  export type AccomplishmentResponseGroupByOutputType = {
    id: string
    headId: string
    accomplishmentId: string
    message: string
    timestamp: Date
    _count: AccomplishmentResponseCountAggregateOutputType | null
    _min: AccomplishmentResponseMinAggregateOutputType | null
    _max: AccomplishmentResponseMaxAggregateOutputType | null
  }

  type GetAccomplishmentResponseGroupByPayload<T extends AccomplishmentResponseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccomplishmentResponseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccomplishmentResponseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccomplishmentResponseGroupByOutputType[P]>
            : GetScalarType<T[P], AccomplishmentResponseGroupByOutputType[P]>
        }
      >
    >


  export type AccomplishmentResponseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    headId?: boolean
    accomplishmentId?: boolean
    message?: boolean
    timestamp?: boolean
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishmentResponse"]>

  export type AccomplishmentResponseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    headId?: boolean
    accomplishmentId?: boolean
    message?: boolean
    timestamp?: boolean
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishmentResponse"]>

  export type AccomplishmentResponseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    headId?: boolean
    accomplishmentId?: boolean
    message?: boolean
    timestamp?: boolean
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accomplishmentResponse"]>

  export type AccomplishmentResponseSelectScalar = {
    id?: boolean
    headId?: boolean
    accomplishmentId?: boolean
    message?: boolean
    timestamp?: boolean
  }

  export type AccomplishmentResponseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "headId" | "accomplishmentId" | "message" | "timestamp", ExtArgs["result"]["accomplishmentResponse"]>
  export type AccomplishmentResponseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }
  export type AccomplishmentResponseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }
  export type AccomplishmentResponseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    head?: boolean | UserDefaultArgs<ExtArgs>
    accomplishment?: boolean | AccomplishmentDefaultArgs<ExtArgs>
  }

  export type $AccomplishmentResponsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AccomplishmentResponse"
    objects: {
      head: Prisma.$UserPayload<ExtArgs>
      accomplishment: Prisma.$AccomplishmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      headId: string
      accomplishmentId: string
      message: string
      timestamp: Date
    }, ExtArgs["result"]["accomplishmentResponse"]>
    composites: {}
  }

  type AccomplishmentResponseGetPayload<S extends boolean | null | undefined | AccomplishmentResponseDefaultArgs> = $Result.GetResult<Prisma.$AccomplishmentResponsePayload, S>

  type AccomplishmentResponseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccomplishmentResponseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccomplishmentResponseCountAggregateInputType | true
    }

  export interface AccomplishmentResponseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccomplishmentResponse'], meta: { name: 'AccomplishmentResponse' } }
    /**
     * Find zero or one AccomplishmentResponse that matches the filter.
     * @param {AccomplishmentResponseFindUniqueArgs} args - Arguments to find a AccomplishmentResponse
     * @example
     * // Get one AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccomplishmentResponseFindUniqueArgs>(args: SelectSubset<T, AccomplishmentResponseFindUniqueArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AccomplishmentResponse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccomplishmentResponseFindUniqueOrThrowArgs} args - Arguments to find a AccomplishmentResponse
     * @example
     * // Get one AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccomplishmentResponseFindUniqueOrThrowArgs>(args: SelectSubset<T, AccomplishmentResponseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AccomplishmentResponse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseFindFirstArgs} args - Arguments to find a AccomplishmentResponse
     * @example
     * // Get one AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccomplishmentResponseFindFirstArgs>(args?: SelectSubset<T, AccomplishmentResponseFindFirstArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AccomplishmentResponse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseFindFirstOrThrowArgs} args - Arguments to find a AccomplishmentResponse
     * @example
     * // Get one AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccomplishmentResponseFindFirstOrThrowArgs>(args?: SelectSubset<T, AccomplishmentResponseFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AccomplishmentResponses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AccomplishmentResponses
     * const accomplishmentResponses = await prisma.accomplishmentResponse.findMany()
     * 
     * // Get first 10 AccomplishmentResponses
     * const accomplishmentResponses = await prisma.accomplishmentResponse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accomplishmentResponseWithIdOnly = await prisma.accomplishmentResponse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccomplishmentResponseFindManyArgs>(args?: SelectSubset<T, AccomplishmentResponseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AccomplishmentResponse.
     * @param {AccomplishmentResponseCreateArgs} args - Arguments to create a AccomplishmentResponse.
     * @example
     * // Create one AccomplishmentResponse
     * const AccomplishmentResponse = await prisma.accomplishmentResponse.create({
     *   data: {
     *     // ... data to create a AccomplishmentResponse
     *   }
     * })
     * 
     */
    create<T extends AccomplishmentResponseCreateArgs>(args: SelectSubset<T, AccomplishmentResponseCreateArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AccomplishmentResponses.
     * @param {AccomplishmentResponseCreateManyArgs} args - Arguments to create many AccomplishmentResponses.
     * @example
     * // Create many AccomplishmentResponses
     * const accomplishmentResponse = await prisma.accomplishmentResponse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccomplishmentResponseCreateManyArgs>(args?: SelectSubset<T, AccomplishmentResponseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AccomplishmentResponses and returns the data saved in the database.
     * @param {AccomplishmentResponseCreateManyAndReturnArgs} args - Arguments to create many AccomplishmentResponses.
     * @example
     * // Create many AccomplishmentResponses
     * const accomplishmentResponse = await prisma.accomplishmentResponse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AccomplishmentResponses and only return the `id`
     * const accomplishmentResponseWithIdOnly = await prisma.accomplishmentResponse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccomplishmentResponseCreateManyAndReturnArgs>(args?: SelectSubset<T, AccomplishmentResponseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AccomplishmentResponse.
     * @param {AccomplishmentResponseDeleteArgs} args - Arguments to delete one AccomplishmentResponse.
     * @example
     * // Delete one AccomplishmentResponse
     * const AccomplishmentResponse = await prisma.accomplishmentResponse.delete({
     *   where: {
     *     // ... filter to delete one AccomplishmentResponse
     *   }
     * })
     * 
     */
    delete<T extends AccomplishmentResponseDeleteArgs>(args: SelectSubset<T, AccomplishmentResponseDeleteArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AccomplishmentResponse.
     * @param {AccomplishmentResponseUpdateArgs} args - Arguments to update one AccomplishmentResponse.
     * @example
     * // Update one AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccomplishmentResponseUpdateArgs>(args: SelectSubset<T, AccomplishmentResponseUpdateArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AccomplishmentResponses.
     * @param {AccomplishmentResponseDeleteManyArgs} args - Arguments to filter AccomplishmentResponses to delete.
     * @example
     * // Delete a few AccomplishmentResponses
     * const { count } = await prisma.accomplishmentResponse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccomplishmentResponseDeleteManyArgs>(args?: SelectSubset<T, AccomplishmentResponseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccomplishmentResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AccomplishmentResponses
     * const accomplishmentResponse = await prisma.accomplishmentResponse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccomplishmentResponseUpdateManyArgs>(args: SelectSubset<T, AccomplishmentResponseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccomplishmentResponses and returns the data updated in the database.
     * @param {AccomplishmentResponseUpdateManyAndReturnArgs} args - Arguments to update many AccomplishmentResponses.
     * @example
     * // Update many AccomplishmentResponses
     * const accomplishmentResponse = await prisma.accomplishmentResponse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AccomplishmentResponses and only return the `id`
     * const accomplishmentResponseWithIdOnly = await prisma.accomplishmentResponse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccomplishmentResponseUpdateManyAndReturnArgs>(args: SelectSubset<T, AccomplishmentResponseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AccomplishmentResponse.
     * @param {AccomplishmentResponseUpsertArgs} args - Arguments to update or create a AccomplishmentResponse.
     * @example
     * // Update or create a AccomplishmentResponse
     * const accomplishmentResponse = await prisma.accomplishmentResponse.upsert({
     *   create: {
     *     // ... data to create a AccomplishmentResponse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AccomplishmentResponse we want to update
     *   }
     * })
     */
    upsert<T extends AccomplishmentResponseUpsertArgs>(args: SelectSubset<T, AccomplishmentResponseUpsertArgs<ExtArgs>>): Prisma__AccomplishmentResponseClient<$Result.GetResult<Prisma.$AccomplishmentResponsePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AccomplishmentResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseCountArgs} args - Arguments to filter AccomplishmentResponses to count.
     * @example
     * // Count the number of AccomplishmentResponses
     * const count = await prisma.accomplishmentResponse.count({
     *   where: {
     *     // ... the filter for the AccomplishmentResponses we want to count
     *   }
     * })
    **/
    count<T extends AccomplishmentResponseCountArgs>(
      args?: Subset<T, AccomplishmentResponseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccomplishmentResponseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AccomplishmentResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccomplishmentResponseAggregateArgs>(args: Subset<T, AccomplishmentResponseAggregateArgs>): Prisma.PrismaPromise<GetAccomplishmentResponseAggregateType<T>>

    /**
     * Group by AccomplishmentResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccomplishmentResponseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccomplishmentResponseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccomplishmentResponseGroupByArgs['orderBy'] }
        : { orderBy?: AccomplishmentResponseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccomplishmentResponseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccomplishmentResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AccomplishmentResponse model
   */
  readonly fields: AccomplishmentResponseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AccomplishmentResponse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccomplishmentResponseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    head<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    accomplishment<T extends AccomplishmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AccomplishmentDefaultArgs<ExtArgs>>): Prisma__AccomplishmentClient<$Result.GetResult<Prisma.$AccomplishmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AccomplishmentResponse model
   */
  interface AccomplishmentResponseFieldRefs {
    readonly id: FieldRef<"AccomplishmentResponse", 'String'>
    readonly headId: FieldRef<"AccomplishmentResponse", 'String'>
    readonly accomplishmentId: FieldRef<"AccomplishmentResponse", 'String'>
    readonly message: FieldRef<"AccomplishmentResponse", 'String'>
    readonly timestamp: FieldRef<"AccomplishmentResponse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AccomplishmentResponse findUnique
   */
  export type AccomplishmentResponseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter, which AccomplishmentResponse to fetch.
     */
    where: AccomplishmentResponseWhereUniqueInput
  }

  /**
   * AccomplishmentResponse findUniqueOrThrow
   */
  export type AccomplishmentResponseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter, which AccomplishmentResponse to fetch.
     */
    where: AccomplishmentResponseWhereUniqueInput
  }

  /**
   * AccomplishmentResponse findFirst
   */
  export type AccomplishmentResponseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter, which AccomplishmentResponse to fetch.
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccomplishmentResponses to fetch.
     */
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccomplishmentResponses.
     */
    cursor?: AccomplishmentResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccomplishmentResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccomplishmentResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccomplishmentResponses.
     */
    distinct?: AccomplishmentResponseScalarFieldEnum | AccomplishmentResponseScalarFieldEnum[]
  }

  /**
   * AccomplishmentResponse findFirstOrThrow
   */
  export type AccomplishmentResponseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter, which AccomplishmentResponse to fetch.
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccomplishmentResponses to fetch.
     */
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccomplishmentResponses.
     */
    cursor?: AccomplishmentResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccomplishmentResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccomplishmentResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccomplishmentResponses.
     */
    distinct?: AccomplishmentResponseScalarFieldEnum | AccomplishmentResponseScalarFieldEnum[]
  }

  /**
   * AccomplishmentResponse findMany
   */
  export type AccomplishmentResponseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter, which AccomplishmentResponses to fetch.
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccomplishmentResponses to fetch.
     */
    orderBy?: AccomplishmentResponseOrderByWithRelationInput | AccomplishmentResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AccomplishmentResponses.
     */
    cursor?: AccomplishmentResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccomplishmentResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccomplishmentResponses.
     */
    skip?: number
    distinct?: AccomplishmentResponseScalarFieldEnum | AccomplishmentResponseScalarFieldEnum[]
  }

  /**
   * AccomplishmentResponse create
   */
  export type AccomplishmentResponseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * The data needed to create a AccomplishmentResponse.
     */
    data: XOR<AccomplishmentResponseCreateInput, AccomplishmentResponseUncheckedCreateInput>
  }

  /**
   * AccomplishmentResponse createMany
   */
  export type AccomplishmentResponseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AccomplishmentResponses.
     */
    data: AccomplishmentResponseCreateManyInput | AccomplishmentResponseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AccomplishmentResponse createManyAndReturn
   */
  export type AccomplishmentResponseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * The data used to create many AccomplishmentResponses.
     */
    data: AccomplishmentResponseCreateManyInput | AccomplishmentResponseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccomplishmentResponse update
   */
  export type AccomplishmentResponseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * The data needed to update a AccomplishmentResponse.
     */
    data: XOR<AccomplishmentResponseUpdateInput, AccomplishmentResponseUncheckedUpdateInput>
    /**
     * Choose, which AccomplishmentResponse to update.
     */
    where: AccomplishmentResponseWhereUniqueInput
  }

  /**
   * AccomplishmentResponse updateMany
   */
  export type AccomplishmentResponseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AccomplishmentResponses.
     */
    data: XOR<AccomplishmentResponseUpdateManyMutationInput, AccomplishmentResponseUncheckedUpdateManyInput>
    /**
     * Filter which AccomplishmentResponses to update
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * Limit how many AccomplishmentResponses to update.
     */
    limit?: number
  }

  /**
   * AccomplishmentResponse updateManyAndReturn
   */
  export type AccomplishmentResponseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * The data used to update AccomplishmentResponses.
     */
    data: XOR<AccomplishmentResponseUpdateManyMutationInput, AccomplishmentResponseUncheckedUpdateManyInput>
    /**
     * Filter which AccomplishmentResponses to update
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * Limit how many AccomplishmentResponses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccomplishmentResponse upsert
   */
  export type AccomplishmentResponseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * The filter to search for the AccomplishmentResponse to update in case it exists.
     */
    where: AccomplishmentResponseWhereUniqueInput
    /**
     * In case the AccomplishmentResponse found by the `where` argument doesn't exist, create a new AccomplishmentResponse with this data.
     */
    create: XOR<AccomplishmentResponseCreateInput, AccomplishmentResponseUncheckedCreateInput>
    /**
     * In case the AccomplishmentResponse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccomplishmentResponseUpdateInput, AccomplishmentResponseUncheckedUpdateInput>
  }

  /**
   * AccomplishmentResponse delete
   */
  export type AccomplishmentResponseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
    /**
     * Filter which AccomplishmentResponse to delete.
     */
    where: AccomplishmentResponseWhereUniqueInput
  }

  /**
   * AccomplishmentResponse deleteMany
   */
  export type AccomplishmentResponseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccomplishmentResponses to delete
     */
    where?: AccomplishmentResponseWhereInput
    /**
     * Limit how many AccomplishmentResponses to delete.
     */
    limit?: number
  }

  /**
   * AccomplishmentResponse without action
   */
  export type AccomplishmentResponseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccomplishmentResponse
     */
    select?: AccomplishmentResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccomplishmentResponse
     */
    omit?: AccomplishmentResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccomplishmentResponseInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const LineScalarFieldEnum: {
    id: 'id',
    name: 'name',
    password: 'password',
    barangayId: 'barangayId',
    municipalId: 'municipalId',
    provinceId: 'provinceId',
    regionId: 'regionId',
    createdAt: 'createdAt',
    status: 'status',
    adminProfileId: 'adminProfileId'
  };

  export type LineScalarFieldEnum = (typeof LineScalarFieldEnum)[keyof typeof LineScalarFieldEnum]


  export const InvitationLinkScalarFieldEnum: {
    id: 'id',
    code: 'code',
    createdAt: 'createdAt',
    expiresAt: 'expiresAt',
    used: 'used',
    url: 'url',
    lineId: 'lineId'
  };

  export type InvitationLinkScalarFieldEnum = (typeof InvitationLinkScalarFieldEnum)[keyof typeof InvitationLinkScalarFieldEnum]


  export const AssetsScalarFieldEnum: {
    id: 'id',
    url: 'url',
    fileSize: 'fileSize',
    fileType: 'fileType',
    fileName: 'fileName',
    createdAt: 'createdAt',
    suppliesId: 'suppliesId'
  };

  export type AssetsScalarFieldEnum = (typeof AssetsScalarFieldEnum)[keyof typeof AssetsScalarFieldEnum]


  export const ProfilePictureScalarFieldEnum: {
    id: 'id',
    assetsId: 'assetsId',
    userId: 'userId',
    createdAt: 'createdAt'
  };

  export type ProfilePictureScalarFieldEnum = (typeof ProfilePictureScalarFieldEnum)[keyof typeof ProfilePictureScalarFieldEnum]


  export const InventoryBoxScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    createdAt: 'createdAt',
    lineId: 'lineId',
    userId: 'userId',
    departmentId: 'departmentId'
  };

  export type InventoryBoxScalarFieldEnum = (typeof InventoryBoxScalarFieldEnum)[keyof typeof InventoryBoxScalarFieldEnum]


  export const ContainerAllowedUserScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    inventoryBoxId: 'inventoryBoxId',
    grantByUserId: 'grantByUserId',
    timestamp: 'timestamp'
  };

  export type ContainerAllowedUserScalarFieldEnum = (typeof ContainerAllowedUserScalarFieldEnum)[keyof typeof ContainerAllowedUserScalarFieldEnum]


  export const InventoryAccessLogsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    timestamp: 'timestamp',
    inventoryBoxId: 'inventoryBoxId',
    action: 'action',
    suppliesId: 'suppliesId'
  };

  export type InventoryAccessLogsScalarFieldEnum = (typeof InventoryAccessLogsScalarFieldEnum)[keyof typeof InventoryAccessLogsScalarFieldEnum]


  export const SuppliesScalarFieldEnum: {
    id: 'id',
    code: 'code',
    consumable: 'consumable',
    item: 'item',
    description: 'description',
    quantity: 'quantity',
    notifyAtStockOf: 'notifyAtStockOf',
    price: 'price',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lineId: 'lineId',
    userId: 'userId',
    condition: 'condition',
    status: 'status',
    suppliesCategoryId: 'suppliesCategoryId',
    suppliesQualityId: 'suppliesQualityId',
    suppliesDataSetId: 'suppliesDataSetId'
  };

  export type SuppliesScalarFieldEnum = (typeof SuppliesScalarFieldEnum)[keyof typeof SuppliesScalarFieldEnum]


  export const SupplyBatchScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    title: 'title',
    inventoryBoxId: 'inventoryBoxId',
    suppliesDataSetId: 'suppliesDataSetId'
  };

  export type SupplyBatchScalarFieldEnum = (typeof SupplyBatchScalarFieldEnum)[keyof typeof SupplyBatchScalarFieldEnum]


  export const SupplyBatchItemScalarFieldEnum: {
    id: 'id',
    supplyBatchId: 'supplyBatchId',
    suppliesId: 'suppliesId',
    timestamp: 'timestamp'
  };

  export type SupplyBatchItemScalarFieldEnum = (typeof SupplyBatchItemScalarFieldEnum)[keyof typeof SupplyBatchItemScalarFieldEnum]


  export const SupplyBatchOrderScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    title: 'title',
    userId: 'userId',
    status: 'status',
    lineId: 'lineId',
    inventoryBoxId: 'inventoryBoxId'
  };

  export type SupplyBatchOrderScalarFieldEnum = (typeof SupplyBatchOrderScalarFieldEnum)[keyof typeof SupplyBatchOrderScalarFieldEnum]


  export const SupplyOrderSupportFileScalarFieldEnum: {
    id: 'id',
    assetsId: 'assetsId',
    supplyBatchOrderId: 'supplyBatchOrderId'
  };

  export type SupplyOrderSupportFileScalarFieldEnum = (typeof SupplyOrderSupportFileScalarFieldEnum)[keyof typeof SupplyOrderSupportFileScalarFieldEnum]


  export const SupplyOrderScalarFieldEnum: {
    id: 'id',
    supplyBatchOrderId: 'supplyBatchOrderId',
    suppliesId: 'suppliesId',
    quantity: 'quantity',
    status: 'status',
    suppliesQualityId: 'suppliesQualityId'
  };

  export type SupplyOrderScalarFieldEnum = (typeof SupplyOrderScalarFieldEnum)[keyof typeof SupplyOrderScalarFieldEnum]


  export const SuppliesDataSetScalarFieldEnum: {
    id: 'id',
    title: 'title',
    timestamp: 'timestamp',
    lineId: 'lineId',
    inventoryBoxId: 'inventoryBoxId'
  };

  export type SuppliesDataSetScalarFieldEnum = (typeof SuppliesDataSetScalarFieldEnum)[keyof typeof SuppliesDataSetScalarFieldEnum]


  export const SuppliesQualityScalarFieldEnum: {
    id: 'id',
    quality: 'quality',
    perQuality: 'perQuality',
    suppliesDataSetId: 'suppliesDataSetId'
  };

  export type SuppliesQualityScalarFieldEnum = (typeof SuppliesQualityScalarFieldEnum)[keyof typeof SuppliesQualityScalarFieldEnum]


  export const SupplyPriceTrackScalarFieldEnum: {
    id: 'id',
    value: 'value',
    suppliesId: 'suppliesId',
    timestamp: 'timestamp'
  };

  export type SupplyPriceTrackScalarFieldEnum = (typeof SupplyPriceTrackScalarFieldEnum)[keyof typeof SupplyPriceTrackScalarFieldEnum]


  export const SupplyStockTrackScalarFieldEnum: {
    id: 'id',
    stock: 'stock',
    suppliesId: 'suppliesId',
    timestamp: 'timestamp'
  };

  export type SupplyStockTrackScalarFieldEnum = (typeof SupplyStockTrackScalarFieldEnum)[keyof typeof SupplyStockTrackScalarFieldEnum]


  export const SuppliesCategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt'
  };

  export type SuppliesCategoryScalarFieldEnum = (typeof SuppliesCategoryScalarFieldEnum)[keyof typeof SuppliesCategoryScalarFieldEnum]


  export const SupplieRecieveHistoryScalarFieldEnum: {
    id: 'id',
    suppliesId: 'suppliesId',
    userId: 'userId',
    timestamp: 'timestamp',
    quantity: 'quantity',
    condition: 'condition'
  };

  export type SupplieRecieveHistoryScalarFieldEnum = (typeof SupplieRecieveHistoryScalarFieldEnum)[keyof typeof SupplieRecieveHistoryScalarFieldEnum]


  export const TransferredSuppliesScalarFieldEnum: {
    id: 'id',
    suppliesId: 'suppliesId',
    userId: 'userId',
    transferredToId: 'transferredToId',
    timestamp: 'timestamp',
    condition: 'condition'
  };

  export type TransferredSuppliesScalarFieldEnum = (typeof TransferredSuppliesScalarFieldEnum)[keyof typeof TransferredSuppliesScalarFieldEnum]


  export const SuppliesRecordScalarFieldEnum: {
    id: 'id',
    suppliesId: 'suppliesId',
    timestamp: 'timestamp',
    userId: 'userId',
    action: 'action',
    status: 'status',
    description: 'description',
    modifiedId: 'modifiedId'
  };

  export type SuppliesRecordScalarFieldEnum = (typeof SuppliesRecordScalarFieldEnum)[keyof typeof SuppliesRecordScalarFieldEnum]


  export const ApplicationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    positionId: 'positionId',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ApplicationScalarFieldEnum = (typeof ApplicationScalarFieldEnum)[keyof typeof ApplicationScalarFieldEnum]


  export const DepartmentScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    headId: 'headId',
    idCode: 'idCode',
    lineId: 'lineId'
  };

  export type DepartmentScalarFieldEnum = (typeof DepartmentScalarFieldEnum)[keyof typeof DepartmentScalarFieldEnum]


  export const GroupScalarFieldEnum: {
    id: 'id',
    departmentId: 'departmentId',
    name: 'name',
    createdAt: 'createdAt',
    lineId: 'lineId',
    userId: 'userId'
  };

  export type GroupScalarFieldEnum = (typeof GroupScalarFieldEnum)[keyof typeof GroupScalarFieldEnum]


  export const AdminScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const AdminProfileScalarFieldEnum: {
    id: 'id',
    username: 'username'
  };

  export type AdminProfileScalarFieldEnum = (typeof AdminProfileScalarFieldEnum)[keyof typeof AdminProfileScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    createdAt: 'createdAt',
    status: 'status',
    role: 'role',
    active: 'active',
    lineId: 'lineId'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const PrivilegeScalarFieldEnum: {
    id: 'id',
    humanResources: 'humanResources',
    inventory: 'inventory',
    super: 'super'
  };

  export type PrivilegeScalarFieldEnum = (typeof PrivilegeScalarFieldEnum)[keyof typeof PrivilegeScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    firstName: 'firstName',
    lastName: 'lastName',
    middleName: 'middleName',
    suffix: 'suffix',
    birthDate: 'birthDate',
    email: 'email',
    username: 'username',
    gender: 'gender',
    profilePicture: 'profilePicture',
    createdAt: 'createdAt',
    level: 'level',
    type: 'type',
    step: 'step',
    status: 'status',
    departmentId: 'departmentId',
    positionId: 'positionId',
    salaryGradeId: 'salaryGradeId',
    accountId: 'accountId',
    regionId: 'regionId',
    municipalId: 'municipalId',
    provinceId: 'provinceId',
    barangayId: 'barangayId',
    lineId: 'lineId',
    privilegeId: 'privilegeId',
    groupId: 'groupId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const LogRecordScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    timestamp: 'timestamp'
  };

  export type LogRecordScalarFieldEnum = (typeof LogRecordScalarFieldEnum)[keyof typeof LogRecordScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    createdAt: 'createdAt',
    recipientId: 'recipientId',
    senderId: 'senderId',
    path: 'path',
    isRead: 'isRead'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PositionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    max: 'max',
    createdAt: 'createdAt',
    itemNumber: 'itemNumber',
    salaryGradeId: 'salaryGradeId',
    plantilla: 'plantilla',
    lineId: 'lineId',
    departmentId: 'departmentId'
  };

  export type PositionScalarFieldEnum = (typeof PositionScalarFieldEnum)[keyof typeof PositionScalarFieldEnum]


  export const PositionSlotScalarFieldEnum: {
    id: 'id',
    positionId: 'positionId',
    salaryGradeId: 'salaryGradeId',
    userId: 'userId'
  };

  export type PositionSlotScalarFieldEnum = (typeof PositionSlotScalarFieldEnum)[keyof typeof PositionSlotScalarFieldEnum]


  export const SalaryGradeScalarFieldEnum: {
    id: 'id',
    grade: 'grade',
    amount: 'amount',
    createdAt: 'createdAt',
    lineId: 'lineId'
  };

  export type SalaryGradeScalarFieldEnum = (typeof SalaryGradeScalarFieldEnum)[keyof typeof SalaryGradeScalarFieldEnum]


  export const SalaryGradeHistoryScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    salaryGradeId: 'salaryGradeId',
    effectiveDate: 'effectiveDate',
    createdAt: 'createdAt',
    amount: 'amount'
  };

  export type SalaryGradeHistoryScalarFieldEnum = (typeof SalaryGradeHistoryScalarFieldEnum)[keyof typeof SalaryGradeHistoryScalarFieldEnum]


  export const LeaveScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    startDate: 'startDate',
    endDate: 'endDate',
    reason: 'reason',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type LeaveScalarFieldEnum = (typeof LeaveScalarFieldEnum)[keyof typeof LeaveScalarFieldEnum]


  export const AnnouncementScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    createdAt: 'createdAt',
    authorId: 'authorId',
    lineId: 'lineId',
    path: 'path',
    important: 'important',
    departmentId: 'departmentId'
  };

  export type AnnouncementScalarFieldEnum = (typeof AnnouncementScalarFieldEnum)[keyof typeof AnnouncementScalarFieldEnum]


  export const PromotionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    timestamp: 'timestamp',
    positionId: 'positionId'
  };

  export type PromotionScalarFieldEnum = (typeof PromotionScalarFieldEnum)[keyof typeof PromotionScalarFieldEnum]


  export const BirthdayNoticeResponseScalarFieldEnum: {
    id: 'id',
    message: 'message',
    like: 'like',
    timestamp: 'timestamp',
    senderId: 'senderId',
    recipientId: 'recipientId',
    lineId: 'lineId'
  };

  export type BirthdayNoticeResponseScalarFieldEnum = (typeof BirthdayNoticeResponseScalarFieldEnum)[keyof typeof BirthdayNoticeResponseScalarFieldEnum]


  export const RegionScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type RegionScalarFieldEnum = (typeof RegionScalarFieldEnum)[keyof typeof RegionScalarFieldEnum]


  export const ProvinceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    regionId: 'regionId'
  };

  export type ProvinceScalarFieldEnum = (typeof ProvinceScalarFieldEnum)[keyof typeof ProvinceScalarFieldEnum]


  export const MunicipalScalarFieldEnum: {
    id: 'id',
    name: 'name',
    provinceId: 'provinceId'
  };

  export type MunicipalScalarFieldEnum = (typeof MunicipalScalarFieldEnum)[keyof typeof MunicipalScalarFieldEnum]


  export const BarangayScalarFieldEnum: {
    id: 'id',
    name: 'name',
    municipalId: 'municipalId'
  };

  export type BarangayScalarFieldEnum = (typeof BarangayScalarFieldEnum)[keyof typeof BarangayScalarFieldEnum]


  export const AccomplishmentScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    userId: 'userId',
    start: 'start',
    end: 'end',
    task: 'task'
  };

  export type AccomplishmentScalarFieldEnum = (typeof AccomplishmentScalarFieldEnum)[keyof typeof AccomplishmentScalarFieldEnum]


  export const AccomplishmentResponseScalarFieldEnum: {
    id: 'id',
    headId: 'headId',
    accomplishmentId: 'accomplishmentId',
    message: 'message',
    timestamp: 'timestamp'
  };

  export type AccomplishmentResponseScalarFieldEnum = (typeof AccomplishmentResponseScalarFieldEnum)[keyof typeof AccomplishmentResponseScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type LineWhereInput = {
    AND?: LineWhereInput | LineWhereInput[]
    OR?: LineWhereInput[]
    NOT?: LineWhereInput | LineWhereInput[]
    id?: StringFilter<"Line"> | string
    name?: StringFilter<"Line"> | string
    password?: StringNullableFilter<"Line"> | string | null
    barangayId?: StringFilter<"Line"> | string
    municipalId?: StringFilter<"Line"> | string
    provinceId?: StringFilter<"Line"> | string
    regionId?: StringFilter<"Line"> | string
    createdAt?: DateTimeFilter<"Line"> | Date | string
    status?: IntFilter<"Line"> | number
    adminProfileId?: StringNullableFilter<"Line"> | string | null
    barangay?: XOR<BarangayScalarRelationFilter, BarangayWhereInput>
    municipal?: XOR<MunicipalScalarRelationFilter, MunicipalWhereInput>
    province?: XOR<ProvinceScalarRelationFilter, ProvinceWhereInput>
    region?: XOR<RegionScalarRelationFilter, RegionWhereInput>
    Department?: DepartmentListRelationFilter
    Account?: AccountListRelationFilter
    User?: UserListRelationFilter
    Position?: PositionListRelationFilter
    SalaryGrade?: SalaryGradeListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    BirthdayNoticeResponse?: BirthdayNoticeResponseListRelationFilter
    InvitationLink?: InvitationLinkListRelationFilter
    Supplies?: SuppliesListRelationFilter
    SupplyBatchOrder?: SupplyBatchOrderListRelationFilter
    Group?: GroupListRelationFilter
    AdminProfile?: XOR<AdminProfileNullableScalarRelationFilter, AdminProfileWhereInput> | null
    InventoryBox?: InventoryBoxListRelationFilter
    SuppliesDataSet?: SuppliesDataSetListRelationFilter
  }

  export type LineOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    password?: SortOrderInput | SortOrder
    barangayId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    regionId?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    adminProfileId?: SortOrderInput | SortOrder
    barangay?: BarangayOrderByWithRelationInput
    municipal?: MunicipalOrderByWithRelationInput
    province?: ProvinceOrderByWithRelationInput
    region?: RegionOrderByWithRelationInput
    Department?: DepartmentOrderByRelationAggregateInput
    Account?: AccountOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
    Position?: PositionOrderByRelationAggregateInput
    SalaryGrade?: SalaryGradeOrderByRelationAggregateInput
    Announcement?: AnnouncementOrderByRelationAggregateInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseOrderByRelationAggregateInput
    InvitationLink?: InvitationLinkOrderByRelationAggregateInput
    Supplies?: SuppliesOrderByRelationAggregateInput
    SupplyBatchOrder?: SupplyBatchOrderOrderByRelationAggregateInput
    Group?: GroupOrderByRelationAggregateInput
    AdminProfile?: AdminProfileOrderByWithRelationInput
    InventoryBox?: InventoryBoxOrderByRelationAggregateInput
    SuppliesDataSet?: SuppliesDataSetOrderByRelationAggregateInput
  }

  export type LineWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: LineWhereInput | LineWhereInput[]
    OR?: LineWhereInput[]
    NOT?: LineWhereInput | LineWhereInput[]
    password?: StringNullableFilter<"Line"> | string | null
    barangayId?: StringFilter<"Line"> | string
    municipalId?: StringFilter<"Line"> | string
    provinceId?: StringFilter<"Line"> | string
    regionId?: StringFilter<"Line"> | string
    createdAt?: DateTimeFilter<"Line"> | Date | string
    status?: IntFilter<"Line"> | number
    adminProfileId?: StringNullableFilter<"Line"> | string | null
    barangay?: XOR<BarangayScalarRelationFilter, BarangayWhereInput>
    municipal?: XOR<MunicipalScalarRelationFilter, MunicipalWhereInput>
    province?: XOR<ProvinceScalarRelationFilter, ProvinceWhereInput>
    region?: XOR<RegionScalarRelationFilter, RegionWhereInput>
    Department?: DepartmentListRelationFilter
    Account?: AccountListRelationFilter
    User?: UserListRelationFilter
    Position?: PositionListRelationFilter
    SalaryGrade?: SalaryGradeListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    BirthdayNoticeResponse?: BirthdayNoticeResponseListRelationFilter
    InvitationLink?: InvitationLinkListRelationFilter
    Supplies?: SuppliesListRelationFilter
    SupplyBatchOrder?: SupplyBatchOrderListRelationFilter
    Group?: GroupListRelationFilter
    AdminProfile?: XOR<AdminProfileNullableScalarRelationFilter, AdminProfileWhereInput> | null
    InventoryBox?: InventoryBoxListRelationFilter
    SuppliesDataSet?: SuppliesDataSetListRelationFilter
  }, "id" | "name">

  export type LineOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    password?: SortOrderInput | SortOrder
    barangayId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    regionId?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    adminProfileId?: SortOrderInput | SortOrder
    _count?: LineCountOrderByAggregateInput
    _avg?: LineAvgOrderByAggregateInput
    _max?: LineMaxOrderByAggregateInput
    _min?: LineMinOrderByAggregateInput
    _sum?: LineSumOrderByAggregateInput
  }

  export type LineScalarWhereWithAggregatesInput = {
    AND?: LineScalarWhereWithAggregatesInput | LineScalarWhereWithAggregatesInput[]
    OR?: LineScalarWhereWithAggregatesInput[]
    NOT?: LineScalarWhereWithAggregatesInput | LineScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Line"> | string
    name?: StringWithAggregatesFilter<"Line"> | string
    password?: StringNullableWithAggregatesFilter<"Line"> | string | null
    barangayId?: StringWithAggregatesFilter<"Line"> | string
    municipalId?: StringWithAggregatesFilter<"Line"> | string
    provinceId?: StringWithAggregatesFilter<"Line"> | string
    regionId?: StringWithAggregatesFilter<"Line"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Line"> | Date | string
    status?: IntWithAggregatesFilter<"Line"> | number
    adminProfileId?: StringNullableWithAggregatesFilter<"Line"> | string | null
  }

  export type InvitationLinkWhereInput = {
    AND?: InvitationLinkWhereInput | InvitationLinkWhereInput[]
    OR?: InvitationLinkWhereInput[]
    NOT?: InvitationLinkWhereInput | InvitationLinkWhereInput[]
    id?: StringFilter<"InvitationLink"> | string
    code?: StringFilter<"InvitationLink"> | string
    createdAt?: DateTimeFilter<"InvitationLink"> | Date | string
    expiresAt?: DateTimeNullableFilter<"InvitationLink"> | Date | string | null
    used?: BoolFilter<"InvitationLink"> | boolean
    url?: StringFilter<"InvitationLink"> | string
    lineId?: StringFilter<"InvitationLink"> | string
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
  }

  export type InvitationLinkOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    used?: SortOrder
    url?: SortOrder
    lineId?: SortOrder
    line?: LineOrderByWithRelationInput
  }

  export type InvitationLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InvitationLinkWhereInput | InvitationLinkWhereInput[]
    OR?: InvitationLinkWhereInput[]
    NOT?: InvitationLinkWhereInput | InvitationLinkWhereInput[]
    code?: StringFilter<"InvitationLink"> | string
    createdAt?: DateTimeFilter<"InvitationLink"> | Date | string
    expiresAt?: DateTimeNullableFilter<"InvitationLink"> | Date | string | null
    used?: BoolFilter<"InvitationLink"> | boolean
    url?: StringFilter<"InvitationLink"> | string
    lineId?: StringFilter<"InvitationLink"> | string
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
  }, "id">

  export type InvitationLinkOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    used?: SortOrder
    url?: SortOrder
    lineId?: SortOrder
    _count?: InvitationLinkCountOrderByAggregateInput
    _max?: InvitationLinkMaxOrderByAggregateInput
    _min?: InvitationLinkMinOrderByAggregateInput
  }

  export type InvitationLinkScalarWhereWithAggregatesInput = {
    AND?: InvitationLinkScalarWhereWithAggregatesInput | InvitationLinkScalarWhereWithAggregatesInput[]
    OR?: InvitationLinkScalarWhereWithAggregatesInput[]
    NOT?: InvitationLinkScalarWhereWithAggregatesInput | InvitationLinkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InvitationLink"> | string
    code?: StringWithAggregatesFilter<"InvitationLink"> | string
    createdAt?: DateTimeWithAggregatesFilter<"InvitationLink"> | Date | string
    expiresAt?: DateTimeNullableWithAggregatesFilter<"InvitationLink"> | Date | string | null
    used?: BoolWithAggregatesFilter<"InvitationLink"> | boolean
    url?: StringWithAggregatesFilter<"InvitationLink"> | string
    lineId?: StringWithAggregatesFilter<"InvitationLink"> | string
  }

  export type AssetsWhereInput = {
    AND?: AssetsWhereInput | AssetsWhereInput[]
    OR?: AssetsWhereInput[]
    NOT?: AssetsWhereInput | AssetsWhereInput[]
    id?: StringFilter<"Assets"> | string
    url?: StringFilter<"Assets"> | string
    fileSize?: StringFilter<"Assets"> | string
    fileType?: StringFilter<"Assets"> | string
    fileName?: StringFilter<"Assets"> | string
    createdAt?: DateTimeFilter<"Assets"> | Date | string
    suppliesId?: StringNullableFilter<"Assets"> | string | null
    Supplies?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
    ProfilePicture?: ProfilePictureListRelationFilter
    SupplyOrderSupport?: SupplyOrderSupportFileListRelationFilter
  }

  export type AssetsOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    fileName?: SortOrder
    createdAt?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    Supplies?: SuppliesOrderByWithRelationInput
    ProfilePicture?: ProfilePictureOrderByRelationAggregateInput
    SupplyOrderSupport?: SupplyOrderSupportFileOrderByRelationAggregateInput
  }

  export type AssetsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssetsWhereInput | AssetsWhereInput[]
    OR?: AssetsWhereInput[]
    NOT?: AssetsWhereInput | AssetsWhereInput[]
    url?: StringFilter<"Assets"> | string
    fileSize?: StringFilter<"Assets"> | string
    fileType?: StringFilter<"Assets"> | string
    fileName?: StringFilter<"Assets"> | string
    createdAt?: DateTimeFilter<"Assets"> | Date | string
    suppliesId?: StringNullableFilter<"Assets"> | string | null
    Supplies?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
    ProfilePicture?: ProfilePictureListRelationFilter
    SupplyOrderSupport?: SupplyOrderSupportFileListRelationFilter
  }, "id">

  export type AssetsOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    fileName?: SortOrder
    createdAt?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    _count?: AssetsCountOrderByAggregateInput
    _max?: AssetsMaxOrderByAggregateInput
    _min?: AssetsMinOrderByAggregateInput
  }

  export type AssetsScalarWhereWithAggregatesInput = {
    AND?: AssetsScalarWhereWithAggregatesInput | AssetsScalarWhereWithAggregatesInput[]
    OR?: AssetsScalarWhereWithAggregatesInput[]
    NOT?: AssetsScalarWhereWithAggregatesInput | AssetsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Assets"> | string
    url?: StringWithAggregatesFilter<"Assets"> | string
    fileSize?: StringWithAggregatesFilter<"Assets"> | string
    fileType?: StringWithAggregatesFilter<"Assets"> | string
    fileName?: StringWithAggregatesFilter<"Assets"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Assets"> | Date | string
    suppliesId?: StringNullableWithAggregatesFilter<"Assets"> | string | null
  }

  export type ProfilePictureWhereInput = {
    AND?: ProfilePictureWhereInput | ProfilePictureWhereInput[]
    OR?: ProfilePictureWhereInput[]
    NOT?: ProfilePictureWhereInput | ProfilePictureWhereInput[]
    id?: StringFilter<"ProfilePicture"> | string
    assetsId?: StringFilter<"ProfilePicture"> | string
    userId?: StringFilter<"ProfilePicture"> | string
    createdAt?: DateTimeFilter<"ProfilePicture"> | Date | string
    asset?: XOR<AssetsScalarRelationFilter, AssetsWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProfilePictureOrderByWithRelationInput = {
    id?: SortOrder
    assetsId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    asset?: AssetsOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ProfilePictureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ProfilePictureWhereInput | ProfilePictureWhereInput[]
    OR?: ProfilePictureWhereInput[]
    NOT?: ProfilePictureWhereInput | ProfilePictureWhereInput[]
    assetsId?: StringFilter<"ProfilePicture"> | string
    createdAt?: DateTimeFilter<"ProfilePicture"> | Date | string
    asset?: XOR<AssetsScalarRelationFilter, AssetsWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type ProfilePictureOrderByWithAggregationInput = {
    id?: SortOrder
    assetsId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    _count?: ProfilePictureCountOrderByAggregateInput
    _max?: ProfilePictureMaxOrderByAggregateInput
    _min?: ProfilePictureMinOrderByAggregateInput
  }

  export type ProfilePictureScalarWhereWithAggregatesInput = {
    AND?: ProfilePictureScalarWhereWithAggregatesInput | ProfilePictureScalarWhereWithAggregatesInput[]
    OR?: ProfilePictureScalarWhereWithAggregatesInput[]
    NOT?: ProfilePictureScalarWhereWithAggregatesInput | ProfilePictureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProfilePicture"> | string
    assetsId?: StringWithAggregatesFilter<"ProfilePicture"> | string
    userId?: StringWithAggregatesFilter<"ProfilePicture"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProfilePicture"> | Date | string
  }

  export type InventoryBoxWhereInput = {
    AND?: InventoryBoxWhereInput | InventoryBoxWhereInput[]
    OR?: InventoryBoxWhereInput[]
    NOT?: InventoryBoxWhereInput | InventoryBoxWhereInput[]
    id?: StringFilter<"InventoryBox"> | string
    name?: StringFilter<"InventoryBox"> | string
    code?: IntFilter<"InventoryBox"> | number
    createdAt?: DateTimeFilter<"InventoryBox"> | Date | string
    lineId?: StringFilter<"InventoryBox"> | string
    userId?: StringFilter<"InventoryBox"> | string
    departmentId?: StringNullableFilter<"InventoryBox"> | string | null
    batch?: SupplyBatchOrderListRelationFilter
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    unit?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    SupplyBatch?: SupplyBatchListRelationFilter
    ContainerAllowedUser?: ContainerAllowedUserListRelationFilter
    SuppliesDataSet?: SuppliesDataSetListRelationFilter
  }

  export type InventoryBoxOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    batch?: SupplyBatchOrderOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    unit?: DepartmentOrderByWithRelationInput
    InventoryAccessLogs?: InventoryAccessLogsOrderByRelationAggregateInput
    SupplyBatch?: SupplyBatchOrderByRelationAggregateInput
    ContainerAllowedUser?: ContainerAllowedUserOrderByRelationAggregateInput
    SuppliesDataSet?: SuppliesDataSetOrderByRelationAggregateInput
  }

  export type InventoryBoxWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    code?: number
    AND?: InventoryBoxWhereInput | InventoryBoxWhereInput[]
    OR?: InventoryBoxWhereInput[]
    NOT?: InventoryBoxWhereInput | InventoryBoxWhereInput[]
    createdAt?: DateTimeFilter<"InventoryBox"> | Date | string
    lineId?: StringFilter<"InventoryBox"> | string
    userId?: StringFilter<"InventoryBox"> | string
    departmentId?: StringNullableFilter<"InventoryBox"> | string | null
    batch?: SupplyBatchOrderListRelationFilter
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    unit?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    SupplyBatch?: SupplyBatchListRelationFilter
    ContainerAllowedUser?: ContainerAllowedUserListRelationFilter
    SuppliesDataSet?: SuppliesDataSetListRelationFilter
  }, "id" | "name" | "code">

  export type InventoryBoxOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    _count?: InventoryBoxCountOrderByAggregateInput
    _avg?: InventoryBoxAvgOrderByAggregateInput
    _max?: InventoryBoxMaxOrderByAggregateInput
    _min?: InventoryBoxMinOrderByAggregateInput
    _sum?: InventoryBoxSumOrderByAggregateInput
  }

  export type InventoryBoxScalarWhereWithAggregatesInput = {
    AND?: InventoryBoxScalarWhereWithAggregatesInput | InventoryBoxScalarWhereWithAggregatesInput[]
    OR?: InventoryBoxScalarWhereWithAggregatesInput[]
    NOT?: InventoryBoxScalarWhereWithAggregatesInput | InventoryBoxScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryBox"> | string
    name?: StringWithAggregatesFilter<"InventoryBox"> | string
    code?: IntWithAggregatesFilter<"InventoryBox"> | number
    createdAt?: DateTimeWithAggregatesFilter<"InventoryBox"> | Date | string
    lineId?: StringWithAggregatesFilter<"InventoryBox"> | string
    userId?: StringWithAggregatesFilter<"InventoryBox"> | string
    departmentId?: StringNullableWithAggregatesFilter<"InventoryBox"> | string | null
  }

  export type ContainerAllowedUserWhereInput = {
    AND?: ContainerAllowedUserWhereInput | ContainerAllowedUserWhereInput[]
    OR?: ContainerAllowedUserWhereInput[]
    NOT?: ContainerAllowedUserWhereInput | ContainerAllowedUserWhereInput[]
    id?: StringFilter<"ContainerAllowedUser"> | string
    userId?: StringNullableFilter<"ContainerAllowedUser"> | string | null
    inventoryBoxId?: StringFilter<"ContainerAllowedUser"> | string
    grantByUserId?: StringFilter<"ContainerAllowedUser"> | string
    timestamp?: DateTimeFilter<"ContainerAllowedUser"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    container?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    grantBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ContainerAllowedUserOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    inventoryBoxId?: SortOrder
    grantByUserId?: SortOrder
    timestamp?: SortOrder
    user?: UserOrderByWithRelationInput
    container?: InventoryBoxOrderByWithRelationInput
    grantBy?: UserOrderByWithRelationInput
  }

  export type ContainerAllowedUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ContainerAllowedUserWhereInput | ContainerAllowedUserWhereInput[]
    OR?: ContainerAllowedUserWhereInput[]
    NOT?: ContainerAllowedUserWhereInput | ContainerAllowedUserWhereInput[]
    userId?: StringNullableFilter<"ContainerAllowedUser"> | string | null
    inventoryBoxId?: StringFilter<"ContainerAllowedUser"> | string
    grantByUserId?: StringFilter<"ContainerAllowedUser"> | string
    timestamp?: DateTimeFilter<"ContainerAllowedUser"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    container?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    grantBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ContainerAllowedUserOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    inventoryBoxId?: SortOrder
    grantByUserId?: SortOrder
    timestamp?: SortOrder
    _count?: ContainerAllowedUserCountOrderByAggregateInput
    _max?: ContainerAllowedUserMaxOrderByAggregateInput
    _min?: ContainerAllowedUserMinOrderByAggregateInput
  }

  export type ContainerAllowedUserScalarWhereWithAggregatesInput = {
    AND?: ContainerAllowedUserScalarWhereWithAggregatesInput | ContainerAllowedUserScalarWhereWithAggregatesInput[]
    OR?: ContainerAllowedUserScalarWhereWithAggregatesInput[]
    NOT?: ContainerAllowedUserScalarWhereWithAggregatesInput | ContainerAllowedUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ContainerAllowedUser"> | string
    userId?: StringNullableWithAggregatesFilter<"ContainerAllowedUser"> | string | null
    inventoryBoxId?: StringWithAggregatesFilter<"ContainerAllowedUser"> | string
    grantByUserId?: StringWithAggregatesFilter<"ContainerAllowedUser"> | string
    timestamp?: DateTimeWithAggregatesFilter<"ContainerAllowedUser"> | Date | string
  }

  export type InventoryAccessLogsWhereInput = {
    AND?: InventoryAccessLogsWhereInput | InventoryAccessLogsWhereInput[]
    OR?: InventoryAccessLogsWhereInput[]
    NOT?: InventoryAccessLogsWhereInput | InventoryAccessLogsWhereInput[]
    id?: StringFilter<"InventoryAccessLogs"> | string
    userId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    timestamp?: DateTimeFilter<"InventoryAccessLogs"> | Date | string
    inventoryBoxId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    action?: StringFilter<"InventoryAccessLogs"> | string
    suppliesId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    box?: XOR<InventoryBoxNullableScalarRelationFilter, InventoryBoxWhereInput> | null
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }

  export type InventoryAccessLogsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    inventoryBoxId?: SortOrderInput | SortOrder
    action?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    box?: InventoryBoxOrderByWithRelationInput
    supply?: SuppliesOrderByWithRelationInput
  }

  export type InventoryAccessLogsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InventoryAccessLogsWhereInput | InventoryAccessLogsWhereInput[]
    OR?: InventoryAccessLogsWhereInput[]
    NOT?: InventoryAccessLogsWhereInput | InventoryAccessLogsWhereInput[]
    userId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    timestamp?: DateTimeFilter<"InventoryAccessLogs"> | Date | string
    inventoryBoxId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    action?: StringFilter<"InventoryAccessLogs"> | string
    suppliesId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    box?: XOR<InventoryBoxNullableScalarRelationFilter, InventoryBoxWhereInput> | null
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }, "id">

  export type InventoryAccessLogsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    inventoryBoxId?: SortOrderInput | SortOrder
    action?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    _count?: InventoryAccessLogsCountOrderByAggregateInput
    _max?: InventoryAccessLogsMaxOrderByAggregateInput
    _min?: InventoryAccessLogsMinOrderByAggregateInput
  }

  export type InventoryAccessLogsScalarWhereWithAggregatesInput = {
    AND?: InventoryAccessLogsScalarWhereWithAggregatesInput | InventoryAccessLogsScalarWhereWithAggregatesInput[]
    OR?: InventoryAccessLogsScalarWhereWithAggregatesInput[]
    NOT?: InventoryAccessLogsScalarWhereWithAggregatesInput | InventoryAccessLogsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InventoryAccessLogs"> | string
    userId?: StringNullableWithAggregatesFilter<"InventoryAccessLogs"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"InventoryAccessLogs"> | Date | string
    inventoryBoxId?: StringNullableWithAggregatesFilter<"InventoryAccessLogs"> | string | null
    action?: StringWithAggregatesFilter<"InventoryAccessLogs"> | string
    suppliesId?: StringNullableWithAggregatesFilter<"InventoryAccessLogs"> | string | null
  }

  export type SuppliesWhereInput = {
    AND?: SuppliesWhereInput | SuppliesWhereInput[]
    OR?: SuppliesWhereInput[]
    NOT?: SuppliesWhereInput | SuppliesWhereInput[]
    id?: StringFilter<"Supplies"> | string
    code?: IntFilter<"Supplies"> | number
    consumable?: BoolFilter<"Supplies"> | boolean
    item?: StringFilter<"Supplies"> | string
    description?: StringNullableFilter<"Supplies"> | string | null
    quantity?: IntFilter<"Supplies"> | number
    notifyAtStockOf?: IntFilter<"Supplies"> | number
    price?: FloatFilter<"Supplies"> | number
    createdAt?: DateTimeFilter<"Supplies"> | Date | string
    updatedAt?: DateTimeFilter<"Supplies"> | Date | string
    lineId?: StringFilter<"Supplies"> | string
    userId?: StringNullableFilter<"Supplies"> | string | null
    condition?: StringNullableFilter<"Supplies"> | string | null
    status?: StringNullableFilter<"Supplies"> | string | null
    suppliesCategoryId?: StringNullableFilter<"Supplies"> | string | null
    suppliesQualityId?: StringNullableFilter<"Supplies"> | string | null
    suppliesDataSetId?: StringNullableFilter<"Supplies"> | string | null
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    SuppliesRecord?: SuppliesRecordListRelationFilter
    asset?: AssetsListRelationFilter
    Part?: XOR<SuppliesRecordNullableScalarRelationFilter, SuppliesRecordWhereInput> | null
    TransferredSupplies?: TransferredSuppliesListRelationFilter
    SuppliesCategory?: XOR<SuppliesCategoryNullableScalarRelationFilter, SuppliesCategoryWhereInput> | null
    SupplieRecieveHistory?: SupplieRecieveHistoryListRelationFilter
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    SupplyOrder?: SupplyOrderListRelationFilter
    SupplyBatchItem?: XOR<SupplyBatchItemNullableScalarRelationFilter, SupplyBatchItemWhereInput> | null
    SupplyPriceTrack?: SupplyPriceTrackListRelationFilter
    SuppliesQuality?: XOR<SuppliesQualityNullableScalarRelationFilter, SuppliesQualityWhereInput> | null
    SupplyStockTrack?: SupplyStockTrackListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
  }

  export type SuppliesOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    consumable?: SortOrder
    item?: SortOrder
    description?: SortOrderInput | SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrderInput | SortOrder
    condition?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    suppliesCategoryId?: SortOrderInput | SortOrder
    suppliesQualityId?: SortOrderInput | SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    line?: LineOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    SuppliesRecord?: SuppliesRecordOrderByRelationAggregateInput
    asset?: AssetsOrderByRelationAggregateInput
    Part?: SuppliesRecordOrderByWithRelationInput
    TransferredSupplies?: TransferredSuppliesOrderByRelationAggregateInput
    SuppliesCategory?: SuppliesCategoryOrderByWithRelationInput
    SupplieRecieveHistory?: SupplieRecieveHistoryOrderByRelationAggregateInput
    InventoryAccessLogs?: InventoryAccessLogsOrderByRelationAggregateInput
    SupplyOrder?: SupplyOrderOrderByRelationAggregateInput
    SupplyBatchItem?: SupplyBatchItemOrderByWithRelationInput
    SupplyPriceTrack?: SupplyPriceTrackOrderByRelationAggregateInput
    SuppliesQuality?: SuppliesQualityOrderByWithRelationInput
    SupplyStockTrack?: SupplyStockTrackOrderByRelationAggregateInput
    SuppliesDataSet?: SuppliesDataSetOrderByWithRelationInput
  }

  export type SuppliesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: number
    AND?: SuppliesWhereInput | SuppliesWhereInput[]
    OR?: SuppliesWhereInput[]
    NOT?: SuppliesWhereInput | SuppliesWhereInput[]
    consumable?: BoolFilter<"Supplies"> | boolean
    item?: StringFilter<"Supplies"> | string
    description?: StringNullableFilter<"Supplies"> | string | null
    quantity?: IntFilter<"Supplies"> | number
    notifyAtStockOf?: IntFilter<"Supplies"> | number
    price?: FloatFilter<"Supplies"> | number
    createdAt?: DateTimeFilter<"Supplies"> | Date | string
    updatedAt?: DateTimeFilter<"Supplies"> | Date | string
    lineId?: StringFilter<"Supplies"> | string
    userId?: StringNullableFilter<"Supplies"> | string | null
    condition?: StringNullableFilter<"Supplies"> | string | null
    status?: StringNullableFilter<"Supplies"> | string | null
    suppliesCategoryId?: StringNullableFilter<"Supplies"> | string | null
    suppliesQualityId?: StringNullableFilter<"Supplies"> | string | null
    suppliesDataSetId?: StringNullableFilter<"Supplies"> | string | null
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    SuppliesRecord?: SuppliesRecordListRelationFilter
    asset?: AssetsListRelationFilter
    Part?: XOR<SuppliesRecordNullableScalarRelationFilter, SuppliesRecordWhereInput> | null
    TransferredSupplies?: TransferredSuppliesListRelationFilter
    SuppliesCategory?: XOR<SuppliesCategoryNullableScalarRelationFilter, SuppliesCategoryWhereInput> | null
    SupplieRecieveHistory?: SupplieRecieveHistoryListRelationFilter
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    SupplyOrder?: SupplyOrderListRelationFilter
    SupplyBatchItem?: XOR<SupplyBatchItemNullableScalarRelationFilter, SupplyBatchItemWhereInput> | null
    SupplyPriceTrack?: SupplyPriceTrackListRelationFilter
    SuppliesQuality?: XOR<SuppliesQualityNullableScalarRelationFilter, SuppliesQualityWhereInput> | null
    SupplyStockTrack?: SupplyStockTrackListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
  }, "id" | "code">

  export type SuppliesOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    consumable?: SortOrder
    item?: SortOrder
    description?: SortOrderInput | SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrderInput | SortOrder
    condition?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    suppliesCategoryId?: SortOrderInput | SortOrder
    suppliesQualityId?: SortOrderInput | SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    _count?: SuppliesCountOrderByAggregateInput
    _avg?: SuppliesAvgOrderByAggregateInput
    _max?: SuppliesMaxOrderByAggregateInput
    _min?: SuppliesMinOrderByAggregateInput
    _sum?: SuppliesSumOrderByAggregateInput
  }

  export type SuppliesScalarWhereWithAggregatesInput = {
    AND?: SuppliesScalarWhereWithAggregatesInput | SuppliesScalarWhereWithAggregatesInput[]
    OR?: SuppliesScalarWhereWithAggregatesInput[]
    NOT?: SuppliesScalarWhereWithAggregatesInput | SuppliesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Supplies"> | string
    code?: IntWithAggregatesFilter<"Supplies"> | number
    consumable?: BoolWithAggregatesFilter<"Supplies"> | boolean
    item?: StringWithAggregatesFilter<"Supplies"> | string
    description?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    quantity?: IntWithAggregatesFilter<"Supplies"> | number
    notifyAtStockOf?: IntWithAggregatesFilter<"Supplies"> | number
    price?: FloatWithAggregatesFilter<"Supplies"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Supplies"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Supplies"> | Date | string
    lineId?: StringWithAggregatesFilter<"Supplies"> | string
    userId?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    condition?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    status?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    suppliesCategoryId?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    suppliesQualityId?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
    suppliesDataSetId?: StringNullableWithAggregatesFilter<"Supplies"> | string | null
  }

  export type SupplyBatchWhereInput = {
    AND?: SupplyBatchWhereInput | SupplyBatchWhereInput[]
    OR?: SupplyBatchWhereInput[]
    NOT?: SupplyBatchWhereInput | SupplyBatchWhereInput[]
    id?: StringFilter<"SupplyBatch"> | string
    timestamp?: DateTimeFilter<"SupplyBatch"> | Date | string
    title?: StringFilter<"SupplyBatch"> | string
    inventoryBoxId?: StringFilter<"SupplyBatch"> | string
    suppliesDataSetId?: StringNullableFilter<"SupplyBatch"> | string | null
    box?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    SupplyBatchItem?: SupplyBatchItemListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
  }

  export type SupplyBatchOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    inventoryBoxId?: SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    box?: InventoryBoxOrderByWithRelationInput
    SupplyBatchItem?: SupplyBatchItemOrderByRelationAggregateInput
    SuppliesDataSet?: SuppliesDataSetOrderByWithRelationInput
  }

  export type SupplyBatchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyBatchWhereInput | SupplyBatchWhereInput[]
    OR?: SupplyBatchWhereInput[]
    NOT?: SupplyBatchWhereInput | SupplyBatchWhereInput[]
    timestamp?: DateTimeFilter<"SupplyBatch"> | Date | string
    title?: StringFilter<"SupplyBatch"> | string
    inventoryBoxId?: StringFilter<"SupplyBatch"> | string
    suppliesDataSetId?: StringNullableFilter<"SupplyBatch"> | string | null
    box?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    SupplyBatchItem?: SupplyBatchItemListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
  }, "id">

  export type SupplyBatchOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    inventoryBoxId?: SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    _count?: SupplyBatchCountOrderByAggregateInput
    _max?: SupplyBatchMaxOrderByAggregateInput
    _min?: SupplyBatchMinOrderByAggregateInput
  }

  export type SupplyBatchScalarWhereWithAggregatesInput = {
    AND?: SupplyBatchScalarWhereWithAggregatesInput | SupplyBatchScalarWhereWithAggregatesInput[]
    OR?: SupplyBatchScalarWhereWithAggregatesInput[]
    NOT?: SupplyBatchScalarWhereWithAggregatesInput | SupplyBatchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyBatch"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SupplyBatch"> | Date | string
    title?: StringWithAggregatesFilter<"SupplyBatch"> | string
    inventoryBoxId?: StringWithAggregatesFilter<"SupplyBatch"> | string
    suppliesDataSetId?: StringNullableWithAggregatesFilter<"SupplyBatch"> | string | null
  }

  export type SupplyBatchItemWhereInput = {
    AND?: SupplyBatchItemWhereInput | SupplyBatchItemWhereInput[]
    OR?: SupplyBatchItemWhereInput[]
    NOT?: SupplyBatchItemWhereInput | SupplyBatchItemWhereInput[]
    id?: StringFilter<"SupplyBatchItem"> | string
    supplyBatchId?: StringFilter<"SupplyBatchItem"> | string
    suppliesId?: StringNullableFilter<"SupplyBatchItem"> | string | null
    timestamp?: DateTimeFilter<"SupplyBatchItem"> | Date | string
    batch?: XOR<SupplyBatchScalarRelationFilter, SupplyBatchWhereInput>
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }

  export type SupplyBatchItemOrderByWithRelationInput = {
    id?: SortOrder
    supplyBatchId?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    batch?: SupplyBatchOrderByWithRelationInput
    supply?: SuppliesOrderByWithRelationInput
  }

  export type SupplyBatchItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    suppliesId?: string
    AND?: SupplyBatchItemWhereInput | SupplyBatchItemWhereInput[]
    OR?: SupplyBatchItemWhereInput[]
    NOT?: SupplyBatchItemWhereInput | SupplyBatchItemWhereInput[]
    supplyBatchId?: StringFilter<"SupplyBatchItem"> | string
    timestamp?: DateTimeFilter<"SupplyBatchItem"> | Date | string
    batch?: XOR<SupplyBatchScalarRelationFilter, SupplyBatchWhereInput>
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }, "id" | "suppliesId">

  export type SupplyBatchItemOrderByWithAggregationInput = {
    id?: SortOrder
    supplyBatchId?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: SupplyBatchItemCountOrderByAggregateInput
    _max?: SupplyBatchItemMaxOrderByAggregateInput
    _min?: SupplyBatchItemMinOrderByAggregateInput
  }

  export type SupplyBatchItemScalarWhereWithAggregatesInput = {
    AND?: SupplyBatchItemScalarWhereWithAggregatesInput | SupplyBatchItemScalarWhereWithAggregatesInput[]
    OR?: SupplyBatchItemScalarWhereWithAggregatesInput[]
    NOT?: SupplyBatchItemScalarWhereWithAggregatesInput | SupplyBatchItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyBatchItem"> | string
    supplyBatchId?: StringWithAggregatesFilter<"SupplyBatchItem"> | string
    suppliesId?: StringNullableWithAggregatesFilter<"SupplyBatchItem"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"SupplyBatchItem"> | Date | string
  }

  export type SupplyBatchOrderWhereInput = {
    AND?: SupplyBatchOrderWhereInput | SupplyBatchOrderWhereInput[]
    OR?: SupplyBatchOrderWhereInput[]
    NOT?: SupplyBatchOrderWhereInput | SupplyBatchOrderWhereInput[]
    id?: StringFilter<"SupplyBatchOrder"> | string
    timestamp?: DateTimeFilter<"SupplyBatchOrder"> | Date | string
    title?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    userId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    status?: IntFilter<"SupplyBatchOrder"> | number
    lineId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    inventoryBoxId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    order?: SupplyOrderListRelationFilter
    files?: SupplyOrderSupportFileListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    InventoryBox?: XOR<InventoryBoxNullableScalarRelationFilter, InventoryBoxWhereInput> | null
  }

  export type SupplyBatchOrderOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    status?: SortOrder
    lineId?: SortOrderInput | SortOrder
    inventoryBoxId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    order?: SupplyOrderOrderByRelationAggregateInput
    files?: SupplyOrderSupportFileOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    InventoryBox?: InventoryBoxOrderByWithRelationInput
  }

  export type SupplyBatchOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyBatchOrderWhereInput | SupplyBatchOrderWhereInput[]
    OR?: SupplyBatchOrderWhereInput[]
    NOT?: SupplyBatchOrderWhereInput | SupplyBatchOrderWhereInput[]
    timestamp?: DateTimeFilter<"SupplyBatchOrder"> | Date | string
    title?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    userId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    status?: IntFilter<"SupplyBatchOrder"> | number
    lineId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    inventoryBoxId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    order?: SupplyOrderListRelationFilter
    files?: SupplyOrderSupportFileListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    InventoryBox?: XOR<InventoryBoxNullableScalarRelationFilter, InventoryBoxWhereInput> | null
  }, "id">

  export type SupplyBatchOrderOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    status?: SortOrder
    lineId?: SortOrderInput | SortOrder
    inventoryBoxId?: SortOrderInput | SortOrder
    _count?: SupplyBatchOrderCountOrderByAggregateInput
    _avg?: SupplyBatchOrderAvgOrderByAggregateInput
    _max?: SupplyBatchOrderMaxOrderByAggregateInput
    _min?: SupplyBatchOrderMinOrderByAggregateInput
    _sum?: SupplyBatchOrderSumOrderByAggregateInput
  }

  export type SupplyBatchOrderScalarWhereWithAggregatesInput = {
    AND?: SupplyBatchOrderScalarWhereWithAggregatesInput | SupplyBatchOrderScalarWhereWithAggregatesInput[]
    OR?: SupplyBatchOrderScalarWhereWithAggregatesInput[]
    NOT?: SupplyBatchOrderScalarWhereWithAggregatesInput | SupplyBatchOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyBatchOrder"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SupplyBatchOrder"> | Date | string
    title?: StringNullableWithAggregatesFilter<"SupplyBatchOrder"> | string | null
    userId?: StringNullableWithAggregatesFilter<"SupplyBatchOrder"> | string | null
    status?: IntWithAggregatesFilter<"SupplyBatchOrder"> | number
    lineId?: StringNullableWithAggregatesFilter<"SupplyBatchOrder"> | string | null
    inventoryBoxId?: StringNullableWithAggregatesFilter<"SupplyBatchOrder"> | string | null
  }

  export type SupplyOrderSupportFileWhereInput = {
    AND?: SupplyOrderSupportFileWhereInput | SupplyOrderSupportFileWhereInput[]
    OR?: SupplyOrderSupportFileWhereInput[]
    NOT?: SupplyOrderSupportFileWhereInput | SupplyOrderSupportFileWhereInput[]
    id?: StringFilter<"SupplyOrderSupportFile"> | string
    assetsId?: StringFilter<"SupplyOrderSupportFile"> | string
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrderSupportFile"> | string | null
    file?: XOR<AssetsScalarRelationFilter, AssetsWhereInput>
    SupplyBatchOrder?: XOR<SupplyBatchOrderNullableScalarRelationFilter, SupplyBatchOrderWhereInput> | null
  }

  export type SupplyOrderSupportFileOrderByWithRelationInput = {
    id?: SortOrder
    assetsId?: SortOrder
    supplyBatchOrderId?: SortOrderInput | SortOrder
    file?: AssetsOrderByWithRelationInput
    SupplyBatchOrder?: SupplyBatchOrderOrderByWithRelationInput
  }

  export type SupplyOrderSupportFileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyOrderSupportFileWhereInput | SupplyOrderSupportFileWhereInput[]
    OR?: SupplyOrderSupportFileWhereInput[]
    NOT?: SupplyOrderSupportFileWhereInput | SupplyOrderSupportFileWhereInput[]
    assetsId?: StringFilter<"SupplyOrderSupportFile"> | string
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrderSupportFile"> | string | null
    file?: XOR<AssetsScalarRelationFilter, AssetsWhereInput>
    SupplyBatchOrder?: XOR<SupplyBatchOrderNullableScalarRelationFilter, SupplyBatchOrderWhereInput> | null
  }, "id">

  export type SupplyOrderSupportFileOrderByWithAggregationInput = {
    id?: SortOrder
    assetsId?: SortOrder
    supplyBatchOrderId?: SortOrderInput | SortOrder
    _count?: SupplyOrderSupportFileCountOrderByAggregateInput
    _max?: SupplyOrderSupportFileMaxOrderByAggregateInput
    _min?: SupplyOrderSupportFileMinOrderByAggregateInput
  }

  export type SupplyOrderSupportFileScalarWhereWithAggregatesInput = {
    AND?: SupplyOrderSupportFileScalarWhereWithAggregatesInput | SupplyOrderSupportFileScalarWhereWithAggregatesInput[]
    OR?: SupplyOrderSupportFileScalarWhereWithAggregatesInput[]
    NOT?: SupplyOrderSupportFileScalarWhereWithAggregatesInput | SupplyOrderSupportFileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyOrderSupportFile"> | string
    assetsId?: StringWithAggregatesFilter<"SupplyOrderSupportFile"> | string
    supplyBatchOrderId?: StringNullableWithAggregatesFilter<"SupplyOrderSupportFile"> | string | null
  }

  export type SupplyOrderWhereInput = {
    AND?: SupplyOrderWhereInput | SupplyOrderWhereInput[]
    OR?: SupplyOrderWhereInput[]
    NOT?: SupplyOrderWhereInput | SupplyOrderWhereInput[]
    id?: StringFilter<"SupplyOrder"> | string
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrder"> | string | null
    suppliesId?: StringFilter<"SupplyOrder"> | string
    quantity?: IntFilter<"SupplyOrder"> | number
    status?: StringFilter<"SupplyOrder"> | string
    suppliesQualityId?: StringFilter<"SupplyOrder"> | string
    SupplyBatchOrder?: XOR<SupplyBatchOrderNullableScalarRelationFilter, SupplyBatchOrderWhereInput> | null
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
    unit?: XOR<SuppliesQualityScalarRelationFilter, SuppliesQualityWhereInput>
  }

  export type SupplyOrderOrderByWithRelationInput = {
    id?: SortOrder
    supplyBatchOrderId?: SortOrderInput | SortOrder
    suppliesId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    suppliesQualityId?: SortOrder
    SupplyBatchOrder?: SupplyBatchOrderOrderByWithRelationInput
    supply?: SuppliesOrderByWithRelationInput
    unit?: SuppliesQualityOrderByWithRelationInput
  }

  export type SupplyOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyOrderWhereInput | SupplyOrderWhereInput[]
    OR?: SupplyOrderWhereInput[]
    NOT?: SupplyOrderWhereInput | SupplyOrderWhereInput[]
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrder"> | string | null
    suppliesId?: StringFilter<"SupplyOrder"> | string
    quantity?: IntFilter<"SupplyOrder"> | number
    status?: StringFilter<"SupplyOrder"> | string
    suppliesQualityId?: StringFilter<"SupplyOrder"> | string
    SupplyBatchOrder?: XOR<SupplyBatchOrderNullableScalarRelationFilter, SupplyBatchOrderWhereInput> | null
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
    unit?: XOR<SuppliesQualityScalarRelationFilter, SuppliesQualityWhereInput>
  }, "id">

  export type SupplyOrderOrderByWithAggregationInput = {
    id?: SortOrder
    supplyBatchOrderId?: SortOrderInput | SortOrder
    suppliesId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    suppliesQualityId?: SortOrder
    _count?: SupplyOrderCountOrderByAggregateInput
    _avg?: SupplyOrderAvgOrderByAggregateInput
    _max?: SupplyOrderMaxOrderByAggregateInput
    _min?: SupplyOrderMinOrderByAggregateInput
    _sum?: SupplyOrderSumOrderByAggregateInput
  }

  export type SupplyOrderScalarWhereWithAggregatesInput = {
    AND?: SupplyOrderScalarWhereWithAggregatesInput | SupplyOrderScalarWhereWithAggregatesInput[]
    OR?: SupplyOrderScalarWhereWithAggregatesInput[]
    NOT?: SupplyOrderScalarWhereWithAggregatesInput | SupplyOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyOrder"> | string
    supplyBatchOrderId?: StringNullableWithAggregatesFilter<"SupplyOrder"> | string | null
    suppliesId?: StringWithAggregatesFilter<"SupplyOrder"> | string
    quantity?: IntWithAggregatesFilter<"SupplyOrder"> | number
    status?: StringWithAggregatesFilter<"SupplyOrder"> | string
    suppliesQualityId?: StringWithAggregatesFilter<"SupplyOrder"> | string
  }

  export type SuppliesDataSetWhereInput = {
    AND?: SuppliesDataSetWhereInput | SuppliesDataSetWhereInput[]
    OR?: SuppliesDataSetWhereInput[]
    NOT?: SuppliesDataSetWhereInput | SuppliesDataSetWhereInput[]
    id?: StringFilter<"SuppliesDataSet"> | string
    title?: StringFilter<"SuppliesDataSet"> | string
    timestamp?: DateTimeFilter<"SuppliesDataSet"> | Date | string
    lineId?: StringFilter<"SuppliesDataSet"> | string
    inventoryBoxId?: StringFilter<"SuppliesDataSet"> | string
    unit?: SuppliesQualityListRelationFilter
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    container?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    list?: SupplyBatchListRelationFilter
    supplies?: SuppliesListRelationFilter
  }

  export type SuppliesDataSetOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    timestamp?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
    unit?: SuppliesQualityOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    container?: InventoryBoxOrderByWithRelationInput
    list?: SupplyBatchOrderByRelationAggregateInput
    supplies?: SuppliesOrderByRelationAggregateInput
  }

  export type SuppliesDataSetWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    title?: string
    AND?: SuppliesDataSetWhereInput | SuppliesDataSetWhereInput[]
    OR?: SuppliesDataSetWhereInput[]
    NOT?: SuppliesDataSetWhereInput | SuppliesDataSetWhereInput[]
    timestamp?: DateTimeFilter<"SuppliesDataSet"> | Date | string
    lineId?: StringFilter<"SuppliesDataSet"> | string
    inventoryBoxId?: StringFilter<"SuppliesDataSet"> | string
    unit?: SuppliesQualityListRelationFilter
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    container?: XOR<InventoryBoxScalarRelationFilter, InventoryBoxWhereInput>
    list?: SupplyBatchListRelationFilter
    supplies?: SuppliesListRelationFilter
  }, "id" | "title">

  export type SuppliesDataSetOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    timestamp?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
    _count?: SuppliesDataSetCountOrderByAggregateInput
    _max?: SuppliesDataSetMaxOrderByAggregateInput
    _min?: SuppliesDataSetMinOrderByAggregateInput
  }

  export type SuppliesDataSetScalarWhereWithAggregatesInput = {
    AND?: SuppliesDataSetScalarWhereWithAggregatesInput | SuppliesDataSetScalarWhereWithAggregatesInput[]
    OR?: SuppliesDataSetScalarWhereWithAggregatesInput[]
    NOT?: SuppliesDataSetScalarWhereWithAggregatesInput | SuppliesDataSetScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SuppliesDataSet"> | string
    title?: StringWithAggregatesFilter<"SuppliesDataSet"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SuppliesDataSet"> | Date | string
    lineId?: StringWithAggregatesFilter<"SuppliesDataSet"> | string
    inventoryBoxId?: StringWithAggregatesFilter<"SuppliesDataSet"> | string
  }

  export type SuppliesQualityWhereInput = {
    AND?: SuppliesQualityWhereInput | SuppliesQualityWhereInput[]
    OR?: SuppliesQualityWhereInput[]
    NOT?: SuppliesQualityWhereInput | SuppliesQualityWhereInput[]
    id?: StringFilter<"SuppliesQuality"> | string
    quality?: StringFilter<"SuppliesQuality"> | string
    perQuality?: IntFilter<"SuppliesQuality"> | number
    suppliesDataSetId?: StringNullableFilter<"SuppliesQuality"> | string | null
    supplies?: SuppliesListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
    SupplyOrder?: SupplyOrderListRelationFilter
  }

  export type SuppliesQualityOrderByWithRelationInput = {
    id?: SortOrder
    quality?: SortOrder
    perQuality?: SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    supplies?: SuppliesOrderByRelationAggregateInput
    SuppliesDataSet?: SuppliesDataSetOrderByWithRelationInput
    SupplyOrder?: SupplyOrderOrderByRelationAggregateInput
  }

  export type SuppliesQualityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    quality?: string
    AND?: SuppliesQualityWhereInput | SuppliesQualityWhereInput[]
    OR?: SuppliesQualityWhereInput[]
    NOT?: SuppliesQualityWhereInput | SuppliesQualityWhereInput[]
    perQuality?: IntFilter<"SuppliesQuality"> | number
    suppliesDataSetId?: StringNullableFilter<"SuppliesQuality"> | string | null
    supplies?: SuppliesListRelationFilter
    SuppliesDataSet?: XOR<SuppliesDataSetNullableScalarRelationFilter, SuppliesDataSetWhereInput> | null
    SupplyOrder?: SupplyOrderListRelationFilter
  }, "id" | "quality">

  export type SuppliesQualityOrderByWithAggregationInput = {
    id?: SortOrder
    quality?: SortOrder
    perQuality?: SortOrder
    suppliesDataSetId?: SortOrderInput | SortOrder
    _count?: SuppliesQualityCountOrderByAggregateInput
    _avg?: SuppliesQualityAvgOrderByAggregateInput
    _max?: SuppliesQualityMaxOrderByAggregateInput
    _min?: SuppliesQualityMinOrderByAggregateInput
    _sum?: SuppliesQualitySumOrderByAggregateInput
  }

  export type SuppliesQualityScalarWhereWithAggregatesInput = {
    AND?: SuppliesQualityScalarWhereWithAggregatesInput | SuppliesQualityScalarWhereWithAggregatesInput[]
    OR?: SuppliesQualityScalarWhereWithAggregatesInput[]
    NOT?: SuppliesQualityScalarWhereWithAggregatesInput | SuppliesQualityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SuppliesQuality"> | string
    quality?: StringWithAggregatesFilter<"SuppliesQuality"> | string
    perQuality?: IntWithAggregatesFilter<"SuppliesQuality"> | number
    suppliesDataSetId?: StringNullableWithAggregatesFilter<"SuppliesQuality"> | string | null
  }

  export type SupplyPriceTrackWhereInput = {
    AND?: SupplyPriceTrackWhereInput | SupplyPriceTrackWhereInput[]
    OR?: SupplyPriceTrackWhereInput[]
    NOT?: SupplyPriceTrackWhereInput | SupplyPriceTrackWhereInput[]
    id?: StringFilter<"SupplyPriceTrack"> | string
    value?: IntFilter<"SupplyPriceTrack"> | number
    suppliesId?: StringFilter<"SupplyPriceTrack"> | string
    timestamp?: DateTimeFilter<"SupplyPriceTrack"> | Date | string
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }

  export type SupplyPriceTrackOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    supply?: SuppliesOrderByWithRelationInput
  }

  export type SupplyPriceTrackWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyPriceTrackWhereInput | SupplyPriceTrackWhereInput[]
    OR?: SupplyPriceTrackWhereInput[]
    NOT?: SupplyPriceTrackWhereInput | SupplyPriceTrackWhereInput[]
    value?: IntFilter<"SupplyPriceTrack"> | number
    suppliesId?: StringFilter<"SupplyPriceTrack"> | string
    timestamp?: DateTimeFilter<"SupplyPriceTrack"> | Date | string
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }, "id">

  export type SupplyPriceTrackOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    _count?: SupplyPriceTrackCountOrderByAggregateInput
    _avg?: SupplyPriceTrackAvgOrderByAggregateInput
    _max?: SupplyPriceTrackMaxOrderByAggregateInput
    _min?: SupplyPriceTrackMinOrderByAggregateInput
    _sum?: SupplyPriceTrackSumOrderByAggregateInput
  }

  export type SupplyPriceTrackScalarWhereWithAggregatesInput = {
    AND?: SupplyPriceTrackScalarWhereWithAggregatesInput | SupplyPriceTrackScalarWhereWithAggregatesInput[]
    OR?: SupplyPriceTrackScalarWhereWithAggregatesInput[]
    NOT?: SupplyPriceTrackScalarWhereWithAggregatesInput | SupplyPriceTrackScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyPriceTrack"> | string
    value?: IntWithAggregatesFilter<"SupplyPriceTrack"> | number
    suppliesId?: StringWithAggregatesFilter<"SupplyPriceTrack"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SupplyPriceTrack"> | Date | string
  }

  export type SupplyStockTrackWhereInput = {
    AND?: SupplyStockTrackWhereInput | SupplyStockTrackWhereInput[]
    OR?: SupplyStockTrackWhereInput[]
    NOT?: SupplyStockTrackWhereInput | SupplyStockTrackWhereInput[]
    id?: StringFilter<"SupplyStockTrack"> | string
    stock?: IntFilter<"SupplyStockTrack"> | number
    suppliesId?: StringFilter<"SupplyStockTrack"> | string
    timestamp?: DateTimeFilter<"SupplyStockTrack"> | Date | string
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }

  export type SupplyStockTrackOrderByWithRelationInput = {
    id?: SortOrder
    stock?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    supply?: SuppliesOrderByWithRelationInput
  }

  export type SupplyStockTrackWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplyStockTrackWhereInput | SupplyStockTrackWhereInput[]
    OR?: SupplyStockTrackWhereInput[]
    NOT?: SupplyStockTrackWhereInput | SupplyStockTrackWhereInput[]
    stock?: IntFilter<"SupplyStockTrack"> | number
    suppliesId?: StringFilter<"SupplyStockTrack"> | string
    timestamp?: DateTimeFilter<"SupplyStockTrack"> | Date | string
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }, "id">

  export type SupplyStockTrackOrderByWithAggregationInput = {
    id?: SortOrder
    stock?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    _count?: SupplyStockTrackCountOrderByAggregateInput
    _avg?: SupplyStockTrackAvgOrderByAggregateInput
    _max?: SupplyStockTrackMaxOrderByAggregateInput
    _min?: SupplyStockTrackMinOrderByAggregateInput
    _sum?: SupplyStockTrackSumOrderByAggregateInput
  }

  export type SupplyStockTrackScalarWhereWithAggregatesInput = {
    AND?: SupplyStockTrackScalarWhereWithAggregatesInput | SupplyStockTrackScalarWhereWithAggregatesInput[]
    OR?: SupplyStockTrackScalarWhereWithAggregatesInput[]
    NOT?: SupplyStockTrackScalarWhereWithAggregatesInput | SupplyStockTrackScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplyStockTrack"> | string
    stock?: IntWithAggregatesFilter<"SupplyStockTrack"> | number
    suppliesId?: StringWithAggregatesFilter<"SupplyStockTrack"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SupplyStockTrack"> | Date | string
  }

  export type SuppliesCategoryWhereInput = {
    AND?: SuppliesCategoryWhereInput | SuppliesCategoryWhereInput[]
    OR?: SuppliesCategoryWhereInput[]
    NOT?: SuppliesCategoryWhereInput | SuppliesCategoryWhereInput[]
    id?: StringFilter<"SuppliesCategory"> | string
    name?: StringFilter<"SuppliesCategory"> | string
    description?: StringNullableFilter<"SuppliesCategory"> | string | null
    createdAt?: DateTimeFilter<"SuppliesCategory"> | Date | string
    supplies?: SuppliesListRelationFilter
  }

  export type SuppliesCategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    supplies?: SuppliesOrderByRelationAggregateInput
  }

  export type SuppliesCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: SuppliesCategoryWhereInput | SuppliesCategoryWhereInput[]
    OR?: SuppliesCategoryWhereInput[]
    NOT?: SuppliesCategoryWhereInput | SuppliesCategoryWhereInput[]
    description?: StringNullableFilter<"SuppliesCategory"> | string | null
    createdAt?: DateTimeFilter<"SuppliesCategory"> | Date | string
    supplies?: SuppliesListRelationFilter
  }, "id" | "name">

  export type SuppliesCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: SuppliesCategoryCountOrderByAggregateInput
    _max?: SuppliesCategoryMaxOrderByAggregateInput
    _min?: SuppliesCategoryMinOrderByAggregateInput
  }

  export type SuppliesCategoryScalarWhereWithAggregatesInput = {
    AND?: SuppliesCategoryScalarWhereWithAggregatesInput | SuppliesCategoryScalarWhereWithAggregatesInput[]
    OR?: SuppliesCategoryScalarWhereWithAggregatesInput[]
    NOT?: SuppliesCategoryScalarWhereWithAggregatesInput | SuppliesCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SuppliesCategory"> | string
    name?: StringWithAggregatesFilter<"SuppliesCategory"> | string
    description?: StringNullableWithAggregatesFilter<"SuppliesCategory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SuppliesCategory"> | Date | string
  }

  export type SupplieRecieveHistoryWhereInput = {
    AND?: SupplieRecieveHistoryWhereInput | SupplieRecieveHistoryWhereInput[]
    OR?: SupplieRecieveHistoryWhereInput[]
    NOT?: SupplieRecieveHistoryWhereInput | SupplieRecieveHistoryWhereInput[]
    id?: StringFilter<"SupplieRecieveHistory"> | string
    suppliesId?: StringFilter<"SupplieRecieveHistory"> | string
    userId?: StringFilter<"SupplieRecieveHistory"> | string
    timestamp?: DateTimeFilter<"SupplieRecieveHistory"> | Date | string
    quantity?: IntFilter<"SupplieRecieveHistory"> | number
    condition?: StringNullableFilter<"SupplieRecieveHistory"> | string | null
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }

  export type SupplieRecieveHistoryOrderByWithRelationInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    quantity?: SortOrder
    condition?: SortOrderInput | SortOrder
    supply?: SuppliesOrderByWithRelationInput
  }

  export type SupplieRecieveHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupplieRecieveHistoryWhereInput | SupplieRecieveHistoryWhereInput[]
    OR?: SupplieRecieveHistoryWhereInput[]
    NOT?: SupplieRecieveHistoryWhereInput | SupplieRecieveHistoryWhereInput[]
    suppliesId?: StringFilter<"SupplieRecieveHistory"> | string
    userId?: StringFilter<"SupplieRecieveHistory"> | string
    timestamp?: DateTimeFilter<"SupplieRecieveHistory"> | Date | string
    quantity?: IntFilter<"SupplieRecieveHistory"> | number
    condition?: StringNullableFilter<"SupplieRecieveHistory"> | string | null
    supply?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
  }, "id">

  export type SupplieRecieveHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    quantity?: SortOrder
    condition?: SortOrderInput | SortOrder
    _count?: SupplieRecieveHistoryCountOrderByAggregateInput
    _avg?: SupplieRecieveHistoryAvgOrderByAggregateInput
    _max?: SupplieRecieveHistoryMaxOrderByAggregateInput
    _min?: SupplieRecieveHistoryMinOrderByAggregateInput
    _sum?: SupplieRecieveHistorySumOrderByAggregateInput
  }

  export type SupplieRecieveHistoryScalarWhereWithAggregatesInput = {
    AND?: SupplieRecieveHistoryScalarWhereWithAggregatesInput | SupplieRecieveHistoryScalarWhereWithAggregatesInput[]
    OR?: SupplieRecieveHistoryScalarWhereWithAggregatesInput[]
    NOT?: SupplieRecieveHistoryScalarWhereWithAggregatesInput | SupplieRecieveHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupplieRecieveHistory"> | string
    suppliesId?: StringWithAggregatesFilter<"SupplieRecieveHistory"> | string
    userId?: StringWithAggregatesFilter<"SupplieRecieveHistory"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SupplieRecieveHistory"> | Date | string
    quantity?: IntWithAggregatesFilter<"SupplieRecieveHistory"> | number
    condition?: StringNullableWithAggregatesFilter<"SupplieRecieveHistory"> | string | null
  }

  export type TransferredSuppliesWhereInput = {
    AND?: TransferredSuppliesWhereInput | TransferredSuppliesWhereInput[]
    OR?: TransferredSuppliesWhereInput[]
    NOT?: TransferredSuppliesWhereInput | TransferredSuppliesWhereInput[]
    id?: StringFilter<"TransferredSupplies"> | string
    suppliesId?: StringNullableFilter<"TransferredSupplies"> | string | null
    userId?: StringFilter<"TransferredSupplies"> | string
    transferredToId?: StringFilter<"TransferredSupplies"> | string
    timestamp?: DateTimeFilter<"TransferredSupplies"> | Date | string
    condition?: StringNullableFilter<"TransferredSupplies"> | string | null
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    transferredTo?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TransferredSuppliesOrderByWithRelationInput = {
    id?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    userId?: SortOrder
    transferredToId?: SortOrder
    timestamp?: SortOrder
    condition?: SortOrderInput | SortOrder
    supply?: SuppliesOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    transferredTo?: UserOrderByWithRelationInput
  }

  export type TransferredSuppliesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransferredSuppliesWhereInput | TransferredSuppliesWhereInput[]
    OR?: TransferredSuppliesWhereInput[]
    NOT?: TransferredSuppliesWhereInput | TransferredSuppliesWhereInput[]
    suppliesId?: StringNullableFilter<"TransferredSupplies"> | string | null
    userId?: StringFilter<"TransferredSupplies"> | string
    transferredToId?: StringFilter<"TransferredSupplies"> | string
    timestamp?: DateTimeFilter<"TransferredSupplies"> | Date | string
    condition?: StringNullableFilter<"TransferredSupplies"> | string | null
    supply?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    transferredTo?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type TransferredSuppliesOrderByWithAggregationInput = {
    id?: SortOrder
    suppliesId?: SortOrderInput | SortOrder
    userId?: SortOrder
    transferredToId?: SortOrder
    timestamp?: SortOrder
    condition?: SortOrderInput | SortOrder
    _count?: TransferredSuppliesCountOrderByAggregateInput
    _max?: TransferredSuppliesMaxOrderByAggregateInput
    _min?: TransferredSuppliesMinOrderByAggregateInput
  }

  export type TransferredSuppliesScalarWhereWithAggregatesInput = {
    AND?: TransferredSuppliesScalarWhereWithAggregatesInput | TransferredSuppliesScalarWhereWithAggregatesInput[]
    OR?: TransferredSuppliesScalarWhereWithAggregatesInput[]
    NOT?: TransferredSuppliesScalarWhereWithAggregatesInput | TransferredSuppliesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransferredSupplies"> | string
    suppliesId?: StringNullableWithAggregatesFilter<"TransferredSupplies"> | string | null
    userId?: StringWithAggregatesFilter<"TransferredSupplies"> | string
    transferredToId?: StringWithAggregatesFilter<"TransferredSupplies"> | string
    timestamp?: DateTimeWithAggregatesFilter<"TransferredSupplies"> | Date | string
    condition?: StringNullableWithAggregatesFilter<"TransferredSupplies"> | string | null
  }

  export type SuppliesRecordWhereInput = {
    AND?: SuppliesRecordWhereInput | SuppliesRecordWhereInput[]
    OR?: SuppliesRecordWhereInput[]
    NOT?: SuppliesRecordWhereInput | SuppliesRecordWhereInput[]
    id?: StringFilter<"SuppliesRecord"> | string
    suppliesId?: StringFilter<"SuppliesRecord"> | string
    timestamp?: DateTimeFilter<"SuppliesRecord"> | Date | string
    userId?: StringFilter<"SuppliesRecord"> | string
    action?: StringFilter<"SuppliesRecord"> | string
    status?: IntFilter<"SuppliesRecord"> | number
    description?: StringNullableFilter<"SuppliesRecord"> | string | null
    modifiedId?: StringNullableFilter<"SuppliesRecord"> | string | null
    suppyId?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    modified?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }

  export type SuppliesRecordOrderByWithRelationInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    modifiedId?: SortOrderInput | SortOrder
    suppyId?: SuppliesOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    modified?: SuppliesOrderByWithRelationInput
  }

  export type SuppliesRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    modifiedId?: string
    AND?: SuppliesRecordWhereInput | SuppliesRecordWhereInput[]
    OR?: SuppliesRecordWhereInput[]
    NOT?: SuppliesRecordWhereInput | SuppliesRecordWhereInput[]
    suppliesId?: StringFilter<"SuppliesRecord"> | string
    timestamp?: DateTimeFilter<"SuppliesRecord"> | Date | string
    userId?: StringFilter<"SuppliesRecord"> | string
    action?: StringFilter<"SuppliesRecord"> | string
    status?: IntFilter<"SuppliesRecord"> | number
    description?: StringNullableFilter<"SuppliesRecord"> | string | null
    suppyId?: XOR<SuppliesScalarRelationFilter, SuppliesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    modified?: XOR<SuppliesNullableScalarRelationFilter, SuppliesWhereInput> | null
  }, "id" | "modifiedId">

  export type SuppliesRecordOrderByWithAggregationInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    modifiedId?: SortOrderInput | SortOrder
    _count?: SuppliesRecordCountOrderByAggregateInput
    _avg?: SuppliesRecordAvgOrderByAggregateInput
    _max?: SuppliesRecordMaxOrderByAggregateInput
    _min?: SuppliesRecordMinOrderByAggregateInput
    _sum?: SuppliesRecordSumOrderByAggregateInput
  }

  export type SuppliesRecordScalarWhereWithAggregatesInput = {
    AND?: SuppliesRecordScalarWhereWithAggregatesInput | SuppliesRecordScalarWhereWithAggregatesInput[]
    OR?: SuppliesRecordScalarWhereWithAggregatesInput[]
    NOT?: SuppliesRecordScalarWhereWithAggregatesInput | SuppliesRecordScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SuppliesRecord"> | string
    suppliesId?: StringWithAggregatesFilter<"SuppliesRecord"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SuppliesRecord"> | Date | string
    userId?: StringWithAggregatesFilter<"SuppliesRecord"> | string
    action?: StringWithAggregatesFilter<"SuppliesRecord"> | string
    status?: IntWithAggregatesFilter<"SuppliesRecord"> | number
    description?: StringNullableWithAggregatesFilter<"SuppliesRecord"> | string | null
    modifiedId?: StringNullableWithAggregatesFilter<"SuppliesRecord"> | string | null
  }

  export type ApplicationWhereInput = {
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    id?: StringFilter<"Application"> | string
    userId?: StringFilter<"Application"> | string
    positionId?: StringFilter<"Application"> | string
    status?: StringFilter<"Application"> | string
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    position?: XOR<PositionScalarRelationFilter, PositionWhereInput>
  }

  export type ApplicationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    positionId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    position?: PositionOrderByWithRelationInput
  }

  export type ApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    userId?: StringFilter<"Application"> | string
    positionId?: StringFilter<"Application"> | string
    status?: StringFilter<"Application"> | string
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    position?: XOR<PositionScalarRelationFilter, PositionWhereInput>
  }, "id">

  export type ApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    positionId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ApplicationCountOrderByAggregateInput
    _max?: ApplicationMaxOrderByAggregateInput
    _min?: ApplicationMinOrderByAggregateInput
  }

  export type ApplicationScalarWhereWithAggregatesInput = {
    AND?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    OR?: ApplicationScalarWhereWithAggregatesInput[]
    NOT?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Application"> | string
    userId?: StringWithAggregatesFilter<"Application"> | string
    positionId?: StringWithAggregatesFilter<"Application"> | string
    status?: StringWithAggregatesFilter<"Application"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
  }

  export type DepartmentWhereInput = {
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    id?: StringFilter<"Department"> | string
    name?: StringFilter<"Department"> | string
    description?: StringNullableFilter<"Department"> | string | null
    createdAt?: DateTimeFilter<"Department"> | Date | string
    headId?: StringNullableFilter<"Department"> | string | null
    idCode?: StringNullableFilter<"Department"> | string | null
    lineId?: StringNullableFilter<"Department"> | string | null
    head?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    Position?: PositionListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    Group?: GroupListRelationFilter
    InventoryBox?: InventoryBoxListRelationFilter
  }

  export type DepartmentOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    headId?: SortOrderInput | SortOrder
    idCode?: SortOrderInput | SortOrder
    lineId?: SortOrderInput | SortOrder
    head?: UserOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    Position?: PositionOrderByRelationAggregateInput
    Announcement?: AnnouncementOrderByRelationAggregateInput
    Group?: GroupOrderByRelationAggregateInput
    InventoryBox?: InventoryBoxOrderByRelationAggregateInput
  }

  export type DepartmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    headId?: string
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    description?: StringNullableFilter<"Department"> | string | null
    createdAt?: DateTimeFilter<"Department"> | Date | string
    idCode?: StringNullableFilter<"Department"> | string | null
    lineId?: StringNullableFilter<"Department"> | string | null
    head?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    Position?: PositionListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    Group?: GroupListRelationFilter
    InventoryBox?: InventoryBoxListRelationFilter
  }, "id" | "name" | "headId">

  export type DepartmentOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    headId?: SortOrderInput | SortOrder
    idCode?: SortOrderInput | SortOrder
    lineId?: SortOrderInput | SortOrder
    _count?: DepartmentCountOrderByAggregateInput
    _max?: DepartmentMaxOrderByAggregateInput
    _min?: DepartmentMinOrderByAggregateInput
  }

  export type DepartmentScalarWhereWithAggregatesInput = {
    AND?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    OR?: DepartmentScalarWhereWithAggregatesInput[]
    NOT?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Department"> | string
    name?: StringWithAggregatesFilter<"Department"> | string
    description?: StringNullableWithAggregatesFilter<"Department"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Department"> | Date | string
    headId?: StringNullableWithAggregatesFilter<"Department"> | string | null
    idCode?: StringNullableWithAggregatesFilter<"Department"> | string | null
    lineId?: StringNullableWithAggregatesFilter<"Department"> | string | null
  }

  export type GroupWhereInput = {
    AND?: GroupWhereInput | GroupWhereInput[]
    OR?: GroupWhereInput[]
    NOT?: GroupWhereInput | GroupWhereInput[]
    id?: StringFilter<"Group"> | string
    departmentId?: StringFilter<"Group"> | string
    name?: StringNullableFilter<"Group"> | string | null
    createdAt?: DateTimeFilter<"Group"> | Date | string
    lineId?: StringNullableFilter<"Group"> | string | null
    userId?: StringNullableFilter<"Group"> | string | null
    unit?: XOR<DepartmentScalarRelationFilter, DepartmentWhereInput>
    users?: UserListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    chief?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type GroupOrderByWithRelationInput = {
    id?: SortOrder
    departmentId?: SortOrder
    name?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lineId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    unit?: DepartmentOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    chief?: UserOrderByWithRelationInput
  }

  export type GroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GroupWhereInput | GroupWhereInput[]
    OR?: GroupWhereInput[]
    NOT?: GroupWhereInput | GroupWhereInput[]
    departmentId?: StringFilter<"Group"> | string
    name?: StringNullableFilter<"Group"> | string | null
    createdAt?: DateTimeFilter<"Group"> | Date | string
    lineId?: StringNullableFilter<"Group"> | string | null
    userId?: StringNullableFilter<"Group"> | string | null
    unit?: XOR<DepartmentScalarRelationFilter, DepartmentWhereInput>
    users?: UserListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    chief?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type GroupOrderByWithAggregationInput = {
    id?: SortOrder
    departmentId?: SortOrder
    name?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lineId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: GroupCountOrderByAggregateInput
    _max?: GroupMaxOrderByAggregateInput
    _min?: GroupMinOrderByAggregateInput
  }

  export type GroupScalarWhereWithAggregatesInput = {
    AND?: GroupScalarWhereWithAggregatesInput | GroupScalarWhereWithAggregatesInput[]
    OR?: GroupScalarWhereWithAggregatesInput[]
    NOT?: GroupScalarWhereWithAggregatesInput | GroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Group"> | string
    departmentId?: StringWithAggregatesFilter<"Group"> | string
    name?: StringNullableWithAggregatesFilter<"Group"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Group"> | Date | string
    lineId?: StringNullableWithAggregatesFilter<"Group"> | string | null
    userId?: StringNullableWithAggregatesFilter<"Group"> | string | null
  }

  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    id?: StringFilter<"Admin"> | string
    username?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
  }

  export type AdminOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    username?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
  }, "id">

  export type AdminOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    _count?: AdminCountOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admin"> | string
    username?: StringWithAggregatesFilter<"Admin"> | string
    password?: StringWithAggregatesFilter<"Admin"> | string
  }

  export type AdminProfileWhereInput = {
    AND?: AdminProfileWhereInput | AdminProfileWhereInput[]
    OR?: AdminProfileWhereInput[]
    NOT?: AdminProfileWhereInput | AdminProfileWhereInput[]
    id?: StringFilter<"AdminProfile"> | string
    username?: StringFilter<"AdminProfile"> | string
    line?: LineListRelationFilter
  }

  export type AdminProfileOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    line?: LineOrderByRelationAggregateInput
  }

  export type AdminProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdminProfileWhereInput | AdminProfileWhereInput[]
    OR?: AdminProfileWhereInput[]
    NOT?: AdminProfileWhereInput | AdminProfileWhereInput[]
    username?: StringFilter<"AdminProfile"> | string
    line?: LineListRelationFilter
  }, "id">

  export type AdminProfileOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    _count?: AdminProfileCountOrderByAggregateInput
    _max?: AdminProfileMaxOrderByAggregateInput
    _min?: AdminProfileMinOrderByAggregateInput
  }

  export type AdminProfileScalarWhereWithAggregatesInput = {
    AND?: AdminProfileScalarWhereWithAggregatesInput | AdminProfileScalarWhereWithAggregatesInput[]
    OR?: AdminProfileScalarWhereWithAggregatesInput[]
    NOT?: AdminProfileScalarWhereWithAggregatesInput | AdminProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdminProfile"> | string
    username?: StringWithAggregatesFilter<"AdminProfile"> | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    username?: StringFilter<"Account"> | string
    password?: StringFilter<"Account"> | string
    createdAt?: DateTimeFilter<"Account"> | Date | string
    status?: IntFilter<"Account"> | number
    role?: StringFilter<"Account"> | string
    active?: BoolFilter<"Account"> | boolean
    lineId?: StringNullableFilter<"Account"> | string | null
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lineId?: SortOrderInput | SortOrder
    User?: UserOrderByWithRelationInput
    line?: LineOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    username?: StringFilter<"Account"> | string
    password?: StringFilter<"Account"> | string
    createdAt?: DateTimeFilter<"Account"> | Date | string
    status?: IntFilter<"Account"> | number
    role?: StringFilter<"Account"> | string
    active?: BoolFilter<"Account"> | boolean
    lineId?: StringNullableFilter<"Account"> | string | null
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
  }, "id">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lineId?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    username?: StringWithAggregatesFilter<"Account"> | string
    password?: StringWithAggregatesFilter<"Account"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    status?: IntWithAggregatesFilter<"Account"> | number
    role?: StringWithAggregatesFilter<"Account"> | string
    active?: BoolWithAggregatesFilter<"Account"> | boolean
    lineId?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type PrivilegeWhereInput = {
    AND?: PrivilegeWhereInput | PrivilegeWhereInput[]
    OR?: PrivilegeWhereInput[]
    NOT?: PrivilegeWhereInput | PrivilegeWhereInput[]
    id?: StringFilter<"Privilege"> | string
    humanResources?: BoolFilter<"Privilege"> | boolean
    inventory?: BoolFilter<"Privilege"> | boolean
    super?: BoolFilter<"Privilege"> | boolean
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type PrivilegeOrderByWithRelationInput = {
    id?: SortOrder
    humanResources?: SortOrder
    inventory?: SortOrder
    super?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type PrivilegeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PrivilegeWhereInput | PrivilegeWhereInput[]
    OR?: PrivilegeWhereInput[]
    NOT?: PrivilegeWhereInput | PrivilegeWhereInput[]
    humanResources?: BoolFilter<"Privilege"> | boolean
    inventory?: BoolFilter<"Privilege"> | boolean
    super?: BoolFilter<"Privilege"> | boolean
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type PrivilegeOrderByWithAggregationInput = {
    id?: SortOrder
    humanResources?: SortOrder
    inventory?: SortOrder
    super?: SortOrder
    _count?: PrivilegeCountOrderByAggregateInput
    _max?: PrivilegeMaxOrderByAggregateInput
    _min?: PrivilegeMinOrderByAggregateInput
  }

  export type PrivilegeScalarWhereWithAggregatesInput = {
    AND?: PrivilegeScalarWhereWithAggregatesInput | PrivilegeScalarWhereWithAggregatesInput[]
    OR?: PrivilegeScalarWhereWithAggregatesInput[]
    NOT?: PrivilegeScalarWhereWithAggregatesInput | PrivilegeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Privilege"> | string
    humanResources?: BoolWithAggregatesFilter<"Privilege"> | boolean
    inventory?: BoolWithAggregatesFilter<"Privilege"> | boolean
    super?: BoolWithAggregatesFilter<"Privilege"> | boolean
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    middleName?: StringNullableFilter<"User"> | string | null
    suffix?: StringNullableFilter<"User"> | string | null
    birthDate?: DateTimeNullableFilter<"User"> | Date | string | null
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    gender?: StringNullableFilter<"User"> | string | null
    profilePicture?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    level?: IntFilter<"User"> | number
    type?: StringFilter<"User"> | string
    step?: IntFilter<"User"> | number
    status?: StringFilter<"User"> | string
    departmentId?: StringNullableFilter<"User"> | string | null
    positionId?: StringNullableFilter<"User"> | string | null
    salaryGradeId?: StringNullableFilter<"User"> | string | null
    accountId?: StringNullableFilter<"User"> | string | null
    regionId?: StringNullableFilter<"User"> | string | null
    municipalId?: StringNullableFilter<"User"> | string | null
    provinceId?: StringNullableFilter<"User"> | string | null
    barangayId?: StringNullableFilter<"User"> | string | null
    lineId?: StringNullableFilter<"User"> | string | null
    privilegeId?: StringNullableFilter<"User"> | string | null
    groupId?: StringNullableFilter<"User"> | string | null
    sentNotifications?: NotificationListRelationFilter
    receivedNotifications?: NotificationListRelationFilter
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    headedDepartment?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    Position?: XOR<PositionNullableScalarRelationFilter, PositionWhereInput> | null
    SalaryGrade?: XOR<SalaryGradeNullableScalarRelationFilter, SalaryGradeWhereInput> | null
    Leave?: LeaveListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    account?: XOR<AccountNullableScalarRelationFilter, AccountWhereInput> | null
    Promotions?: PromotionListRelationFilter
    bdaySender?: BirthdayNoticeResponseListRelationFilter
    bdayRecipient?: BirthdayNoticeResponseListRelationFilter
    region?: XOR<RegionNullableScalarRelationFilter, RegionWhereInput> | null
    province?: XOR<ProvinceNullableScalarRelationFilter, ProvinceWhereInput> | null
    municipal?: XOR<MunicipalNullableScalarRelationFilter, MunicipalWhereInput> | null
    barangay?: XOR<BarangayNullableScalarRelationFilter, BarangayWhereInput> | null
    PositionSlot?: XOR<PositionSlotNullableScalarRelationFilter, PositionSlotWhereInput> | null
    Accomplishment?: AccomplishmentListRelationFilter
    headResponse?: AccomplishmentResponseListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    Supplies?: SuppliesListRelationFilter
    SuppliesRecord?: SuppliesRecordListRelationFilter
    LogRecord?: LogRecordListRelationFilter
    transferTo?: TransferredSuppliesListRelationFilter
    TransferredSupplies?: TransferredSuppliesListRelationFilter
    ProfilePicture?: XOR<ProfilePictureNullableScalarRelationFilter, ProfilePictureWhereInput> | null
    Application?: ApplicationListRelationFilter
    privilege?: XOR<PrivilegeNullableScalarRelationFilter, PrivilegeWhereInput> | null
    SupplyBatchOrder?: SupplyBatchOrderListRelationFilter
    Group?: XOR<GroupNullableScalarRelationFilter, GroupWhereInput> | null
    chief?: GroupListRelationFilter
    InventoryBox?: InventoryBoxListRelationFilter
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    ContainerAllowedUser?: ContainerAllowedUserListRelationFilter
    GrantContainer?: ContainerAllowedUserListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrderInput | SortOrder
    suffix?: SortOrderInput | SortOrder
    birthDate?: SortOrderInput | SortOrder
    email?: SortOrder
    username?: SortOrder
    gender?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    level?: SortOrder
    type?: SortOrder
    step?: SortOrder
    status?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    positionId?: SortOrderInput | SortOrder
    salaryGradeId?: SortOrderInput | SortOrder
    accountId?: SortOrderInput | SortOrder
    regionId?: SortOrderInput | SortOrder
    municipalId?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    barangayId?: SortOrderInput | SortOrder
    lineId?: SortOrderInput | SortOrder
    privilegeId?: SortOrderInput | SortOrder
    groupId?: SortOrderInput | SortOrder
    sentNotifications?: NotificationOrderByRelationAggregateInput
    receivedNotifications?: NotificationOrderByRelationAggregateInput
    department?: DepartmentOrderByWithRelationInput
    headedDepartment?: DepartmentOrderByWithRelationInput
    Position?: PositionOrderByWithRelationInput
    SalaryGrade?: SalaryGradeOrderByWithRelationInput
    Leave?: LeaveOrderByRelationAggregateInput
    Announcement?: AnnouncementOrderByRelationAggregateInput
    account?: AccountOrderByWithRelationInput
    Promotions?: PromotionOrderByRelationAggregateInput
    bdaySender?: BirthdayNoticeResponseOrderByRelationAggregateInput
    bdayRecipient?: BirthdayNoticeResponseOrderByRelationAggregateInput
    region?: RegionOrderByWithRelationInput
    province?: ProvinceOrderByWithRelationInput
    municipal?: MunicipalOrderByWithRelationInput
    barangay?: BarangayOrderByWithRelationInput
    PositionSlot?: PositionSlotOrderByWithRelationInput
    Accomplishment?: AccomplishmentOrderByRelationAggregateInput
    headResponse?: AccomplishmentResponseOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    Supplies?: SuppliesOrderByRelationAggregateInput
    SuppliesRecord?: SuppliesRecordOrderByRelationAggregateInput
    LogRecord?: LogRecordOrderByRelationAggregateInput
    transferTo?: TransferredSuppliesOrderByRelationAggregateInput
    TransferredSupplies?: TransferredSuppliesOrderByRelationAggregateInput
    ProfilePicture?: ProfilePictureOrderByWithRelationInput
    Application?: ApplicationOrderByRelationAggregateInput
    privilege?: PrivilegeOrderByWithRelationInput
    SupplyBatchOrder?: SupplyBatchOrderOrderByRelationAggregateInput
    Group?: GroupOrderByWithRelationInput
    chief?: GroupOrderByRelationAggregateInput
    InventoryBox?: InventoryBoxOrderByRelationAggregateInput
    InventoryAccessLogs?: InventoryAccessLogsOrderByRelationAggregateInput
    ContainerAllowedUser?: ContainerAllowedUserOrderByRelationAggregateInput
    GrantContainer?: ContainerAllowedUserOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    accountId?: string
    privilegeId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    middleName?: StringNullableFilter<"User"> | string | null
    suffix?: StringNullableFilter<"User"> | string | null
    birthDate?: DateTimeNullableFilter<"User"> | Date | string | null
    gender?: StringNullableFilter<"User"> | string | null
    profilePicture?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    level?: IntFilter<"User"> | number
    type?: StringFilter<"User"> | string
    step?: IntFilter<"User"> | number
    status?: StringFilter<"User"> | string
    departmentId?: StringNullableFilter<"User"> | string | null
    positionId?: StringNullableFilter<"User"> | string | null
    salaryGradeId?: StringNullableFilter<"User"> | string | null
    regionId?: StringNullableFilter<"User"> | string | null
    municipalId?: StringNullableFilter<"User"> | string | null
    provinceId?: StringNullableFilter<"User"> | string | null
    barangayId?: StringNullableFilter<"User"> | string | null
    lineId?: StringNullableFilter<"User"> | string | null
    groupId?: StringNullableFilter<"User"> | string | null
    sentNotifications?: NotificationListRelationFilter
    receivedNotifications?: NotificationListRelationFilter
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    headedDepartment?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    Position?: XOR<PositionNullableScalarRelationFilter, PositionWhereInput> | null
    SalaryGrade?: XOR<SalaryGradeNullableScalarRelationFilter, SalaryGradeWhereInput> | null
    Leave?: LeaveListRelationFilter
    Announcement?: AnnouncementListRelationFilter
    account?: XOR<AccountNullableScalarRelationFilter, AccountWhereInput> | null
    Promotions?: PromotionListRelationFilter
    bdaySender?: BirthdayNoticeResponseListRelationFilter
    bdayRecipient?: BirthdayNoticeResponseListRelationFilter
    region?: XOR<RegionNullableScalarRelationFilter, RegionWhereInput> | null
    province?: XOR<ProvinceNullableScalarRelationFilter, ProvinceWhereInput> | null
    municipal?: XOR<MunicipalNullableScalarRelationFilter, MunicipalWhereInput> | null
    barangay?: XOR<BarangayNullableScalarRelationFilter, BarangayWhereInput> | null
    PositionSlot?: XOR<PositionSlotNullableScalarRelationFilter, PositionSlotWhereInput> | null
    Accomplishment?: AccomplishmentListRelationFilter
    headResponse?: AccomplishmentResponseListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    Supplies?: SuppliesListRelationFilter
    SuppliesRecord?: SuppliesRecordListRelationFilter
    LogRecord?: LogRecordListRelationFilter
    transferTo?: TransferredSuppliesListRelationFilter
    TransferredSupplies?: TransferredSuppliesListRelationFilter
    ProfilePicture?: XOR<ProfilePictureNullableScalarRelationFilter, ProfilePictureWhereInput> | null
    Application?: ApplicationListRelationFilter
    privilege?: XOR<PrivilegeNullableScalarRelationFilter, PrivilegeWhereInput> | null
    SupplyBatchOrder?: SupplyBatchOrderListRelationFilter
    Group?: XOR<GroupNullableScalarRelationFilter, GroupWhereInput> | null
    chief?: GroupListRelationFilter
    InventoryBox?: InventoryBoxListRelationFilter
    InventoryAccessLogs?: InventoryAccessLogsListRelationFilter
    ContainerAllowedUser?: ContainerAllowedUserListRelationFilter
    GrantContainer?: ContainerAllowedUserListRelationFilter
  }, "id" | "email" | "username" | "accountId" | "privilegeId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrderInput | SortOrder
    suffix?: SortOrderInput | SortOrder
    birthDate?: SortOrderInput | SortOrder
    email?: SortOrder
    username?: SortOrder
    gender?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    level?: SortOrder
    type?: SortOrder
    step?: SortOrder
    status?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    positionId?: SortOrderInput | SortOrder
    salaryGradeId?: SortOrderInput | SortOrder
    accountId?: SortOrderInput | SortOrder
    regionId?: SortOrderInput | SortOrder
    municipalId?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    barangayId?: SortOrderInput | SortOrder
    lineId?: SortOrderInput | SortOrder
    privilegeId?: SortOrderInput | SortOrder
    groupId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    middleName?: StringNullableWithAggregatesFilter<"User"> | string | null
    suffix?: StringNullableWithAggregatesFilter<"User"> | string | null
    birthDate?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    email?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    gender?: StringNullableWithAggregatesFilter<"User"> | string | null
    profilePicture?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    level?: IntWithAggregatesFilter<"User"> | number
    type?: StringWithAggregatesFilter<"User"> | string
    step?: IntWithAggregatesFilter<"User"> | number
    status?: StringWithAggregatesFilter<"User"> | string
    departmentId?: StringNullableWithAggregatesFilter<"User"> | string | null
    positionId?: StringNullableWithAggregatesFilter<"User"> | string | null
    salaryGradeId?: StringNullableWithAggregatesFilter<"User"> | string | null
    accountId?: StringNullableWithAggregatesFilter<"User"> | string | null
    regionId?: StringNullableWithAggregatesFilter<"User"> | string | null
    municipalId?: StringNullableWithAggregatesFilter<"User"> | string | null
    provinceId?: StringNullableWithAggregatesFilter<"User"> | string | null
    barangayId?: StringNullableWithAggregatesFilter<"User"> | string | null
    lineId?: StringNullableWithAggregatesFilter<"User"> | string | null
    privilegeId?: StringNullableWithAggregatesFilter<"User"> | string | null
    groupId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type LogRecordWhereInput = {
    AND?: LogRecordWhereInput | LogRecordWhereInput[]
    OR?: LogRecordWhereInput[]
    NOT?: LogRecordWhereInput | LogRecordWhereInput[]
    id?: StringFilter<"LogRecord"> | string
    userId?: StringFilter<"LogRecord"> | string
    action?: StringFilter<"LogRecord"> | string
    timestamp?: DateTimeFilter<"LogRecord"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type LogRecordOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type LogRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LogRecordWhereInput | LogRecordWhereInput[]
    OR?: LogRecordWhereInput[]
    NOT?: LogRecordWhereInput | LogRecordWhereInput[]
    userId?: StringFilter<"LogRecord"> | string
    action?: StringFilter<"LogRecord"> | string
    timestamp?: DateTimeFilter<"LogRecord"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type LogRecordOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
    _count?: LogRecordCountOrderByAggregateInput
    _max?: LogRecordMaxOrderByAggregateInput
    _min?: LogRecordMinOrderByAggregateInput
  }

  export type LogRecordScalarWhereWithAggregatesInput = {
    AND?: LogRecordScalarWhereWithAggregatesInput | LogRecordScalarWhereWithAggregatesInput[]
    OR?: LogRecordScalarWhereWithAggregatesInput[]
    NOT?: LogRecordScalarWhereWithAggregatesInput | LogRecordScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LogRecord"> | string
    userId?: StringWithAggregatesFilter<"LogRecord"> | string
    action?: StringWithAggregatesFilter<"LogRecord"> | string
    timestamp?: DateTimeWithAggregatesFilter<"LogRecord"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    content?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    recipientId?: StringFilter<"Notification"> | string
    senderId?: StringFilter<"Notification"> | string
    path?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    recipientId?: SortOrder
    senderId?: SortOrder
    path?: SortOrderInput | SortOrder
    isRead?: SortOrder
    sender?: UserOrderByWithRelationInput
    recipient?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    title?: StringFilter<"Notification"> | string
    content?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    recipientId?: StringFilter<"Notification"> | string
    senderId?: StringFilter<"Notification"> | string
    path?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    recipientId?: SortOrder
    senderId?: SortOrder
    path?: SortOrderInput | SortOrder
    isRead?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    title?: StringWithAggregatesFilter<"Notification"> | string
    content?: StringWithAggregatesFilter<"Notification"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    recipientId?: StringWithAggregatesFilter<"Notification"> | string
    senderId?: StringWithAggregatesFilter<"Notification"> | string
    path?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
  }

  export type PositionWhereInput = {
    AND?: PositionWhereInput | PositionWhereInput[]
    OR?: PositionWhereInput[]
    NOT?: PositionWhereInput | PositionWhereInput[]
    id?: StringFilter<"Position"> | string
    name?: StringFilter<"Position"> | string
    description?: StringNullableFilter<"Position"> | string | null
    max?: IntFilter<"Position"> | number
    createdAt?: DateTimeFilter<"Position"> | Date | string
    itemNumber?: StringNullableFilter<"Position"> | string | null
    salaryGradeId?: StringNullableFilter<"Position"> | string | null
    plantilla?: BoolFilter<"Position"> | boolean
    lineId?: StringNullableFilter<"Position"> | string | null
    departmentId?: StringNullableFilter<"Position"> | string | null
    users?: UserListRelationFilter
    Promotion?: PromotionListRelationFilter
    SalaryGrade?: XOR<SalaryGradeNullableScalarRelationFilter, SalaryGradeWhereInput> | null
    PositionSlot?: PositionSlotListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    Application?: ApplicationListRelationFilter
  }

  export type PositionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    max?: SortOrder
    createdAt?: SortOrder
    itemNumber?: SortOrderInput | SortOrder
    salaryGradeId?: SortOrderInput | SortOrder
    plantilla?: SortOrder
    lineId?: SortOrderInput | SortOrder
    departmentId?: SortOrderInput | SortOrder
    users?: UserOrderByRelationAggregateInput
    Promotion?: PromotionOrderByRelationAggregateInput
    SalaryGrade?: SalaryGradeOrderByWithRelationInput
    PositionSlot?: PositionSlotOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
    department?: DepartmentOrderByWithRelationInput
    Application?: ApplicationOrderByRelationAggregateInput
  }

  export type PositionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    itemNumber?: string
    AND?: PositionWhereInput | PositionWhereInput[]
    OR?: PositionWhereInput[]
    NOT?: PositionWhereInput | PositionWhereInput[]
    description?: StringNullableFilter<"Position"> | string | null
    max?: IntFilter<"Position"> | number
    createdAt?: DateTimeFilter<"Position"> | Date | string
    salaryGradeId?: StringNullableFilter<"Position"> | string | null
    plantilla?: BoolFilter<"Position"> | boolean
    lineId?: StringNullableFilter<"Position"> | string | null
    departmentId?: StringNullableFilter<"Position"> | string | null
    users?: UserListRelationFilter
    Promotion?: PromotionListRelationFilter
    SalaryGrade?: XOR<SalaryGradeNullableScalarRelationFilter, SalaryGradeWhereInput> | null
    PositionSlot?: PositionSlotListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    Application?: ApplicationListRelationFilter
  }, "id" | "name" | "itemNumber">

  export type PositionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    max?: SortOrder
    createdAt?: SortOrder
    itemNumber?: SortOrderInput | SortOrder
    salaryGradeId?: SortOrderInput | SortOrder
    plantilla?: SortOrder
    lineId?: SortOrderInput | SortOrder
    departmentId?: SortOrderInput | SortOrder
    _count?: PositionCountOrderByAggregateInput
    _avg?: PositionAvgOrderByAggregateInput
    _max?: PositionMaxOrderByAggregateInput
    _min?: PositionMinOrderByAggregateInput
    _sum?: PositionSumOrderByAggregateInput
  }

  export type PositionScalarWhereWithAggregatesInput = {
    AND?: PositionScalarWhereWithAggregatesInput | PositionScalarWhereWithAggregatesInput[]
    OR?: PositionScalarWhereWithAggregatesInput[]
    NOT?: PositionScalarWhereWithAggregatesInput | PositionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Position"> | string
    name?: StringWithAggregatesFilter<"Position"> | string
    description?: StringNullableWithAggregatesFilter<"Position"> | string | null
    max?: IntWithAggregatesFilter<"Position"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Position"> | Date | string
    itemNumber?: StringNullableWithAggregatesFilter<"Position"> | string | null
    salaryGradeId?: StringNullableWithAggregatesFilter<"Position"> | string | null
    plantilla?: BoolWithAggregatesFilter<"Position"> | boolean
    lineId?: StringNullableWithAggregatesFilter<"Position"> | string | null
    departmentId?: StringNullableWithAggregatesFilter<"Position"> | string | null
  }

  export type PositionSlotWhereInput = {
    AND?: PositionSlotWhereInput | PositionSlotWhereInput[]
    OR?: PositionSlotWhereInput[]
    NOT?: PositionSlotWhereInput | PositionSlotWhereInput[]
    id?: StringFilter<"PositionSlot"> | string
    positionId?: StringFilter<"PositionSlot"> | string
    salaryGradeId?: StringFilter<"PositionSlot"> | string
    userId?: StringNullableFilter<"PositionSlot"> | string | null
    pos?: XOR<PositionScalarRelationFilter, PositionWhereInput>
    salaryGrade?: XOR<SalaryGradeScalarRelationFilter, SalaryGradeWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type PositionSlotOrderByWithRelationInput = {
    id?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    userId?: SortOrderInput | SortOrder
    pos?: PositionOrderByWithRelationInput
    salaryGrade?: SalaryGradeOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type PositionSlotWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: PositionSlotWhereInput | PositionSlotWhereInput[]
    OR?: PositionSlotWhereInput[]
    NOT?: PositionSlotWhereInput | PositionSlotWhereInput[]
    positionId?: StringFilter<"PositionSlot"> | string
    salaryGradeId?: StringFilter<"PositionSlot"> | string
    pos?: XOR<PositionScalarRelationFilter, PositionWhereInput>
    salaryGrade?: XOR<SalaryGradeScalarRelationFilter, SalaryGradeWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "userId">

  export type PositionSlotOrderByWithAggregationInput = {
    id?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: PositionSlotCountOrderByAggregateInput
    _max?: PositionSlotMaxOrderByAggregateInput
    _min?: PositionSlotMinOrderByAggregateInput
  }

  export type PositionSlotScalarWhereWithAggregatesInput = {
    AND?: PositionSlotScalarWhereWithAggregatesInput | PositionSlotScalarWhereWithAggregatesInput[]
    OR?: PositionSlotScalarWhereWithAggregatesInput[]
    NOT?: PositionSlotScalarWhereWithAggregatesInput | PositionSlotScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PositionSlot"> | string
    positionId?: StringWithAggregatesFilter<"PositionSlot"> | string
    salaryGradeId?: StringWithAggregatesFilter<"PositionSlot"> | string
    userId?: StringNullableWithAggregatesFilter<"PositionSlot"> | string | null
  }

  export type SalaryGradeWhereInput = {
    AND?: SalaryGradeWhereInput | SalaryGradeWhereInput[]
    OR?: SalaryGradeWhereInput[]
    NOT?: SalaryGradeWhereInput | SalaryGradeWhereInput[]
    id?: StringFilter<"SalaryGrade"> | string
    grade?: IntFilter<"SalaryGrade"> | number
    amount?: FloatFilter<"SalaryGrade"> | number
    createdAt?: DateTimeFilter<"SalaryGrade"> | Date | string
    lineId?: StringNullableFilter<"SalaryGrade"> | string | null
    users?: UserListRelationFilter
    SalaryGradeHistory?: SalaryGradeHistoryListRelationFilter
    positions?: PositionListRelationFilter
    PositionSlot?: PositionSlotListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
  }

  export type SalaryGradeOrderByWithRelationInput = {
    id?: SortOrder
    grade?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrderInput | SortOrder
    users?: UserOrderByRelationAggregateInput
    SalaryGradeHistory?: SalaryGradeHistoryOrderByRelationAggregateInput
    positions?: PositionOrderByRelationAggregateInput
    PositionSlot?: PositionSlotOrderByRelationAggregateInput
    line?: LineOrderByWithRelationInput
  }

  export type SalaryGradeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SalaryGradeWhereInput | SalaryGradeWhereInput[]
    OR?: SalaryGradeWhereInput[]
    NOT?: SalaryGradeWhereInput | SalaryGradeWhereInput[]
    grade?: IntFilter<"SalaryGrade"> | number
    amount?: FloatFilter<"SalaryGrade"> | number
    createdAt?: DateTimeFilter<"SalaryGrade"> | Date | string
    lineId?: StringNullableFilter<"SalaryGrade"> | string | null
    users?: UserListRelationFilter
    SalaryGradeHistory?: SalaryGradeHistoryListRelationFilter
    positions?: PositionListRelationFilter
    PositionSlot?: PositionSlotListRelationFilter
    line?: XOR<LineNullableScalarRelationFilter, LineWhereInput> | null
  }, "id">

  export type SalaryGradeOrderByWithAggregationInput = {
    id?: SortOrder
    grade?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrderInput | SortOrder
    _count?: SalaryGradeCountOrderByAggregateInput
    _avg?: SalaryGradeAvgOrderByAggregateInput
    _max?: SalaryGradeMaxOrderByAggregateInput
    _min?: SalaryGradeMinOrderByAggregateInput
    _sum?: SalaryGradeSumOrderByAggregateInput
  }

  export type SalaryGradeScalarWhereWithAggregatesInput = {
    AND?: SalaryGradeScalarWhereWithAggregatesInput | SalaryGradeScalarWhereWithAggregatesInput[]
    OR?: SalaryGradeScalarWhereWithAggregatesInput[]
    NOT?: SalaryGradeScalarWhereWithAggregatesInput | SalaryGradeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SalaryGrade"> | string
    grade?: IntWithAggregatesFilter<"SalaryGrade"> | number
    amount?: FloatWithAggregatesFilter<"SalaryGrade"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SalaryGrade"> | Date | string
    lineId?: StringNullableWithAggregatesFilter<"SalaryGrade"> | string | null
  }

  export type SalaryGradeHistoryWhereInput = {
    AND?: SalaryGradeHistoryWhereInput | SalaryGradeHistoryWhereInput[]
    OR?: SalaryGradeHistoryWhereInput[]
    NOT?: SalaryGradeHistoryWhereInput | SalaryGradeHistoryWhereInput[]
    id?: StringFilter<"SalaryGradeHistory"> | string
    userId?: StringFilter<"SalaryGradeHistory"> | string
    salaryGradeId?: StringFilter<"SalaryGradeHistory"> | string
    effectiveDate?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    createdAt?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    amount?: IntFilter<"SalaryGradeHistory"> | number
    salaryGrade?: XOR<SalaryGradeScalarRelationFilter, SalaryGradeWhereInput>
  }

  export type SalaryGradeHistoryOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    salaryGradeId?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    amount?: SortOrder
    salaryGrade?: SalaryGradeOrderByWithRelationInput
  }

  export type SalaryGradeHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SalaryGradeHistoryWhereInput | SalaryGradeHistoryWhereInput[]
    OR?: SalaryGradeHistoryWhereInput[]
    NOT?: SalaryGradeHistoryWhereInput | SalaryGradeHistoryWhereInput[]
    userId?: StringFilter<"SalaryGradeHistory"> | string
    salaryGradeId?: StringFilter<"SalaryGradeHistory"> | string
    effectiveDate?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    createdAt?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    amount?: IntFilter<"SalaryGradeHistory"> | number
    salaryGrade?: XOR<SalaryGradeScalarRelationFilter, SalaryGradeWhereInput>
  }, "id">

  export type SalaryGradeHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    salaryGradeId?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    amount?: SortOrder
    _count?: SalaryGradeHistoryCountOrderByAggregateInput
    _avg?: SalaryGradeHistoryAvgOrderByAggregateInput
    _max?: SalaryGradeHistoryMaxOrderByAggregateInput
    _min?: SalaryGradeHistoryMinOrderByAggregateInput
    _sum?: SalaryGradeHistorySumOrderByAggregateInput
  }

  export type SalaryGradeHistoryScalarWhereWithAggregatesInput = {
    AND?: SalaryGradeHistoryScalarWhereWithAggregatesInput | SalaryGradeHistoryScalarWhereWithAggregatesInput[]
    OR?: SalaryGradeHistoryScalarWhereWithAggregatesInput[]
    NOT?: SalaryGradeHistoryScalarWhereWithAggregatesInput | SalaryGradeHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SalaryGradeHistory"> | string
    userId?: StringWithAggregatesFilter<"SalaryGradeHistory"> | string
    salaryGradeId?: StringWithAggregatesFilter<"SalaryGradeHistory"> | string
    effectiveDate?: DateTimeWithAggregatesFilter<"SalaryGradeHistory"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"SalaryGradeHistory"> | Date | string
    amount?: IntWithAggregatesFilter<"SalaryGradeHistory"> | number
  }

  export type LeaveWhereInput = {
    AND?: LeaveWhereInput | LeaveWhereInput[]
    OR?: LeaveWhereInput[]
    NOT?: LeaveWhereInput | LeaveWhereInput[]
    id?: StringFilter<"Leave"> | string
    userId?: StringFilter<"Leave"> | string
    type?: StringFilter<"Leave"> | string
    startDate?: DateTimeFilter<"Leave"> | Date | string
    endDate?: DateTimeFilter<"Leave"> | Date | string
    reason?: StringNullableFilter<"Leave"> | string | null
    status?: StringFilter<"Leave"> | string
    createdAt?: DateTimeFilter<"Leave"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type LeaveOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type LeaveWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LeaveWhereInput | LeaveWhereInput[]
    OR?: LeaveWhereInput[]
    NOT?: LeaveWhereInput | LeaveWhereInput[]
    userId?: StringFilter<"Leave"> | string
    type?: StringFilter<"Leave"> | string
    startDate?: DateTimeFilter<"Leave"> | Date | string
    endDate?: DateTimeFilter<"Leave"> | Date | string
    reason?: StringNullableFilter<"Leave"> | string | null
    status?: StringFilter<"Leave"> | string
    createdAt?: DateTimeFilter<"Leave"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type LeaveOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    _count?: LeaveCountOrderByAggregateInput
    _max?: LeaveMaxOrderByAggregateInput
    _min?: LeaveMinOrderByAggregateInput
  }

  export type LeaveScalarWhereWithAggregatesInput = {
    AND?: LeaveScalarWhereWithAggregatesInput | LeaveScalarWhereWithAggregatesInput[]
    OR?: LeaveScalarWhereWithAggregatesInput[]
    NOT?: LeaveScalarWhereWithAggregatesInput | LeaveScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Leave"> | string
    userId?: StringWithAggregatesFilter<"Leave"> | string
    type?: StringWithAggregatesFilter<"Leave"> | string
    startDate?: DateTimeWithAggregatesFilter<"Leave"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"Leave"> | Date | string
    reason?: StringNullableWithAggregatesFilter<"Leave"> | string | null
    status?: StringWithAggregatesFilter<"Leave"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Leave"> | Date | string
  }

  export type AnnouncementWhereInput = {
    AND?: AnnouncementWhereInput | AnnouncementWhereInput[]
    OR?: AnnouncementWhereInput[]
    NOT?: AnnouncementWhereInput | AnnouncementWhereInput[]
    id?: StringFilter<"Announcement"> | string
    title?: StringFilter<"Announcement"> | string
    content?: StringFilter<"Announcement"> | string
    createdAt?: DateTimeFilter<"Announcement"> | Date | string
    authorId?: StringFilter<"Announcement"> | string
    lineId?: StringFilter<"Announcement"> | string
    path?: StringNullableFilter<"Announcement"> | string | null
    important?: BoolFilter<"Announcement"> | boolean
    departmentId?: StringNullableFilter<"Announcement"> | string | null
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    unit?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
  }

  export type AnnouncementOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    lineId?: SortOrder
    path?: SortOrderInput | SortOrder
    important?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    author?: UserOrderByWithRelationInput
    line?: LineOrderByWithRelationInput
    unit?: DepartmentOrderByWithRelationInput
  }

  export type AnnouncementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AnnouncementWhereInput | AnnouncementWhereInput[]
    OR?: AnnouncementWhereInput[]
    NOT?: AnnouncementWhereInput | AnnouncementWhereInput[]
    title?: StringFilter<"Announcement"> | string
    content?: StringFilter<"Announcement"> | string
    createdAt?: DateTimeFilter<"Announcement"> | Date | string
    authorId?: StringFilter<"Announcement"> | string
    lineId?: StringFilter<"Announcement"> | string
    path?: StringNullableFilter<"Announcement"> | string | null
    important?: BoolFilter<"Announcement"> | boolean
    departmentId?: StringNullableFilter<"Announcement"> | string | null
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
    unit?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
  }, "id">

  export type AnnouncementOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    lineId?: SortOrder
    path?: SortOrderInput | SortOrder
    important?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    _count?: AnnouncementCountOrderByAggregateInput
    _max?: AnnouncementMaxOrderByAggregateInput
    _min?: AnnouncementMinOrderByAggregateInput
  }

  export type AnnouncementScalarWhereWithAggregatesInput = {
    AND?: AnnouncementScalarWhereWithAggregatesInput | AnnouncementScalarWhereWithAggregatesInput[]
    OR?: AnnouncementScalarWhereWithAggregatesInput[]
    NOT?: AnnouncementScalarWhereWithAggregatesInput | AnnouncementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Announcement"> | string
    title?: StringWithAggregatesFilter<"Announcement"> | string
    content?: StringWithAggregatesFilter<"Announcement"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Announcement"> | Date | string
    authorId?: StringWithAggregatesFilter<"Announcement"> | string
    lineId?: StringWithAggregatesFilter<"Announcement"> | string
    path?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    important?: BoolWithAggregatesFilter<"Announcement"> | boolean
    departmentId?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
  }

  export type PromotionWhereInput = {
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    id?: StringFilter<"Promotion"> | string
    userId?: StringFilter<"Promotion"> | string
    timestamp?: DateTimeFilter<"Promotion"> | Date | string
    positionId?: StringFilter<"Promotion"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    postion?: XOR<PositionScalarRelationFilter, PositionWhereInput>
  }

  export type PromotionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    positionId?: SortOrder
    User?: UserOrderByWithRelationInput
    postion?: PositionOrderByWithRelationInput
  }

  export type PromotionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    userId?: StringFilter<"Promotion"> | string
    timestamp?: DateTimeFilter<"Promotion"> | Date | string
    positionId?: StringFilter<"Promotion"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    postion?: XOR<PositionScalarRelationFilter, PositionWhereInput>
  }, "id">

  export type PromotionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    positionId?: SortOrder
    _count?: PromotionCountOrderByAggregateInput
    _max?: PromotionMaxOrderByAggregateInput
    _min?: PromotionMinOrderByAggregateInput
  }

  export type PromotionScalarWhereWithAggregatesInput = {
    AND?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    OR?: PromotionScalarWhereWithAggregatesInput[]
    NOT?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Promotion"> | string
    userId?: StringWithAggregatesFilter<"Promotion"> | string
    timestamp?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    positionId?: StringWithAggregatesFilter<"Promotion"> | string
  }

  export type BirthdayNoticeResponseWhereInput = {
    AND?: BirthdayNoticeResponseWhereInput | BirthdayNoticeResponseWhereInput[]
    OR?: BirthdayNoticeResponseWhereInput[]
    NOT?: BirthdayNoticeResponseWhereInput | BirthdayNoticeResponseWhereInput[]
    id?: StringFilter<"BirthdayNoticeResponse"> | string
    message?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    like?: BoolFilter<"BirthdayNoticeResponse"> | boolean
    timestamp?: DateTimeFilter<"BirthdayNoticeResponse"> | Date | string
    senderId?: StringFilter<"BirthdayNoticeResponse"> | string
    recipientId?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    lineId?: StringFilter<"BirthdayNoticeResponse"> | string
    Sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    Recipient?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
  }

  export type BirthdayNoticeResponseOrderByWithRelationInput = {
    id?: SortOrder
    message?: SortOrderInput | SortOrder
    like?: SortOrder
    timestamp?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrderInput | SortOrder
    lineId?: SortOrder
    Sender?: UserOrderByWithRelationInput
    Recipient?: UserOrderByWithRelationInput
    line?: LineOrderByWithRelationInput
  }

  export type BirthdayNoticeResponseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BirthdayNoticeResponseWhereInput | BirthdayNoticeResponseWhereInput[]
    OR?: BirthdayNoticeResponseWhereInput[]
    NOT?: BirthdayNoticeResponseWhereInput | BirthdayNoticeResponseWhereInput[]
    message?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    like?: BoolFilter<"BirthdayNoticeResponse"> | boolean
    timestamp?: DateTimeFilter<"BirthdayNoticeResponse"> | Date | string
    senderId?: StringFilter<"BirthdayNoticeResponse"> | string
    recipientId?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    lineId?: StringFilter<"BirthdayNoticeResponse"> | string
    Sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    Recipient?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    line?: XOR<LineScalarRelationFilter, LineWhereInput>
  }, "id">

  export type BirthdayNoticeResponseOrderByWithAggregationInput = {
    id?: SortOrder
    message?: SortOrderInput | SortOrder
    like?: SortOrder
    timestamp?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrderInput | SortOrder
    lineId?: SortOrder
    _count?: BirthdayNoticeResponseCountOrderByAggregateInput
    _max?: BirthdayNoticeResponseMaxOrderByAggregateInput
    _min?: BirthdayNoticeResponseMinOrderByAggregateInput
  }

  export type BirthdayNoticeResponseScalarWhereWithAggregatesInput = {
    AND?: BirthdayNoticeResponseScalarWhereWithAggregatesInput | BirthdayNoticeResponseScalarWhereWithAggregatesInput[]
    OR?: BirthdayNoticeResponseScalarWhereWithAggregatesInput[]
    NOT?: BirthdayNoticeResponseScalarWhereWithAggregatesInput | BirthdayNoticeResponseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BirthdayNoticeResponse"> | string
    message?: StringNullableWithAggregatesFilter<"BirthdayNoticeResponse"> | string | null
    like?: BoolWithAggregatesFilter<"BirthdayNoticeResponse"> | boolean
    timestamp?: DateTimeWithAggregatesFilter<"BirthdayNoticeResponse"> | Date | string
    senderId?: StringWithAggregatesFilter<"BirthdayNoticeResponse"> | string
    recipientId?: StringNullableWithAggregatesFilter<"BirthdayNoticeResponse"> | string | null
    lineId?: StringWithAggregatesFilter<"BirthdayNoticeResponse"> | string
  }

  export type RegionWhereInput = {
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    id?: StringFilter<"Region"> | string
    name?: StringFilter<"Region"> | string
    provices?: ProvinceListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }

  export type RegionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    provices?: ProvinceOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
    Line?: LineOrderByRelationAggregateInput
  }

  export type RegionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    name?: StringFilter<"Region"> | string
    provices?: ProvinceListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }, "id">

  export type RegionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: RegionCountOrderByAggregateInput
    _max?: RegionMaxOrderByAggregateInput
    _min?: RegionMinOrderByAggregateInput
  }

  export type RegionScalarWhereWithAggregatesInput = {
    AND?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    OR?: RegionScalarWhereWithAggregatesInput[]
    NOT?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Region"> | string
    name?: StringWithAggregatesFilter<"Region"> | string
  }

  export type ProvinceWhereInput = {
    AND?: ProvinceWhereInput | ProvinceWhereInput[]
    OR?: ProvinceWhereInput[]
    NOT?: ProvinceWhereInput | ProvinceWhereInput[]
    id?: StringFilter<"Province"> | string
    name?: StringFilter<"Province"> | string
    regionId?: StringNullableFilter<"Province"> | string | null
    Region?: XOR<RegionNullableScalarRelationFilter, RegionWhereInput> | null
    municipals?: MunicipalListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }

  export type ProvinceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    regionId?: SortOrderInput | SortOrder
    Region?: RegionOrderByWithRelationInput
    municipals?: MunicipalOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
    Line?: LineOrderByRelationAggregateInput
  }

  export type ProvinceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProvinceWhereInput | ProvinceWhereInput[]
    OR?: ProvinceWhereInput[]
    NOT?: ProvinceWhereInput | ProvinceWhereInput[]
    name?: StringFilter<"Province"> | string
    regionId?: StringNullableFilter<"Province"> | string | null
    Region?: XOR<RegionNullableScalarRelationFilter, RegionWhereInput> | null
    municipals?: MunicipalListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }, "id">

  export type ProvinceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    regionId?: SortOrderInput | SortOrder
    _count?: ProvinceCountOrderByAggregateInput
    _max?: ProvinceMaxOrderByAggregateInput
    _min?: ProvinceMinOrderByAggregateInput
  }

  export type ProvinceScalarWhereWithAggregatesInput = {
    AND?: ProvinceScalarWhereWithAggregatesInput | ProvinceScalarWhereWithAggregatesInput[]
    OR?: ProvinceScalarWhereWithAggregatesInput[]
    NOT?: ProvinceScalarWhereWithAggregatesInput | ProvinceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Province"> | string
    name?: StringWithAggregatesFilter<"Province"> | string
    regionId?: StringNullableWithAggregatesFilter<"Province"> | string | null
  }

  export type MunicipalWhereInput = {
    AND?: MunicipalWhereInput | MunicipalWhereInput[]
    OR?: MunicipalWhereInput[]
    NOT?: MunicipalWhereInput | MunicipalWhereInput[]
    id?: StringFilter<"Municipal"> | string
    name?: StringFilter<"Municipal"> | string
    provinceId?: StringNullableFilter<"Municipal"> | string | null
    Province?: XOR<ProvinceNullableScalarRelationFilter, ProvinceWhereInput> | null
    barangays?: BarangayListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }

  export type MunicipalOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    provinceId?: SortOrderInput | SortOrder
    Province?: ProvinceOrderByWithRelationInput
    barangays?: BarangayOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
    Line?: LineOrderByRelationAggregateInput
  }

  export type MunicipalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MunicipalWhereInput | MunicipalWhereInput[]
    OR?: MunicipalWhereInput[]
    NOT?: MunicipalWhereInput | MunicipalWhereInput[]
    name?: StringFilter<"Municipal"> | string
    provinceId?: StringNullableFilter<"Municipal"> | string | null
    Province?: XOR<ProvinceNullableScalarRelationFilter, ProvinceWhereInput> | null
    barangays?: BarangayListRelationFilter
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }, "id">

  export type MunicipalOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    provinceId?: SortOrderInput | SortOrder
    _count?: MunicipalCountOrderByAggregateInput
    _max?: MunicipalMaxOrderByAggregateInput
    _min?: MunicipalMinOrderByAggregateInput
  }

  export type MunicipalScalarWhereWithAggregatesInput = {
    AND?: MunicipalScalarWhereWithAggregatesInput | MunicipalScalarWhereWithAggregatesInput[]
    OR?: MunicipalScalarWhereWithAggregatesInput[]
    NOT?: MunicipalScalarWhereWithAggregatesInput | MunicipalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Municipal"> | string
    name?: StringWithAggregatesFilter<"Municipal"> | string
    provinceId?: StringNullableWithAggregatesFilter<"Municipal"> | string | null
  }

  export type BarangayWhereInput = {
    AND?: BarangayWhereInput | BarangayWhereInput[]
    OR?: BarangayWhereInput[]
    NOT?: BarangayWhereInput | BarangayWhereInput[]
    id?: StringFilter<"Barangay"> | string
    name?: StringFilter<"Barangay"> | string
    municipalId?: StringNullableFilter<"Barangay"> | string | null
    Municipal?: XOR<MunicipalNullableScalarRelationFilter, MunicipalWhereInput> | null
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }

  export type BarangayOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    municipalId?: SortOrderInput | SortOrder
    Municipal?: MunicipalOrderByWithRelationInput
    User?: UserOrderByRelationAggregateInput
    Line?: LineOrderByRelationAggregateInput
  }

  export type BarangayWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BarangayWhereInput | BarangayWhereInput[]
    OR?: BarangayWhereInput[]
    NOT?: BarangayWhereInput | BarangayWhereInput[]
    name?: StringFilter<"Barangay"> | string
    municipalId?: StringNullableFilter<"Barangay"> | string | null
    Municipal?: XOR<MunicipalNullableScalarRelationFilter, MunicipalWhereInput> | null
    User?: UserListRelationFilter
    Line?: LineListRelationFilter
  }, "id">

  export type BarangayOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    municipalId?: SortOrderInput | SortOrder
    _count?: BarangayCountOrderByAggregateInput
    _max?: BarangayMaxOrderByAggregateInput
    _min?: BarangayMinOrderByAggregateInput
  }

  export type BarangayScalarWhereWithAggregatesInput = {
    AND?: BarangayScalarWhereWithAggregatesInput | BarangayScalarWhereWithAggregatesInput[]
    OR?: BarangayScalarWhereWithAggregatesInput[]
    NOT?: BarangayScalarWhereWithAggregatesInput | BarangayScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Barangay"> | string
    name?: StringWithAggregatesFilter<"Barangay"> | string
    municipalId?: StringNullableWithAggregatesFilter<"Barangay"> | string | null
  }

  export type AccomplishmentWhereInput = {
    AND?: AccomplishmentWhereInput | AccomplishmentWhereInput[]
    OR?: AccomplishmentWhereInput[]
    NOT?: AccomplishmentWhereInput | AccomplishmentWhereInput[]
    id?: StringFilter<"Accomplishment"> | string
    timestamp?: DateTimeFilter<"Accomplishment"> | Date | string
    userId?: StringNullableFilter<"Accomplishment"> | string | null
    start?: DateTimeFilter<"Accomplishment"> | Date | string
    end?: DateTimeFilter<"Accomplishment"> | Date | string
    task?: StringFilter<"Accomplishment"> | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    AccomplishmentResponse?: AccomplishmentResponseListRelationFilter
  }

  export type AccomplishmentOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrderInput | SortOrder
    start?: SortOrder
    end?: SortOrder
    task?: SortOrder
    user?: UserOrderByWithRelationInput
    AccomplishmentResponse?: AccomplishmentResponseOrderByRelationAggregateInput
  }

  export type AccomplishmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccomplishmentWhereInput | AccomplishmentWhereInput[]
    OR?: AccomplishmentWhereInput[]
    NOT?: AccomplishmentWhereInput | AccomplishmentWhereInput[]
    timestamp?: DateTimeFilter<"Accomplishment"> | Date | string
    userId?: StringNullableFilter<"Accomplishment"> | string | null
    start?: DateTimeFilter<"Accomplishment"> | Date | string
    end?: DateTimeFilter<"Accomplishment"> | Date | string
    task?: StringFilter<"Accomplishment"> | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    AccomplishmentResponse?: AccomplishmentResponseListRelationFilter
  }, "id">

  export type AccomplishmentOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrderInput | SortOrder
    start?: SortOrder
    end?: SortOrder
    task?: SortOrder
    _count?: AccomplishmentCountOrderByAggregateInput
    _max?: AccomplishmentMaxOrderByAggregateInput
    _min?: AccomplishmentMinOrderByAggregateInput
  }

  export type AccomplishmentScalarWhereWithAggregatesInput = {
    AND?: AccomplishmentScalarWhereWithAggregatesInput | AccomplishmentScalarWhereWithAggregatesInput[]
    OR?: AccomplishmentScalarWhereWithAggregatesInput[]
    NOT?: AccomplishmentScalarWhereWithAggregatesInput | AccomplishmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Accomplishment"> | string
    timestamp?: DateTimeWithAggregatesFilter<"Accomplishment"> | Date | string
    userId?: StringNullableWithAggregatesFilter<"Accomplishment"> | string | null
    start?: DateTimeWithAggregatesFilter<"Accomplishment"> | Date | string
    end?: DateTimeWithAggregatesFilter<"Accomplishment"> | Date | string
    task?: StringWithAggregatesFilter<"Accomplishment"> | string
  }

  export type AccomplishmentResponseWhereInput = {
    AND?: AccomplishmentResponseWhereInput | AccomplishmentResponseWhereInput[]
    OR?: AccomplishmentResponseWhereInput[]
    NOT?: AccomplishmentResponseWhereInput | AccomplishmentResponseWhereInput[]
    id?: StringFilter<"AccomplishmentResponse"> | string
    headId?: StringFilter<"AccomplishmentResponse"> | string
    accomplishmentId?: StringFilter<"AccomplishmentResponse"> | string
    message?: StringFilter<"AccomplishmentResponse"> | string
    timestamp?: DateTimeFilter<"AccomplishmentResponse"> | Date | string
    head?: XOR<UserScalarRelationFilter, UserWhereInput>
    accomplishment?: XOR<AccomplishmentScalarRelationFilter, AccomplishmentWhereInput>
  }

  export type AccomplishmentResponseOrderByWithRelationInput = {
    id?: SortOrder
    headId?: SortOrder
    accomplishmentId?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
    head?: UserOrderByWithRelationInput
    accomplishment?: AccomplishmentOrderByWithRelationInput
  }

  export type AccomplishmentResponseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccomplishmentResponseWhereInput | AccomplishmentResponseWhereInput[]
    OR?: AccomplishmentResponseWhereInput[]
    NOT?: AccomplishmentResponseWhereInput | AccomplishmentResponseWhereInput[]
    headId?: StringFilter<"AccomplishmentResponse"> | string
    accomplishmentId?: StringFilter<"AccomplishmentResponse"> | string
    message?: StringFilter<"AccomplishmentResponse"> | string
    timestamp?: DateTimeFilter<"AccomplishmentResponse"> | Date | string
    head?: XOR<UserScalarRelationFilter, UserWhereInput>
    accomplishment?: XOR<AccomplishmentScalarRelationFilter, AccomplishmentWhereInput>
  }, "id">

  export type AccomplishmentResponseOrderByWithAggregationInput = {
    id?: SortOrder
    headId?: SortOrder
    accomplishmentId?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
    _count?: AccomplishmentResponseCountOrderByAggregateInput
    _max?: AccomplishmentResponseMaxOrderByAggregateInput
    _min?: AccomplishmentResponseMinOrderByAggregateInput
  }

  export type AccomplishmentResponseScalarWhereWithAggregatesInput = {
    AND?: AccomplishmentResponseScalarWhereWithAggregatesInput | AccomplishmentResponseScalarWhereWithAggregatesInput[]
    OR?: AccomplishmentResponseScalarWhereWithAggregatesInput[]
    NOT?: AccomplishmentResponseScalarWhereWithAggregatesInput | AccomplishmentResponseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AccomplishmentResponse"> | string
    headId?: StringWithAggregatesFilter<"AccomplishmentResponse"> | string
    accomplishmentId?: StringWithAggregatesFilter<"AccomplishmentResponse"> | string
    message?: StringWithAggregatesFilter<"AccomplishmentResponse"> | string
    timestamp?: DateTimeWithAggregatesFilter<"AccomplishmentResponse"> | Date | string
  }

  export type LineCreateInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineCreateManyInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
  }

  export type LineUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
  }

  export type LineUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationLinkCreateInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
    line: LineCreateNestedOneWithoutInvitationLinkInput
  }

  export type InvitationLinkUncheckedCreateInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
    lineId: string
  }

  export type InvitationLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    line?: LineUpdateOneRequiredWithoutInvitationLinkNestedInput
  }

  export type InvitationLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationLinkCreateManyInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
    lineId: string
  }

  export type InvitationLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type AssetsCreateInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    Supplies?: SuppliesCreateNestedOneWithoutAssetInput
    ProfilePicture?: ProfilePictureCreateNestedManyWithoutAssetInput
    SupplyOrderSupport?: SupplyOrderSupportFileCreateNestedManyWithoutFileInput
  }

  export type AssetsUncheckedCreateInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    suppliesId?: string | null
    ProfilePicture?: ProfilePictureUncheckedCreateNestedManyWithoutAssetInput
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutFileInput
  }

  export type AssetsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Supplies?: SuppliesUpdateOneWithoutAssetNestedInput
    ProfilePicture?: ProfilePictureUpdateManyWithoutAssetNestedInput
    SupplyOrderSupport?: SupplyOrderSupportFileUpdateManyWithoutFileNestedInput
  }

  export type AssetsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    ProfilePicture?: ProfilePictureUncheckedUpdateManyWithoutAssetNestedInput
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedUpdateManyWithoutFileNestedInput
  }

  export type AssetsCreateManyInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    suppliesId?: string | null
  }

  export type AssetsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfilePictureCreateInput = {
    id?: string
    createdAt?: Date | string
    asset: AssetsCreateNestedOneWithoutProfilePictureInput
    user: UserCreateNestedOneWithoutProfilePictureInput
  }

  export type ProfilePictureUncheckedCreateInput = {
    id?: string
    assetsId: string
    userId: string
    createdAt?: Date | string
  }

  export type ProfilePictureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetsUpdateOneRequiredWithoutProfilePictureNestedInput
    user?: UserUpdateOneRequiredWithoutProfilePictureNestedInput
  }

  export type ProfilePictureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfilePictureCreateManyInput = {
    id?: string
    assetsId: string
    userId: string
    createdAt?: Date | string
  }

  export type ProfilePictureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfilePictureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryBoxCreateInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxCreateManyInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
  }

  export type InventoryBoxUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryBoxUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContainerAllowedUserCreateInput = {
    id?: string
    timestamp?: Date | string
    user?: UserCreateNestedOneWithoutContainerAllowedUserInput
    container: InventoryBoxCreateNestedOneWithoutContainerAllowedUserInput
    grantBy: UserCreateNestedOneWithoutGrantContainerInput
  }

  export type ContainerAllowedUserUncheckedCreateInput = {
    id?: string
    userId?: string | null
    inventoryBoxId: string
    grantByUserId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutContainerAllowedUserNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutContainerAllowedUserNestedInput
    grantBy?: UserUpdateOneRequiredWithoutGrantContainerNestedInput
  }

  export type ContainerAllowedUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserCreateManyInput = {
    id?: string
    userId?: string | null
    inventoryBoxId: string
    grantByUserId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InventoryAccessLogsCreateInput = {
    id?: string
    timestamp: Date | string
    action?: string
    user?: UserCreateNestedOneWithoutInventoryAccessLogsInput
    box?: InventoryBoxCreateNestedOneWithoutInventoryAccessLogsInput
    supply?: SuppliesCreateNestedOneWithoutInventoryAccessLogsInput
  }

  export type InventoryAccessLogsUncheckedCreateInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
    suppliesId?: string | null
  }

  export type InventoryAccessLogsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutInventoryAccessLogsNestedInput
    box?: InventoryBoxUpdateOneWithoutInventoryAccessLogsNestedInput
    supply?: SuppliesUpdateOneWithoutInventoryAccessLogsNestedInput
  }

  export type InventoryAccessLogsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsCreateManyInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
    suppliesId?: string | null
  }

  export type InventoryAccessLogsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryAccessLogsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesCreateInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesCreateManyInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
  }

  export type SuppliesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyBatchCreateInput = {
    id?: string
    timestamp?: Date | string
    title: string
    box: InventoryBoxCreateNestedOneWithoutSupplyBatchInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedManyWithoutBatchInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutListInput
  }

  export type SupplyBatchUncheckedCreateInput = {
    id?: string
    timestamp?: Date | string
    title: string
    inventoryBoxId: string
    suppliesDataSetId?: string | null
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedManyWithoutBatchInput
  }

  export type SupplyBatchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    box?: InventoryBoxUpdateOneRequiredWithoutSupplyBatchNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateManyWithoutBatchNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutListNestedInput
  }

  export type SupplyBatchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateManyWithoutBatchNestedInput
  }

  export type SupplyBatchCreateManyInput = {
    id?: string
    timestamp?: Date | string
    title: string
    inventoryBoxId: string
    suppliesDataSetId?: string | null
  }

  export type SupplyBatchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyBatchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyBatchItemCreateInput = {
    id?: string
    timestamp?: Date | string
    batch: SupplyBatchCreateNestedOneWithoutSupplyBatchItemInput
    supply?: SuppliesCreateNestedOneWithoutSupplyBatchItemInput
  }

  export type SupplyBatchItemUncheckedCreateInput = {
    id?: string
    supplyBatchId: string
    suppliesId?: string | null
    timestamp?: Date | string
  }

  export type SupplyBatchItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchUpdateOneRequiredWithoutSupplyBatchItemNestedInput
    supply?: SuppliesUpdateOneWithoutSupplyBatchItemNestedInput
  }

  export type SupplyBatchItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchId?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchItemCreateManyInput = {
    id?: string
    supplyBatchId: string
    suppliesId?: string | null
    timestamp?: Date | string
  }

  export type SupplyBatchItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchId?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchOrderCreateInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    user?: UserCreateNestedOneWithoutSupplyBatchOrderInput
    order?: SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput
    line?: LineCreateNestedOneWithoutSupplyBatchOrderInput
    InventoryBox?: InventoryBoxCreateNestedOneWithoutBatchInput
  }

  export type SupplyBatchOrderUncheckedCreateInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
    order?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneWithoutSupplyBatchOrderNestedInput
    order?: SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput
    line?: LineUpdateOneWithoutSupplyBatchOrderNestedInput
    InventoryBox?: InventoryBoxUpdateOneWithoutBatchNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    order?: SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderCreateManyInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
  }

  export type SupplyBatchOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
  }

  export type SupplyBatchOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyOrderSupportFileCreateInput = {
    id?: string
    file: AssetsCreateNestedOneWithoutSupplyOrderSupportInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedOneWithoutFilesInput
  }

  export type SupplyOrderSupportFileUncheckedCreateInput = {
    id?: string
    assetsId: string
    supplyBatchOrderId?: string | null
  }

  export type SupplyOrderSupportFileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file?: AssetsUpdateOneRequiredWithoutSupplyOrderSupportNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateOneWithoutFilesNestedInput
  }

  export type SupplyOrderSupportFileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyOrderSupportFileCreateManyInput = {
    id?: string
    assetsId: string
    supplyBatchOrderId?: string | null
  }

  export type SupplyOrderSupportFileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderSupportFileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyOrderCreateInput = {
    id?: string
    quantity?: number
    status?: string
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedOneWithoutOrderInput
    supply: SuppliesCreateNestedOneWithoutSupplyOrderInput
    unit: SuppliesQualityCreateNestedOneWithoutSupplyOrderInput
  }

  export type SupplyOrderUncheckedCreateInput = {
    id?: string
    supplyBatchOrderId?: string | null
    suppliesId: string
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    SupplyBatchOrder?: SupplyBatchOrderUpdateOneWithoutOrderNestedInput
    supply?: SuppliesUpdateOneRequiredWithoutSupplyOrderNestedInput
    unit?: SuppliesQualityUpdateOneRequiredWithoutSupplyOrderNestedInput
  }

  export type SupplyOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderCreateManyInput = {
    id?: string
    supplyBatchOrderId?: string | null
    suppliesId: string
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesDataSetCreateInput = {
    id?: string
    title: string
    timestamp?: Date | string
    unit?: SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput
    line: LineCreateNestedOneWithoutSuppliesDataSetInput
    container: InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput
    list?: SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    inventoryBoxId: string
    unit?: SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    list?: SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput
    line?: LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    unit?: SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetCreateManyInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    inventoryBoxId: string
  }

  export type SuppliesDataSetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesDataSetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesQualityCreateInput = {
    id?: string
    quality: string
    perQuality?: number
    supplies?: SuppliesCreateNestedManyWithoutSuppliesQualityInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutUnitInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityUncheckedCreateInput = {
    id?: string
    quality: string
    perQuality?: number
    suppliesDataSetId?: string | null
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesQualityInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    supplies?: SuppliesUpdateManyWithoutSuppliesQualityNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutUnitNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutUnitNestedInput
  }

  export type SuppliesQualityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesQualityNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type SuppliesQualityCreateManyInput = {
    id?: string
    quality: string
    perQuality?: number
    suppliesDataSetId?: string | null
  }

  export type SuppliesQualityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
  }

  export type SuppliesQualityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyPriceTrackCreateInput = {
    id?: string
    value?: number
    timestamp?: Date | string
    supply: SuppliesCreateNestedOneWithoutSupplyPriceTrackInput
  }

  export type SupplyPriceTrackUncheckedCreateInput = {
    id?: string
    value?: number
    suppliesId: string
    timestamp?: Date | string
  }

  export type SupplyPriceTrackUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    supply?: SuppliesUpdateOneRequiredWithoutSupplyPriceTrackNestedInput
  }

  export type SupplyPriceTrackUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyPriceTrackCreateManyInput = {
    id?: string
    value?: number
    suppliesId: string
    timestamp?: Date | string
  }

  export type SupplyPriceTrackUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyPriceTrackUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackCreateInput = {
    id?: string
    stock?: number
    timestamp?: Date | string
    supply: SuppliesCreateNestedOneWithoutSupplyStockTrackInput
  }

  export type SupplyStockTrackUncheckedCreateInput = {
    id?: string
    stock?: number
    suppliesId: string
    timestamp?: Date | string
  }

  export type SupplyStockTrackUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    supply?: SuppliesUpdateOneRequiredWithoutSupplyStockTrackNestedInput
  }

  export type SupplyStockTrackUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackCreateManyInput = {
    id?: string
    stock?: number
    suppliesId: string
    timestamp?: Date | string
  }

  export type SupplyStockTrackUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesCategoryCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    supplies?: SuppliesCreateNestedManyWithoutSuppliesCategoryInput
  }

  export type SuppliesCategoryUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesCategoryInput
  }

  export type SuppliesCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplies?: SuppliesUpdateManyWithoutSuppliesCategoryNestedInput
  }

  export type SuppliesCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesCategoryNestedInput
  }

  export type SuppliesCategoryCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type SuppliesCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplieRecieveHistoryCreateInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
    supply: SuppliesCreateNestedOneWithoutSupplieRecieveHistoryInput
  }

  export type SupplieRecieveHistoryUncheckedCreateInput = {
    id?: string
    suppliesId: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
  }

  export type SupplieRecieveHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    supply?: SuppliesUpdateOneRequiredWithoutSupplieRecieveHistoryNestedInput
  }

  export type SupplieRecieveHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplieRecieveHistoryCreateManyInput = {
    id?: string
    suppliesId: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
  }

  export type SupplieRecieveHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplieRecieveHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesCreateInput = {
    id?: string
    timestamp?: Date | string
    condition?: string | null
    supply?: SuppliesCreateNestedOneWithoutTransferredSuppliesInput
    user: UserCreateNestedOneWithoutTransferredSuppliesInput
    transferredTo: UserCreateNestedOneWithoutTransferToInput
  }

  export type TransferredSuppliesUncheckedCreateInput = {
    id?: string
    suppliesId?: string | null
    userId: string
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    supply?: SuppliesUpdateOneWithoutTransferredSuppliesNestedInput
    user?: UserUpdateOneRequiredWithoutTransferredSuppliesNestedInput
    transferredTo?: UserUpdateOneRequiredWithoutTransferToNestedInput
  }

  export type TransferredSuppliesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesCreateManyInput = {
    id?: string
    suppliesId?: string | null
    userId: string
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordCreateInput = {
    id?: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    suppyId: SuppliesCreateNestedOneWithoutSuppliesRecordInput
    user: UserCreateNestedOneWithoutSuppliesRecordInput
    modified?: SuppliesCreateNestedOneWithoutPartInput
  }

  export type SuppliesRecordUncheckedCreateInput = {
    id?: string
    suppliesId: string
    timestamp?: Date | string
    userId: string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type SuppliesRecordUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    suppyId?: SuppliesUpdateOneRequiredWithoutSuppliesRecordNestedInput
    user?: UserUpdateOneRequiredWithoutSuppliesRecordNestedInput
    modified?: SuppliesUpdateOneWithoutPartNestedInput
  }

  export type SuppliesRecordUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordCreateManyInput = {
    id?: string
    suppliesId: string
    timestamp?: Date | string
    userId: string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type SuppliesRecordUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationCreateInput = {
    id?: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutApplicationInput
    position: PositionCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateInput = {
    id?: string
    userId: string
    positionId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutApplicationNestedInput
    position?: PositionUpdateOneRequiredWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationCreateManyInput = {
    id?: string
    userId: string
    positionId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
  }

  export type DepartmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepartmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GroupCreateInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    unit: DepartmentCreateNestedOneWithoutGroupInput
    users?: UserCreateNestedManyWithoutGroupInput
    line?: LineCreateNestedOneWithoutGroupInput
    chief?: UserCreateNestedOneWithoutChiefInput
  }

  export type GroupUncheckedCreateInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    userId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutGroupInput
  }

  export type GroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: DepartmentUpdateOneRequiredWithoutGroupNestedInput
    users?: UserUpdateManyWithoutGroupNestedInput
    line?: LineUpdateOneWithoutGroupNestedInput
    chief?: UserUpdateOneWithoutChiefNestedInput
  }

  export type GroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutGroupNestedInput
  }

  export type GroupCreateManyInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    userId?: string | null
  }

  export type GroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminCreateInput = {
    id?: string
    username: string
    password: string
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    username: string
    password: string
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type AdminCreateManyInput = {
    id?: string
    username: string
    password: string
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type AdminProfileCreateInput = {
    id?: string
    username: string
    line?: LineCreateNestedManyWithoutAdminProfileInput
  }

  export type AdminProfileUncheckedCreateInput = {
    id?: string
    username: string
    line?: LineUncheckedCreateNestedManyWithoutAdminProfileInput
  }

  export type AdminProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    line?: LineUpdateManyWithoutAdminProfileNestedInput
  }

  export type AdminProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    line?: LineUncheckedUpdateManyWithoutAdminProfileNestedInput
  }

  export type AdminProfileCreateManyInput = {
    id?: string
    username: string
  }

  export type AdminProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AccountCreateInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    User?: UserCreateNestedOneWithoutAccountInput
    line?: LineCreateNestedOneWithoutAccountInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    lineId?: string | null
    User?: UserUncheckedCreateNestedOneWithoutAccountInput
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneWithoutAccountNestedInput
    line?: LineUpdateOneWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUncheckedUpdateOneWithoutAccountNestedInput
  }

  export type AccountCreateManyInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    lineId?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PrivilegeCreateInput = {
    id?: string
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
    User?: UserCreateNestedOneWithoutPrivilegeInput
  }

  export type PrivilegeUncheckedCreateInput = {
    id?: string
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
    User?: UserUncheckedCreateNestedOneWithoutPrivilegeInput
  }

  export type PrivilegeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneWithoutPrivilegeNestedInput
  }

  export type PrivilegeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUncheckedUpdateOneWithoutPrivilegeNestedInput
  }

  export type PrivilegeCreateManyInput = {
    id?: string
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }

  export type PrivilegeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PrivilegeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LogRecordCreateInput = {
    id?: string
    action: string
    timestamp?: Date | string
    user: UserCreateNestedOneWithoutLogRecordInput
  }

  export type LogRecordUncheckedCreateInput = {
    id?: string
    userId: string
    action: string
    timestamp?: Date | string
  }

  export type LogRecordUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutLogRecordNestedInput
  }

  export type LogRecordUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogRecordCreateManyInput = {
    id?: string
    userId: string
    action: string
    timestamp?: Date | string
  }

  export type LogRecordUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogRecordUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    isRead?: boolean
    sender: UserCreateNestedOneWithoutSentNotificationsInput
    recipient: UserCreateNestedOneWithoutReceivedNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    recipientId: string
    senderId: string
    path?: string | null
    isRead?: boolean
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    sender?: UserUpdateOneRequiredWithoutSentNotificationsNestedInput
    recipient?: UserUpdateOneRequiredWithoutReceivedNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationCreateManyInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    recipientId: string
    senderId: string
    path?: string | null
    isRead?: boolean
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PositionCreateInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type PositionCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
  }

  export type PositionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PositionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionSlotCreateInput = {
    id?: string
    pos: PositionCreateNestedOneWithoutPositionSlotInput
    salaryGrade: SalaryGradeCreateNestedOneWithoutPositionSlotInput
    user?: UserCreateNestedOneWithoutPositionSlotInput
  }

  export type PositionSlotUncheckedCreateInput = {
    id?: string
    positionId: string
    salaryGradeId: string
    userId?: string | null
  }

  export type PositionSlotUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pos?: PositionUpdateOneRequiredWithoutPositionSlotNestedInput
    salaryGrade?: SalaryGradeUpdateOneRequiredWithoutPositionSlotNestedInput
    user?: UserUpdateOneWithoutPositionSlotNestedInput
  }

  export type PositionSlotUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionSlotCreateManyInput = {
    id?: string
    positionId: string
    salaryGradeId: string
    userId?: string | null
  }

  export type PositionSlotUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type PositionSlotUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalaryGradeCreateInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutSalaryGradeInput
    line?: LineCreateNestedOneWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionUncheckedCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutSalaryGradeNestedInput
    line?: LineUpdateOneWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeCreateManyInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
  }

  export type SalaryGradeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SalaryGradeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalaryGradeHistoryCreateInput = {
    id?: string
    userId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
    salaryGrade: SalaryGradeCreateNestedOneWithoutSalaryGradeHistoryInput
  }

  export type SalaryGradeHistoryUncheckedCreateInput = {
    id?: string
    userId: string
    salaryGradeId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
  }

  export type SalaryGradeHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
    salaryGrade?: SalaryGradeUpdateOneRequiredWithoutSalaryGradeHistoryNestedInput
  }

  export type SalaryGradeHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type SalaryGradeHistoryCreateManyInput = {
    id?: string
    userId: string
    salaryGradeId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
  }

  export type SalaryGradeHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type SalaryGradeHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type LeaveCreateInput = {
    id?: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutLeaveInput
  }

  export type LeaveUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
  }

  export type LeaveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutLeaveNestedInput
  }

  export type LeaveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeaveCreateManyInput = {
    id?: string
    userId: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
  }

  export type LeaveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeaveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AnnouncementCreateInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    important?: boolean
    author: UserCreateNestedOneWithoutAnnouncementInput
    line: LineCreateNestedOneWithoutAnnouncementInput
    unit?: DepartmentCreateNestedOneWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    lineId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type AnnouncementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAnnouncementNestedInput
    line?: LineUpdateOneRequiredWithoutAnnouncementNestedInput
    unit?: DepartmentUpdateOneWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnnouncementCreateManyInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    lineId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type AnnouncementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AnnouncementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionCreateInput = {
    id?: string
    timestamp?: Date | string
    User: UserCreateNestedOneWithoutPromotionsInput
    postion: PositionCreateNestedOneWithoutPromotionInput
  }

  export type PromotionUncheckedCreateInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    positionId: string
  }

  export type PromotionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutPromotionsNestedInput
    postion?: PositionUpdateOneRequiredWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    positionId?: StringFieldUpdateOperationsInput | string
  }

  export type PromotionCreateManyInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    positionId: string
  }

  export type PromotionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    positionId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseCreateInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    Sender: UserCreateNestedOneWithoutBdaySenderInput
    Recipient?: UserCreateNestedOneWithoutBdayRecipientInput
    line: LineCreateNestedOneWithoutBirthdayNoticeResponseInput
  }

  export type BirthdayNoticeResponseUncheckedCreateInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    recipientId?: string | null
    lineId: string
  }

  export type BirthdayNoticeResponseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Sender?: UserUpdateOneRequiredWithoutBdaySenderNestedInput
    Recipient?: UserUpdateOneWithoutBdayRecipientNestedInput
    line?: LineUpdateOneRequiredWithoutBirthdayNoticeResponseNestedInput
  }

  export type BirthdayNoticeResponseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseCreateManyInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    recipientId?: string | null
    lineId: string
  }

  export type BirthdayNoticeResponseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type RegionCreateInput = {
    id: string
    name: string
    provices?: ProvinceCreateNestedManyWithoutRegionInput
    User?: UserCreateNestedManyWithoutRegionInput
    Line?: LineCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateInput = {
    id: string
    name: string
    provices?: ProvinceUncheckedCreateNestedManyWithoutRegionInput
    User?: UserUncheckedCreateNestedManyWithoutRegionInput
    Line?: LineUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUpdateManyWithoutRegionNestedInput
    User?: UserUpdateManyWithoutRegionNestedInput
    Line?: LineUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUncheckedUpdateManyWithoutRegionNestedInput
    User?: UserUncheckedUpdateManyWithoutRegionNestedInput
    Line?: LineUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type RegionCreateManyInput = {
    id: string
    name: string
  }

  export type RegionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RegionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinceCreateInput = {
    id: string
    name: string
    Region?: RegionCreateNestedOneWithoutProvicesInput
    municipals?: MunicipalCreateNestedManyWithoutProvinceInput
    User?: UserCreateNestedManyWithoutProvinceInput
    Line?: LineCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUncheckedCreateInput = {
    id: string
    name: string
    regionId?: string | null
    municipals?: MunicipalUncheckedCreateNestedManyWithoutProvinceInput
    User?: UserUncheckedCreateNestedManyWithoutProvinceInput
    Line?: LineUncheckedCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneWithoutProvicesNestedInput
    municipals?: MunicipalUpdateManyWithoutProvinceNestedInput
    User?: UserUpdateManyWithoutProvinceNestedInput
    Line?: LineUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipals?: MunicipalUncheckedUpdateManyWithoutProvinceNestedInput
    User?: UserUncheckedUpdateManyWithoutProvinceNestedInput
    Line?: LineUncheckedUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceCreateManyInput = {
    id: string
    name: string
    regionId?: string | null
  }

  export type ProvinceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MunicipalCreateInput = {
    id: string
    name: string
    Province?: ProvinceCreateNestedOneWithoutMunicipalsInput
    barangays?: BarangayCreateNestedManyWithoutMunicipalInput
    User?: UserCreateNestedManyWithoutMunicipalInput
    Line?: LineCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUncheckedCreateInput = {
    id: string
    name: string
    provinceId?: string | null
    barangays?: BarangayUncheckedCreateNestedManyWithoutMunicipalInput
    User?: UserUncheckedCreateNestedManyWithoutMunicipalInput
    Line?: LineUncheckedCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Province?: ProvinceUpdateOneWithoutMunicipalsNestedInput
    barangays?: BarangayUpdateManyWithoutMunicipalNestedInput
    User?: UserUpdateManyWithoutMunicipalNestedInput
    Line?: LineUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangays?: BarangayUncheckedUpdateManyWithoutMunicipalNestedInput
    User?: UserUncheckedUpdateManyWithoutMunicipalNestedInput
    Line?: LineUncheckedUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalCreateManyInput = {
    id: string
    name: string
    provinceId?: string | null
  }

  export type MunicipalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BarangayCreateInput = {
    id: string
    name: string
    Municipal?: MunicipalCreateNestedOneWithoutBarangaysInput
    User?: UserCreateNestedManyWithoutBarangayInput
    Line?: LineCreateNestedManyWithoutBarangayInput
  }

  export type BarangayUncheckedCreateInput = {
    id: string
    name: string
    municipalId?: string | null
    User?: UserUncheckedCreateNestedManyWithoutBarangayInput
    Line?: LineUncheckedCreateNestedManyWithoutBarangayInput
  }

  export type BarangayUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Municipal?: MunicipalUpdateOneWithoutBarangaysNestedInput
    User?: UserUpdateManyWithoutBarangayNestedInput
    Line?: LineUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUncheckedUpdateManyWithoutBarangayNestedInput
    Line?: LineUncheckedUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayCreateManyInput = {
    id: string
    name: string
    municipalId?: string | null
  }

  export type BarangayUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type BarangayUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccomplishmentCreateInput = {
    id?: string
    timestamp?: Date | string
    start: Date | string
    end: Date | string
    task: string
    user?: UserCreateNestedOneWithoutAccomplishmentInput
    AccomplishmentResponse?: AccomplishmentResponseCreateNestedManyWithoutAccomplishmentInput
  }

  export type AccomplishmentUncheckedCreateInput = {
    id?: string
    timestamp?: Date | string
    userId?: string | null
    start: Date | string
    end: Date | string
    task: string
    AccomplishmentResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutAccomplishmentInput
  }

  export type AccomplishmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutAccomplishmentNestedInput
    AccomplishmentResponse?: AccomplishmentResponseUpdateManyWithoutAccomplishmentNestedInput
  }

  export type AccomplishmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
    AccomplishmentResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutAccomplishmentNestedInput
  }

  export type AccomplishmentCreateManyInput = {
    id?: string
    timestamp?: Date | string
    userId?: string | null
    start: Date | string
    end: Date | string
    task: string
  }

  export type AccomplishmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
  }

  export type AccomplishmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
  }

  export type AccomplishmentResponseCreateInput = {
    id?: string
    message: string
    timestamp?: Date | string
    head: UserCreateNestedOneWithoutHeadResponseInput
    accomplishment: AccomplishmentCreateNestedOneWithoutAccomplishmentResponseInput
  }

  export type AccomplishmentResponseUncheckedCreateInput = {
    id?: string
    headId: string
    accomplishmentId: string
    message: string
    timestamp?: Date | string
  }

  export type AccomplishmentResponseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    head?: UserUpdateOneRequiredWithoutHeadResponseNestedInput
    accomplishment?: AccomplishmentUpdateOneRequiredWithoutAccomplishmentResponseNestedInput
  }

  export type AccomplishmentResponseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    headId?: StringFieldUpdateOperationsInput | string
    accomplishmentId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccomplishmentResponseCreateManyInput = {
    id?: string
    headId: string
    accomplishmentId: string
    message: string
    timestamp?: Date | string
  }

  export type AccomplishmentResponseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccomplishmentResponseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    headId?: StringFieldUpdateOperationsInput | string
    accomplishmentId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BarangayScalarRelationFilter = {
    is?: BarangayWhereInput
    isNot?: BarangayWhereInput
  }

  export type MunicipalScalarRelationFilter = {
    is?: MunicipalWhereInput
    isNot?: MunicipalWhereInput
  }

  export type ProvinceScalarRelationFilter = {
    is?: ProvinceWhereInput
    isNot?: ProvinceWhereInput
  }

  export type RegionScalarRelationFilter = {
    is?: RegionWhereInput
    isNot?: RegionWhereInput
  }

  export type DepartmentListRelationFilter = {
    every?: DepartmentWhereInput
    some?: DepartmentWhereInput
    none?: DepartmentWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type PositionListRelationFilter = {
    every?: PositionWhereInput
    some?: PositionWhereInput
    none?: PositionWhereInput
  }

  export type SalaryGradeListRelationFilter = {
    every?: SalaryGradeWhereInput
    some?: SalaryGradeWhereInput
    none?: SalaryGradeWhereInput
  }

  export type AnnouncementListRelationFilter = {
    every?: AnnouncementWhereInput
    some?: AnnouncementWhereInput
    none?: AnnouncementWhereInput
  }

  export type BirthdayNoticeResponseListRelationFilter = {
    every?: BirthdayNoticeResponseWhereInput
    some?: BirthdayNoticeResponseWhereInput
    none?: BirthdayNoticeResponseWhereInput
  }

  export type InvitationLinkListRelationFilter = {
    every?: InvitationLinkWhereInput
    some?: InvitationLinkWhereInput
    none?: InvitationLinkWhereInput
  }

  export type SuppliesListRelationFilter = {
    every?: SuppliesWhereInput
    some?: SuppliesWhereInput
    none?: SuppliesWhereInput
  }

  export type SupplyBatchOrderListRelationFilter = {
    every?: SupplyBatchOrderWhereInput
    some?: SupplyBatchOrderWhereInput
    none?: SupplyBatchOrderWhereInput
  }

  export type GroupListRelationFilter = {
    every?: GroupWhereInput
    some?: GroupWhereInput
    none?: GroupWhereInput
  }

  export type AdminProfileNullableScalarRelationFilter = {
    is?: AdminProfileWhereInput | null
    isNot?: AdminProfileWhereInput | null
  }

  export type InventoryBoxListRelationFilter = {
    every?: InventoryBoxWhereInput
    some?: InventoryBoxWhereInput
    none?: InventoryBoxWhereInput
  }

  export type SuppliesDataSetListRelationFilter = {
    every?: SuppliesDataSetWhereInput
    some?: SuppliesDataSetWhereInput
    none?: SuppliesDataSetWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DepartmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PositionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalaryGradeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AnnouncementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BirthdayNoticeResponseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvitationLinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SuppliesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyBatchOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryBoxOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SuppliesDataSetOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LineCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    password?: SortOrder
    barangayId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    regionId?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    adminProfileId?: SortOrder
  }

  export type LineAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type LineMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    password?: SortOrder
    barangayId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    regionId?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    adminProfileId?: SortOrder
  }

  export type LineMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    password?: SortOrder
    barangayId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    regionId?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    adminProfileId?: SortOrder
  }

  export type LineSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type LineScalarRelationFilter = {
    is?: LineWhereInput
    isNot?: LineWhereInput
  }

  export type InvitationLinkCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    url?: SortOrder
    lineId?: SortOrder
  }

  export type InvitationLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    url?: SortOrder
    lineId?: SortOrder
  }

  export type InvitationLinkMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    used?: SortOrder
    url?: SortOrder
    lineId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type SuppliesNullableScalarRelationFilter = {
    is?: SuppliesWhereInput | null
    isNot?: SuppliesWhereInput | null
  }

  export type ProfilePictureListRelationFilter = {
    every?: ProfilePictureWhereInput
    some?: ProfilePictureWhereInput
    none?: ProfilePictureWhereInput
  }

  export type SupplyOrderSupportFileListRelationFilter = {
    every?: SupplyOrderSupportFileWhereInput
    some?: SupplyOrderSupportFileWhereInput
    none?: SupplyOrderSupportFileWhereInput
  }

  export type ProfilePictureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyOrderSupportFileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssetsCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    fileName?: SortOrder
    createdAt?: SortOrder
    suppliesId?: SortOrder
  }

  export type AssetsMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    fileName?: SortOrder
    createdAt?: SortOrder
    suppliesId?: SortOrder
  }

  export type AssetsMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    fileSize?: SortOrder
    fileType?: SortOrder
    fileName?: SortOrder
    createdAt?: SortOrder
    suppliesId?: SortOrder
  }

  export type AssetsScalarRelationFilter = {
    is?: AssetsWhereInput
    isNot?: AssetsWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type ProfilePictureCountOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProfilePictureMaxOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProfilePictureMinOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type DepartmentNullableScalarRelationFilter = {
    is?: DepartmentWhereInput | null
    isNot?: DepartmentWhereInput | null
  }

  export type InventoryAccessLogsListRelationFilter = {
    every?: InventoryAccessLogsWhereInput
    some?: InventoryAccessLogsWhereInput
    none?: InventoryAccessLogsWhereInput
  }

  export type SupplyBatchListRelationFilter = {
    every?: SupplyBatchWhereInput
    some?: SupplyBatchWhereInput
    none?: SupplyBatchWhereInput
  }

  export type ContainerAllowedUserListRelationFilter = {
    every?: ContainerAllowedUserWhereInput
    some?: ContainerAllowedUserWhereInput
    none?: ContainerAllowedUserWhereInput
  }

  export type InventoryAccessLogsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyBatchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContainerAllowedUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventoryBoxCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    departmentId?: SortOrder
  }

  export type InventoryBoxAvgOrderByAggregateInput = {
    code?: SortOrder
  }

  export type InventoryBoxMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    departmentId?: SortOrder
  }

  export type InventoryBoxMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    departmentId?: SortOrder
  }

  export type InventoryBoxSumOrderByAggregateInput = {
    code?: SortOrder
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type InventoryBoxScalarRelationFilter = {
    is?: InventoryBoxWhereInput
    isNot?: InventoryBoxWhereInput
  }

  export type ContainerAllowedUserCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    inventoryBoxId?: SortOrder
    grantByUserId?: SortOrder
    timestamp?: SortOrder
  }

  export type ContainerAllowedUserMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    inventoryBoxId?: SortOrder
    grantByUserId?: SortOrder
    timestamp?: SortOrder
  }

  export type ContainerAllowedUserMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    inventoryBoxId?: SortOrder
    grantByUserId?: SortOrder
    timestamp?: SortOrder
  }

  export type InventoryBoxNullableScalarRelationFilter = {
    is?: InventoryBoxWhereInput | null
    isNot?: InventoryBoxWhereInput | null
  }

  export type InventoryAccessLogsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    inventoryBoxId?: SortOrder
    action?: SortOrder
    suppliesId?: SortOrder
  }

  export type InventoryAccessLogsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    inventoryBoxId?: SortOrder
    action?: SortOrder
    suppliesId?: SortOrder
  }

  export type InventoryAccessLogsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    inventoryBoxId?: SortOrder
    action?: SortOrder
    suppliesId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type SuppliesRecordListRelationFilter = {
    every?: SuppliesRecordWhereInput
    some?: SuppliesRecordWhereInput
    none?: SuppliesRecordWhereInput
  }

  export type AssetsListRelationFilter = {
    every?: AssetsWhereInput
    some?: AssetsWhereInput
    none?: AssetsWhereInput
  }

  export type SuppliesRecordNullableScalarRelationFilter = {
    is?: SuppliesRecordWhereInput | null
    isNot?: SuppliesRecordWhereInput | null
  }

  export type TransferredSuppliesListRelationFilter = {
    every?: TransferredSuppliesWhereInput
    some?: TransferredSuppliesWhereInput
    none?: TransferredSuppliesWhereInput
  }

  export type SuppliesCategoryNullableScalarRelationFilter = {
    is?: SuppliesCategoryWhereInput | null
    isNot?: SuppliesCategoryWhereInput | null
  }

  export type SupplieRecieveHistoryListRelationFilter = {
    every?: SupplieRecieveHistoryWhereInput
    some?: SupplieRecieveHistoryWhereInput
    none?: SupplieRecieveHistoryWhereInput
  }

  export type SupplyOrderListRelationFilter = {
    every?: SupplyOrderWhereInput
    some?: SupplyOrderWhereInput
    none?: SupplyOrderWhereInput
  }

  export type SupplyBatchItemNullableScalarRelationFilter = {
    is?: SupplyBatchItemWhereInput | null
    isNot?: SupplyBatchItemWhereInput | null
  }

  export type SupplyPriceTrackListRelationFilter = {
    every?: SupplyPriceTrackWhereInput
    some?: SupplyPriceTrackWhereInput
    none?: SupplyPriceTrackWhereInput
  }

  export type SuppliesQualityNullableScalarRelationFilter = {
    is?: SuppliesQualityWhereInput | null
    isNot?: SuppliesQualityWhereInput | null
  }

  export type SupplyStockTrackListRelationFilter = {
    every?: SupplyStockTrackWhereInput
    some?: SupplyStockTrackWhereInput
    none?: SupplyStockTrackWhereInput
  }

  export type SuppliesDataSetNullableScalarRelationFilter = {
    is?: SuppliesDataSetWhereInput | null
    isNot?: SuppliesDataSetWhereInput | null
  }

  export type SuppliesRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransferredSuppliesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplieRecieveHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyPriceTrackOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyStockTrackOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SuppliesCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    consumable?: SortOrder
    item?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    status?: SortOrder
    suppliesCategoryId?: SortOrder
    suppliesQualityId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesAvgOrderByAggregateInput = {
    code?: SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
  }

  export type SuppliesMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    consumable?: SortOrder
    item?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    status?: SortOrder
    suppliesCategoryId?: SortOrder
    suppliesQualityId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    consumable?: SortOrder
    item?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    status?: SortOrder
    suppliesCategoryId?: SortOrder
    suppliesQualityId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesSumOrderByAggregateInput = {
    code?: SortOrder
    quantity?: SortOrder
    notifyAtStockOf?: SortOrder
    price?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type SupplyBatchItemListRelationFilter = {
    every?: SupplyBatchItemWhereInput
    some?: SupplyBatchItemWhereInput
    none?: SupplyBatchItemWhereInput
  }

  export type SupplyBatchItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplyBatchCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    inventoryBoxId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SupplyBatchMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    inventoryBoxId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SupplyBatchMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    inventoryBoxId?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SupplyBatchScalarRelationFilter = {
    is?: SupplyBatchWhereInput
    isNot?: SupplyBatchWhereInput
  }

  export type SupplyBatchItemCountOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchId?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyBatchItemMaxOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchId?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyBatchItemMinOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchId?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type LineNullableScalarRelationFilter = {
    is?: LineWhereInput | null
    isNot?: LineWhereInput | null
  }

  export type SupplyBatchOrderCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SupplyBatchOrderAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type SupplyBatchOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SupplyBatchOrderMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    title?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SupplyBatchOrderSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type SupplyBatchOrderNullableScalarRelationFilter = {
    is?: SupplyBatchOrderWhereInput | null
    isNot?: SupplyBatchOrderWhereInput | null
  }

  export type SupplyOrderSupportFileCountOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    supplyBatchOrderId?: SortOrder
  }

  export type SupplyOrderSupportFileMaxOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    supplyBatchOrderId?: SortOrder
  }

  export type SupplyOrderSupportFileMinOrderByAggregateInput = {
    id?: SortOrder
    assetsId?: SortOrder
    supplyBatchOrderId?: SortOrder
  }

  export type SuppliesScalarRelationFilter = {
    is?: SuppliesWhereInput
    isNot?: SuppliesWhereInput
  }

  export type SuppliesQualityScalarRelationFilter = {
    is?: SuppliesQualityWhereInput
    isNot?: SuppliesQualityWhereInput
  }

  export type SupplyOrderCountOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchOrderId?: SortOrder
    suppliesId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    suppliesQualityId?: SortOrder
  }

  export type SupplyOrderAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type SupplyOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchOrderId?: SortOrder
    suppliesId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    suppliesQualityId?: SortOrder
  }

  export type SupplyOrderMinOrderByAggregateInput = {
    id?: SortOrder
    supplyBatchOrderId?: SortOrder
    suppliesId?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    suppliesQualityId?: SortOrder
  }

  export type SupplyOrderSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type SuppliesQualityListRelationFilter = {
    every?: SuppliesQualityWhereInput
    some?: SuppliesQualityWhereInput
    none?: SuppliesQualityWhereInput
  }

  export type SuppliesQualityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SuppliesDataSetCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    timestamp?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SuppliesDataSetMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    timestamp?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SuppliesDataSetMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    timestamp?: SortOrder
    lineId?: SortOrder
    inventoryBoxId?: SortOrder
  }

  export type SuppliesQualityCountOrderByAggregateInput = {
    id?: SortOrder
    quality?: SortOrder
    perQuality?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesQualityAvgOrderByAggregateInput = {
    perQuality?: SortOrder
  }

  export type SuppliesQualityMaxOrderByAggregateInput = {
    id?: SortOrder
    quality?: SortOrder
    perQuality?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesQualityMinOrderByAggregateInput = {
    id?: SortOrder
    quality?: SortOrder
    perQuality?: SortOrder
    suppliesDataSetId?: SortOrder
  }

  export type SuppliesQualitySumOrderByAggregateInput = {
    perQuality?: SortOrder
  }

  export type SupplyPriceTrackCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyPriceTrackAvgOrderByAggregateInput = {
    value?: SortOrder
  }

  export type SupplyPriceTrackMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyPriceTrackMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyPriceTrackSumOrderByAggregateInput = {
    value?: SortOrder
  }

  export type SupplyStockTrackCountOrderByAggregateInput = {
    id?: SortOrder
    stock?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyStockTrackAvgOrderByAggregateInput = {
    stock?: SortOrder
  }

  export type SupplyStockTrackMaxOrderByAggregateInput = {
    id?: SortOrder
    stock?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyStockTrackMinOrderByAggregateInput = {
    id?: SortOrder
    stock?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
  }

  export type SupplyStockTrackSumOrderByAggregateInput = {
    stock?: SortOrder
  }

  export type SuppliesCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type SuppliesCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type SuppliesCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type SupplieRecieveHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    quantity?: SortOrder
    condition?: SortOrder
  }

  export type SupplieRecieveHistoryAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type SupplieRecieveHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    quantity?: SortOrder
    condition?: SortOrder
  }

  export type SupplieRecieveHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    quantity?: SortOrder
    condition?: SortOrder
  }

  export type SupplieRecieveHistorySumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type TransferredSuppliesCountOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    transferredToId?: SortOrder
    timestamp?: SortOrder
    condition?: SortOrder
  }

  export type TransferredSuppliesMaxOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    transferredToId?: SortOrder
    timestamp?: SortOrder
    condition?: SortOrder
  }

  export type TransferredSuppliesMinOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    userId?: SortOrder
    transferredToId?: SortOrder
    timestamp?: SortOrder
    condition?: SortOrder
  }

  export type SuppliesRecordCountOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    description?: SortOrder
    modifiedId?: SortOrder
  }

  export type SuppliesRecordAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type SuppliesRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    description?: SortOrder
    modifiedId?: SortOrder
  }

  export type SuppliesRecordMinOrderByAggregateInput = {
    id?: SortOrder
    suppliesId?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    description?: SortOrder
    modifiedId?: SortOrder
  }

  export type SuppliesRecordSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type PositionScalarRelationFilter = {
    is?: PositionWhereInput
    isNot?: PositionWhereInput
  }

  export type ApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    positionId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    positionId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    positionId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    headId?: SortOrder
    idCode?: SortOrder
    lineId?: SortOrder
  }

  export type DepartmentMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    headId?: SortOrder
    idCode?: SortOrder
    lineId?: SortOrder
  }

  export type DepartmentMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    headId?: SortOrder
    idCode?: SortOrder
    lineId?: SortOrder
  }

  export type DepartmentScalarRelationFilter = {
    is?: DepartmentWhereInput
    isNot?: DepartmentWhereInput
  }

  export type GroupCountOrderByAggregateInput = {
    id?: SortOrder
    departmentId?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
  }

  export type GroupMaxOrderByAggregateInput = {
    id?: SortOrder
    departmentId?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
  }

  export type GroupMinOrderByAggregateInput = {
    id?: SortOrder
    departmentId?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
    userId?: SortOrder
  }

  export type AdminCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type LineListRelationFilter = {
    every?: LineWhereInput
    some?: LineWhereInput
    none?: LineWhereInput
  }

  export type LineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdminProfileCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
  }

  export type AdminProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
  }

  export type AdminProfileMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lineId?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lineId?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lineId?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type PrivilegeCountOrderByAggregateInput = {
    id?: SortOrder
    humanResources?: SortOrder
    inventory?: SortOrder
    super?: SortOrder
  }

  export type PrivilegeMaxOrderByAggregateInput = {
    id?: SortOrder
    humanResources?: SortOrder
    inventory?: SortOrder
    super?: SortOrder
  }

  export type PrivilegeMinOrderByAggregateInput = {
    id?: SortOrder
    humanResources?: SortOrder
    inventory?: SortOrder
    super?: SortOrder
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type PositionNullableScalarRelationFilter = {
    is?: PositionWhereInput | null
    isNot?: PositionWhereInput | null
  }

  export type SalaryGradeNullableScalarRelationFilter = {
    is?: SalaryGradeWhereInput | null
    isNot?: SalaryGradeWhereInput | null
  }

  export type LeaveListRelationFilter = {
    every?: LeaveWhereInput
    some?: LeaveWhereInput
    none?: LeaveWhereInput
  }

  export type AccountNullableScalarRelationFilter = {
    is?: AccountWhereInput | null
    isNot?: AccountWhereInput | null
  }

  export type PromotionListRelationFilter = {
    every?: PromotionWhereInput
    some?: PromotionWhereInput
    none?: PromotionWhereInput
  }

  export type RegionNullableScalarRelationFilter = {
    is?: RegionWhereInput | null
    isNot?: RegionWhereInput | null
  }

  export type ProvinceNullableScalarRelationFilter = {
    is?: ProvinceWhereInput | null
    isNot?: ProvinceWhereInput | null
  }

  export type MunicipalNullableScalarRelationFilter = {
    is?: MunicipalWhereInput | null
    isNot?: MunicipalWhereInput | null
  }

  export type BarangayNullableScalarRelationFilter = {
    is?: BarangayWhereInput | null
    isNot?: BarangayWhereInput | null
  }

  export type PositionSlotNullableScalarRelationFilter = {
    is?: PositionSlotWhereInput | null
    isNot?: PositionSlotWhereInput | null
  }

  export type AccomplishmentListRelationFilter = {
    every?: AccomplishmentWhereInput
    some?: AccomplishmentWhereInput
    none?: AccomplishmentWhereInput
  }

  export type AccomplishmentResponseListRelationFilter = {
    every?: AccomplishmentResponseWhereInput
    some?: AccomplishmentResponseWhereInput
    none?: AccomplishmentResponseWhereInput
  }

  export type LogRecordListRelationFilter = {
    every?: LogRecordWhereInput
    some?: LogRecordWhereInput
    none?: LogRecordWhereInput
  }

  export type ProfilePictureNullableScalarRelationFilter = {
    is?: ProfilePictureWhereInput | null
    isNot?: ProfilePictureWhereInput | null
  }

  export type ApplicationListRelationFilter = {
    every?: ApplicationWhereInput
    some?: ApplicationWhereInput
    none?: ApplicationWhereInput
  }

  export type PrivilegeNullableScalarRelationFilter = {
    is?: PrivilegeWhereInput | null
    isNot?: PrivilegeWhereInput | null
  }

  export type GroupNullableScalarRelationFilter = {
    is?: GroupWhereInput | null
    isNot?: GroupWhereInput | null
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LeaveOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccomplishmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccomplishmentResponseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LogRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    suffix?: SortOrder
    birthDate?: SortOrder
    email?: SortOrder
    username?: SortOrder
    gender?: SortOrder
    profilePicture?: SortOrder
    createdAt?: SortOrder
    level?: SortOrder
    type?: SortOrder
    step?: SortOrder
    status?: SortOrder
    departmentId?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    accountId?: SortOrder
    regionId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    barangayId?: SortOrder
    lineId?: SortOrder
    privilegeId?: SortOrder
    groupId?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    level?: SortOrder
    step?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    suffix?: SortOrder
    birthDate?: SortOrder
    email?: SortOrder
    username?: SortOrder
    gender?: SortOrder
    profilePicture?: SortOrder
    createdAt?: SortOrder
    level?: SortOrder
    type?: SortOrder
    step?: SortOrder
    status?: SortOrder
    departmentId?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    accountId?: SortOrder
    regionId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    barangayId?: SortOrder
    lineId?: SortOrder
    privilegeId?: SortOrder
    groupId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    suffix?: SortOrder
    birthDate?: SortOrder
    email?: SortOrder
    username?: SortOrder
    gender?: SortOrder
    profilePicture?: SortOrder
    createdAt?: SortOrder
    level?: SortOrder
    type?: SortOrder
    step?: SortOrder
    status?: SortOrder
    departmentId?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    accountId?: SortOrder
    regionId?: SortOrder
    municipalId?: SortOrder
    provinceId?: SortOrder
    barangayId?: SortOrder
    lineId?: SortOrder
    privilegeId?: SortOrder
    groupId?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    level?: SortOrder
    step?: SortOrder
  }

  export type LogRecordCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type LogRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type LogRecordMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    timestamp?: SortOrder
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    recipientId?: SortOrder
    senderId?: SortOrder
    path?: SortOrder
    isRead?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    recipientId?: SortOrder
    senderId?: SortOrder
    path?: SortOrder
    isRead?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    recipientId?: SortOrder
    senderId?: SortOrder
    path?: SortOrder
    isRead?: SortOrder
  }

  export type PositionSlotListRelationFilter = {
    every?: PositionSlotWhereInput
    some?: PositionSlotWhereInput
    none?: PositionSlotWhereInput
  }

  export type PositionSlotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PositionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    max?: SortOrder
    createdAt?: SortOrder
    itemNumber?: SortOrder
    salaryGradeId?: SortOrder
    plantilla?: SortOrder
    lineId?: SortOrder
    departmentId?: SortOrder
  }

  export type PositionAvgOrderByAggregateInput = {
    max?: SortOrder
  }

  export type PositionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    max?: SortOrder
    createdAt?: SortOrder
    itemNumber?: SortOrder
    salaryGradeId?: SortOrder
    plantilla?: SortOrder
    lineId?: SortOrder
    departmentId?: SortOrder
  }

  export type PositionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    max?: SortOrder
    createdAt?: SortOrder
    itemNumber?: SortOrder
    salaryGradeId?: SortOrder
    plantilla?: SortOrder
    lineId?: SortOrder
    departmentId?: SortOrder
  }

  export type PositionSumOrderByAggregateInput = {
    max?: SortOrder
  }

  export type SalaryGradeScalarRelationFilter = {
    is?: SalaryGradeWhereInput
    isNot?: SalaryGradeWhereInput
  }

  export type PositionSlotCountOrderByAggregateInput = {
    id?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    userId?: SortOrder
  }

  export type PositionSlotMaxOrderByAggregateInput = {
    id?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    userId?: SortOrder
  }

  export type PositionSlotMinOrderByAggregateInput = {
    id?: SortOrder
    positionId?: SortOrder
    salaryGradeId?: SortOrder
    userId?: SortOrder
  }

  export type SalaryGradeHistoryListRelationFilter = {
    every?: SalaryGradeHistoryWhereInput
    some?: SalaryGradeHistoryWhereInput
    none?: SalaryGradeHistoryWhereInput
  }

  export type SalaryGradeHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalaryGradeCountOrderByAggregateInput = {
    id?: SortOrder
    grade?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
  }

  export type SalaryGradeAvgOrderByAggregateInput = {
    grade?: SortOrder
    amount?: SortOrder
  }

  export type SalaryGradeMaxOrderByAggregateInput = {
    id?: SortOrder
    grade?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
  }

  export type SalaryGradeMinOrderByAggregateInput = {
    id?: SortOrder
    grade?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    lineId?: SortOrder
  }

  export type SalaryGradeSumOrderByAggregateInput = {
    grade?: SortOrder
    amount?: SortOrder
  }

  export type SalaryGradeHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    salaryGradeId?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    amount?: SortOrder
  }

  export type SalaryGradeHistoryAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type SalaryGradeHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    salaryGradeId?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    amount?: SortOrder
  }

  export type SalaryGradeHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    salaryGradeId?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    amount?: SortOrder
  }

  export type SalaryGradeHistorySumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type LeaveCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type LeaveMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type LeaveMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type AnnouncementCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    lineId?: SortOrder
    path?: SortOrder
    important?: SortOrder
    departmentId?: SortOrder
  }

  export type AnnouncementMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    lineId?: SortOrder
    path?: SortOrder
    important?: SortOrder
    departmentId?: SortOrder
  }

  export type AnnouncementMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    lineId?: SortOrder
    path?: SortOrder
    important?: SortOrder
    departmentId?: SortOrder
  }

  export type PromotionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    positionId?: SortOrder
  }

  export type PromotionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    positionId?: SortOrder
  }

  export type PromotionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    positionId?: SortOrder
  }

  export type BirthdayNoticeResponseCountOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    like?: SortOrder
    timestamp?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    lineId?: SortOrder
  }

  export type BirthdayNoticeResponseMaxOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    like?: SortOrder
    timestamp?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    lineId?: SortOrder
  }

  export type BirthdayNoticeResponseMinOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    like?: SortOrder
    timestamp?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    lineId?: SortOrder
  }

  export type ProvinceListRelationFilter = {
    every?: ProvinceWhereInput
    some?: ProvinceWhereInput
    none?: ProvinceWhereInput
  }

  export type ProvinceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RegionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RegionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type MunicipalListRelationFilter = {
    every?: MunicipalWhereInput
    some?: MunicipalWhereInput
    none?: MunicipalWhereInput
  }

  export type MunicipalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProvinceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    regionId?: SortOrder
  }

  export type ProvinceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    regionId?: SortOrder
  }

  export type ProvinceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    regionId?: SortOrder
  }

  export type BarangayListRelationFilter = {
    every?: BarangayWhereInput
    some?: BarangayWhereInput
    none?: BarangayWhereInput
  }

  export type BarangayOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MunicipalCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    provinceId?: SortOrder
  }

  export type MunicipalMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    provinceId?: SortOrder
  }

  export type MunicipalMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    provinceId?: SortOrder
  }

  export type BarangayCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    municipalId?: SortOrder
  }

  export type BarangayMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    municipalId?: SortOrder
  }

  export type BarangayMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    municipalId?: SortOrder
  }

  export type AccomplishmentCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    start?: SortOrder
    end?: SortOrder
    task?: SortOrder
  }

  export type AccomplishmentMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    start?: SortOrder
    end?: SortOrder
    task?: SortOrder
  }

  export type AccomplishmentMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    start?: SortOrder
    end?: SortOrder
    task?: SortOrder
  }

  export type AccomplishmentScalarRelationFilter = {
    is?: AccomplishmentWhereInput
    isNot?: AccomplishmentWhereInput
  }

  export type AccomplishmentResponseCountOrderByAggregateInput = {
    id?: SortOrder
    headId?: SortOrder
    accomplishmentId?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type AccomplishmentResponseMaxOrderByAggregateInput = {
    id?: SortOrder
    headId?: SortOrder
    accomplishmentId?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type AccomplishmentResponseMinOrderByAggregateInput = {
    id?: SortOrder
    headId?: SortOrder
    accomplishmentId?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type BarangayCreateNestedOneWithoutLineInput = {
    create?: XOR<BarangayCreateWithoutLineInput, BarangayUncheckedCreateWithoutLineInput>
    connectOrCreate?: BarangayCreateOrConnectWithoutLineInput
    connect?: BarangayWhereUniqueInput
  }

  export type MunicipalCreateNestedOneWithoutLineInput = {
    create?: XOR<MunicipalCreateWithoutLineInput, MunicipalUncheckedCreateWithoutLineInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutLineInput
    connect?: MunicipalWhereUniqueInput
  }

  export type ProvinceCreateNestedOneWithoutLineInput = {
    create?: XOR<ProvinceCreateWithoutLineInput, ProvinceUncheckedCreateWithoutLineInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutLineInput
    connect?: ProvinceWhereUniqueInput
  }

  export type RegionCreateNestedOneWithoutLineInput = {
    create?: XOR<RegionCreateWithoutLineInput, RegionUncheckedCreateWithoutLineInput>
    connectOrCreate?: RegionCreateOrConnectWithoutLineInput
    connect?: RegionWhereUniqueInput
  }

  export type DepartmentCreateNestedManyWithoutLineInput = {
    create?: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput> | DepartmentCreateWithoutLineInput[] | DepartmentUncheckedCreateWithoutLineInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutLineInput | DepartmentCreateOrConnectWithoutLineInput[]
    createMany?: DepartmentCreateManyLineInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutLineInput = {
    create?: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput> | AccountCreateWithoutLineInput[] | AccountUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutLineInput | AccountCreateOrConnectWithoutLineInput[]
    createMany?: AccountCreateManyLineInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutLineInput = {
    create?: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput> | UserCreateWithoutLineInput[] | UserUncheckedCreateWithoutLineInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLineInput | UserCreateOrConnectWithoutLineInput[]
    createMany?: UserCreateManyLineInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PositionCreateNestedManyWithoutLineInput = {
    create?: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput> | PositionCreateWithoutLineInput[] | PositionUncheckedCreateWithoutLineInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutLineInput | PositionCreateOrConnectWithoutLineInput[]
    createMany?: PositionCreateManyLineInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type SalaryGradeCreateNestedManyWithoutLineInput = {
    create?: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput> | SalaryGradeCreateWithoutLineInput[] | SalaryGradeUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutLineInput | SalaryGradeCreateOrConnectWithoutLineInput[]
    createMany?: SalaryGradeCreateManyLineInputEnvelope
    connect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
  }

  export type AnnouncementCreateNestedManyWithoutLineInput = {
    create?: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput> | AnnouncementCreateWithoutLineInput[] | AnnouncementUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutLineInput | AnnouncementCreateOrConnectWithoutLineInput[]
    createMany?: AnnouncementCreateManyLineInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseCreateNestedManyWithoutLineInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput> | BirthdayNoticeResponseCreateWithoutLineInput[] | BirthdayNoticeResponseUncheckedCreateWithoutLineInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutLineInput | BirthdayNoticeResponseCreateOrConnectWithoutLineInput[]
    createMany?: BirthdayNoticeResponseCreateManyLineInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type InvitationLinkCreateNestedManyWithoutLineInput = {
    create?: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput> | InvitationLinkCreateWithoutLineInput[] | InvitationLinkUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InvitationLinkCreateOrConnectWithoutLineInput | InvitationLinkCreateOrConnectWithoutLineInput[]
    createMany?: InvitationLinkCreateManyLineInputEnvelope
    connect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
  }

  export type SuppliesCreateNestedManyWithoutLineInput = {
    create?: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput> | SuppliesCreateWithoutLineInput[] | SuppliesUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutLineInput | SuppliesCreateOrConnectWithoutLineInput[]
    createMany?: SuppliesCreateManyLineInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SupplyBatchOrderCreateNestedManyWithoutLineInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput> | SupplyBatchOrderCreateWithoutLineInput[] | SupplyBatchOrderUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutLineInput | SupplyBatchOrderCreateOrConnectWithoutLineInput[]
    createMany?: SupplyBatchOrderCreateManyLineInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type GroupCreateNestedManyWithoutLineInput = {
    create?: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput> | GroupCreateWithoutLineInput[] | GroupUncheckedCreateWithoutLineInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutLineInput | GroupCreateOrConnectWithoutLineInput[]
    createMany?: GroupCreateManyLineInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type AdminProfileCreateNestedOneWithoutLineInput = {
    create?: XOR<AdminProfileCreateWithoutLineInput, AdminProfileUncheckedCreateWithoutLineInput>
    connectOrCreate?: AdminProfileCreateOrConnectWithoutLineInput
    connect?: AdminProfileWhereUniqueInput
  }

  export type InventoryBoxCreateNestedManyWithoutLineInput = {
    create?: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput> | InventoryBoxCreateWithoutLineInput[] | InventoryBoxUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutLineInput | InventoryBoxCreateOrConnectWithoutLineInput[]
    createMany?: InventoryBoxCreateManyLineInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type SuppliesDataSetCreateNestedManyWithoutLineInput = {
    create?: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput> | SuppliesDataSetCreateWithoutLineInput[] | SuppliesDataSetUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutLineInput | SuppliesDataSetCreateOrConnectWithoutLineInput[]
    createMany?: SuppliesDataSetCreateManyLineInputEnvelope
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
  }

  export type DepartmentUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput> | DepartmentCreateWithoutLineInput[] | DepartmentUncheckedCreateWithoutLineInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutLineInput | DepartmentCreateOrConnectWithoutLineInput[]
    createMany?: DepartmentCreateManyLineInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput> | AccountCreateWithoutLineInput[] | AccountUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutLineInput | AccountCreateOrConnectWithoutLineInput[]
    createMany?: AccountCreateManyLineInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput> | UserCreateWithoutLineInput[] | UserUncheckedCreateWithoutLineInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLineInput | UserCreateOrConnectWithoutLineInput[]
    createMany?: UserCreateManyLineInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PositionUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput> | PositionCreateWithoutLineInput[] | PositionUncheckedCreateWithoutLineInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutLineInput | PositionCreateOrConnectWithoutLineInput[]
    createMany?: PositionCreateManyLineInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type SalaryGradeUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput> | SalaryGradeCreateWithoutLineInput[] | SalaryGradeUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutLineInput | SalaryGradeCreateOrConnectWithoutLineInput[]
    createMany?: SalaryGradeCreateManyLineInputEnvelope
    connect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput> | AnnouncementCreateWithoutLineInput[] | AnnouncementUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutLineInput | AnnouncementCreateOrConnectWithoutLineInput[]
    createMany?: AnnouncementCreateManyLineInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput> | BirthdayNoticeResponseCreateWithoutLineInput[] | BirthdayNoticeResponseUncheckedCreateWithoutLineInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutLineInput | BirthdayNoticeResponseCreateOrConnectWithoutLineInput[]
    createMany?: BirthdayNoticeResponseCreateManyLineInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type InvitationLinkUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput> | InvitationLinkCreateWithoutLineInput[] | InvitationLinkUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InvitationLinkCreateOrConnectWithoutLineInput | InvitationLinkCreateOrConnectWithoutLineInput[]
    createMany?: InvitationLinkCreateManyLineInputEnvelope
    connect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
  }

  export type SuppliesUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput> | SuppliesCreateWithoutLineInput[] | SuppliesUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutLineInput | SuppliesCreateOrConnectWithoutLineInput[]
    createMany?: SuppliesCreateManyLineInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput> | SupplyBatchOrderCreateWithoutLineInput[] | SupplyBatchOrderUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutLineInput | SupplyBatchOrderCreateOrConnectWithoutLineInput[]
    createMany?: SupplyBatchOrderCreateManyLineInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type GroupUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput> | GroupCreateWithoutLineInput[] | GroupUncheckedCreateWithoutLineInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutLineInput | GroupCreateOrConnectWithoutLineInput[]
    createMany?: GroupCreateManyLineInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type InventoryBoxUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput> | InventoryBoxCreateWithoutLineInput[] | InventoryBoxUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutLineInput | InventoryBoxCreateOrConnectWithoutLineInput[]
    createMany?: InventoryBoxCreateManyLineInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput = {
    create?: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput> | SuppliesDataSetCreateWithoutLineInput[] | SuppliesDataSetUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutLineInput | SuppliesDataSetCreateOrConnectWithoutLineInput[]
    createMany?: SuppliesDataSetCreateManyLineInputEnvelope
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BarangayUpdateOneRequiredWithoutLineNestedInput = {
    create?: XOR<BarangayCreateWithoutLineInput, BarangayUncheckedCreateWithoutLineInput>
    connectOrCreate?: BarangayCreateOrConnectWithoutLineInput
    upsert?: BarangayUpsertWithoutLineInput
    connect?: BarangayWhereUniqueInput
    update?: XOR<XOR<BarangayUpdateToOneWithWhereWithoutLineInput, BarangayUpdateWithoutLineInput>, BarangayUncheckedUpdateWithoutLineInput>
  }

  export type MunicipalUpdateOneRequiredWithoutLineNestedInput = {
    create?: XOR<MunicipalCreateWithoutLineInput, MunicipalUncheckedCreateWithoutLineInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutLineInput
    upsert?: MunicipalUpsertWithoutLineInput
    connect?: MunicipalWhereUniqueInput
    update?: XOR<XOR<MunicipalUpdateToOneWithWhereWithoutLineInput, MunicipalUpdateWithoutLineInput>, MunicipalUncheckedUpdateWithoutLineInput>
  }

  export type ProvinceUpdateOneRequiredWithoutLineNestedInput = {
    create?: XOR<ProvinceCreateWithoutLineInput, ProvinceUncheckedCreateWithoutLineInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutLineInput
    upsert?: ProvinceUpsertWithoutLineInput
    connect?: ProvinceWhereUniqueInput
    update?: XOR<XOR<ProvinceUpdateToOneWithWhereWithoutLineInput, ProvinceUpdateWithoutLineInput>, ProvinceUncheckedUpdateWithoutLineInput>
  }

  export type RegionUpdateOneRequiredWithoutLineNestedInput = {
    create?: XOR<RegionCreateWithoutLineInput, RegionUncheckedCreateWithoutLineInput>
    connectOrCreate?: RegionCreateOrConnectWithoutLineInput
    upsert?: RegionUpsertWithoutLineInput
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutLineInput, RegionUpdateWithoutLineInput>, RegionUncheckedUpdateWithoutLineInput>
  }

  export type DepartmentUpdateManyWithoutLineNestedInput = {
    create?: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput> | DepartmentCreateWithoutLineInput[] | DepartmentUncheckedCreateWithoutLineInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutLineInput | DepartmentCreateOrConnectWithoutLineInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutLineInput | DepartmentUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: DepartmentCreateManyLineInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutLineInput | DepartmentUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutLineInput | DepartmentUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutLineNestedInput = {
    create?: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput> | AccountCreateWithoutLineInput[] | AccountUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutLineInput | AccountCreateOrConnectWithoutLineInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutLineInput | AccountUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: AccountCreateManyLineInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutLineInput | AccountUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutLineInput | AccountUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type UserUpdateManyWithoutLineNestedInput = {
    create?: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput> | UserCreateWithoutLineInput[] | UserUncheckedCreateWithoutLineInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLineInput | UserCreateOrConnectWithoutLineInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLineInput | UserUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: UserCreateManyLineInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLineInput | UserUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLineInput | UserUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PositionUpdateManyWithoutLineNestedInput = {
    create?: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput> | PositionCreateWithoutLineInput[] | PositionUncheckedCreateWithoutLineInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutLineInput | PositionCreateOrConnectWithoutLineInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutLineInput | PositionUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: PositionCreateManyLineInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutLineInput | PositionUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutLineInput | PositionUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type SalaryGradeUpdateManyWithoutLineNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput> | SalaryGradeCreateWithoutLineInput[] | SalaryGradeUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutLineInput | SalaryGradeCreateOrConnectWithoutLineInput[]
    upsert?: SalaryGradeUpsertWithWhereUniqueWithoutLineInput | SalaryGradeUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SalaryGradeCreateManyLineInputEnvelope
    set?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    disconnect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    delete?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    connect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    update?: SalaryGradeUpdateWithWhereUniqueWithoutLineInput | SalaryGradeUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SalaryGradeUpdateManyWithWhereWithoutLineInput | SalaryGradeUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SalaryGradeScalarWhereInput | SalaryGradeScalarWhereInput[]
  }

  export type AnnouncementUpdateManyWithoutLineNestedInput = {
    create?: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput> | AnnouncementCreateWithoutLineInput[] | AnnouncementUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutLineInput | AnnouncementCreateOrConnectWithoutLineInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutLineInput | AnnouncementUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: AnnouncementCreateManyLineInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutLineInput | AnnouncementUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutLineInput | AnnouncementUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUpdateManyWithoutLineNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput> | BirthdayNoticeResponseCreateWithoutLineInput[] | BirthdayNoticeResponseUncheckedCreateWithoutLineInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutLineInput | BirthdayNoticeResponseCreateOrConnectWithoutLineInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutLineInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: BirthdayNoticeResponseCreateManyLineInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutLineInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutLineInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type InvitationLinkUpdateManyWithoutLineNestedInput = {
    create?: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput> | InvitationLinkCreateWithoutLineInput[] | InvitationLinkUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InvitationLinkCreateOrConnectWithoutLineInput | InvitationLinkCreateOrConnectWithoutLineInput[]
    upsert?: InvitationLinkUpsertWithWhereUniqueWithoutLineInput | InvitationLinkUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: InvitationLinkCreateManyLineInputEnvelope
    set?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    disconnect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    delete?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    connect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    update?: InvitationLinkUpdateWithWhereUniqueWithoutLineInput | InvitationLinkUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: InvitationLinkUpdateManyWithWhereWithoutLineInput | InvitationLinkUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: InvitationLinkScalarWhereInput | InvitationLinkScalarWhereInput[]
  }

  export type SuppliesUpdateManyWithoutLineNestedInput = {
    create?: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput> | SuppliesCreateWithoutLineInput[] | SuppliesUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutLineInput | SuppliesCreateOrConnectWithoutLineInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutLineInput | SuppliesUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SuppliesCreateManyLineInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutLineInput | SuppliesUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutLineInput | SuppliesUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SupplyBatchOrderUpdateManyWithoutLineNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput> | SupplyBatchOrderCreateWithoutLineInput[] | SupplyBatchOrderUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutLineInput | SupplyBatchOrderCreateOrConnectWithoutLineInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutLineInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SupplyBatchOrderCreateManyLineInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutLineInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutLineInput | SupplyBatchOrderUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type GroupUpdateManyWithoutLineNestedInput = {
    create?: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput> | GroupCreateWithoutLineInput[] | GroupUncheckedCreateWithoutLineInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutLineInput | GroupCreateOrConnectWithoutLineInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutLineInput | GroupUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: GroupCreateManyLineInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutLineInput | GroupUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutLineInput | GroupUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type AdminProfileUpdateOneWithoutLineNestedInput = {
    create?: XOR<AdminProfileCreateWithoutLineInput, AdminProfileUncheckedCreateWithoutLineInput>
    connectOrCreate?: AdminProfileCreateOrConnectWithoutLineInput
    upsert?: AdminProfileUpsertWithoutLineInput
    disconnect?: AdminProfileWhereInput | boolean
    delete?: AdminProfileWhereInput | boolean
    connect?: AdminProfileWhereUniqueInput
    update?: XOR<XOR<AdminProfileUpdateToOneWithWhereWithoutLineInput, AdminProfileUpdateWithoutLineInput>, AdminProfileUncheckedUpdateWithoutLineInput>
  }

  export type InventoryBoxUpdateManyWithoutLineNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput> | InventoryBoxCreateWithoutLineInput[] | InventoryBoxUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutLineInput | InventoryBoxCreateOrConnectWithoutLineInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutLineInput | InventoryBoxUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: InventoryBoxCreateManyLineInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutLineInput | InventoryBoxUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutLineInput | InventoryBoxUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type SuppliesDataSetUpdateManyWithoutLineNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput> | SuppliesDataSetCreateWithoutLineInput[] | SuppliesDataSetUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutLineInput | SuppliesDataSetCreateOrConnectWithoutLineInput[]
    upsert?: SuppliesDataSetUpsertWithWhereUniqueWithoutLineInput | SuppliesDataSetUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SuppliesDataSetCreateManyLineInputEnvelope
    set?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    disconnect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    delete?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    update?: SuppliesDataSetUpdateWithWhereUniqueWithoutLineInput | SuppliesDataSetUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SuppliesDataSetUpdateManyWithWhereWithoutLineInput | SuppliesDataSetUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
  }

  export type DepartmentUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput> | DepartmentCreateWithoutLineInput[] | DepartmentUncheckedCreateWithoutLineInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutLineInput | DepartmentCreateOrConnectWithoutLineInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutLineInput | DepartmentUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: DepartmentCreateManyLineInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutLineInput | DepartmentUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutLineInput | DepartmentUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput> | AccountCreateWithoutLineInput[] | AccountUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutLineInput | AccountCreateOrConnectWithoutLineInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutLineInput | AccountUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: AccountCreateManyLineInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutLineInput | AccountUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutLineInput | AccountUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput> | UserCreateWithoutLineInput[] | UserUncheckedCreateWithoutLineInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLineInput | UserCreateOrConnectWithoutLineInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLineInput | UserUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: UserCreateManyLineInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLineInput | UserUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLineInput | UserUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PositionUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput> | PositionCreateWithoutLineInput[] | PositionUncheckedCreateWithoutLineInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutLineInput | PositionCreateOrConnectWithoutLineInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutLineInput | PositionUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: PositionCreateManyLineInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutLineInput | PositionUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutLineInput | PositionUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type SalaryGradeUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput> | SalaryGradeCreateWithoutLineInput[] | SalaryGradeUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutLineInput | SalaryGradeCreateOrConnectWithoutLineInput[]
    upsert?: SalaryGradeUpsertWithWhereUniqueWithoutLineInput | SalaryGradeUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SalaryGradeCreateManyLineInputEnvelope
    set?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    disconnect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    delete?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    connect?: SalaryGradeWhereUniqueInput | SalaryGradeWhereUniqueInput[]
    update?: SalaryGradeUpdateWithWhereUniqueWithoutLineInput | SalaryGradeUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SalaryGradeUpdateManyWithWhereWithoutLineInput | SalaryGradeUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SalaryGradeScalarWhereInput | SalaryGradeScalarWhereInput[]
  }

  export type AnnouncementUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput> | AnnouncementCreateWithoutLineInput[] | AnnouncementUncheckedCreateWithoutLineInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutLineInput | AnnouncementCreateOrConnectWithoutLineInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutLineInput | AnnouncementUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: AnnouncementCreateManyLineInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutLineInput | AnnouncementUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutLineInput | AnnouncementUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput> | BirthdayNoticeResponseCreateWithoutLineInput[] | BirthdayNoticeResponseUncheckedCreateWithoutLineInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutLineInput | BirthdayNoticeResponseCreateOrConnectWithoutLineInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutLineInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: BirthdayNoticeResponseCreateManyLineInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutLineInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutLineInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type InvitationLinkUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput> | InvitationLinkCreateWithoutLineInput[] | InvitationLinkUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InvitationLinkCreateOrConnectWithoutLineInput | InvitationLinkCreateOrConnectWithoutLineInput[]
    upsert?: InvitationLinkUpsertWithWhereUniqueWithoutLineInput | InvitationLinkUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: InvitationLinkCreateManyLineInputEnvelope
    set?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    disconnect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    delete?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    connect?: InvitationLinkWhereUniqueInput | InvitationLinkWhereUniqueInput[]
    update?: InvitationLinkUpdateWithWhereUniqueWithoutLineInput | InvitationLinkUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: InvitationLinkUpdateManyWithWhereWithoutLineInput | InvitationLinkUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: InvitationLinkScalarWhereInput | InvitationLinkScalarWhereInput[]
  }

  export type SuppliesUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput> | SuppliesCreateWithoutLineInput[] | SuppliesUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutLineInput | SuppliesCreateOrConnectWithoutLineInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutLineInput | SuppliesUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SuppliesCreateManyLineInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutLineInput | SuppliesUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutLineInput | SuppliesUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput> | SupplyBatchOrderCreateWithoutLineInput[] | SupplyBatchOrderUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutLineInput | SupplyBatchOrderCreateOrConnectWithoutLineInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutLineInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SupplyBatchOrderCreateManyLineInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutLineInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutLineInput | SupplyBatchOrderUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type GroupUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput> | GroupCreateWithoutLineInput[] | GroupUncheckedCreateWithoutLineInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutLineInput | GroupCreateOrConnectWithoutLineInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutLineInput | GroupUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: GroupCreateManyLineInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutLineInput | GroupUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutLineInput | GroupUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type InventoryBoxUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput> | InventoryBoxCreateWithoutLineInput[] | InventoryBoxUncheckedCreateWithoutLineInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutLineInput | InventoryBoxCreateOrConnectWithoutLineInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutLineInput | InventoryBoxUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: InventoryBoxCreateManyLineInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutLineInput | InventoryBoxUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutLineInput | InventoryBoxUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput> | SuppliesDataSetCreateWithoutLineInput[] | SuppliesDataSetUncheckedCreateWithoutLineInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutLineInput | SuppliesDataSetCreateOrConnectWithoutLineInput[]
    upsert?: SuppliesDataSetUpsertWithWhereUniqueWithoutLineInput | SuppliesDataSetUpsertWithWhereUniqueWithoutLineInput[]
    createMany?: SuppliesDataSetCreateManyLineInputEnvelope
    set?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    disconnect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    delete?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    update?: SuppliesDataSetUpdateWithWhereUniqueWithoutLineInput | SuppliesDataSetUpdateWithWhereUniqueWithoutLineInput[]
    updateMany?: SuppliesDataSetUpdateManyWithWhereWithoutLineInput | SuppliesDataSetUpdateManyWithWhereWithoutLineInput[]
    deleteMany?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
  }

  export type LineCreateNestedOneWithoutInvitationLinkInput = {
    create?: XOR<LineCreateWithoutInvitationLinkInput, LineUncheckedCreateWithoutInvitationLinkInput>
    connectOrCreate?: LineCreateOrConnectWithoutInvitationLinkInput
    connect?: LineWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type LineUpdateOneRequiredWithoutInvitationLinkNestedInput = {
    create?: XOR<LineCreateWithoutInvitationLinkInput, LineUncheckedCreateWithoutInvitationLinkInput>
    connectOrCreate?: LineCreateOrConnectWithoutInvitationLinkInput
    upsert?: LineUpsertWithoutInvitationLinkInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutInvitationLinkInput, LineUpdateWithoutInvitationLinkInput>, LineUncheckedUpdateWithoutInvitationLinkInput>
  }

  export type SuppliesCreateNestedOneWithoutAssetInput = {
    create?: XOR<SuppliesCreateWithoutAssetInput, SuppliesUncheckedCreateWithoutAssetInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutAssetInput
    connect?: SuppliesWhereUniqueInput
  }

  export type ProfilePictureCreateNestedManyWithoutAssetInput = {
    create?: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput> | ProfilePictureCreateWithoutAssetInput[] | ProfilePictureUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutAssetInput | ProfilePictureCreateOrConnectWithoutAssetInput[]
    createMany?: ProfilePictureCreateManyAssetInputEnvelope
    connect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
  }

  export type SupplyOrderSupportFileCreateNestedManyWithoutFileInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput> | SupplyOrderSupportFileCreateWithoutFileInput[] | SupplyOrderSupportFileUncheckedCreateWithoutFileInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutFileInput | SupplyOrderSupportFileCreateOrConnectWithoutFileInput[]
    createMany?: SupplyOrderSupportFileCreateManyFileInputEnvelope
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
  }

  export type ProfilePictureUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput> | ProfilePictureCreateWithoutAssetInput[] | ProfilePictureUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutAssetInput | ProfilePictureCreateOrConnectWithoutAssetInput[]
    createMany?: ProfilePictureCreateManyAssetInputEnvelope
    connect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
  }

  export type SupplyOrderSupportFileUncheckedCreateNestedManyWithoutFileInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput> | SupplyOrderSupportFileCreateWithoutFileInput[] | SupplyOrderSupportFileUncheckedCreateWithoutFileInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutFileInput | SupplyOrderSupportFileCreateOrConnectWithoutFileInput[]
    createMany?: SupplyOrderSupportFileCreateManyFileInputEnvelope
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
  }

  export type SuppliesUpdateOneWithoutAssetNestedInput = {
    create?: XOR<SuppliesCreateWithoutAssetInput, SuppliesUncheckedCreateWithoutAssetInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutAssetInput
    upsert?: SuppliesUpsertWithoutAssetInput
    disconnect?: SuppliesWhereInput | boolean
    delete?: SuppliesWhereInput | boolean
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutAssetInput, SuppliesUpdateWithoutAssetInput>, SuppliesUncheckedUpdateWithoutAssetInput>
  }

  export type ProfilePictureUpdateManyWithoutAssetNestedInput = {
    create?: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput> | ProfilePictureCreateWithoutAssetInput[] | ProfilePictureUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutAssetInput | ProfilePictureCreateOrConnectWithoutAssetInput[]
    upsert?: ProfilePictureUpsertWithWhereUniqueWithoutAssetInput | ProfilePictureUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: ProfilePictureCreateManyAssetInputEnvelope
    set?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    disconnect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    delete?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    connect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    update?: ProfilePictureUpdateWithWhereUniqueWithoutAssetInput | ProfilePictureUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: ProfilePictureUpdateManyWithWhereWithoutAssetInput | ProfilePictureUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: ProfilePictureScalarWhereInput | ProfilePictureScalarWhereInput[]
  }

  export type SupplyOrderSupportFileUpdateManyWithoutFileNestedInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput> | SupplyOrderSupportFileCreateWithoutFileInput[] | SupplyOrderSupportFileUncheckedCreateWithoutFileInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutFileInput | SupplyOrderSupportFileCreateOrConnectWithoutFileInput[]
    upsert?: SupplyOrderSupportFileUpsertWithWhereUniqueWithoutFileInput | SupplyOrderSupportFileUpsertWithWhereUniqueWithoutFileInput[]
    createMany?: SupplyOrderSupportFileCreateManyFileInputEnvelope
    set?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    disconnect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    delete?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    update?: SupplyOrderSupportFileUpdateWithWhereUniqueWithoutFileInput | SupplyOrderSupportFileUpdateWithWhereUniqueWithoutFileInput[]
    updateMany?: SupplyOrderSupportFileUpdateManyWithWhereWithoutFileInput | SupplyOrderSupportFileUpdateManyWithWhereWithoutFileInput[]
    deleteMany?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
  }

  export type ProfilePictureUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput> | ProfilePictureCreateWithoutAssetInput[] | ProfilePictureUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutAssetInput | ProfilePictureCreateOrConnectWithoutAssetInput[]
    upsert?: ProfilePictureUpsertWithWhereUniqueWithoutAssetInput | ProfilePictureUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: ProfilePictureCreateManyAssetInputEnvelope
    set?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    disconnect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    delete?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    connect?: ProfilePictureWhereUniqueInput | ProfilePictureWhereUniqueInput[]
    update?: ProfilePictureUpdateWithWhereUniqueWithoutAssetInput | ProfilePictureUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: ProfilePictureUpdateManyWithWhereWithoutAssetInput | ProfilePictureUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: ProfilePictureScalarWhereInput | ProfilePictureScalarWhereInput[]
  }

  export type SupplyOrderSupportFileUncheckedUpdateManyWithoutFileNestedInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput> | SupplyOrderSupportFileCreateWithoutFileInput[] | SupplyOrderSupportFileUncheckedCreateWithoutFileInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutFileInput | SupplyOrderSupportFileCreateOrConnectWithoutFileInput[]
    upsert?: SupplyOrderSupportFileUpsertWithWhereUniqueWithoutFileInput | SupplyOrderSupportFileUpsertWithWhereUniqueWithoutFileInput[]
    createMany?: SupplyOrderSupportFileCreateManyFileInputEnvelope
    set?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    disconnect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    delete?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    update?: SupplyOrderSupportFileUpdateWithWhereUniqueWithoutFileInput | SupplyOrderSupportFileUpdateWithWhereUniqueWithoutFileInput[]
    updateMany?: SupplyOrderSupportFileUpdateManyWithWhereWithoutFileInput | SupplyOrderSupportFileUpdateManyWithWhereWithoutFileInput[]
    deleteMany?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
  }

  export type AssetsCreateNestedOneWithoutProfilePictureInput = {
    create?: XOR<AssetsCreateWithoutProfilePictureInput, AssetsUncheckedCreateWithoutProfilePictureInput>
    connectOrCreate?: AssetsCreateOrConnectWithoutProfilePictureInput
    connect?: AssetsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProfilePictureInput = {
    create?: XOR<UserCreateWithoutProfilePictureInput, UserUncheckedCreateWithoutProfilePictureInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfilePictureInput
    connect?: UserWhereUniqueInput
  }

  export type AssetsUpdateOneRequiredWithoutProfilePictureNestedInput = {
    create?: XOR<AssetsCreateWithoutProfilePictureInput, AssetsUncheckedCreateWithoutProfilePictureInput>
    connectOrCreate?: AssetsCreateOrConnectWithoutProfilePictureInput
    upsert?: AssetsUpsertWithoutProfilePictureInput
    connect?: AssetsWhereUniqueInput
    update?: XOR<XOR<AssetsUpdateToOneWithWhereWithoutProfilePictureInput, AssetsUpdateWithoutProfilePictureInput>, AssetsUncheckedUpdateWithoutProfilePictureInput>
  }

  export type UserUpdateOneRequiredWithoutProfilePictureNestedInput = {
    create?: XOR<UserCreateWithoutProfilePictureInput, UserUncheckedCreateWithoutProfilePictureInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfilePictureInput
    upsert?: UserUpsertWithoutProfilePictureInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfilePictureInput, UserUpdateWithoutProfilePictureInput>, UserUncheckedUpdateWithoutProfilePictureInput>
  }

  export type SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput> | SupplyBatchOrderCreateWithoutInventoryBoxInput[] | SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput | SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput[]
    createMany?: SupplyBatchOrderCreateManyInventoryBoxInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutInventoryBoxInput = {
    create?: XOR<LineCreateWithoutInventoryBoxInput, LineUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: LineCreateOrConnectWithoutInventoryBoxInput
    connect?: LineWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInventoryBoxInput = {
    create?: XOR<UserCreateWithoutInventoryBoxInput, UserUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryBoxInput
    connect?: UserWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutInventoryBoxInput = {
    create?: XOR<DepartmentCreateWithoutInventoryBoxInput, DepartmentUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutInventoryBoxInput
    connect?: DepartmentWhereUniqueInput
  }

  export type InventoryAccessLogsCreateNestedManyWithoutBoxInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput> | InventoryAccessLogsCreateWithoutBoxInput[] | InventoryAccessLogsUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutBoxInput | InventoryAccessLogsCreateOrConnectWithoutBoxInput[]
    createMany?: InventoryAccessLogsCreateManyBoxInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type SupplyBatchCreateNestedManyWithoutBoxInput = {
    create?: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput> | SupplyBatchCreateWithoutBoxInput[] | SupplyBatchUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutBoxInput | SupplyBatchCreateOrConnectWithoutBoxInput[]
    createMany?: SupplyBatchCreateManyBoxInputEnvelope
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
  }

  export type ContainerAllowedUserCreateNestedManyWithoutContainerInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput> | ContainerAllowedUserCreateWithoutContainerInput[] | ContainerAllowedUserUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutContainerInput | ContainerAllowedUserCreateOrConnectWithoutContainerInput[]
    createMany?: ContainerAllowedUserCreateManyContainerInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type SuppliesDataSetCreateNestedManyWithoutContainerInput = {
    create?: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput> | SuppliesDataSetCreateWithoutContainerInput[] | SuppliesDataSetUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutContainerInput | SuppliesDataSetCreateOrConnectWithoutContainerInput[]
    createMany?: SuppliesDataSetCreateManyContainerInputEnvelope
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
  }

  export type SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput> | SupplyBatchOrderCreateWithoutInventoryBoxInput[] | SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput | SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput[]
    createMany?: SupplyBatchOrderCreateManyInventoryBoxInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput> | InventoryAccessLogsCreateWithoutBoxInput[] | InventoryAccessLogsUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutBoxInput | InventoryAccessLogsCreateOrConnectWithoutBoxInput[]
    createMany?: InventoryAccessLogsCreateManyBoxInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type SupplyBatchUncheckedCreateNestedManyWithoutBoxInput = {
    create?: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput> | SupplyBatchCreateWithoutBoxInput[] | SupplyBatchUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutBoxInput | SupplyBatchCreateOrConnectWithoutBoxInput[]
    createMany?: SupplyBatchCreateManyBoxInputEnvelope
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
  }

  export type ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput> | ContainerAllowedUserCreateWithoutContainerInput[] | ContainerAllowedUserUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutContainerInput | ContainerAllowedUserCreateOrConnectWithoutContainerInput[]
    createMany?: ContainerAllowedUserCreateManyContainerInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput = {
    create?: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput> | SuppliesDataSetCreateWithoutContainerInput[] | SuppliesDataSetUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutContainerInput | SuppliesDataSetCreateOrConnectWithoutContainerInput[]
    createMany?: SuppliesDataSetCreateManyContainerInputEnvelope
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
  }

  export type SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput> | SupplyBatchOrderCreateWithoutInventoryBoxInput[] | SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput | SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutInventoryBoxInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutInventoryBoxInput[]
    createMany?: SupplyBatchOrderCreateManyInventoryBoxInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutInventoryBoxInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutInventoryBoxInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutInventoryBoxInput | SupplyBatchOrderUpdateManyWithWhereWithoutInventoryBoxInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type LineUpdateOneRequiredWithoutInventoryBoxNestedInput = {
    create?: XOR<LineCreateWithoutInventoryBoxInput, LineUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: LineCreateOrConnectWithoutInventoryBoxInput
    upsert?: LineUpsertWithoutInventoryBoxInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutInventoryBoxInput, LineUpdateWithoutInventoryBoxInput>, LineUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type UserUpdateOneRequiredWithoutInventoryBoxNestedInput = {
    create?: XOR<UserCreateWithoutInventoryBoxInput, UserUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryBoxInput
    upsert?: UserUpsertWithoutInventoryBoxInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInventoryBoxInput, UserUpdateWithoutInventoryBoxInput>, UserUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type DepartmentUpdateOneWithoutInventoryBoxNestedInput = {
    create?: XOR<DepartmentCreateWithoutInventoryBoxInput, DepartmentUncheckedCreateWithoutInventoryBoxInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutInventoryBoxInput
    upsert?: DepartmentUpsertWithoutInventoryBoxInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutInventoryBoxInput, DepartmentUpdateWithoutInventoryBoxInput>, DepartmentUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type InventoryAccessLogsUpdateManyWithoutBoxNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput> | InventoryAccessLogsCreateWithoutBoxInput[] | InventoryAccessLogsUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutBoxInput | InventoryAccessLogsCreateOrConnectWithoutBoxInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutBoxInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutBoxInput[]
    createMany?: InventoryAccessLogsCreateManyBoxInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutBoxInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutBoxInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutBoxInput | InventoryAccessLogsUpdateManyWithWhereWithoutBoxInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type SupplyBatchUpdateManyWithoutBoxNestedInput = {
    create?: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput> | SupplyBatchCreateWithoutBoxInput[] | SupplyBatchUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutBoxInput | SupplyBatchCreateOrConnectWithoutBoxInput[]
    upsert?: SupplyBatchUpsertWithWhereUniqueWithoutBoxInput | SupplyBatchUpsertWithWhereUniqueWithoutBoxInput[]
    createMany?: SupplyBatchCreateManyBoxInputEnvelope
    set?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    disconnect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    delete?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    update?: SupplyBatchUpdateWithWhereUniqueWithoutBoxInput | SupplyBatchUpdateWithWhereUniqueWithoutBoxInput[]
    updateMany?: SupplyBatchUpdateManyWithWhereWithoutBoxInput | SupplyBatchUpdateManyWithWhereWithoutBoxInput[]
    deleteMany?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
  }

  export type ContainerAllowedUserUpdateManyWithoutContainerNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput> | ContainerAllowedUserCreateWithoutContainerInput[] | ContainerAllowedUserUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutContainerInput | ContainerAllowedUserCreateOrConnectWithoutContainerInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutContainerInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutContainerInput[]
    createMany?: ContainerAllowedUserCreateManyContainerInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutContainerInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutContainerInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutContainerInput | ContainerAllowedUserUpdateManyWithWhereWithoutContainerInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type SuppliesDataSetUpdateManyWithoutContainerNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput> | SuppliesDataSetCreateWithoutContainerInput[] | SuppliesDataSetUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutContainerInput | SuppliesDataSetCreateOrConnectWithoutContainerInput[]
    upsert?: SuppliesDataSetUpsertWithWhereUniqueWithoutContainerInput | SuppliesDataSetUpsertWithWhereUniqueWithoutContainerInput[]
    createMany?: SuppliesDataSetCreateManyContainerInputEnvelope
    set?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    disconnect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    delete?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    update?: SuppliesDataSetUpdateWithWhereUniqueWithoutContainerInput | SuppliesDataSetUpdateWithWhereUniqueWithoutContainerInput[]
    updateMany?: SuppliesDataSetUpdateManyWithWhereWithoutContainerInput | SuppliesDataSetUpdateManyWithWhereWithoutContainerInput[]
    deleteMany?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput> | SupplyBatchOrderCreateWithoutInventoryBoxInput[] | SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput | SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutInventoryBoxInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutInventoryBoxInput[]
    createMany?: SupplyBatchOrderCreateManyInventoryBoxInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutInventoryBoxInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutInventoryBoxInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutInventoryBoxInput | SupplyBatchOrderUpdateManyWithWhereWithoutInventoryBoxInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput> | InventoryAccessLogsCreateWithoutBoxInput[] | InventoryAccessLogsUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutBoxInput | InventoryAccessLogsCreateOrConnectWithoutBoxInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutBoxInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutBoxInput[]
    createMany?: InventoryAccessLogsCreateManyBoxInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutBoxInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutBoxInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutBoxInput | InventoryAccessLogsUpdateManyWithWhereWithoutBoxInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput = {
    create?: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput> | SupplyBatchCreateWithoutBoxInput[] | SupplyBatchUncheckedCreateWithoutBoxInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutBoxInput | SupplyBatchCreateOrConnectWithoutBoxInput[]
    upsert?: SupplyBatchUpsertWithWhereUniqueWithoutBoxInput | SupplyBatchUpsertWithWhereUniqueWithoutBoxInput[]
    createMany?: SupplyBatchCreateManyBoxInputEnvelope
    set?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    disconnect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    delete?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    update?: SupplyBatchUpdateWithWhereUniqueWithoutBoxInput | SupplyBatchUpdateWithWhereUniqueWithoutBoxInput[]
    updateMany?: SupplyBatchUpdateManyWithWhereWithoutBoxInput | SupplyBatchUpdateManyWithWhereWithoutBoxInput[]
    deleteMany?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput> | ContainerAllowedUserCreateWithoutContainerInput[] | ContainerAllowedUserUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutContainerInput | ContainerAllowedUserCreateOrConnectWithoutContainerInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutContainerInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutContainerInput[]
    createMany?: ContainerAllowedUserCreateManyContainerInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutContainerInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutContainerInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutContainerInput | ContainerAllowedUserUpdateManyWithWhereWithoutContainerInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput> | SuppliesDataSetCreateWithoutContainerInput[] | SuppliesDataSetUncheckedCreateWithoutContainerInput[]
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutContainerInput | SuppliesDataSetCreateOrConnectWithoutContainerInput[]
    upsert?: SuppliesDataSetUpsertWithWhereUniqueWithoutContainerInput | SuppliesDataSetUpsertWithWhereUniqueWithoutContainerInput[]
    createMany?: SuppliesDataSetCreateManyContainerInputEnvelope
    set?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    disconnect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    delete?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    connect?: SuppliesDataSetWhereUniqueInput | SuppliesDataSetWhereUniqueInput[]
    update?: SuppliesDataSetUpdateWithWhereUniqueWithoutContainerInput | SuppliesDataSetUpdateWithWhereUniqueWithoutContainerInput[]
    updateMany?: SuppliesDataSetUpdateManyWithWhereWithoutContainerInput | SuppliesDataSetUpdateManyWithWhereWithoutContainerInput[]
    deleteMany?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutContainerAllowedUserInput = {
    create?: XOR<UserCreateWithoutContainerAllowedUserInput, UserUncheckedCreateWithoutContainerAllowedUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutContainerAllowedUserInput
    connect?: UserWhereUniqueInput
  }

  export type InventoryBoxCreateNestedOneWithoutContainerAllowedUserInput = {
    create?: XOR<InventoryBoxCreateWithoutContainerAllowedUserInput, InventoryBoxUncheckedCreateWithoutContainerAllowedUserInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutContainerAllowedUserInput
    connect?: InventoryBoxWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutGrantContainerInput = {
    create?: XOR<UserCreateWithoutGrantContainerInput, UserUncheckedCreateWithoutGrantContainerInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantContainerInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutContainerAllowedUserNestedInput = {
    create?: XOR<UserCreateWithoutContainerAllowedUserInput, UserUncheckedCreateWithoutContainerAllowedUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutContainerAllowedUserInput
    upsert?: UserUpsertWithoutContainerAllowedUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutContainerAllowedUserInput, UserUpdateWithoutContainerAllowedUserInput>, UserUncheckedUpdateWithoutContainerAllowedUserInput>
  }

  export type InventoryBoxUpdateOneRequiredWithoutContainerAllowedUserNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutContainerAllowedUserInput, InventoryBoxUncheckedCreateWithoutContainerAllowedUserInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutContainerAllowedUserInput
    upsert?: InventoryBoxUpsertWithoutContainerAllowedUserInput
    connect?: InventoryBoxWhereUniqueInput
    update?: XOR<XOR<InventoryBoxUpdateToOneWithWhereWithoutContainerAllowedUserInput, InventoryBoxUpdateWithoutContainerAllowedUserInput>, InventoryBoxUncheckedUpdateWithoutContainerAllowedUserInput>
  }

  export type UserUpdateOneRequiredWithoutGrantContainerNestedInput = {
    create?: XOR<UserCreateWithoutGrantContainerInput, UserUncheckedCreateWithoutGrantContainerInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantContainerInput
    upsert?: UserUpsertWithoutGrantContainerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutGrantContainerInput, UserUpdateWithoutGrantContainerInput>, UserUncheckedUpdateWithoutGrantContainerInput>
  }

  export type UserCreateNestedOneWithoutInventoryAccessLogsInput = {
    create?: XOR<UserCreateWithoutInventoryAccessLogsInput, UserUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryAccessLogsInput
    connect?: UserWhereUniqueInput
  }

  export type InventoryBoxCreateNestedOneWithoutInventoryAccessLogsInput = {
    create?: XOR<InventoryBoxCreateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutInventoryAccessLogsInput
    connect?: InventoryBoxWhereUniqueInput
  }

  export type SuppliesCreateNestedOneWithoutInventoryAccessLogsInput = {
    create?: XOR<SuppliesCreateWithoutInventoryAccessLogsInput, SuppliesUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutInventoryAccessLogsInput
    connect?: SuppliesWhereUniqueInput
  }

  export type UserUpdateOneWithoutInventoryAccessLogsNestedInput = {
    create?: XOR<UserCreateWithoutInventoryAccessLogsInput, UserUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInventoryAccessLogsInput
    upsert?: UserUpsertWithoutInventoryAccessLogsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInventoryAccessLogsInput, UserUpdateWithoutInventoryAccessLogsInput>, UserUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type InventoryBoxUpdateOneWithoutInventoryAccessLogsNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutInventoryAccessLogsInput
    upsert?: InventoryBoxUpsertWithoutInventoryAccessLogsInput
    disconnect?: InventoryBoxWhereInput | boolean
    delete?: InventoryBoxWhereInput | boolean
    connect?: InventoryBoxWhereUniqueInput
    update?: XOR<XOR<InventoryBoxUpdateToOneWithWhereWithoutInventoryAccessLogsInput, InventoryBoxUpdateWithoutInventoryAccessLogsInput>, InventoryBoxUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type SuppliesUpdateOneWithoutInventoryAccessLogsNestedInput = {
    create?: XOR<SuppliesCreateWithoutInventoryAccessLogsInput, SuppliesUncheckedCreateWithoutInventoryAccessLogsInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutInventoryAccessLogsInput
    upsert?: SuppliesUpsertWithoutInventoryAccessLogsInput
    disconnect?: SuppliesWhereInput | boolean
    delete?: SuppliesWhereInput | boolean
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutInventoryAccessLogsInput, SuppliesUpdateWithoutInventoryAccessLogsInput>, SuppliesUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type LineCreateNestedOneWithoutSuppliesInput = {
    create?: XOR<LineCreateWithoutSuppliesInput, LineUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: LineCreateOrConnectWithoutSuppliesInput
    connect?: LineWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSuppliesInput = {
    create?: XOR<UserCreateWithoutSuppliesInput, UserUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSuppliesInput
    connect?: UserWhereUniqueInput
  }

  export type SuppliesRecordCreateNestedManyWithoutSuppyIdInput = {
    create?: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput> | SuppliesRecordCreateWithoutSuppyIdInput[] | SuppliesRecordUncheckedCreateWithoutSuppyIdInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutSuppyIdInput | SuppliesRecordCreateOrConnectWithoutSuppyIdInput[]
    createMany?: SuppliesRecordCreateManySuppyIdInputEnvelope
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
  }

  export type AssetsCreateNestedManyWithoutSuppliesInput = {
    create?: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput> | AssetsCreateWithoutSuppliesInput[] | AssetsUncheckedCreateWithoutSuppliesInput[]
    connectOrCreate?: AssetsCreateOrConnectWithoutSuppliesInput | AssetsCreateOrConnectWithoutSuppliesInput[]
    createMany?: AssetsCreateManySuppliesInputEnvelope
    connect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
  }

  export type SuppliesRecordCreateNestedOneWithoutModifiedInput = {
    create?: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutModifiedInput
    connect?: SuppliesRecordWhereUniqueInput
  }

  export type TransferredSuppliesCreateNestedManyWithoutSupplyInput = {
    create?: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput> | TransferredSuppliesCreateWithoutSupplyInput[] | TransferredSuppliesUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutSupplyInput | TransferredSuppliesCreateOrConnectWithoutSupplyInput[]
    createMany?: TransferredSuppliesCreateManySupplyInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type SuppliesCategoryCreateNestedOneWithoutSuppliesInput = {
    create?: XOR<SuppliesCategoryCreateWithoutSuppliesInput, SuppliesCategoryUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesCategoryCreateOrConnectWithoutSuppliesInput
    connect?: SuppliesCategoryWhereUniqueInput
  }

  export type SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput> | SupplieRecieveHistoryCreateWithoutSupplyInput[] | SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput | SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplieRecieveHistoryCreateManySupplyInputEnvelope
    connect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
  }

  export type InventoryAccessLogsCreateNestedManyWithoutSupplyInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput> | InventoryAccessLogsCreateWithoutSupplyInput[] | InventoryAccessLogsUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutSupplyInput | InventoryAccessLogsCreateOrConnectWithoutSupplyInput[]
    createMany?: InventoryAccessLogsCreateManySupplyInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type SupplyOrderCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput> | SupplyOrderCreateWithoutSupplyInput[] | SupplyOrderUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyInput | SupplyOrderCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyOrderCreateManySupplyInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SupplyBatchItemCreateNestedOneWithoutSupplyInput = {
    create?: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutSupplyInput
    connect?: SupplyBatchItemWhereUniqueInput
  }

  export type SupplyPriceTrackCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput> | SupplyPriceTrackCreateWithoutSupplyInput[] | SupplyPriceTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyPriceTrackCreateOrConnectWithoutSupplyInput | SupplyPriceTrackCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyPriceTrackCreateManySupplyInputEnvelope
    connect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
  }

  export type SuppliesQualityCreateNestedOneWithoutSuppliesInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesInput, SuppliesQualityUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesInput
    connect?: SuppliesQualityWhereUniqueInput
  }

  export type SupplyStockTrackCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput> | SupplyStockTrackCreateWithoutSupplyInput[] | SupplyStockTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyStockTrackCreateOrConnectWithoutSupplyInput | SupplyStockTrackCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyStockTrackCreateManySupplyInputEnvelope
    connect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
  }

  export type SuppliesDataSetCreateNestedOneWithoutSuppliesInput = {
    create?: XOR<SuppliesDataSetCreateWithoutSuppliesInput, SuppliesDataSetUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutSuppliesInput
    connect?: SuppliesDataSetWhereUniqueInput
  }

  export type SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput = {
    create?: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput> | SuppliesRecordCreateWithoutSuppyIdInput[] | SuppliesRecordUncheckedCreateWithoutSuppyIdInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutSuppyIdInput | SuppliesRecordCreateOrConnectWithoutSuppyIdInput[]
    createMany?: SuppliesRecordCreateManySuppyIdInputEnvelope
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
  }

  export type AssetsUncheckedCreateNestedManyWithoutSuppliesInput = {
    create?: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput> | AssetsCreateWithoutSuppliesInput[] | AssetsUncheckedCreateWithoutSuppliesInput[]
    connectOrCreate?: AssetsCreateOrConnectWithoutSuppliesInput | AssetsCreateOrConnectWithoutSuppliesInput[]
    createMany?: AssetsCreateManySuppliesInputEnvelope
    connect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
  }

  export type SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput = {
    create?: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutModifiedInput
    connect?: SuppliesRecordWhereUniqueInput
  }

  export type TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput> | TransferredSuppliesCreateWithoutSupplyInput[] | TransferredSuppliesUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutSupplyInput | TransferredSuppliesCreateOrConnectWithoutSupplyInput[]
    createMany?: TransferredSuppliesCreateManySupplyInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput> | SupplieRecieveHistoryCreateWithoutSupplyInput[] | SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput | SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplieRecieveHistoryCreateManySupplyInputEnvelope
    connect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
  }

  export type InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput> | InventoryAccessLogsCreateWithoutSupplyInput[] | InventoryAccessLogsUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutSupplyInput | InventoryAccessLogsCreateOrConnectWithoutSupplyInput[]
    createMany?: InventoryAccessLogsCreateManySupplyInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput> | SupplyOrderCreateWithoutSupplyInput[] | SupplyOrderUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyInput | SupplyOrderCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyOrderCreateManySupplyInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput = {
    create?: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutSupplyInput
    connect?: SupplyBatchItemWhereUniqueInput
  }

  export type SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput> | SupplyPriceTrackCreateWithoutSupplyInput[] | SupplyPriceTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyPriceTrackCreateOrConnectWithoutSupplyInput | SupplyPriceTrackCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyPriceTrackCreateManySupplyInputEnvelope
    connect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
  }

  export type SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput = {
    create?: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput> | SupplyStockTrackCreateWithoutSupplyInput[] | SupplyStockTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyStockTrackCreateOrConnectWithoutSupplyInput | SupplyStockTrackCreateOrConnectWithoutSupplyInput[]
    createMany?: SupplyStockTrackCreateManySupplyInputEnvelope
    connect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LineUpdateOneRequiredWithoutSuppliesNestedInput = {
    create?: XOR<LineCreateWithoutSuppliesInput, LineUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: LineCreateOrConnectWithoutSuppliesInput
    upsert?: LineUpsertWithoutSuppliesInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutSuppliesInput, LineUpdateWithoutSuppliesInput>, LineUncheckedUpdateWithoutSuppliesInput>
  }

  export type UserUpdateOneWithoutSuppliesNestedInput = {
    create?: XOR<UserCreateWithoutSuppliesInput, UserUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSuppliesInput
    upsert?: UserUpsertWithoutSuppliesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSuppliesInput, UserUpdateWithoutSuppliesInput>, UserUncheckedUpdateWithoutSuppliesInput>
  }

  export type SuppliesRecordUpdateManyWithoutSuppyIdNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput> | SuppliesRecordCreateWithoutSuppyIdInput[] | SuppliesRecordUncheckedCreateWithoutSuppyIdInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutSuppyIdInput | SuppliesRecordCreateOrConnectWithoutSuppyIdInput[]
    upsert?: SuppliesRecordUpsertWithWhereUniqueWithoutSuppyIdInput | SuppliesRecordUpsertWithWhereUniqueWithoutSuppyIdInput[]
    createMany?: SuppliesRecordCreateManySuppyIdInputEnvelope
    set?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    disconnect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    delete?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    update?: SuppliesRecordUpdateWithWhereUniqueWithoutSuppyIdInput | SuppliesRecordUpdateWithWhereUniqueWithoutSuppyIdInput[]
    updateMany?: SuppliesRecordUpdateManyWithWhereWithoutSuppyIdInput | SuppliesRecordUpdateManyWithWhereWithoutSuppyIdInput[]
    deleteMany?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
  }

  export type AssetsUpdateManyWithoutSuppliesNestedInput = {
    create?: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput> | AssetsCreateWithoutSuppliesInput[] | AssetsUncheckedCreateWithoutSuppliesInput[]
    connectOrCreate?: AssetsCreateOrConnectWithoutSuppliesInput | AssetsCreateOrConnectWithoutSuppliesInput[]
    upsert?: AssetsUpsertWithWhereUniqueWithoutSuppliesInput | AssetsUpsertWithWhereUniqueWithoutSuppliesInput[]
    createMany?: AssetsCreateManySuppliesInputEnvelope
    set?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    disconnect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    delete?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    connect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    update?: AssetsUpdateWithWhereUniqueWithoutSuppliesInput | AssetsUpdateWithWhereUniqueWithoutSuppliesInput[]
    updateMany?: AssetsUpdateManyWithWhereWithoutSuppliesInput | AssetsUpdateManyWithWhereWithoutSuppliesInput[]
    deleteMany?: AssetsScalarWhereInput | AssetsScalarWhereInput[]
  }

  export type SuppliesRecordUpdateOneWithoutModifiedNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutModifiedInput
    upsert?: SuppliesRecordUpsertWithoutModifiedInput
    disconnect?: SuppliesRecordWhereInput | boolean
    delete?: SuppliesRecordWhereInput | boolean
    connect?: SuppliesRecordWhereUniqueInput
    update?: XOR<XOR<SuppliesRecordUpdateToOneWithWhereWithoutModifiedInput, SuppliesRecordUpdateWithoutModifiedInput>, SuppliesRecordUncheckedUpdateWithoutModifiedInput>
  }

  export type TransferredSuppliesUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput> | TransferredSuppliesCreateWithoutSupplyInput[] | TransferredSuppliesUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutSupplyInput | TransferredSuppliesCreateOrConnectWithoutSupplyInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutSupplyInput | TransferredSuppliesUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: TransferredSuppliesCreateManySupplyInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutSupplyInput | TransferredSuppliesUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutSupplyInput | TransferredSuppliesUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type SuppliesCategoryUpdateOneWithoutSuppliesNestedInput = {
    create?: XOR<SuppliesCategoryCreateWithoutSuppliesInput, SuppliesCategoryUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesCategoryCreateOrConnectWithoutSuppliesInput
    upsert?: SuppliesCategoryUpsertWithoutSuppliesInput
    disconnect?: SuppliesCategoryWhereInput | boolean
    delete?: SuppliesCategoryWhereInput | boolean
    connect?: SuppliesCategoryWhereUniqueInput
    update?: XOR<XOR<SuppliesCategoryUpdateToOneWithWhereWithoutSuppliesInput, SuppliesCategoryUpdateWithoutSuppliesInput>, SuppliesCategoryUncheckedUpdateWithoutSuppliesInput>
  }

  export type SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput> | SupplieRecieveHistoryCreateWithoutSupplyInput[] | SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput | SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplieRecieveHistoryUpsertWithWhereUniqueWithoutSupplyInput | SupplieRecieveHistoryUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplieRecieveHistoryCreateManySupplyInputEnvelope
    set?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    disconnect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    delete?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    connect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    update?: SupplieRecieveHistoryUpdateWithWhereUniqueWithoutSupplyInput | SupplieRecieveHistoryUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplieRecieveHistoryUpdateManyWithWhereWithoutSupplyInput | SupplieRecieveHistoryUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplieRecieveHistoryScalarWhereInput | SupplieRecieveHistoryScalarWhereInput[]
  }

  export type InventoryAccessLogsUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput> | InventoryAccessLogsCreateWithoutSupplyInput[] | InventoryAccessLogsUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutSupplyInput | InventoryAccessLogsCreateOrConnectWithoutSupplyInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutSupplyInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: InventoryAccessLogsCreateManySupplyInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutSupplyInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutSupplyInput | InventoryAccessLogsUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type SupplyOrderUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput> | SupplyOrderCreateWithoutSupplyInput[] | SupplyOrderUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyInput | SupplyOrderCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutSupplyInput | SupplyOrderUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyOrderCreateManySupplyInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutSupplyInput | SupplyOrderUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutSupplyInput | SupplyOrderUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SupplyBatchItemUpdateOneWithoutSupplyNestedInput = {
    create?: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutSupplyInput
    upsert?: SupplyBatchItemUpsertWithoutSupplyInput
    disconnect?: SupplyBatchItemWhereInput | boolean
    delete?: SupplyBatchItemWhereInput | boolean
    connect?: SupplyBatchItemWhereUniqueInput
    update?: XOR<XOR<SupplyBatchItemUpdateToOneWithWhereWithoutSupplyInput, SupplyBatchItemUpdateWithoutSupplyInput>, SupplyBatchItemUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyPriceTrackUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput> | SupplyPriceTrackCreateWithoutSupplyInput[] | SupplyPriceTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyPriceTrackCreateOrConnectWithoutSupplyInput | SupplyPriceTrackCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyPriceTrackUpsertWithWhereUniqueWithoutSupplyInput | SupplyPriceTrackUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyPriceTrackCreateManySupplyInputEnvelope
    set?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    disconnect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    delete?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    connect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    update?: SupplyPriceTrackUpdateWithWhereUniqueWithoutSupplyInput | SupplyPriceTrackUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyPriceTrackUpdateManyWithWhereWithoutSupplyInput | SupplyPriceTrackUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyPriceTrackScalarWhereInput | SupplyPriceTrackScalarWhereInput[]
  }

  export type SuppliesQualityUpdateOneWithoutSuppliesNestedInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesInput, SuppliesQualityUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesInput
    upsert?: SuppliesQualityUpsertWithoutSuppliesInput
    disconnect?: SuppliesQualityWhereInput | boolean
    delete?: SuppliesQualityWhereInput | boolean
    connect?: SuppliesQualityWhereUniqueInput
    update?: XOR<XOR<SuppliesQualityUpdateToOneWithWhereWithoutSuppliesInput, SuppliesQualityUpdateWithoutSuppliesInput>, SuppliesQualityUncheckedUpdateWithoutSuppliesInput>
  }

  export type SupplyStockTrackUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput> | SupplyStockTrackCreateWithoutSupplyInput[] | SupplyStockTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyStockTrackCreateOrConnectWithoutSupplyInput | SupplyStockTrackCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyStockTrackUpsertWithWhereUniqueWithoutSupplyInput | SupplyStockTrackUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyStockTrackCreateManySupplyInputEnvelope
    set?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    disconnect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    delete?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    connect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    update?: SupplyStockTrackUpdateWithWhereUniqueWithoutSupplyInput | SupplyStockTrackUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyStockTrackUpdateManyWithWhereWithoutSupplyInput | SupplyStockTrackUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyStockTrackScalarWhereInput | SupplyStockTrackScalarWhereInput[]
  }

  export type SuppliesDataSetUpdateOneWithoutSuppliesNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutSuppliesInput, SuppliesDataSetUncheckedCreateWithoutSuppliesInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutSuppliesInput
    upsert?: SuppliesDataSetUpsertWithoutSuppliesInput
    disconnect?: SuppliesDataSetWhereInput | boolean
    delete?: SuppliesDataSetWhereInput | boolean
    connect?: SuppliesDataSetWhereUniqueInput
    update?: XOR<XOR<SuppliesDataSetUpdateToOneWithWhereWithoutSuppliesInput, SuppliesDataSetUpdateWithoutSuppliesInput>, SuppliesDataSetUncheckedUpdateWithoutSuppliesInput>
  }

  export type SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput> | SuppliesRecordCreateWithoutSuppyIdInput[] | SuppliesRecordUncheckedCreateWithoutSuppyIdInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutSuppyIdInput | SuppliesRecordCreateOrConnectWithoutSuppyIdInput[]
    upsert?: SuppliesRecordUpsertWithWhereUniqueWithoutSuppyIdInput | SuppliesRecordUpsertWithWhereUniqueWithoutSuppyIdInput[]
    createMany?: SuppliesRecordCreateManySuppyIdInputEnvelope
    set?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    disconnect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    delete?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    update?: SuppliesRecordUpdateWithWhereUniqueWithoutSuppyIdInput | SuppliesRecordUpdateWithWhereUniqueWithoutSuppyIdInput[]
    updateMany?: SuppliesRecordUpdateManyWithWhereWithoutSuppyIdInput | SuppliesRecordUpdateManyWithWhereWithoutSuppyIdInput[]
    deleteMany?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
  }

  export type AssetsUncheckedUpdateManyWithoutSuppliesNestedInput = {
    create?: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput> | AssetsCreateWithoutSuppliesInput[] | AssetsUncheckedCreateWithoutSuppliesInput[]
    connectOrCreate?: AssetsCreateOrConnectWithoutSuppliesInput | AssetsCreateOrConnectWithoutSuppliesInput[]
    upsert?: AssetsUpsertWithWhereUniqueWithoutSuppliesInput | AssetsUpsertWithWhereUniqueWithoutSuppliesInput[]
    createMany?: AssetsCreateManySuppliesInputEnvelope
    set?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    disconnect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    delete?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    connect?: AssetsWhereUniqueInput | AssetsWhereUniqueInput[]
    update?: AssetsUpdateWithWhereUniqueWithoutSuppliesInput | AssetsUpdateWithWhereUniqueWithoutSuppliesInput[]
    updateMany?: AssetsUpdateManyWithWhereWithoutSuppliesInput | AssetsUpdateManyWithWhereWithoutSuppliesInput[]
    deleteMany?: AssetsScalarWhereInput | AssetsScalarWhereInput[]
  }

  export type SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutModifiedInput
    upsert?: SuppliesRecordUpsertWithoutModifiedInput
    disconnect?: SuppliesRecordWhereInput | boolean
    delete?: SuppliesRecordWhereInput | boolean
    connect?: SuppliesRecordWhereUniqueInput
    update?: XOR<XOR<SuppliesRecordUpdateToOneWithWhereWithoutModifiedInput, SuppliesRecordUpdateWithoutModifiedInput>, SuppliesRecordUncheckedUpdateWithoutModifiedInput>
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput> | TransferredSuppliesCreateWithoutSupplyInput[] | TransferredSuppliesUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutSupplyInput | TransferredSuppliesCreateOrConnectWithoutSupplyInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutSupplyInput | TransferredSuppliesUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: TransferredSuppliesCreateManySupplyInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutSupplyInput | TransferredSuppliesUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutSupplyInput | TransferredSuppliesUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput> | SupplieRecieveHistoryCreateWithoutSupplyInput[] | SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput | SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplieRecieveHistoryUpsertWithWhereUniqueWithoutSupplyInput | SupplieRecieveHistoryUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplieRecieveHistoryCreateManySupplyInputEnvelope
    set?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    disconnect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    delete?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    connect?: SupplieRecieveHistoryWhereUniqueInput | SupplieRecieveHistoryWhereUniqueInput[]
    update?: SupplieRecieveHistoryUpdateWithWhereUniqueWithoutSupplyInput | SupplieRecieveHistoryUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplieRecieveHistoryUpdateManyWithWhereWithoutSupplyInput | SupplieRecieveHistoryUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplieRecieveHistoryScalarWhereInput | SupplieRecieveHistoryScalarWhereInput[]
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput> | InventoryAccessLogsCreateWithoutSupplyInput[] | InventoryAccessLogsUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutSupplyInput | InventoryAccessLogsCreateOrConnectWithoutSupplyInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutSupplyInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: InventoryAccessLogsCreateManySupplyInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutSupplyInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutSupplyInput | InventoryAccessLogsUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput> | SupplyOrderCreateWithoutSupplyInput[] | SupplyOrderUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyInput | SupplyOrderCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutSupplyInput | SupplyOrderUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyOrderCreateManySupplyInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutSupplyInput | SupplyOrderUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutSupplyInput | SupplyOrderUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput = {
    create?: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutSupplyInput
    upsert?: SupplyBatchItemUpsertWithoutSupplyInput
    disconnect?: SupplyBatchItemWhereInput | boolean
    delete?: SupplyBatchItemWhereInput | boolean
    connect?: SupplyBatchItemWhereUniqueInput
    update?: XOR<XOR<SupplyBatchItemUpdateToOneWithWhereWithoutSupplyInput, SupplyBatchItemUpdateWithoutSupplyInput>, SupplyBatchItemUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput> | SupplyPriceTrackCreateWithoutSupplyInput[] | SupplyPriceTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyPriceTrackCreateOrConnectWithoutSupplyInput | SupplyPriceTrackCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyPriceTrackUpsertWithWhereUniqueWithoutSupplyInput | SupplyPriceTrackUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyPriceTrackCreateManySupplyInputEnvelope
    set?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    disconnect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    delete?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    connect?: SupplyPriceTrackWhereUniqueInput | SupplyPriceTrackWhereUniqueInput[]
    update?: SupplyPriceTrackUpdateWithWhereUniqueWithoutSupplyInput | SupplyPriceTrackUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyPriceTrackUpdateManyWithWhereWithoutSupplyInput | SupplyPriceTrackUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyPriceTrackScalarWhereInput | SupplyPriceTrackScalarWhereInput[]
  }

  export type SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput = {
    create?: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput> | SupplyStockTrackCreateWithoutSupplyInput[] | SupplyStockTrackUncheckedCreateWithoutSupplyInput[]
    connectOrCreate?: SupplyStockTrackCreateOrConnectWithoutSupplyInput | SupplyStockTrackCreateOrConnectWithoutSupplyInput[]
    upsert?: SupplyStockTrackUpsertWithWhereUniqueWithoutSupplyInput | SupplyStockTrackUpsertWithWhereUniqueWithoutSupplyInput[]
    createMany?: SupplyStockTrackCreateManySupplyInputEnvelope
    set?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    disconnect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    delete?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    connect?: SupplyStockTrackWhereUniqueInput | SupplyStockTrackWhereUniqueInput[]
    update?: SupplyStockTrackUpdateWithWhereUniqueWithoutSupplyInput | SupplyStockTrackUpdateWithWhereUniqueWithoutSupplyInput[]
    updateMany?: SupplyStockTrackUpdateManyWithWhereWithoutSupplyInput | SupplyStockTrackUpdateManyWithWhereWithoutSupplyInput[]
    deleteMany?: SupplyStockTrackScalarWhereInput | SupplyStockTrackScalarWhereInput[]
  }

  export type InventoryBoxCreateNestedOneWithoutSupplyBatchInput = {
    create?: XOR<InventoryBoxCreateWithoutSupplyBatchInput, InventoryBoxUncheckedCreateWithoutSupplyBatchInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutSupplyBatchInput
    connect?: InventoryBoxWhereUniqueInput
  }

  export type SupplyBatchItemCreateNestedManyWithoutBatchInput = {
    create?: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput> | SupplyBatchItemCreateWithoutBatchInput[] | SupplyBatchItemUncheckedCreateWithoutBatchInput[]
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutBatchInput | SupplyBatchItemCreateOrConnectWithoutBatchInput[]
    createMany?: SupplyBatchItemCreateManyBatchInputEnvelope
    connect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
  }

  export type SuppliesDataSetCreateNestedOneWithoutListInput = {
    create?: XOR<SuppliesDataSetCreateWithoutListInput, SuppliesDataSetUncheckedCreateWithoutListInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutListInput
    connect?: SuppliesDataSetWhereUniqueInput
  }

  export type SupplyBatchItemUncheckedCreateNestedManyWithoutBatchInput = {
    create?: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput> | SupplyBatchItemCreateWithoutBatchInput[] | SupplyBatchItemUncheckedCreateWithoutBatchInput[]
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutBatchInput | SupplyBatchItemCreateOrConnectWithoutBatchInput[]
    createMany?: SupplyBatchItemCreateManyBatchInputEnvelope
    connect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
  }

  export type InventoryBoxUpdateOneRequiredWithoutSupplyBatchNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutSupplyBatchInput, InventoryBoxUncheckedCreateWithoutSupplyBatchInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutSupplyBatchInput
    upsert?: InventoryBoxUpsertWithoutSupplyBatchInput
    connect?: InventoryBoxWhereUniqueInput
    update?: XOR<XOR<InventoryBoxUpdateToOneWithWhereWithoutSupplyBatchInput, InventoryBoxUpdateWithoutSupplyBatchInput>, InventoryBoxUncheckedUpdateWithoutSupplyBatchInput>
  }

  export type SupplyBatchItemUpdateManyWithoutBatchNestedInput = {
    create?: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput> | SupplyBatchItemCreateWithoutBatchInput[] | SupplyBatchItemUncheckedCreateWithoutBatchInput[]
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutBatchInput | SupplyBatchItemCreateOrConnectWithoutBatchInput[]
    upsert?: SupplyBatchItemUpsertWithWhereUniqueWithoutBatchInput | SupplyBatchItemUpsertWithWhereUniqueWithoutBatchInput[]
    createMany?: SupplyBatchItemCreateManyBatchInputEnvelope
    set?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    disconnect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    delete?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    connect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    update?: SupplyBatchItemUpdateWithWhereUniqueWithoutBatchInput | SupplyBatchItemUpdateWithWhereUniqueWithoutBatchInput[]
    updateMany?: SupplyBatchItemUpdateManyWithWhereWithoutBatchInput | SupplyBatchItemUpdateManyWithWhereWithoutBatchInput[]
    deleteMany?: SupplyBatchItemScalarWhereInput | SupplyBatchItemScalarWhereInput[]
  }

  export type SuppliesDataSetUpdateOneWithoutListNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutListInput, SuppliesDataSetUncheckedCreateWithoutListInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutListInput
    upsert?: SuppliesDataSetUpsertWithoutListInput
    disconnect?: SuppliesDataSetWhereInput | boolean
    delete?: SuppliesDataSetWhereInput | boolean
    connect?: SuppliesDataSetWhereUniqueInput
    update?: XOR<XOR<SuppliesDataSetUpdateToOneWithWhereWithoutListInput, SuppliesDataSetUpdateWithoutListInput>, SuppliesDataSetUncheckedUpdateWithoutListInput>
  }

  export type SupplyBatchItemUncheckedUpdateManyWithoutBatchNestedInput = {
    create?: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput> | SupplyBatchItemCreateWithoutBatchInput[] | SupplyBatchItemUncheckedCreateWithoutBatchInput[]
    connectOrCreate?: SupplyBatchItemCreateOrConnectWithoutBatchInput | SupplyBatchItemCreateOrConnectWithoutBatchInput[]
    upsert?: SupplyBatchItemUpsertWithWhereUniqueWithoutBatchInput | SupplyBatchItemUpsertWithWhereUniqueWithoutBatchInput[]
    createMany?: SupplyBatchItemCreateManyBatchInputEnvelope
    set?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    disconnect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    delete?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    connect?: SupplyBatchItemWhereUniqueInput | SupplyBatchItemWhereUniqueInput[]
    update?: SupplyBatchItemUpdateWithWhereUniqueWithoutBatchInput | SupplyBatchItemUpdateWithWhereUniqueWithoutBatchInput[]
    updateMany?: SupplyBatchItemUpdateManyWithWhereWithoutBatchInput | SupplyBatchItemUpdateManyWithWhereWithoutBatchInput[]
    deleteMany?: SupplyBatchItemScalarWhereInput | SupplyBatchItemScalarWhereInput[]
  }

  export type SupplyBatchCreateNestedOneWithoutSupplyBatchItemInput = {
    create?: XOR<SupplyBatchCreateWithoutSupplyBatchItemInput, SupplyBatchUncheckedCreateWithoutSupplyBatchItemInput>
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSupplyBatchItemInput
    connect?: SupplyBatchWhereUniqueInput
  }

  export type SuppliesCreateNestedOneWithoutSupplyBatchItemInput = {
    create?: XOR<SuppliesCreateWithoutSupplyBatchItemInput, SuppliesUncheckedCreateWithoutSupplyBatchItemInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyBatchItemInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SupplyBatchUpdateOneRequiredWithoutSupplyBatchItemNestedInput = {
    create?: XOR<SupplyBatchCreateWithoutSupplyBatchItemInput, SupplyBatchUncheckedCreateWithoutSupplyBatchItemInput>
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSupplyBatchItemInput
    upsert?: SupplyBatchUpsertWithoutSupplyBatchItemInput
    connect?: SupplyBatchWhereUniqueInput
    update?: XOR<XOR<SupplyBatchUpdateToOneWithWhereWithoutSupplyBatchItemInput, SupplyBatchUpdateWithoutSupplyBatchItemInput>, SupplyBatchUncheckedUpdateWithoutSupplyBatchItemInput>
  }

  export type SuppliesUpdateOneWithoutSupplyBatchItemNestedInput = {
    create?: XOR<SuppliesCreateWithoutSupplyBatchItemInput, SuppliesUncheckedCreateWithoutSupplyBatchItemInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyBatchItemInput
    upsert?: SuppliesUpsertWithoutSupplyBatchItemInput
    disconnect?: SuppliesWhereInput | boolean
    delete?: SuppliesWhereInput | boolean
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSupplyBatchItemInput, SuppliesUpdateWithoutSupplyBatchItemInput>, SuppliesUncheckedUpdateWithoutSupplyBatchItemInput>
  }

  export type UserCreateNestedOneWithoutSupplyBatchOrderInput = {
    create?: XOR<UserCreateWithoutSupplyBatchOrderInput, UserUncheckedCreateWithoutSupplyBatchOrderInput>
    connectOrCreate?: UserCreateOrConnectWithoutSupplyBatchOrderInput
    connect?: UserWhereUniqueInput
  }

  export type SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderCreateWithoutSupplyBatchOrderInput[] | SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderCreateManySupplyBatchOrderInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput[] | SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderSupportFileCreateManySupplyBatchOrderInputEnvelope
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutSupplyBatchOrderInput = {
    create?: XOR<LineCreateWithoutSupplyBatchOrderInput, LineUncheckedCreateWithoutSupplyBatchOrderInput>
    connectOrCreate?: LineCreateOrConnectWithoutSupplyBatchOrderInput
    connect?: LineWhereUniqueInput
  }

  export type InventoryBoxCreateNestedOneWithoutBatchInput = {
    create?: XOR<InventoryBoxCreateWithoutBatchInput, InventoryBoxUncheckedCreateWithoutBatchInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutBatchInput
    connect?: InventoryBoxWhereUniqueInput
  }

  export type SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderCreateWithoutSupplyBatchOrderInput[] | SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderCreateManySupplyBatchOrderInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput[] | SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderSupportFileCreateManySupplyBatchOrderInputEnvelope
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<UserCreateWithoutSupplyBatchOrderInput, UserUncheckedCreateWithoutSupplyBatchOrderInput>
    connectOrCreate?: UserCreateOrConnectWithoutSupplyBatchOrderInput
    upsert?: UserUpsertWithoutSupplyBatchOrderInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSupplyBatchOrderInput, UserUpdateWithoutSupplyBatchOrderInput>, UserUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderCreateWithoutSupplyBatchOrderInput[] | SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderUpsertWithWhereUniqueWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderCreateManySupplyBatchOrderInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderUpdateWithWhereUniqueWithoutSupplyBatchOrderInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutSupplyBatchOrderInput | SupplyOrderUpdateManyWithWhereWithoutSupplyBatchOrderInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput[] | SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput[]
    upsert?: SupplyOrderSupportFileUpsertWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpsertWithWhereUniqueWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderSupportFileCreateManySupplyBatchOrderInputEnvelope
    set?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    disconnect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    delete?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    update?: SupplyOrderSupportFileUpdateWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpdateWithWhereUniqueWithoutSupplyBatchOrderInput[]
    updateMany?: SupplyOrderSupportFileUpdateManyWithWhereWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpdateManyWithWhereWithoutSupplyBatchOrderInput[]
    deleteMany?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
  }

  export type LineUpdateOneWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<LineCreateWithoutSupplyBatchOrderInput, LineUncheckedCreateWithoutSupplyBatchOrderInput>
    connectOrCreate?: LineCreateOrConnectWithoutSupplyBatchOrderInput
    upsert?: LineUpsertWithoutSupplyBatchOrderInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutSupplyBatchOrderInput, LineUpdateWithoutSupplyBatchOrderInput>, LineUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type InventoryBoxUpdateOneWithoutBatchNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutBatchInput, InventoryBoxUncheckedCreateWithoutBatchInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutBatchInput
    upsert?: InventoryBoxUpsertWithoutBatchInput
    disconnect?: InventoryBoxWhereInput | boolean
    delete?: InventoryBoxWhereInput | boolean
    connect?: InventoryBoxWhereUniqueInput
    update?: XOR<XOR<InventoryBoxUpdateToOneWithWhereWithoutBatchInput, InventoryBoxUpdateWithoutBatchInput>, InventoryBoxUncheckedUpdateWithoutBatchInput>
  }

  export type SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderCreateWithoutSupplyBatchOrderInput[] | SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderUpsertWithWhereUniqueWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderCreateManySupplyBatchOrderInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderUpdateWithWhereUniqueWithoutSupplyBatchOrderInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutSupplyBatchOrderInput | SupplyOrderUpdateManyWithWhereWithoutSupplyBatchOrderInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput = {
    create?: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput> | SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput[] | SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput[]
    connectOrCreate?: SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput | SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput[]
    upsert?: SupplyOrderSupportFileUpsertWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpsertWithWhereUniqueWithoutSupplyBatchOrderInput[]
    createMany?: SupplyOrderSupportFileCreateManySupplyBatchOrderInputEnvelope
    set?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    disconnect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    delete?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    connect?: SupplyOrderSupportFileWhereUniqueInput | SupplyOrderSupportFileWhereUniqueInput[]
    update?: SupplyOrderSupportFileUpdateWithWhereUniqueWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpdateWithWhereUniqueWithoutSupplyBatchOrderInput[]
    updateMany?: SupplyOrderSupportFileUpdateManyWithWhereWithoutSupplyBatchOrderInput | SupplyOrderSupportFileUpdateManyWithWhereWithoutSupplyBatchOrderInput[]
    deleteMany?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
  }

  export type AssetsCreateNestedOneWithoutSupplyOrderSupportInput = {
    create?: XOR<AssetsCreateWithoutSupplyOrderSupportInput, AssetsUncheckedCreateWithoutSupplyOrderSupportInput>
    connectOrCreate?: AssetsCreateOrConnectWithoutSupplyOrderSupportInput
    connect?: AssetsWhereUniqueInput
  }

  export type SupplyBatchOrderCreateNestedOneWithoutFilesInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutFilesInput, SupplyBatchOrderUncheckedCreateWithoutFilesInput>
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutFilesInput
    connect?: SupplyBatchOrderWhereUniqueInput
  }

  export type AssetsUpdateOneRequiredWithoutSupplyOrderSupportNestedInput = {
    create?: XOR<AssetsCreateWithoutSupplyOrderSupportInput, AssetsUncheckedCreateWithoutSupplyOrderSupportInput>
    connectOrCreate?: AssetsCreateOrConnectWithoutSupplyOrderSupportInput
    upsert?: AssetsUpsertWithoutSupplyOrderSupportInput
    connect?: AssetsWhereUniqueInput
    update?: XOR<XOR<AssetsUpdateToOneWithWhereWithoutSupplyOrderSupportInput, AssetsUpdateWithoutSupplyOrderSupportInput>, AssetsUncheckedUpdateWithoutSupplyOrderSupportInput>
  }

  export type SupplyBatchOrderUpdateOneWithoutFilesNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutFilesInput, SupplyBatchOrderUncheckedCreateWithoutFilesInput>
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutFilesInput
    upsert?: SupplyBatchOrderUpsertWithoutFilesInput
    disconnect?: SupplyBatchOrderWhereInput | boolean
    delete?: SupplyBatchOrderWhereInput | boolean
    connect?: SupplyBatchOrderWhereUniqueInput
    update?: XOR<XOR<SupplyBatchOrderUpdateToOneWithWhereWithoutFilesInput, SupplyBatchOrderUpdateWithoutFilesInput>, SupplyBatchOrderUncheckedUpdateWithoutFilesInput>
  }

  export type SupplyBatchOrderCreateNestedOneWithoutOrderInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutOrderInput, SupplyBatchOrderUncheckedCreateWithoutOrderInput>
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutOrderInput
    connect?: SupplyBatchOrderWhereUniqueInput
  }

  export type SuppliesCreateNestedOneWithoutSupplyOrderInput = {
    create?: XOR<SuppliesCreateWithoutSupplyOrderInput, SuppliesUncheckedCreateWithoutSupplyOrderInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyOrderInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SuppliesQualityCreateNestedOneWithoutSupplyOrderInput = {
    create?: XOR<SuppliesQualityCreateWithoutSupplyOrderInput, SuppliesQualityUncheckedCreateWithoutSupplyOrderInput>
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSupplyOrderInput
    connect?: SuppliesQualityWhereUniqueInput
  }

  export type SupplyBatchOrderUpdateOneWithoutOrderNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutOrderInput, SupplyBatchOrderUncheckedCreateWithoutOrderInput>
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutOrderInput
    upsert?: SupplyBatchOrderUpsertWithoutOrderInput
    disconnect?: SupplyBatchOrderWhereInput | boolean
    delete?: SupplyBatchOrderWhereInput | boolean
    connect?: SupplyBatchOrderWhereUniqueInput
    update?: XOR<XOR<SupplyBatchOrderUpdateToOneWithWhereWithoutOrderInput, SupplyBatchOrderUpdateWithoutOrderInput>, SupplyBatchOrderUncheckedUpdateWithoutOrderInput>
  }

  export type SuppliesUpdateOneRequiredWithoutSupplyOrderNestedInput = {
    create?: XOR<SuppliesCreateWithoutSupplyOrderInput, SuppliesUncheckedCreateWithoutSupplyOrderInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyOrderInput
    upsert?: SuppliesUpsertWithoutSupplyOrderInput
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSupplyOrderInput, SuppliesUpdateWithoutSupplyOrderInput>, SuppliesUncheckedUpdateWithoutSupplyOrderInput>
  }

  export type SuppliesQualityUpdateOneRequiredWithoutSupplyOrderNestedInput = {
    create?: XOR<SuppliesQualityCreateWithoutSupplyOrderInput, SuppliesQualityUncheckedCreateWithoutSupplyOrderInput>
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSupplyOrderInput
    upsert?: SuppliesQualityUpsertWithoutSupplyOrderInput
    connect?: SuppliesQualityWhereUniqueInput
    update?: XOR<XOR<SuppliesQualityUpdateToOneWithWhereWithoutSupplyOrderInput, SuppliesQualityUpdateWithoutSupplyOrderInput>, SuppliesQualityUncheckedUpdateWithoutSupplyOrderInput>
  }

  export type SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesQualityCreateWithoutSuppliesDataSetInput[] | SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput | SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SuppliesQualityCreateManySuppliesDataSetInputEnvelope
    connect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutSuppliesDataSetInput = {
    create?: XOR<LineCreateWithoutSuppliesDataSetInput, LineUncheckedCreateWithoutSuppliesDataSetInput>
    connectOrCreate?: LineCreateOrConnectWithoutSuppliesDataSetInput
    connect?: LineWhereUniqueInput
  }

  export type InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput = {
    create?: XOR<InventoryBoxCreateWithoutSuppliesDataSetInput, InventoryBoxUncheckedCreateWithoutSuppliesDataSetInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutSuppliesDataSetInput
    connect?: InventoryBoxWhereUniqueInput
  }

  export type SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput> | SupplyBatchCreateWithoutSuppliesDataSetInput[] | SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput | SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SupplyBatchCreateManySuppliesDataSetInputEnvelope
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
  }

  export type SuppliesCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesCreateWithoutSuppliesDataSetInput[] | SuppliesUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesDataSetInput | SuppliesCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SuppliesCreateManySuppliesDataSetInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesQualityCreateWithoutSuppliesDataSetInput[] | SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput | SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SuppliesQualityCreateManySuppliesDataSetInputEnvelope
    connect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
  }

  export type SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput> | SupplyBatchCreateWithoutSuppliesDataSetInput[] | SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput | SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SupplyBatchCreateManySuppliesDataSetInputEnvelope
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
  }

  export type SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesCreateWithoutSuppliesDataSetInput[] | SuppliesUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesDataSetInput | SuppliesCreateOrConnectWithoutSuppliesDataSetInput[]
    createMany?: SuppliesCreateManySuppliesDataSetInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesQualityCreateWithoutSuppliesDataSetInput[] | SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput | SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SuppliesQualityUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesQualityUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SuppliesQualityCreateManySuppliesDataSetInputEnvelope
    set?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    disconnect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    delete?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    connect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    update?: SuppliesQualityUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesQualityUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SuppliesQualityUpdateManyWithWhereWithoutSuppliesDataSetInput | SuppliesQualityUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SuppliesQualityScalarWhereInput | SuppliesQualityScalarWhereInput[]
  }

  export type LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput = {
    create?: XOR<LineCreateWithoutSuppliesDataSetInput, LineUncheckedCreateWithoutSuppliesDataSetInput>
    connectOrCreate?: LineCreateOrConnectWithoutSuppliesDataSetInput
    upsert?: LineUpsertWithoutSuppliesDataSetInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutSuppliesDataSetInput, LineUpdateWithoutSuppliesDataSetInput>, LineUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutSuppliesDataSetInput, InventoryBoxUncheckedCreateWithoutSuppliesDataSetInput>
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutSuppliesDataSetInput
    upsert?: InventoryBoxUpsertWithoutSuppliesDataSetInput
    connect?: InventoryBoxWhereUniqueInput
    update?: XOR<XOR<InventoryBoxUpdateToOneWithWhereWithoutSuppliesDataSetInput, InventoryBoxUpdateWithoutSuppliesDataSetInput>, InventoryBoxUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput> | SupplyBatchCreateWithoutSuppliesDataSetInput[] | SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput | SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SupplyBatchUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SupplyBatchUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SupplyBatchCreateManySuppliesDataSetInputEnvelope
    set?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    disconnect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    delete?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    update?: SupplyBatchUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SupplyBatchUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SupplyBatchUpdateManyWithWhereWithoutSuppliesDataSetInput | SupplyBatchUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
  }

  export type SuppliesUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesCreateWithoutSuppliesDataSetInput[] | SuppliesUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesDataSetInput | SuppliesCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SuppliesCreateManySuppliesDataSetInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesDataSetInput | SuppliesUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesQualityCreateWithoutSuppliesDataSetInput[] | SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput | SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SuppliesQualityUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesQualityUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SuppliesQualityCreateManySuppliesDataSetInputEnvelope
    set?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    disconnect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    delete?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    connect?: SuppliesQualityWhereUniqueInput | SuppliesQualityWhereUniqueInput[]
    update?: SuppliesQualityUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesQualityUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SuppliesQualityUpdateManyWithWhereWithoutSuppliesDataSetInput | SuppliesQualityUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SuppliesQualityScalarWhereInput | SuppliesQualityScalarWhereInput[]
  }

  export type SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput> | SupplyBatchCreateWithoutSuppliesDataSetInput[] | SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput | SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SupplyBatchUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SupplyBatchUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SupplyBatchCreateManySuppliesDataSetInputEnvelope
    set?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    disconnect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    delete?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    connect?: SupplyBatchWhereUniqueInput | SupplyBatchWhereUniqueInput[]
    update?: SupplyBatchUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SupplyBatchUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SupplyBatchUpdateManyWithWhereWithoutSuppliesDataSetInput | SupplyBatchUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput> | SuppliesCreateWithoutSuppliesDataSetInput[] | SuppliesUncheckedCreateWithoutSuppliesDataSetInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesDataSetInput | SuppliesCreateOrConnectWithoutSuppliesDataSetInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesDataSetInput[]
    createMany?: SuppliesCreateManySuppliesDataSetInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesDataSetInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesDataSetInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesDataSetInput | SuppliesUpdateManyWithWhereWithoutSuppliesDataSetInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesCreateNestedManyWithoutSuppliesQualityInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput> | SuppliesCreateWithoutSuppliesQualityInput[] | SuppliesUncheckedCreateWithoutSuppliesQualityInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesQualityInput | SuppliesCreateOrConnectWithoutSuppliesQualityInput[]
    createMany?: SuppliesCreateManySuppliesQualityInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesDataSetCreateNestedOneWithoutUnitInput = {
    create?: XOR<SuppliesDataSetCreateWithoutUnitInput, SuppliesDataSetUncheckedCreateWithoutUnitInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutUnitInput
    connect?: SuppliesDataSetWhereUniqueInput
  }

  export type SupplyOrderCreateNestedManyWithoutUnitInput = {
    create?: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput> | SupplyOrderCreateWithoutUnitInput[] | SupplyOrderUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutUnitInput | SupplyOrderCreateOrConnectWithoutUnitInput[]
    createMany?: SupplyOrderCreateManyUnitInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SuppliesUncheckedCreateNestedManyWithoutSuppliesQualityInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput> | SuppliesCreateWithoutSuppliesQualityInput[] | SuppliesUncheckedCreateWithoutSuppliesQualityInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesQualityInput | SuppliesCreateOrConnectWithoutSuppliesQualityInput[]
    createMany?: SuppliesCreateManySuppliesQualityInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SupplyOrderUncheckedCreateNestedManyWithoutUnitInput = {
    create?: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput> | SupplyOrderCreateWithoutUnitInput[] | SupplyOrderUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutUnitInput | SupplyOrderCreateOrConnectWithoutUnitInput[]
    createMany?: SupplyOrderCreateManyUnitInputEnvelope
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
  }

  export type SuppliesUpdateManyWithoutSuppliesQualityNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput> | SuppliesCreateWithoutSuppliesQualityInput[] | SuppliesUncheckedCreateWithoutSuppliesQualityInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesQualityInput | SuppliesCreateOrConnectWithoutSuppliesQualityInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesQualityInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesQualityInput[]
    createMany?: SuppliesCreateManySuppliesQualityInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesQualityInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesQualityInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesQualityInput | SuppliesUpdateManyWithWhereWithoutSuppliesQualityInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesDataSetUpdateOneWithoutUnitNestedInput = {
    create?: XOR<SuppliesDataSetCreateWithoutUnitInput, SuppliesDataSetUncheckedCreateWithoutUnitInput>
    connectOrCreate?: SuppliesDataSetCreateOrConnectWithoutUnitInput
    upsert?: SuppliesDataSetUpsertWithoutUnitInput
    disconnect?: SuppliesDataSetWhereInput | boolean
    delete?: SuppliesDataSetWhereInput | boolean
    connect?: SuppliesDataSetWhereUniqueInput
    update?: XOR<XOR<SuppliesDataSetUpdateToOneWithWhereWithoutUnitInput, SuppliesDataSetUpdateWithoutUnitInput>, SuppliesDataSetUncheckedUpdateWithoutUnitInput>
  }

  export type SupplyOrderUpdateManyWithoutUnitNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput> | SupplyOrderCreateWithoutUnitInput[] | SupplyOrderUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutUnitInput | SupplyOrderCreateOrConnectWithoutUnitInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutUnitInput | SupplyOrderUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: SupplyOrderCreateManyUnitInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutUnitInput | SupplyOrderUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutUnitInput | SupplyOrderUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesQualityNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput> | SuppliesCreateWithoutSuppliesQualityInput[] | SuppliesUncheckedCreateWithoutSuppliesQualityInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesQualityInput | SuppliesCreateOrConnectWithoutSuppliesQualityInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesQualityInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesQualityInput[]
    createMany?: SuppliesCreateManySuppliesQualityInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesQualityInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesQualityInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesQualityInput | SuppliesUpdateManyWithWhereWithoutSuppliesQualityInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SupplyOrderUncheckedUpdateManyWithoutUnitNestedInput = {
    create?: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput> | SupplyOrderCreateWithoutUnitInput[] | SupplyOrderUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: SupplyOrderCreateOrConnectWithoutUnitInput | SupplyOrderCreateOrConnectWithoutUnitInput[]
    upsert?: SupplyOrderUpsertWithWhereUniqueWithoutUnitInput | SupplyOrderUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: SupplyOrderCreateManyUnitInputEnvelope
    set?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    disconnect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    delete?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    connect?: SupplyOrderWhereUniqueInput | SupplyOrderWhereUniqueInput[]
    update?: SupplyOrderUpdateWithWhereUniqueWithoutUnitInput | SupplyOrderUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: SupplyOrderUpdateManyWithWhereWithoutUnitInput | SupplyOrderUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
  }

  export type SuppliesCreateNestedOneWithoutSupplyPriceTrackInput = {
    create?: XOR<SuppliesCreateWithoutSupplyPriceTrackInput, SuppliesUncheckedCreateWithoutSupplyPriceTrackInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyPriceTrackInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SuppliesUpdateOneRequiredWithoutSupplyPriceTrackNestedInput = {
    create?: XOR<SuppliesCreateWithoutSupplyPriceTrackInput, SuppliesUncheckedCreateWithoutSupplyPriceTrackInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyPriceTrackInput
    upsert?: SuppliesUpsertWithoutSupplyPriceTrackInput
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSupplyPriceTrackInput, SuppliesUpdateWithoutSupplyPriceTrackInput>, SuppliesUncheckedUpdateWithoutSupplyPriceTrackInput>
  }

  export type SuppliesCreateNestedOneWithoutSupplyStockTrackInput = {
    create?: XOR<SuppliesCreateWithoutSupplyStockTrackInput, SuppliesUncheckedCreateWithoutSupplyStockTrackInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyStockTrackInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SuppliesUpdateOneRequiredWithoutSupplyStockTrackNestedInput = {
    create?: XOR<SuppliesCreateWithoutSupplyStockTrackInput, SuppliesUncheckedCreateWithoutSupplyStockTrackInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplyStockTrackInput
    upsert?: SuppliesUpsertWithoutSupplyStockTrackInput
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSupplyStockTrackInput, SuppliesUpdateWithoutSupplyStockTrackInput>, SuppliesUncheckedUpdateWithoutSupplyStockTrackInput>
  }

  export type SuppliesCreateNestedManyWithoutSuppliesCategoryInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput> | SuppliesCreateWithoutSuppliesCategoryInput[] | SuppliesUncheckedCreateWithoutSuppliesCategoryInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesCategoryInput | SuppliesCreateOrConnectWithoutSuppliesCategoryInput[]
    createMany?: SuppliesCreateManySuppliesCategoryInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesUncheckedCreateNestedManyWithoutSuppliesCategoryInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput> | SuppliesCreateWithoutSuppliesCategoryInput[] | SuppliesUncheckedCreateWithoutSuppliesCategoryInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesCategoryInput | SuppliesCreateOrConnectWithoutSuppliesCategoryInput[]
    createMany?: SuppliesCreateManySuppliesCategoryInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesUpdateManyWithoutSuppliesCategoryNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput> | SuppliesCreateWithoutSuppliesCategoryInput[] | SuppliesUncheckedCreateWithoutSuppliesCategoryInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesCategoryInput | SuppliesCreateOrConnectWithoutSuppliesCategoryInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesCategoryInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesCategoryInput[]
    createMany?: SuppliesCreateManySuppliesCategoryInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesCategoryInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesCategoryInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesCategoryInput | SuppliesUpdateManyWithWhereWithoutSuppliesCategoryInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesCategoryNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput> | SuppliesCreateWithoutSuppliesCategoryInput[] | SuppliesUncheckedCreateWithoutSuppliesCategoryInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesCategoryInput | SuppliesCreateOrConnectWithoutSuppliesCategoryInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutSuppliesCategoryInput | SuppliesUpsertWithWhereUniqueWithoutSuppliesCategoryInput[]
    createMany?: SuppliesCreateManySuppliesCategoryInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutSuppliesCategoryInput | SuppliesUpdateWithWhereUniqueWithoutSuppliesCategoryInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutSuppliesCategoryInput | SuppliesUpdateManyWithWhereWithoutSuppliesCategoryInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesCreateNestedOneWithoutSupplieRecieveHistoryInput = {
    create?: XOR<SuppliesCreateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedCreateWithoutSupplieRecieveHistoryInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplieRecieveHistoryInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SuppliesUpdateOneRequiredWithoutSupplieRecieveHistoryNestedInput = {
    create?: XOR<SuppliesCreateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedCreateWithoutSupplieRecieveHistoryInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSupplieRecieveHistoryInput
    upsert?: SuppliesUpsertWithoutSupplieRecieveHistoryInput
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSupplieRecieveHistoryInput, SuppliesUpdateWithoutSupplieRecieveHistoryInput>, SuppliesUncheckedUpdateWithoutSupplieRecieveHistoryInput>
  }

  export type SuppliesCreateNestedOneWithoutTransferredSuppliesInput = {
    create?: XOR<SuppliesCreateWithoutTransferredSuppliesInput, SuppliesUncheckedCreateWithoutTransferredSuppliesInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutTransferredSuppliesInput
    connect?: SuppliesWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransferredSuppliesInput = {
    create?: XOR<UserCreateWithoutTransferredSuppliesInput, UserUncheckedCreateWithoutTransferredSuppliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferredSuppliesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransferToInput = {
    create?: XOR<UserCreateWithoutTransferToInput, UserUncheckedCreateWithoutTransferToInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferToInput
    connect?: UserWhereUniqueInput
  }

  export type SuppliesUpdateOneWithoutTransferredSuppliesNestedInput = {
    create?: XOR<SuppliesCreateWithoutTransferredSuppliesInput, SuppliesUncheckedCreateWithoutTransferredSuppliesInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutTransferredSuppliesInput
    upsert?: SuppliesUpsertWithoutTransferredSuppliesInput
    disconnect?: SuppliesWhereInput | boolean
    delete?: SuppliesWhereInput | boolean
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutTransferredSuppliesInput, SuppliesUpdateWithoutTransferredSuppliesInput>, SuppliesUncheckedUpdateWithoutTransferredSuppliesInput>
  }

  export type UserUpdateOneRequiredWithoutTransferredSuppliesNestedInput = {
    create?: XOR<UserCreateWithoutTransferredSuppliesInput, UserUncheckedCreateWithoutTransferredSuppliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferredSuppliesInput
    upsert?: UserUpsertWithoutTransferredSuppliesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransferredSuppliesInput, UserUpdateWithoutTransferredSuppliesInput>, UserUncheckedUpdateWithoutTransferredSuppliesInput>
  }

  export type UserUpdateOneRequiredWithoutTransferToNestedInput = {
    create?: XOR<UserCreateWithoutTransferToInput, UserUncheckedCreateWithoutTransferToInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferToInput
    upsert?: UserUpsertWithoutTransferToInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransferToInput, UserUpdateWithoutTransferToInput>, UserUncheckedUpdateWithoutTransferToInput>
  }

  export type SuppliesCreateNestedOneWithoutSuppliesRecordInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesRecordInput, SuppliesUncheckedCreateWithoutSuppliesRecordInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesRecordInput
    connect?: SuppliesWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSuppliesRecordInput = {
    create?: XOR<UserCreateWithoutSuppliesRecordInput, UserUncheckedCreateWithoutSuppliesRecordInput>
    connectOrCreate?: UserCreateOrConnectWithoutSuppliesRecordInput
    connect?: UserWhereUniqueInput
  }

  export type SuppliesCreateNestedOneWithoutPartInput = {
    create?: XOR<SuppliesCreateWithoutPartInput, SuppliesUncheckedCreateWithoutPartInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutPartInput
    connect?: SuppliesWhereUniqueInput
  }

  export type SuppliesUpdateOneRequiredWithoutSuppliesRecordNestedInput = {
    create?: XOR<SuppliesCreateWithoutSuppliesRecordInput, SuppliesUncheckedCreateWithoutSuppliesRecordInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutSuppliesRecordInput
    upsert?: SuppliesUpsertWithoutSuppliesRecordInput
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutSuppliesRecordInput, SuppliesUpdateWithoutSuppliesRecordInput>, SuppliesUncheckedUpdateWithoutSuppliesRecordInput>
  }

  export type UserUpdateOneRequiredWithoutSuppliesRecordNestedInput = {
    create?: XOR<UserCreateWithoutSuppliesRecordInput, UserUncheckedCreateWithoutSuppliesRecordInput>
    connectOrCreate?: UserCreateOrConnectWithoutSuppliesRecordInput
    upsert?: UserUpsertWithoutSuppliesRecordInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSuppliesRecordInput, UserUpdateWithoutSuppliesRecordInput>, UserUncheckedUpdateWithoutSuppliesRecordInput>
  }

  export type SuppliesUpdateOneWithoutPartNestedInput = {
    create?: XOR<SuppliesCreateWithoutPartInput, SuppliesUncheckedCreateWithoutPartInput>
    connectOrCreate?: SuppliesCreateOrConnectWithoutPartInput
    upsert?: SuppliesUpsertWithoutPartInput
    disconnect?: SuppliesWhereInput | boolean
    delete?: SuppliesWhereInput | boolean
    connect?: SuppliesWhereUniqueInput
    update?: XOR<XOR<SuppliesUpdateToOneWithWhereWithoutPartInput, SuppliesUpdateWithoutPartInput>, SuppliesUncheckedUpdateWithoutPartInput>
  }

  export type UserCreateNestedOneWithoutApplicationInput = {
    create?: XOR<UserCreateWithoutApplicationInput, UserUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationInput
    connect?: UserWhereUniqueInput
  }

  export type PositionCreateNestedOneWithoutApplicationInput = {
    create?: XOR<PositionCreateWithoutApplicationInput, PositionUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: PositionCreateOrConnectWithoutApplicationInput
    connect?: PositionWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutApplicationNestedInput = {
    create?: XOR<UserCreateWithoutApplicationInput, UserUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationInput
    upsert?: UserUpsertWithoutApplicationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApplicationInput, UserUpdateWithoutApplicationInput>, UserUncheckedUpdateWithoutApplicationInput>
  }

  export type PositionUpdateOneRequiredWithoutApplicationNestedInput = {
    create?: XOR<PositionCreateWithoutApplicationInput, PositionUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: PositionCreateOrConnectWithoutApplicationInput
    upsert?: PositionUpsertWithoutApplicationInput
    connect?: PositionWhereUniqueInput
    update?: XOR<XOR<PositionUpdateToOneWithWhereWithoutApplicationInput, PositionUpdateWithoutApplicationInput>, PositionUncheckedUpdateWithoutApplicationInput>
  }

  export type UserCreateNestedOneWithoutHeadedDepartmentInput = {
    create?: XOR<UserCreateWithoutHeadedDepartmentInput, UserUncheckedCreateWithoutHeadedDepartmentInput>
    connectOrCreate?: UserCreateOrConnectWithoutHeadedDepartmentInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutDepartmentInput = {
    create?: XOR<LineCreateWithoutDepartmentInput, LineUncheckedCreateWithoutDepartmentInput>
    connectOrCreate?: LineCreateOrConnectWithoutDepartmentInput
    connect?: LineWhereUniqueInput
  }

  export type PositionCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput> | PositionCreateWithoutDepartmentInput[] | PositionUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutDepartmentInput | PositionCreateOrConnectWithoutDepartmentInput[]
    createMany?: PositionCreateManyDepartmentInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type AnnouncementCreateNestedManyWithoutUnitInput = {
    create?: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput> | AnnouncementCreateWithoutUnitInput[] | AnnouncementUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutUnitInput | AnnouncementCreateOrConnectWithoutUnitInput[]
    createMany?: AnnouncementCreateManyUnitInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type GroupCreateNestedManyWithoutUnitInput = {
    create?: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput> | GroupCreateWithoutUnitInput[] | GroupUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutUnitInput | GroupCreateOrConnectWithoutUnitInput[]
    createMany?: GroupCreateManyUnitInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type InventoryBoxCreateNestedManyWithoutUnitInput = {
    create?: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput> | InventoryBoxCreateWithoutUnitInput[] | InventoryBoxUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutUnitInput | InventoryBoxCreateOrConnectWithoutUnitInput[]
    createMany?: InventoryBoxCreateManyUnitInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PositionUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput> | PositionCreateWithoutDepartmentInput[] | PositionUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutDepartmentInput | PositionCreateOrConnectWithoutDepartmentInput[]
    createMany?: PositionCreateManyDepartmentInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutUnitInput = {
    create?: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput> | AnnouncementCreateWithoutUnitInput[] | AnnouncementUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutUnitInput | AnnouncementCreateOrConnectWithoutUnitInput[]
    createMany?: AnnouncementCreateManyUnitInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type GroupUncheckedCreateNestedManyWithoutUnitInput = {
    create?: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput> | GroupCreateWithoutUnitInput[] | GroupUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutUnitInput | GroupCreateOrConnectWithoutUnitInput[]
    createMany?: GroupCreateManyUnitInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type InventoryBoxUncheckedCreateNestedManyWithoutUnitInput = {
    create?: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput> | InventoryBoxCreateWithoutUnitInput[] | InventoryBoxUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutUnitInput | InventoryBoxCreateOrConnectWithoutUnitInput[]
    createMany?: InventoryBoxCreateManyUnitInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutHeadedDepartmentNestedInput = {
    create?: XOR<UserCreateWithoutHeadedDepartmentInput, UserUncheckedCreateWithoutHeadedDepartmentInput>
    connectOrCreate?: UserCreateOrConnectWithoutHeadedDepartmentInput
    upsert?: UserUpsertWithoutHeadedDepartmentInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHeadedDepartmentInput, UserUpdateWithoutHeadedDepartmentInput>, UserUncheckedUpdateWithoutHeadedDepartmentInput>
  }

  export type UserUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDepartmentInput | UserUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDepartmentInput | UserUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDepartmentInput | UserUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateOneWithoutDepartmentNestedInput = {
    create?: XOR<LineCreateWithoutDepartmentInput, LineUncheckedCreateWithoutDepartmentInput>
    connectOrCreate?: LineCreateOrConnectWithoutDepartmentInput
    upsert?: LineUpsertWithoutDepartmentInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutDepartmentInput, LineUpdateWithoutDepartmentInput>, LineUncheckedUpdateWithoutDepartmentInput>
  }

  export type PositionUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput> | PositionCreateWithoutDepartmentInput[] | PositionUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutDepartmentInput | PositionCreateOrConnectWithoutDepartmentInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutDepartmentInput | PositionUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: PositionCreateManyDepartmentInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutDepartmentInput | PositionUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutDepartmentInput | PositionUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type AnnouncementUpdateManyWithoutUnitNestedInput = {
    create?: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput> | AnnouncementCreateWithoutUnitInput[] | AnnouncementUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutUnitInput | AnnouncementCreateOrConnectWithoutUnitInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutUnitInput | AnnouncementUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: AnnouncementCreateManyUnitInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutUnitInput | AnnouncementUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutUnitInput | AnnouncementUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type GroupUpdateManyWithoutUnitNestedInput = {
    create?: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput> | GroupCreateWithoutUnitInput[] | GroupUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutUnitInput | GroupCreateOrConnectWithoutUnitInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutUnitInput | GroupUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: GroupCreateManyUnitInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutUnitInput | GroupUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutUnitInput | GroupUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type InventoryBoxUpdateManyWithoutUnitNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput> | InventoryBoxCreateWithoutUnitInput[] | InventoryBoxUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutUnitInput | InventoryBoxCreateOrConnectWithoutUnitInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutUnitInput | InventoryBoxUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: InventoryBoxCreateManyUnitInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutUnitInput | InventoryBoxUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutUnitInput | InventoryBoxUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDepartmentInput | UserUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDepartmentInput | UserUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDepartmentInput | UserUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PositionUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput> | PositionCreateWithoutDepartmentInput[] | PositionUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutDepartmentInput | PositionCreateOrConnectWithoutDepartmentInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutDepartmentInput | PositionUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: PositionCreateManyDepartmentInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutDepartmentInput | PositionUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutDepartmentInput | PositionUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type AnnouncementUncheckedUpdateManyWithoutUnitNestedInput = {
    create?: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput> | AnnouncementCreateWithoutUnitInput[] | AnnouncementUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutUnitInput | AnnouncementCreateOrConnectWithoutUnitInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutUnitInput | AnnouncementUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: AnnouncementCreateManyUnitInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutUnitInput | AnnouncementUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutUnitInput | AnnouncementUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type GroupUncheckedUpdateManyWithoutUnitNestedInput = {
    create?: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput> | GroupCreateWithoutUnitInput[] | GroupUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutUnitInput | GroupCreateOrConnectWithoutUnitInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutUnitInput | GroupUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: GroupCreateManyUnitInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutUnitInput | GroupUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutUnitInput | GroupUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput> | InventoryBoxCreateWithoutUnitInput[] | InventoryBoxUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutUnitInput | InventoryBoxCreateOrConnectWithoutUnitInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutUnitInput | InventoryBoxUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: InventoryBoxCreateManyUnitInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutUnitInput | InventoryBoxUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutUnitInput | InventoryBoxUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type DepartmentCreateNestedOneWithoutGroupInput = {
    create?: XOR<DepartmentCreateWithoutGroupInput, DepartmentUncheckedCreateWithoutGroupInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutGroupInput
    connect?: DepartmentWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutGroupInput = {
    create?: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput> | UserCreateWithoutGroupInput[] | UserUncheckedCreateWithoutGroupInput[]
    connectOrCreate?: UserCreateOrConnectWithoutGroupInput | UserCreateOrConnectWithoutGroupInput[]
    createMany?: UserCreateManyGroupInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutGroupInput = {
    create?: XOR<LineCreateWithoutGroupInput, LineUncheckedCreateWithoutGroupInput>
    connectOrCreate?: LineCreateOrConnectWithoutGroupInput
    connect?: LineWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChiefInput = {
    create?: XOR<UserCreateWithoutChiefInput, UserUncheckedCreateWithoutChiefInput>
    connectOrCreate?: UserCreateOrConnectWithoutChiefInput
    connect?: UserWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutGroupInput = {
    create?: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput> | UserCreateWithoutGroupInput[] | UserUncheckedCreateWithoutGroupInput[]
    connectOrCreate?: UserCreateOrConnectWithoutGroupInput | UserCreateOrConnectWithoutGroupInput[]
    createMany?: UserCreateManyGroupInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type DepartmentUpdateOneRequiredWithoutGroupNestedInput = {
    create?: XOR<DepartmentCreateWithoutGroupInput, DepartmentUncheckedCreateWithoutGroupInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutGroupInput
    upsert?: DepartmentUpsertWithoutGroupInput
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutGroupInput, DepartmentUpdateWithoutGroupInput>, DepartmentUncheckedUpdateWithoutGroupInput>
  }

  export type UserUpdateManyWithoutGroupNestedInput = {
    create?: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput> | UserCreateWithoutGroupInput[] | UserUncheckedCreateWithoutGroupInput[]
    connectOrCreate?: UserCreateOrConnectWithoutGroupInput | UserCreateOrConnectWithoutGroupInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutGroupInput | UserUpsertWithWhereUniqueWithoutGroupInput[]
    createMany?: UserCreateManyGroupInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutGroupInput | UserUpdateWithWhereUniqueWithoutGroupInput[]
    updateMany?: UserUpdateManyWithWhereWithoutGroupInput | UserUpdateManyWithWhereWithoutGroupInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateOneWithoutGroupNestedInput = {
    create?: XOR<LineCreateWithoutGroupInput, LineUncheckedCreateWithoutGroupInput>
    connectOrCreate?: LineCreateOrConnectWithoutGroupInput
    upsert?: LineUpsertWithoutGroupInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutGroupInput, LineUpdateWithoutGroupInput>, LineUncheckedUpdateWithoutGroupInput>
  }

  export type UserUpdateOneWithoutChiefNestedInput = {
    create?: XOR<UserCreateWithoutChiefInput, UserUncheckedCreateWithoutChiefInput>
    connectOrCreate?: UserCreateOrConnectWithoutChiefInput
    upsert?: UserUpsertWithoutChiefInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChiefInput, UserUpdateWithoutChiefInput>, UserUncheckedUpdateWithoutChiefInput>
  }

  export type UserUncheckedUpdateManyWithoutGroupNestedInput = {
    create?: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput> | UserCreateWithoutGroupInput[] | UserUncheckedCreateWithoutGroupInput[]
    connectOrCreate?: UserCreateOrConnectWithoutGroupInput | UserCreateOrConnectWithoutGroupInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutGroupInput | UserUpsertWithWhereUniqueWithoutGroupInput[]
    createMany?: UserCreateManyGroupInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutGroupInput | UserUpdateWithWhereUniqueWithoutGroupInput[]
    updateMany?: UserUpdateManyWithWhereWithoutGroupInput | UserUpdateManyWithWhereWithoutGroupInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineCreateNestedManyWithoutAdminProfileInput = {
    create?: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput> | LineCreateWithoutAdminProfileInput[] | LineUncheckedCreateWithoutAdminProfileInput[]
    connectOrCreate?: LineCreateOrConnectWithoutAdminProfileInput | LineCreateOrConnectWithoutAdminProfileInput[]
    createMany?: LineCreateManyAdminProfileInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type LineUncheckedCreateNestedManyWithoutAdminProfileInput = {
    create?: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput> | LineCreateWithoutAdminProfileInput[] | LineUncheckedCreateWithoutAdminProfileInput[]
    connectOrCreate?: LineCreateOrConnectWithoutAdminProfileInput | LineCreateOrConnectWithoutAdminProfileInput[]
    createMany?: LineCreateManyAdminProfileInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type LineUpdateManyWithoutAdminProfileNestedInput = {
    create?: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput> | LineCreateWithoutAdminProfileInput[] | LineUncheckedCreateWithoutAdminProfileInput[]
    connectOrCreate?: LineCreateOrConnectWithoutAdminProfileInput | LineCreateOrConnectWithoutAdminProfileInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutAdminProfileInput | LineUpsertWithWhereUniqueWithoutAdminProfileInput[]
    createMany?: LineCreateManyAdminProfileInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutAdminProfileInput | LineUpdateWithWhereUniqueWithoutAdminProfileInput[]
    updateMany?: LineUpdateManyWithWhereWithoutAdminProfileInput | LineUpdateManyWithWhereWithoutAdminProfileInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type LineUncheckedUpdateManyWithoutAdminProfileNestedInput = {
    create?: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput> | LineCreateWithoutAdminProfileInput[] | LineUncheckedCreateWithoutAdminProfileInput[]
    connectOrCreate?: LineCreateOrConnectWithoutAdminProfileInput | LineCreateOrConnectWithoutAdminProfileInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutAdminProfileInput | LineUpsertWithWhereUniqueWithoutAdminProfileInput[]
    createMany?: LineCreateManyAdminProfileInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutAdminProfileInput | LineUpdateWithWhereUniqueWithoutAdminProfileInput[]
    updateMany?: LineUpdateManyWithWhereWithoutAdminProfileInput | LineUpdateManyWithWhereWithoutAdminProfileInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    connect?: UserWhereUniqueInput
  }

  export type LineCreateNestedOneWithoutAccountInput = {
    create?: XOR<LineCreateWithoutAccountInput, LineUncheckedCreateWithoutAccountInput>
    connectOrCreate?: LineCreateOrConnectWithoutAccountInput
    connect?: LineWhereUniqueInput
  }

  export type UserUncheckedCreateNestedOneWithoutAccountInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutAccountNestedInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    upsert?: UserUpsertWithoutAccountInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountInput, UserUpdateWithoutAccountInput>, UserUncheckedUpdateWithoutAccountInput>
  }

  export type LineUpdateOneWithoutAccountNestedInput = {
    create?: XOR<LineCreateWithoutAccountInput, LineUncheckedCreateWithoutAccountInput>
    connectOrCreate?: LineCreateOrConnectWithoutAccountInput
    upsert?: LineUpsertWithoutAccountInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutAccountInput, LineUpdateWithoutAccountInput>, LineUncheckedUpdateWithoutAccountInput>
  }

  export type UserUncheckedUpdateOneWithoutAccountNestedInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    upsert?: UserUpsertWithoutAccountInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountInput, UserUpdateWithoutAccountInput>, UserUncheckedUpdateWithoutAccountInput>
  }

  export type UserCreateNestedOneWithoutPrivilegeInput = {
    create?: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivilegeInput
    connect?: UserWhereUniqueInput
  }

  export type UserUncheckedCreateNestedOneWithoutPrivilegeInput = {
    create?: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivilegeInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutPrivilegeNestedInput = {
    create?: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivilegeInput
    upsert?: UserUpsertWithoutPrivilegeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPrivilegeInput, UserUpdateWithoutPrivilegeInput>, UserUncheckedUpdateWithoutPrivilegeInput>
  }

  export type UserUncheckedUpdateOneWithoutPrivilegeNestedInput = {
    create?: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivilegeInput
    upsert?: UserUpsertWithoutPrivilegeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPrivilegeInput, UserUpdateWithoutPrivilegeInput>, UserUncheckedUpdateWithoutPrivilegeInput>
  }

  export type NotificationCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type DepartmentCreateNestedOneWithoutUsersInput = {
    create?: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutUsersInput
    connect?: DepartmentWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutHeadInput = {
    create?: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutHeadInput
    connect?: DepartmentWhereUniqueInput
  }

  export type PositionCreateNestedOneWithoutUsersInput = {
    create?: XOR<PositionCreateWithoutUsersInput, PositionUncheckedCreateWithoutUsersInput>
    connectOrCreate?: PositionCreateOrConnectWithoutUsersInput
    connect?: PositionWhereUniqueInput
  }

  export type SalaryGradeCreateNestedOneWithoutUsersInput = {
    create?: XOR<SalaryGradeCreateWithoutUsersInput, SalaryGradeUncheckedCreateWithoutUsersInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutUsersInput
    connect?: SalaryGradeWhereUniqueInput
  }

  export type LeaveCreateNestedManyWithoutUserInput = {
    create?: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput> | LeaveCreateWithoutUserInput[] | LeaveUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LeaveCreateOrConnectWithoutUserInput | LeaveCreateOrConnectWithoutUserInput[]
    createMany?: LeaveCreateManyUserInputEnvelope
    connect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
  }

  export type AnnouncementCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput> | AnnouncementCreateWithoutAuthorInput[] | AnnouncementUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutAuthorInput | AnnouncementCreateOrConnectWithoutAuthorInput[]
    createMany?: AnnouncementCreateManyAuthorInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type AccountCreateNestedOneWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput
    connect?: AccountWhereUniqueInput
  }

  export type PromotionCreateNestedManyWithoutUserInput = {
    create?: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput> | PromotionCreateWithoutUserInput[] | PromotionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutUserInput | PromotionCreateOrConnectWithoutUserInput[]
    createMany?: PromotionCreateManyUserInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseCreateNestedManyWithoutSenderInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput> | BirthdayNoticeResponseCreateWithoutSenderInput[] | BirthdayNoticeResponseUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutSenderInput | BirthdayNoticeResponseCreateOrConnectWithoutSenderInput[]
    createMany?: BirthdayNoticeResponseCreateManySenderInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput> | BirthdayNoticeResponseCreateWithoutRecipientInput[] | BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput | BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput[]
    createMany?: BirthdayNoticeResponseCreateManyRecipientInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type RegionCreateNestedOneWithoutUserInput = {
    create?: XOR<RegionCreateWithoutUserInput, RegionUncheckedCreateWithoutUserInput>
    connectOrCreate?: RegionCreateOrConnectWithoutUserInput
    connect?: RegionWhereUniqueInput
  }

  export type ProvinceCreateNestedOneWithoutUserInput = {
    create?: XOR<ProvinceCreateWithoutUserInput, ProvinceUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutUserInput
    connect?: ProvinceWhereUniqueInput
  }

  export type MunicipalCreateNestedOneWithoutUserInput = {
    create?: XOR<MunicipalCreateWithoutUserInput, MunicipalUncheckedCreateWithoutUserInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutUserInput
    connect?: MunicipalWhereUniqueInput
  }

  export type BarangayCreateNestedOneWithoutUserInput = {
    create?: XOR<BarangayCreateWithoutUserInput, BarangayUncheckedCreateWithoutUserInput>
    connectOrCreate?: BarangayCreateOrConnectWithoutUserInput
    connect?: BarangayWhereUniqueInput
  }

  export type PositionSlotCreateNestedOneWithoutUserInput = {
    create?: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
    connectOrCreate?: PositionSlotCreateOrConnectWithoutUserInput
    connect?: PositionSlotWhereUniqueInput
  }

  export type AccomplishmentCreateNestedManyWithoutUserInput = {
    create?: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput> | AccomplishmentCreateWithoutUserInput[] | AccomplishmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutUserInput | AccomplishmentCreateOrConnectWithoutUserInput[]
    createMany?: AccomplishmentCreateManyUserInputEnvelope
    connect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
  }

  export type AccomplishmentResponseCreateNestedManyWithoutHeadInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput> | AccomplishmentResponseCreateWithoutHeadInput[] | AccomplishmentResponseUncheckedCreateWithoutHeadInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutHeadInput | AccomplishmentResponseCreateOrConnectWithoutHeadInput[]
    createMany?: AccomplishmentResponseCreateManyHeadInputEnvelope
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutUserInput = {
    create?: XOR<LineCreateWithoutUserInput, LineUncheckedCreateWithoutUserInput>
    connectOrCreate?: LineCreateOrConnectWithoutUserInput
    connect?: LineWhereUniqueInput
  }

  export type SuppliesCreateNestedManyWithoutUserInput = {
    create?: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput> | SuppliesCreateWithoutUserInput[] | SuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutUserInput | SuppliesCreateOrConnectWithoutUserInput[]
    createMany?: SuppliesCreateManyUserInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput> | SuppliesRecordCreateWithoutUserInput[] | SuppliesRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutUserInput | SuppliesRecordCreateOrConnectWithoutUserInput[]
    createMany?: SuppliesRecordCreateManyUserInputEnvelope
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
  }

  export type LogRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput> | LogRecordCreateWithoutUserInput[] | LogRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogRecordCreateOrConnectWithoutUserInput | LogRecordCreateOrConnectWithoutUserInput[]
    createMany?: LogRecordCreateManyUserInputEnvelope
    connect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
  }

  export type TransferredSuppliesCreateNestedManyWithoutTransferredToInput = {
    create?: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput> | TransferredSuppliesCreateWithoutTransferredToInput[] | TransferredSuppliesUncheckedCreateWithoutTransferredToInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutTransferredToInput | TransferredSuppliesCreateOrConnectWithoutTransferredToInput[]
    createMany?: TransferredSuppliesCreateManyTransferredToInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type TransferredSuppliesCreateNestedManyWithoutUserInput = {
    create?: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput> | TransferredSuppliesCreateWithoutUserInput[] | TransferredSuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutUserInput | TransferredSuppliesCreateOrConnectWithoutUserInput[]
    createMany?: TransferredSuppliesCreateManyUserInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type ProfilePictureCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutUserInput
    connect?: ProfilePictureWhereUniqueInput
  }

  export type ApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type PrivilegeCreateNestedOneWithoutUserInput = {
    create?: XOR<PrivilegeCreateWithoutUserInput, PrivilegeUncheckedCreateWithoutUserInput>
    connectOrCreate?: PrivilegeCreateOrConnectWithoutUserInput
    connect?: PrivilegeWhereUniqueInput
  }

  export type SupplyBatchOrderCreateNestedManyWithoutUserInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput> | SupplyBatchOrderCreateWithoutUserInput[] | SupplyBatchOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutUserInput | SupplyBatchOrderCreateOrConnectWithoutUserInput[]
    createMany?: SupplyBatchOrderCreateManyUserInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type GroupCreateNestedOneWithoutUsersInput = {
    create?: XOR<GroupCreateWithoutUsersInput, GroupUncheckedCreateWithoutUsersInput>
    connectOrCreate?: GroupCreateOrConnectWithoutUsersInput
    connect?: GroupWhereUniqueInput
  }

  export type GroupCreateNestedManyWithoutChiefInput = {
    create?: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput> | GroupCreateWithoutChiefInput[] | GroupUncheckedCreateWithoutChiefInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutChiefInput | GroupCreateOrConnectWithoutChiefInput[]
    createMany?: GroupCreateManyChiefInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type InventoryBoxCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput> | InventoryBoxCreateWithoutCreatedByInput[] | InventoryBoxUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutCreatedByInput | InventoryBoxCreateOrConnectWithoutCreatedByInput[]
    createMany?: InventoryBoxCreateManyCreatedByInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type InventoryAccessLogsCreateNestedManyWithoutUserInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput> | InventoryAccessLogsCreateWithoutUserInput[] | InventoryAccessLogsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutUserInput | InventoryAccessLogsCreateOrConnectWithoutUserInput[]
    createMany?: InventoryAccessLogsCreateManyUserInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type ContainerAllowedUserCreateNestedManyWithoutUserInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput> | ContainerAllowedUserCreateWithoutUserInput[] | ContainerAllowedUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutUserInput | ContainerAllowedUserCreateOrConnectWithoutUserInput[]
    createMany?: ContainerAllowedUserCreateManyUserInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type ContainerAllowedUserCreateNestedManyWithoutGrantByInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput> | ContainerAllowedUserCreateWithoutGrantByInput[] | ContainerAllowedUserUncheckedCreateWithoutGrantByInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutGrantByInput | ContainerAllowedUserCreateOrConnectWithoutGrantByInput[]
    createMany?: ContainerAllowedUserCreateManyGrantByInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type DepartmentUncheckedCreateNestedOneWithoutHeadInput = {
    create?: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutHeadInput
    connect?: DepartmentWhereUniqueInput
  }

  export type LeaveUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput> | LeaveCreateWithoutUserInput[] | LeaveUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LeaveCreateOrConnectWithoutUserInput | LeaveCreateOrConnectWithoutUserInput[]
    createMany?: LeaveCreateManyUserInputEnvelope
    connect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput> | AnnouncementCreateWithoutAuthorInput[] | AnnouncementUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutAuthorInput | AnnouncementCreateOrConnectWithoutAuthorInput[]
    createMany?: AnnouncementCreateManyAuthorInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput> | PromotionCreateWithoutUserInput[] | PromotionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutUserInput | PromotionCreateOrConnectWithoutUserInput[]
    createMany?: PromotionCreateManyUserInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput> | BirthdayNoticeResponseCreateWithoutSenderInput[] | BirthdayNoticeResponseUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutSenderInput | BirthdayNoticeResponseCreateOrConnectWithoutSenderInput[]
    createMany?: BirthdayNoticeResponseCreateManySenderInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput> | BirthdayNoticeResponseCreateWithoutRecipientInput[] | BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput | BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput[]
    createMany?: BirthdayNoticeResponseCreateManyRecipientInputEnvelope
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
  }

  export type PositionSlotUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
    connectOrCreate?: PositionSlotCreateOrConnectWithoutUserInput
    connect?: PositionSlotWhereUniqueInput
  }

  export type AccomplishmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput> | AccomplishmentCreateWithoutUserInput[] | AccomplishmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutUserInput | AccomplishmentCreateOrConnectWithoutUserInput[]
    createMany?: AccomplishmentCreateManyUserInputEnvelope
    connect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
  }

  export type AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput> | AccomplishmentResponseCreateWithoutHeadInput[] | AccomplishmentResponseUncheckedCreateWithoutHeadInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutHeadInput | AccomplishmentResponseCreateOrConnectWithoutHeadInput[]
    createMany?: AccomplishmentResponseCreateManyHeadInputEnvelope
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
  }

  export type SuppliesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput> | SuppliesCreateWithoutUserInput[] | SuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutUserInput | SuppliesCreateOrConnectWithoutUserInput[]
    createMany?: SuppliesCreateManyUserInputEnvelope
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
  }

  export type SuppliesRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput> | SuppliesRecordCreateWithoutUserInput[] | SuppliesRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutUserInput | SuppliesRecordCreateOrConnectWithoutUserInput[]
    createMany?: SuppliesRecordCreateManyUserInputEnvelope
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
  }

  export type LogRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput> | LogRecordCreateWithoutUserInput[] | LogRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogRecordCreateOrConnectWithoutUserInput | LogRecordCreateOrConnectWithoutUserInput[]
    createMany?: LogRecordCreateManyUserInputEnvelope
    connect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
  }

  export type TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput = {
    create?: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput> | TransferredSuppliesCreateWithoutTransferredToInput[] | TransferredSuppliesUncheckedCreateWithoutTransferredToInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutTransferredToInput | TransferredSuppliesCreateOrConnectWithoutTransferredToInput[]
    createMany?: TransferredSuppliesCreateManyTransferredToInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput> | TransferredSuppliesCreateWithoutUserInput[] | TransferredSuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutUserInput | TransferredSuppliesCreateOrConnectWithoutUserInput[]
    createMany?: TransferredSuppliesCreateManyUserInputEnvelope
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
  }

  export type ProfilePictureUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutUserInput
    connect?: ProfilePictureWhereUniqueInput
  }

  export type ApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput> | SupplyBatchOrderCreateWithoutUserInput[] | SupplyBatchOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutUserInput | SupplyBatchOrderCreateOrConnectWithoutUserInput[]
    createMany?: SupplyBatchOrderCreateManyUserInputEnvelope
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
  }

  export type GroupUncheckedCreateNestedManyWithoutChiefInput = {
    create?: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput> | GroupCreateWithoutChiefInput[] | GroupUncheckedCreateWithoutChiefInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutChiefInput | GroupCreateOrConnectWithoutChiefInput[]
    createMany?: GroupCreateManyChiefInputEnvelope
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
  }

  export type InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput> | InventoryBoxCreateWithoutCreatedByInput[] | InventoryBoxUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutCreatedByInput | InventoryBoxCreateOrConnectWithoutCreatedByInput[]
    createMany?: InventoryBoxCreateManyCreatedByInputEnvelope
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
  }

  export type InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput> | InventoryAccessLogsCreateWithoutUserInput[] | InventoryAccessLogsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutUserInput | InventoryAccessLogsCreateOrConnectWithoutUserInput[]
    createMany?: InventoryAccessLogsCreateManyUserInputEnvelope
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
  }

  export type ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput> | ContainerAllowedUserCreateWithoutUserInput[] | ContainerAllowedUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutUserInput | ContainerAllowedUserCreateOrConnectWithoutUserInput[]
    createMany?: ContainerAllowedUserCreateManyUserInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput> | ContainerAllowedUserCreateWithoutGrantByInput[] | ContainerAllowedUserUncheckedCreateWithoutGrantByInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutGrantByInput | ContainerAllowedUserCreateOrConnectWithoutGrantByInput[]
    createMany?: ContainerAllowedUserCreateManyGrantByInputEnvelope
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
  }

  export type NotificationUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type DepartmentUpdateOneWithoutUsersNestedInput = {
    create?: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutUsersInput
    upsert?: DepartmentUpsertWithoutUsersInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutUsersInput, DepartmentUpdateWithoutUsersInput>, DepartmentUncheckedUpdateWithoutUsersInput>
  }

  export type DepartmentUpdateOneWithoutHeadNestedInput = {
    create?: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutHeadInput
    upsert?: DepartmentUpsertWithoutHeadInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutHeadInput, DepartmentUpdateWithoutHeadInput>, DepartmentUncheckedUpdateWithoutHeadInput>
  }

  export type PositionUpdateOneWithoutUsersNestedInput = {
    create?: XOR<PositionCreateWithoutUsersInput, PositionUncheckedCreateWithoutUsersInput>
    connectOrCreate?: PositionCreateOrConnectWithoutUsersInput
    upsert?: PositionUpsertWithoutUsersInput
    disconnect?: PositionWhereInput | boolean
    delete?: PositionWhereInput | boolean
    connect?: PositionWhereUniqueInput
    update?: XOR<XOR<PositionUpdateToOneWithWhereWithoutUsersInput, PositionUpdateWithoutUsersInput>, PositionUncheckedUpdateWithoutUsersInput>
  }

  export type SalaryGradeUpdateOneWithoutUsersNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutUsersInput, SalaryGradeUncheckedCreateWithoutUsersInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutUsersInput
    upsert?: SalaryGradeUpsertWithoutUsersInput
    disconnect?: SalaryGradeWhereInput | boolean
    delete?: SalaryGradeWhereInput | boolean
    connect?: SalaryGradeWhereUniqueInput
    update?: XOR<XOR<SalaryGradeUpdateToOneWithWhereWithoutUsersInput, SalaryGradeUpdateWithoutUsersInput>, SalaryGradeUncheckedUpdateWithoutUsersInput>
  }

  export type LeaveUpdateManyWithoutUserNestedInput = {
    create?: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput> | LeaveCreateWithoutUserInput[] | LeaveUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LeaveCreateOrConnectWithoutUserInput | LeaveCreateOrConnectWithoutUserInput[]
    upsert?: LeaveUpsertWithWhereUniqueWithoutUserInput | LeaveUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LeaveCreateManyUserInputEnvelope
    set?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    disconnect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    delete?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    connect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    update?: LeaveUpdateWithWhereUniqueWithoutUserInput | LeaveUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LeaveUpdateManyWithWhereWithoutUserInput | LeaveUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LeaveScalarWhereInput | LeaveScalarWhereInput[]
  }

  export type AnnouncementUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput> | AnnouncementCreateWithoutAuthorInput[] | AnnouncementUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutAuthorInput | AnnouncementCreateOrConnectWithoutAuthorInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutAuthorInput | AnnouncementUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AnnouncementCreateManyAuthorInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutAuthorInput | AnnouncementUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutAuthorInput | AnnouncementUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type AccountUpdateOneWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput
    upsert?: AccountUpsertWithoutUserInput
    disconnect?: AccountWhereInput | boolean
    delete?: AccountWhereInput | boolean
    connect?: AccountWhereUniqueInput
    update?: XOR<XOR<AccountUpdateToOneWithWhereWithoutUserInput, AccountUpdateWithoutUserInput>, AccountUncheckedUpdateWithoutUserInput>
  }

  export type PromotionUpdateManyWithoutUserNestedInput = {
    create?: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput> | PromotionCreateWithoutUserInput[] | PromotionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutUserInput | PromotionCreateOrConnectWithoutUserInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutUserInput | PromotionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PromotionCreateManyUserInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutUserInput | PromotionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutUserInput | PromotionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput> | BirthdayNoticeResponseCreateWithoutSenderInput[] | BirthdayNoticeResponseUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutSenderInput | BirthdayNoticeResponseCreateOrConnectWithoutSenderInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutSenderInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: BirthdayNoticeResponseCreateManySenderInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutSenderInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutSenderInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput> | BirthdayNoticeResponseCreateWithoutRecipientInput[] | BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput | BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutRecipientInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: BirthdayNoticeResponseCreateManyRecipientInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutRecipientInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutRecipientInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type RegionUpdateOneWithoutUserNestedInput = {
    create?: XOR<RegionCreateWithoutUserInput, RegionUncheckedCreateWithoutUserInput>
    connectOrCreate?: RegionCreateOrConnectWithoutUserInput
    upsert?: RegionUpsertWithoutUserInput
    disconnect?: RegionWhereInput | boolean
    delete?: RegionWhereInput | boolean
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutUserInput, RegionUpdateWithoutUserInput>, RegionUncheckedUpdateWithoutUserInput>
  }

  export type ProvinceUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProvinceCreateWithoutUserInput, ProvinceUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutUserInput
    upsert?: ProvinceUpsertWithoutUserInput
    disconnect?: ProvinceWhereInput | boolean
    delete?: ProvinceWhereInput | boolean
    connect?: ProvinceWhereUniqueInput
    update?: XOR<XOR<ProvinceUpdateToOneWithWhereWithoutUserInput, ProvinceUpdateWithoutUserInput>, ProvinceUncheckedUpdateWithoutUserInput>
  }

  export type MunicipalUpdateOneWithoutUserNestedInput = {
    create?: XOR<MunicipalCreateWithoutUserInput, MunicipalUncheckedCreateWithoutUserInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutUserInput
    upsert?: MunicipalUpsertWithoutUserInput
    disconnect?: MunicipalWhereInput | boolean
    delete?: MunicipalWhereInput | boolean
    connect?: MunicipalWhereUniqueInput
    update?: XOR<XOR<MunicipalUpdateToOneWithWhereWithoutUserInput, MunicipalUpdateWithoutUserInput>, MunicipalUncheckedUpdateWithoutUserInput>
  }

  export type BarangayUpdateOneWithoutUserNestedInput = {
    create?: XOR<BarangayCreateWithoutUserInput, BarangayUncheckedCreateWithoutUserInput>
    connectOrCreate?: BarangayCreateOrConnectWithoutUserInput
    upsert?: BarangayUpsertWithoutUserInput
    disconnect?: BarangayWhereInput | boolean
    delete?: BarangayWhereInput | boolean
    connect?: BarangayWhereUniqueInput
    update?: XOR<XOR<BarangayUpdateToOneWithWhereWithoutUserInput, BarangayUpdateWithoutUserInput>, BarangayUncheckedUpdateWithoutUserInput>
  }

  export type PositionSlotUpdateOneWithoutUserNestedInput = {
    create?: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
    connectOrCreate?: PositionSlotCreateOrConnectWithoutUserInput
    upsert?: PositionSlotUpsertWithoutUserInput
    disconnect?: PositionSlotWhereInput | boolean
    delete?: PositionSlotWhereInput | boolean
    connect?: PositionSlotWhereUniqueInput
    update?: XOR<XOR<PositionSlotUpdateToOneWithWhereWithoutUserInput, PositionSlotUpdateWithoutUserInput>, PositionSlotUncheckedUpdateWithoutUserInput>
  }

  export type AccomplishmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput> | AccomplishmentCreateWithoutUserInput[] | AccomplishmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutUserInput | AccomplishmentCreateOrConnectWithoutUserInput[]
    upsert?: AccomplishmentUpsertWithWhereUniqueWithoutUserInput | AccomplishmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccomplishmentCreateManyUserInputEnvelope
    set?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    disconnect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    delete?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    connect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    update?: AccomplishmentUpdateWithWhereUniqueWithoutUserInput | AccomplishmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccomplishmentUpdateManyWithWhereWithoutUserInput | AccomplishmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccomplishmentScalarWhereInput | AccomplishmentScalarWhereInput[]
  }

  export type AccomplishmentResponseUpdateManyWithoutHeadNestedInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput> | AccomplishmentResponseCreateWithoutHeadInput[] | AccomplishmentResponseUncheckedCreateWithoutHeadInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutHeadInput | AccomplishmentResponseCreateOrConnectWithoutHeadInput[]
    upsert?: AccomplishmentResponseUpsertWithWhereUniqueWithoutHeadInput | AccomplishmentResponseUpsertWithWhereUniqueWithoutHeadInput[]
    createMany?: AccomplishmentResponseCreateManyHeadInputEnvelope
    set?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    disconnect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    delete?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    update?: AccomplishmentResponseUpdateWithWhereUniqueWithoutHeadInput | AccomplishmentResponseUpdateWithWhereUniqueWithoutHeadInput[]
    updateMany?: AccomplishmentResponseUpdateManyWithWhereWithoutHeadInput | AccomplishmentResponseUpdateManyWithWhereWithoutHeadInput[]
    deleteMany?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
  }

  export type LineUpdateOneWithoutUserNestedInput = {
    create?: XOR<LineCreateWithoutUserInput, LineUncheckedCreateWithoutUserInput>
    connectOrCreate?: LineCreateOrConnectWithoutUserInput
    upsert?: LineUpsertWithoutUserInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutUserInput, LineUpdateWithoutUserInput>, LineUncheckedUpdateWithoutUserInput>
  }

  export type SuppliesUpdateManyWithoutUserNestedInput = {
    create?: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput> | SuppliesCreateWithoutUserInput[] | SuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutUserInput | SuppliesCreateOrConnectWithoutUserInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutUserInput | SuppliesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SuppliesCreateManyUserInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutUserInput | SuppliesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutUserInput | SuppliesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput> | SuppliesRecordCreateWithoutUserInput[] | SuppliesRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutUserInput | SuppliesRecordCreateOrConnectWithoutUserInput[]
    upsert?: SuppliesRecordUpsertWithWhereUniqueWithoutUserInput | SuppliesRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SuppliesRecordCreateManyUserInputEnvelope
    set?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    disconnect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    delete?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    update?: SuppliesRecordUpdateWithWhereUniqueWithoutUserInput | SuppliesRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SuppliesRecordUpdateManyWithWhereWithoutUserInput | SuppliesRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
  }

  export type LogRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput> | LogRecordCreateWithoutUserInput[] | LogRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogRecordCreateOrConnectWithoutUserInput | LogRecordCreateOrConnectWithoutUserInput[]
    upsert?: LogRecordUpsertWithWhereUniqueWithoutUserInput | LogRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LogRecordCreateManyUserInputEnvelope
    set?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    disconnect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    delete?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    connect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    update?: LogRecordUpdateWithWhereUniqueWithoutUserInput | LogRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LogRecordUpdateManyWithWhereWithoutUserInput | LogRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LogRecordScalarWhereInput | LogRecordScalarWhereInput[]
  }

  export type TransferredSuppliesUpdateManyWithoutTransferredToNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput> | TransferredSuppliesCreateWithoutTransferredToInput[] | TransferredSuppliesUncheckedCreateWithoutTransferredToInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutTransferredToInput | TransferredSuppliesCreateOrConnectWithoutTransferredToInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutTransferredToInput | TransferredSuppliesUpsertWithWhereUniqueWithoutTransferredToInput[]
    createMany?: TransferredSuppliesCreateManyTransferredToInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutTransferredToInput | TransferredSuppliesUpdateWithWhereUniqueWithoutTransferredToInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutTransferredToInput | TransferredSuppliesUpdateManyWithWhereWithoutTransferredToInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type TransferredSuppliesUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput> | TransferredSuppliesCreateWithoutUserInput[] | TransferredSuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutUserInput | TransferredSuppliesCreateOrConnectWithoutUserInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutUserInput | TransferredSuppliesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransferredSuppliesCreateManyUserInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutUserInput | TransferredSuppliesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutUserInput | TransferredSuppliesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type ProfilePictureUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutUserInput
    upsert?: ProfilePictureUpsertWithoutUserInput
    disconnect?: ProfilePictureWhereInput | boolean
    delete?: ProfilePictureWhereInput | boolean
    connect?: ProfilePictureWhereUniqueInput
    update?: XOR<XOR<ProfilePictureUpdateToOneWithWhereWithoutUserInput, ProfilePictureUpdateWithoutUserInput>, ProfilePictureUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUserInput | ApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUserInput | ApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUserInput | ApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type PrivilegeUpdateOneWithoutUserNestedInput = {
    create?: XOR<PrivilegeCreateWithoutUserInput, PrivilegeUncheckedCreateWithoutUserInput>
    connectOrCreate?: PrivilegeCreateOrConnectWithoutUserInput
    upsert?: PrivilegeUpsertWithoutUserInput
    disconnect?: PrivilegeWhereInput | boolean
    delete?: PrivilegeWhereInput | boolean
    connect?: PrivilegeWhereUniqueInput
    update?: XOR<XOR<PrivilegeUpdateToOneWithWhereWithoutUserInput, PrivilegeUpdateWithoutUserInput>, PrivilegeUncheckedUpdateWithoutUserInput>
  }

  export type SupplyBatchOrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput> | SupplyBatchOrderCreateWithoutUserInput[] | SupplyBatchOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutUserInput | SupplyBatchOrderCreateOrConnectWithoutUserInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutUserInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SupplyBatchOrderCreateManyUserInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutUserInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutUserInput | SupplyBatchOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type GroupUpdateOneWithoutUsersNestedInput = {
    create?: XOR<GroupCreateWithoutUsersInput, GroupUncheckedCreateWithoutUsersInput>
    connectOrCreate?: GroupCreateOrConnectWithoutUsersInput
    upsert?: GroupUpsertWithoutUsersInput
    disconnect?: GroupWhereInput | boolean
    delete?: GroupWhereInput | boolean
    connect?: GroupWhereUniqueInput
    update?: XOR<XOR<GroupUpdateToOneWithWhereWithoutUsersInput, GroupUpdateWithoutUsersInput>, GroupUncheckedUpdateWithoutUsersInput>
  }

  export type GroupUpdateManyWithoutChiefNestedInput = {
    create?: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput> | GroupCreateWithoutChiefInput[] | GroupUncheckedCreateWithoutChiefInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutChiefInput | GroupCreateOrConnectWithoutChiefInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutChiefInput | GroupUpsertWithWhereUniqueWithoutChiefInput[]
    createMany?: GroupCreateManyChiefInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutChiefInput | GroupUpdateWithWhereUniqueWithoutChiefInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutChiefInput | GroupUpdateManyWithWhereWithoutChiefInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type InventoryBoxUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput> | InventoryBoxCreateWithoutCreatedByInput[] | InventoryBoxUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutCreatedByInput | InventoryBoxCreateOrConnectWithoutCreatedByInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutCreatedByInput | InventoryBoxUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: InventoryBoxCreateManyCreatedByInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutCreatedByInput | InventoryBoxUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutCreatedByInput | InventoryBoxUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type InventoryAccessLogsUpdateManyWithoutUserNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput> | InventoryAccessLogsCreateWithoutUserInput[] | InventoryAccessLogsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutUserInput | InventoryAccessLogsCreateOrConnectWithoutUserInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutUserInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InventoryAccessLogsCreateManyUserInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutUserInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutUserInput | InventoryAccessLogsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type ContainerAllowedUserUpdateManyWithoutUserNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput> | ContainerAllowedUserCreateWithoutUserInput[] | ContainerAllowedUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutUserInput | ContainerAllowedUserCreateOrConnectWithoutUserInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutUserInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ContainerAllowedUserCreateManyUserInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutUserInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutUserInput | ContainerAllowedUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type ContainerAllowedUserUpdateManyWithoutGrantByNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput> | ContainerAllowedUserCreateWithoutGrantByInput[] | ContainerAllowedUserUncheckedCreateWithoutGrantByInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutGrantByInput | ContainerAllowedUserCreateOrConnectWithoutGrantByInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutGrantByInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutGrantByInput[]
    createMany?: ContainerAllowedUserCreateManyGrantByInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutGrantByInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutGrantByInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutGrantByInput | ContainerAllowedUserUpdateManyWithWhereWithoutGrantByInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type DepartmentUncheckedUpdateOneWithoutHeadNestedInput = {
    create?: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutHeadInput
    upsert?: DepartmentUpsertWithoutHeadInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutHeadInput, DepartmentUpdateWithoutHeadInput>, DepartmentUncheckedUpdateWithoutHeadInput>
  }

  export type LeaveUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput> | LeaveCreateWithoutUserInput[] | LeaveUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LeaveCreateOrConnectWithoutUserInput | LeaveCreateOrConnectWithoutUserInput[]
    upsert?: LeaveUpsertWithWhereUniqueWithoutUserInput | LeaveUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LeaveCreateManyUserInputEnvelope
    set?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    disconnect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    delete?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    connect?: LeaveWhereUniqueInput | LeaveWhereUniqueInput[]
    update?: LeaveUpdateWithWhereUniqueWithoutUserInput | LeaveUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LeaveUpdateManyWithWhereWithoutUserInput | LeaveUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LeaveScalarWhereInput | LeaveScalarWhereInput[]
  }

  export type AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput> | AnnouncementCreateWithoutAuthorInput[] | AnnouncementUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutAuthorInput | AnnouncementCreateOrConnectWithoutAuthorInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutAuthorInput | AnnouncementUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AnnouncementCreateManyAuthorInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutAuthorInput | AnnouncementUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutAuthorInput | AnnouncementUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput> | PromotionCreateWithoutUserInput[] | PromotionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutUserInput | PromotionCreateOrConnectWithoutUserInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutUserInput | PromotionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PromotionCreateManyUserInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutUserInput | PromotionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutUserInput | PromotionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput> | BirthdayNoticeResponseCreateWithoutSenderInput[] | BirthdayNoticeResponseUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutSenderInput | BirthdayNoticeResponseCreateOrConnectWithoutSenderInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutSenderInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: BirthdayNoticeResponseCreateManySenderInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutSenderInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutSenderInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput> | BirthdayNoticeResponseCreateWithoutRecipientInput[] | BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput | BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput[]
    upsert?: BirthdayNoticeResponseUpsertWithWhereUniqueWithoutRecipientInput | BirthdayNoticeResponseUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: BirthdayNoticeResponseCreateManyRecipientInputEnvelope
    set?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    disconnect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    delete?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    connect?: BirthdayNoticeResponseWhereUniqueInput | BirthdayNoticeResponseWhereUniqueInput[]
    update?: BirthdayNoticeResponseUpdateWithWhereUniqueWithoutRecipientInput | BirthdayNoticeResponseUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: BirthdayNoticeResponseUpdateManyWithWhereWithoutRecipientInput | BirthdayNoticeResponseUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
  }

  export type PositionSlotUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
    connectOrCreate?: PositionSlotCreateOrConnectWithoutUserInput
    upsert?: PositionSlotUpsertWithoutUserInput
    disconnect?: PositionSlotWhereInput | boolean
    delete?: PositionSlotWhereInput | boolean
    connect?: PositionSlotWhereUniqueInput
    update?: XOR<XOR<PositionSlotUpdateToOneWithWhereWithoutUserInput, PositionSlotUpdateWithoutUserInput>, PositionSlotUncheckedUpdateWithoutUserInput>
  }

  export type AccomplishmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput> | AccomplishmentCreateWithoutUserInput[] | AccomplishmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutUserInput | AccomplishmentCreateOrConnectWithoutUserInput[]
    upsert?: AccomplishmentUpsertWithWhereUniqueWithoutUserInput | AccomplishmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccomplishmentCreateManyUserInputEnvelope
    set?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    disconnect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    delete?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    connect?: AccomplishmentWhereUniqueInput | AccomplishmentWhereUniqueInput[]
    update?: AccomplishmentUpdateWithWhereUniqueWithoutUserInput | AccomplishmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccomplishmentUpdateManyWithWhereWithoutUserInput | AccomplishmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccomplishmentScalarWhereInput | AccomplishmentScalarWhereInput[]
  }

  export type AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput> | AccomplishmentResponseCreateWithoutHeadInput[] | AccomplishmentResponseUncheckedCreateWithoutHeadInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutHeadInput | AccomplishmentResponseCreateOrConnectWithoutHeadInput[]
    upsert?: AccomplishmentResponseUpsertWithWhereUniqueWithoutHeadInput | AccomplishmentResponseUpsertWithWhereUniqueWithoutHeadInput[]
    createMany?: AccomplishmentResponseCreateManyHeadInputEnvelope
    set?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    disconnect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    delete?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    update?: AccomplishmentResponseUpdateWithWhereUniqueWithoutHeadInput | AccomplishmentResponseUpdateWithWhereUniqueWithoutHeadInput[]
    updateMany?: AccomplishmentResponseUpdateManyWithWhereWithoutHeadInput | AccomplishmentResponseUpdateManyWithWhereWithoutHeadInput[]
    deleteMany?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
  }

  export type SuppliesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput> | SuppliesCreateWithoutUserInput[] | SuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesCreateOrConnectWithoutUserInput | SuppliesCreateOrConnectWithoutUserInput[]
    upsert?: SuppliesUpsertWithWhereUniqueWithoutUserInput | SuppliesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SuppliesCreateManyUserInputEnvelope
    set?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    disconnect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    delete?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    connect?: SuppliesWhereUniqueInput | SuppliesWhereUniqueInput[]
    update?: SuppliesUpdateWithWhereUniqueWithoutUserInput | SuppliesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SuppliesUpdateManyWithWhereWithoutUserInput | SuppliesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
  }

  export type SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput> | SuppliesRecordCreateWithoutUserInput[] | SuppliesRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SuppliesRecordCreateOrConnectWithoutUserInput | SuppliesRecordCreateOrConnectWithoutUserInput[]
    upsert?: SuppliesRecordUpsertWithWhereUniqueWithoutUserInput | SuppliesRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SuppliesRecordCreateManyUserInputEnvelope
    set?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    disconnect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    delete?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    connect?: SuppliesRecordWhereUniqueInput | SuppliesRecordWhereUniqueInput[]
    update?: SuppliesRecordUpdateWithWhereUniqueWithoutUserInput | SuppliesRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SuppliesRecordUpdateManyWithWhereWithoutUserInput | SuppliesRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
  }

  export type LogRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput> | LogRecordCreateWithoutUserInput[] | LogRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogRecordCreateOrConnectWithoutUserInput | LogRecordCreateOrConnectWithoutUserInput[]
    upsert?: LogRecordUpsertWithWhereUniqueWithoutUserInput | LogRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LogRecordCreateManyUserInputEnvelope
    set?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    disconnect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    delete?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    connect?: LogRecordWhereUniqueInput | LogRecordWhereUniqueInput[]
    update?: LogRecordUpdateWithWhereUniqueWithoutUserInput | LogRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LogRecordUpdateManyWithWhereWithoutUserInput | LogRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LogRecordScalarWhereInput | LogRecordScalarWhereInput[]
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput> | TransferredSuppliesCreateWithoutTransferredToInput[] | TransferredSuppliesUncheckedCreateWithoutTransferredToInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutTransferredToInput | TransferredSuppliesCreateOrConnectWithoutTransferredToInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutTransferredToInput | TransferredSuppliesUpsertWithWhereUniqueWithoutTransferredToInput[]
    createMany?: TransferredSuppliesCreateManyTransferredToInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutTransferredToInput | TransferredSuppliesUpdateWithWhereUniqueWithoutTransferredToInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutTransferredToInput | TransferredSuppliesUpdateManyWithWhereWithoutTransferredToInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput> | TransferredSuppliesCreateWithoutUserInput[] | TransferredSuppliesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransferredSuppliesCreateOrConnectWithoutUserInput | TransferredSuppliesCreateOrConnectWithoutUserInput[]
    upsert?: TransferredSuppliesUpsertWithWhereUniqueWithoutUserInput | TransferredSuppliesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransferredSuppliesCreateManyUserInputEnvelope
    set?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    disconnect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    delete?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    connect?: TransferredSuppliesWhereUniqueInput | TransferredSuppliesWhereUniqueInput[]
    update?: TransferredSuppliesUpdateWithWhereUniqueWithoutUserInput | TransferredSuppliesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransferredSuppliesUpdateManyWithWhereWithoutUserInput | TransferredSuppliesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
  }

  export type ProfilePictureUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfilePictureCreateOrConnectWithoutUserInput
    upsert?: ProfilePictureUpsertWithoutUserInput
    disconnect?: ProfilePictureWhereInput | boolean
    delete?: ProfilePictureWhereInput | boolean
    connect?: ProfilePictureWhereUniqueInput
    update?: XOR<XOR<ProfilePictureUpdateToOneWithWhereWithoutUserInput, ProfilePictureUpdateWithoutUserInput>, ProfilePictureUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUserInput | ApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUserInput | ApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUserInput | ApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput> | SupplyBatchOrderCreateWithoutUserInput[] | SupplyBatchOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupplyBatchOrderCreateOrConnectWithoutUserInput | SupplyBatchOrderCreateOrConnectWithoutUserInput[]
    upsert?: SupplyBatchOrderUpsertWithWhereUniqueWithoutUserInput | SupplyBatchOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SupplyBatchOrderCreateManyUserInputEnvelope
    set?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    disconnect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    delete?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    connect?: SupplyBatchOrderWhereUniqueInput | SupplyBatchOrderWhereUniqueInput[]
    update?: SupplyBatchOrderUpdateWithWhereUniqueWithoutUserInput | SupplyBatchOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SupplyBatchOrderUpdateManyWithWhereWithoutUserInput | SupplyBatchOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
  }

  export type GroupUncheckedUpdateManyWithoutChiefNestedInput = {
    create?: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput> | GroupCreateWithoutChiefInput[] | GroupUncheckedCreateWithoutChiefInput[]
    connectOrCreate?: GroupCreateOrConnectWithoutChiefInput | GroupCreateOrConnectWithoutChiefInput[]
    upsert?: GroupUpsertWithWhereUniqueWithoutChiefInput | GroupUpsertWithWhereUniqueWithoutChiefInput[]
    createMany?: GroupCreateManyChiefInputEnvelope
    set?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    disconnect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    delete?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    connect?: GroupWhereUniqueInput | GroupWhereUniqueInput[]
    update?: GroupUpdateWithWhereUniqueWithoutChiefInput | GroupUpdateWithWhereUniqueWithoutChiefInput[]
    updateMany?: GroupUpdateManyWithWhereWithoutChiefInput | GroupUpdateManyWithWhereWithoutChiefInput[]
    deleteMany?: GroupScalarWhereInput | GroupScalarWhereInput[]
  }

  export type InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput> | InventoryBoxCreateWithoutCreatedByInput[] | InventoryBoxUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: InventoryBoxCreateOrConnectWithoutCreatedByInput | InventoryBoxCreateOrConnectWithoutCreatedByInput[]
    upsert?: InventoryBoxUpsertWithWhereUniqueWithoutCreatedByInput | InventoryBoxUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: InventoryBoxCreateManyCreatedByInputEnvelope
    set?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    disconnect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    delete?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    connect?: InventoryBoxWhereUniqueInput | InventoryBoxWhereUniqueInput[]
    update?: InventoryBoxUpdateWithWhereUniqueWithoutCreatedByInput | InventoryBoxUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: InventoryBoxUpdateManyWithWhereWithoutCreatedByInput | InventoryBoxUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput> | InventoryAccessLogsCreateWithoutUserInput[] | InventoryAccessLogsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InventoryAccessLogsCreateOrConnectWithoutUserInput | InventoryAccessLogsCreateOrConnectWithoutUserInput[]
    upsert?: InventoryAccessLogsUpsertWithWhereUniqueWithoutUserInput | InventoryAccessLogsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InventoryAccessLogsCreateManyUserInputEnvelope
    set?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    disconnect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    delete?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    connect?: InventoryAccessLogsWhereUniqueInput | InventoryAccessLogsWhereUniqueInput[]
    update?: InventoryAccessLogsUpdateWithWhereUniqueWithoutUserInput | InventoryAccessLogsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InventoryAccessLogsUpdateManyWithWhereWithoutUserInput | InventoryAccessLogsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput> | ContainerAllowedUserCreateWithoutUserInput[] | ContainerAllowedUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutUserInput | ContainerAllowedUserCreateOrConnectWithoutUserInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutUserInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ContainerAllowedUserCreateManyUserInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutUserInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutUserInput | ContainerAllowedUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput = {
    create?: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput> | ContainerAllowedUserCreateWithoutGrantByInput[] | ContainerAllowedUserUncheckedCreateWithoutGrantByInput[]
    connectOrCreate?: ContainerAllowedUserCreateOrConnectWithoutGrantByInput | ContainerAllowedUserCreateOrConnectWithoutGrantByInput[]
    upsert?: ContainerAllowedUserUpsertWithWhereUniqueWithoutGrantByInput | ContainerAllowedUserUpsertWithWhereUniqueWithoutGrantByInput[]
    createMany?: ContainerAllowedUserCreateManyGrantByInputEnvelope
    set?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    disconnect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    delete?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    connect?: ContainerAllowedUserWhereUniqueInput | ContainerAllowedUserWhereUniqueInput[]
    update?: ContainerAllowedUserUpdateWithWhereUniqueWithoutGrantByInput | ContainerAllowedUserUpdateWithWhereUniqueWithoutGrantByInput[]
    updateMany?: ContainerAllowedUserUpdateManyWithWhereWithoutGrantByInput | ContainerAllowedUserUpdateManyWithWhereWithoutGrantByInput[]
    deleteMany?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutLogRecordInput = {
    create?: XOR<UserCreateWithoutLogRecordInput, UserUncheckedCreateWithoutLogRecordInput>
    connectOrCreate?: UserCreateOrConnectWithoutLogRecordInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutLogRecordNestedInput = {
    create?: XOR<UserCreateWithoutLogRecordInput, UserUncheckedCreateWithoutLogRecordInput>
    connectOrCreate?: UserCreateOrConnectWithoutLogRecordInput
    upsert?: UserUpsertWithoutLogRecordInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLogRecordInput, UserUpdateWithoutLogRecordInput>, UserUncheckedUpdateWithoutLogRecordInput>
  }

  export type UserCreateNestedOneWithoutSentNotificationsInput = {
    create?: XOR<UserCreateWithoutSentNotificationsInput, UserUncheckedCreateWithoutSentNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedNotificationsInput = {
    create?: XOR<UserCreateWithoutReceivedNotificationsInput, UserUncheckedCreateWithoutReceivedNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSentNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutSentNotificationsInput, UserUncheckedCreateWithoutSentNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentNotificationsInput
    upsert?: UserUpsertWithoutSentNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentNotificationsInput, UserUpdateWithoutSentNotificationsInput>, UserUncheckedUpdateWithoutSentNotificationsInput>
  }

  export type UserUpdateOneRequiredWithoutReceivedNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutReceivedNotificationsInput, UserUncheckedCreateWithoutReceivedNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedNotificationsInput
    upsert?: UserUpsertWithoutReceivedNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedNotificationsInput, UserUpdateWithoutReceivedNotificationsInput>, UserUncheckedUpdateWithoutReceivedNotificationsInput>
  }

  export type UserCreateNestedManyWithoutPositionInput = {
    create?: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput> | UserCreateWithoutPositionInput[] | UserUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPositionInput | UserCreateOrConnectWithoutPositionInput[]
    createMany?: UserCreateManyPositionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PromotionCreateNestedManyWithoutPostionInput = {
    create?: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput> | PromotionCreateWithoutPostionInput[] | PromotionUncheckedCreateWithoutPostionInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPostionInput | PromotionCreateOrConnectWithoutPostionInput[]
    createMany?: PromotionCreateManyPostionInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type SalaryGradeCreateNestedOneWithoutPositionsInput = {
    create?: XOR<SalaryGradeCreateWithoutPositionsInput, SalaryGradeUncheckedCreateWithoutPositionsInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutPositionsInput
    connect?: SalaryGradeWhereUniqueInput
  }

  export type PositionSlotCreateNestedManyWithoutPosInput = {
    create?: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput> | PositionSlotCreateWithoutPosInput[] | PositionSlotUncheckedCreateWithoutPosInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutPosInput | PositionSlotCreateOrConnectWithoutPosInput[]
    createMany?: PositionSlotCreateManyPosInputEnvelope
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutPositionInput = {
    create?: XOR<LineCreateWithoutPositionInput, LineUncheckedCreateWithoutPositionInput>
    connectOrCreate?: LineCreateOrConnectWithoutPositionInput
    connect?: LineWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutPositionInput = {
    create?: XOR<DepartmentCreateWithoutPositionInput, DepartmentUncheckedCreateWithoutPositionInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutPositionInput
    connect?: DepartmentWhereUniqueInput
  }

  export type ApplicationCreateNestedManyWithoutPositionInput = {
    create?: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput> | ApplicationCreateWithoutPositionInput[] | ApplicationUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutPositionInput | ApplicationCreateOrConnectWithoutPositionInput[]
    createMany?: ApplicationCreateManyPositionInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutPositionInput = {
    create?: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput> | UserCreateWithoutPositionInput[] | UserUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPositionInput | UserCreateOrConnectWithoutPositionInput[]
    createMany?: UserCreateManyPositionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutPostionInput = {
    create?: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput> | PromotionCreateWithoutPostionInput[] | PromotionUncheckedCreateWithoutPostionInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPostionInput | PromotionCreateOrConnectWithoutPostionInput[]
    createMany?: PromotionCreateManyPostionInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type PositionSlotUncheckedCreateNestedManyWithoutPosInput = {
    create?: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput> | PositionSlotCreateWithoutPosInput[] | PositionSlotUncheckedCreateWithoutPosInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutPosInput | PositionSlotCreateOrConnectWithoutPosInput[]
    createMany?: PositionSlotCreateManyPosInputEnvelope
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutPositionInput = {
    create?: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput> | ApplicationCreateWithoutPositionInput[] | ApplicationUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutPositionInput | ApplicationCreateOrConnectWithoutPositionInput[]
    createMany?: ApplicationCreateManyPositionInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutPositionNestedInput = {
    create?: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput> | UserCreateWithoutPositionInput[] | UserUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPositionInput | UserCreateOrConnectWithoutPositionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPositionInput | UserUpsertWithWhereUniqueWithoutPositionInput[]
    createMany?: UserCreateManyPositionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPositionInput | UserUpdateWithWhereUniqueWithoutPositionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPositionInput | UserUpdateManyWithWhereWithoutPositionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PromotionUpdateManyWithoutPostionNestedInput = {
    create?: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput> | PromotionCreateWithoutPostionInput[] | PromotionUncheckedCreateWithoutPostionInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPostionInput | PromotionCreateOrConnectWithoutPostionInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutPostionInput | PromotionUpsertWithWhereUniqueWithoutPostionInput[]
    createMany?: PromotionCreateManyPostionInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutPostionInput | PromotionUpdateWithWhereUniqueWithoutPostionInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutPostionInput | PromotionUpdateManyWithWhereWithoutPostionInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type SalaryGradeUpdateOneWithoutPositionsNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutPositionsInput, SalaryGradeUncheckedCreateWithoutPositionsInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutPositionsInput
    upsert?: SalaryGradeUpsertWithoutPositionsInput
    disconnect?: SalaryGradeWhereInput | boolean
    delete?: SalaryGradeWhereInput | boolean
    connect?: SalaryGradeWhereUniqueInput
    update?: XOR<XOR<SalaryGradeUpdateToOneWithWhereWithoutPositionsInput, SalaryGradeUpdateWithoutPositionsInput>, SalaryGradeUncheckedUpdateWithoutPositionsInput>
  }

  export type PositionSlotUpdateManyWithoutPosNestedInput = {
    create?: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput> | PositionSlotCreateWithoutPosInput[] | PositionSlotUncheckedCreateWithoutPosInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutPosInput | PositionSlotCreateOrConnectWithoutPosInput[]
    upsert?: PositionSlotUpsertWithWhereUniqueWithoutPosInput | PositionSlotUpsertWithWhereUniqueWithoutPosInput[]
    createMany?: PositionSlotCreateManyPosInputEnvelope
    set?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    disconnect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    delete?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    update?: PositionSlotUpdateWithWhereUniqueWithoutPosInput | PositionSlotUpdateWithWhereUniqueWithoutPosInput[]
    updateMany?: PositionSlotUpdateManyWithWhereWithoutPosInput | PositionSlotUpdateManyWithWhereWithoutPosInput[]
    deleteMany?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
  }

  export type LineUpdateOneWithoutPositionNestedInput = {
    create?: XOR<LineCreateWithoutPositionInput, LineUncheckedCreateWithoutPositionInput>
    connectOrCreate?: LineCreateOrConnectWithoutPositionInput
    upsert?: LineUpsertWithoutPositionInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutPositionInput, LineUpdateWithoutPositionInput>, LineUncheckedUpdateWithoutPositionInput>
  }

  export type DepartmentUpdateOneWithoutPositionNestedInput = {
    create?: XOR<DepartmentCreateWithoutPositionInput, DepartmentUncheckedCreateWithoutPositionInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutPositionInput
    upsert?: DepartmentUpsertWithoutPositionInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutPositionInput, DepartmentUpdateWithoutPositionInput>, DepartmentUncheckedUpdateWithoutPositionInput>
  }

  export type ApplicationUpdateManyWithoutPositionNestedInput = {
    create?: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput> | ApplicationCreateWithoutPositionInput[] | ApplicationUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutPositionInput | ApplicationCreateOrConnectWithoutPositionInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutPositionInput | ApplicationUpsertWithWhereUniqueWithoutPositionInput[]
    createMany?: ApplicationCreateManyPositionInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutPositionInput | ApplicationUpdateWithWhereUniqueWithoutPositionInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutPositionInput | ApplicationUpdateManyWithWhereWithoutPositionInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutPositionNestedInput = {
    create?: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput> | UserCreateWithoutPositionInput[] | UserUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPositionInput | UserCreateOrConnectWithoutPositionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPositionInput | UserUpsertWithWhereUniqueWithoutPositionInput[]
    createMany?: UserCreateManyPositionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPositionInput | UserUpdateWithWhereUniqueWithoutPositionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPositionInput | UserUpdateManyWithWhereWithoutPositionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutPostionNestedInput = {
    create?: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput> | PromotionCreateWithoutPostionInput[] | PromotionUncheckedCreateWithoutPostionInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPostionInput | PromotionCreateOrConnectWithoutPostionInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutPostionInput | PromotionUpsertWithWhereUniqueWithoutPostionInput[]
    createMany?: PromotionCreateManyPostionInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutPostionInput | PromotionUpdateWithWhereUniqueWithoutPostionInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutPostionInput | PromotionUpdateManyWithWhereWithoutPostionInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type PositionSlotUncheckedUpdateManyWithoutPosNestedInput = {
    create?: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput> | PositionSlotCreateWithoutPosInput[] | PositionSlotUncheckedCreateWithoutPosInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutPosInput | PositionSlotCreateOrConnectWithoutPosInput[]
    upsert?: PositionSlotUpsertWithWhereUniqueWithoutPosInput | PositionSlotUpsertWithWhereUniqueWithoutPosInput[]
    createMany?: PositionSlotCreateManyPosInputEnvelope
    set?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    disconnect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    delete?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    update?: PositionSlotUpdateWithWhereUniqueWithoutPosInput | PositionSlotUpdateWithWhereUniqueWithoutPosInput[]
    updateMany?: PositionSlotUpdateManyWithWhereWithoutPosInput | PositionSlotUpdateManyWithWhereWithoutPosInput[]
    deleteMany?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutPositionNestedInput = {
    create?: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput> | ApplicationCreateWithoutPositionInput[] | ApplicationUncheckedCreateWithoutPositionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutPositionInput | ApplicationCreateOrConnectWithoutPositionInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutPositionInput | ApplicationUpsertWithWhereUniqueWithoutPositionInput[]
    createMany?: ApplicationCreateManyPositionInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutPositionInput | ApplicationUpdateWithWhereUniqueWithoutPositionInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutPositionInput | ApplicationUpdateManyWithWhereWithoutPositionInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type PositionCreateNestedOneWithoutPositionSlotInput = {
    create?: XOR<PositionCreateWithoutPositionSlotInput, PositionUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: PositionCreateOrConnectWithoutPositionSlotInput
    connect?: PositionWhereUniqueInput
  }

  export type SalaryGradeCreateNestedOneWithoutPositionSlotInput = {
    create?: XOR<SalaryGradeCreateWithoutPositionSlotInput, SalaryGradeUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutPositionSlotInput
    connect?: SalaryGradeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPositionSlotInput = {
    create?: XOR<UserCreateWithoutPositionSlotInput, UserUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: UserCreateOrConnectWithoutPositionSlotInput
    connect?: UserWhereUniqueInput
  }

  export type PositionUpdateOneRequiredWithoutPositionSlotNestedInput = {
    create?: XOR<PositionCreateWithoutPositionSlotInput, PositionUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: PositionCreateOrConnectWithoutPositionSlotInput
    upsert?: PositionUpsertWithoutPositionSlotInput
    connect?: PositionWhereUniqueInput
    update?: XOR<XOR<PositionUpdateToOneWithWhereWithoutPositionSlotInput, PositionUpdateWithoutPositionSlotInput>, PositionUncheckedUpdateWithoutPositionSlotInput>
  }

  export type SalaryGradeUpdateOneRequiredWithoutPositionSlotNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutPositionSlotInput, SalaryGradeUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutPositionSlotInput
    upsert?: SalaryGradeUpsertWithoutPositionSlotInput
    connect?: SalaryGradeWhereUniqueInput
    update?: XOR<XOR<SalaryGradeUpdateToOneWithWhereWithoutPositionSlotInput, SalaryGradeUpdateWithoutPositionSlotInput>, SalaryGradeUncheckedUpdateWithoutPositionSlotInput>
  }

  export type UserUpdateOneWithoutPositionSlotNestedInput = {
    create?: XOR<UserCreateWithoutPositionSlotInput, UserUncheckedCreateWithoutPositionSlotInput>
    connectOrCreate?: UserCreateOrConnectWithoutPositionSlotInput
    upsert?: UserUpsertWithoutPositionSlotInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPositionSlotInput, UserUpdateWithoutPositionSlotInput>, UserUncheckedUpdateWithoutPositionSlotInput>
  }

  export type UserCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput> | UserCreateWithoutSalaryGradeInput[] | UserUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSalaryGradeInput | UserCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: UserCreateManySalaryGradeInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput> | SalaryGradeHistoryCreateWithoutSalaryGradeInput[] | SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput | SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: SalaryGradeHistoryCreateManySalaryGradeInputEnvelope
    connect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
  }

  export type PositionCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput> | PositionCreateWithoutSalaryGradeInput[] | PositionUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutSalaryGradeInput | PositionCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: PositionCreateManySalaryGradeInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type PositionSlotCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput> | PositionSlotCreateWithoutSalaryGradeInput[] | PositionSlotUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutSalaryGradeInput | PositionSlotCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: PositionSlotCreateManySalaryGradeInputEnvelope
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
  }

  export type LineCreateNestedOneWithoutSalaryGradeInput = {
    create?: XOR<LineCreateWithoutSalaryGradeInput, LineUncheckedCreateWithoutSalaryGradeInput>
    connectOrCreate?: LineCreateOrConnectWithoutSalaryGradeInput
    connect?: LineWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput> | UserCreateWithoutSalaryGradeInput[] | UserUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSalaryGradeInput | UserCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: UserCreateManySalaryGradeInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput> | SalaryGradeHistoryCreateWithoutSalaryGradeInput[] | SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput | SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: SalaryGradeHistoryCreateManySalaryGradeInputEnvelope
    connect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
  }

  export type PositionUncheckedCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput> | PositionCreateWithoutSalaryGradeInput[] | PositionUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutSalaryGradeInput | PositionCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: PositionCreateManySalaryGradeInputEnvelope
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
  }

  export type PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput = {
    create?: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput> | PositionSlotCreateWithoutSalaryGradeInput[] | PositionSlotUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutSalaryGradeInput | PositionSlotCreateOrConnectWithoutSalaryGradeInput[]
    createMany?: PositionSlotCreateManySalaryGradeInputEnvelope
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput> | UserCreateWithoutSalaryGradeInput[] | UserUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSalaryGradeInput | UserCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSalaryGradeInput | UserUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: UserCreateManySalaryGradeInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSalaryGradeInput | UserUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSalaryGradeInput | UserUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput> | SalaryGradeHistoryCreateWithoutSalaryGradeInput[] | SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput | SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: SalaryGradeHistoryUpsertWithWhereUniqueWithoutSalaryGradeInput | SalaryGradeHistoryUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: SalaryGradeHistoryCreateManySalaryGradeInputEnvelope
    set?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    disconnect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    delete?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    connect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    update?: SalaryGradeHistoryUpdateWithWhereUniqueWithoutSalaryGradeInput | SalaryGradeHistoryUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: SalaryGradeHistoryUpdateManyWithWhereWithoutSalaryGradeInput | SalaryGradeHistoryUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: SalaryGradeHistoryScalarWhereInput | SalaryGradeHistoryScalarWhereInput[]
  }

  export type PositionUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput> | PositionCreateWithoutSalaryGradeInput[] | PositionUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutSalaryGradeInput | PositionCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutSalaryGradeInput | PositionUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: PositionCreateManySalaryGradeInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutSalaryGradeInput | PositionUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutSalaryGradeInput | PositionUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type PositionSlotUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput> | PositionSlotCreateWithoutSalaryGradeInput[] | PositionSlotUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutSalaryGradeInput | PositionSlotCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: PositionSlotUpsertWithWhereUniqueWithoutSalaryGradeInput | PositionSlotUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: PositionSlotCreateManySalaryGradeInputEnvelope
    set?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    disconnect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    delete?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    update?: PositionSlotUpdateWithWhereUniqueWithoutSalaryGradeInput | PositionSlotUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: PositionSlotUpdateManyWithWhereWithoutSalaryGradeInput | PositionSlotUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
  }

  export type LineUpdateOneWithoutSalaryGradeNestedInput = {
    create?: XOR<LineCreateWithoutSalaryGradeInput, LineUncheckedCreateWithoutSalaryGradeInput>
    connectOrCreate?: LineCreateOrConnectWithoutSalaryGradeInput
    upsert?: LineUpsertWithoutSalaryGradeInput
    disconnect?: LineWhereInput | boolean
    delete?: LineWhereInput | boolean
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutSalaryGradeInput, LineUpdateWithoutSalaryGradeInput>, LineUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type UserUncheckedUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput> | UserCreateWithoutSalaryGradeInput[] | UserUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSalaryGradeInput | UserCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSalaryGradeInput | UserUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: UserCreateManySalaryGradeInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSalaryGradeInput | UserUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSalaryGradeInput | UserUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput> | SalaryGradeHistoryCreateWithoutSalaryGradeInput[] | SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput | SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: SalaryGradeHistoryUpsertWithWhereUniqueWithoutSalaryGradeInput | SalaryGradeHistoryUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: SalaryGradeHistoryCreateManySalaryGradeInputEnvelope
    set?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    disconnect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    delete?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    connect?: SalaryGradeHistoryWhereUniqueInput | SalaryGradeHistoryWhereUniqueInput[]
    update?: SalaryGradeHistoryUpdateWithWhereUniqueWithoutSalaryGradeInput | SalaryGradeHistoryUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: SalaryGradeHistoryUpdateManyWithWhereWithoutSalaryGradeInput | SalaryGradeHistoryUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: SalaryGradeHistoryScalarWhereInput | SalaryGradeHistoryScalarWhereInput[]
  }

  export type PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput> | PositionCreateWithoutSalaryGradeInput[] | PositionUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionCreateOrConnectWithoutSalaryGradeInput | PositionCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: PositionUpsertWithWhereUniqueWithoutSalaryGradeInput | PositionUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: PositionCreateManySalaryGradeInputEnvelope
    set?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    disconnect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    delete?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    connect?: PositionWhereUniqueInput | PositionWhereUniqueInput[]
    update?: PositionUpdateWithWhereUniqueWithoutSalaryGradeInput | PositionUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: PositionUpdateManyWithWhereWithoutSalaryGradeInput | PositionUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: PositionScalarWhereInput | PositionScalarWhereInput[]
  }

  export type PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput = {
    create?: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput> | PositionSlotCreateWithoutSalaryGradeInput[] | PositionSlotUncheckedCreateWithoutSalaryGradeInput[]
    connectOrCreate?: PositionSlotCreateOrConnectWithoutSalaryGradeInput | PositionSlotCreateOrConnectWithoutSalaryGradeInput[]
    upsert?: PositionSlotUpsertWithWhereUniqueWithoutSalaryGradeInput | PositionSlotUpsertWithWhereUniqueWithoutSalaryGradeInput[]
    createMany?: PositionSlotCreateManySalaryGradeInputEnvelope
    set?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    disconnect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    delete?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    connect?: PositionSlotWhereUniqueInput | PositionSlotWhereUniqueInput[]
    update?: PositionSlotUpdateWithWhereUniqueWithoutSalaryGradeInput | PositionSlotUpdateWithWhereUniqueWithoutSalaryGradeInput[]
    updateMany?: PositionSlotUpdateManyWithWhereWithoutSalaryGradeInput | PositionSlotUpdateManyWithWhereWithoutSalaryGradeInput[]
    deleteMany?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
  }

  export type SalaryGradeCreateNestedOneWithoutSalaryGradeHistoryInput = {
    create?: XOR<SalaryGradeCreateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedCreateWithoutSalaryGradeHistoryInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutSalaryGradeHistoryInput
    connect?: SalaryGradeWhereUniqueInput
  }

  export type SalaryGradeUpdateOneRequiredWithoutSalaryGradeHistoryNestedInput = {
    create?: XOR<SalaryGradeCreateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedCreateWithoutSalaryGradeHistoryInput>
    connectOrCreate?: SalaryGradeCreateOrConnectWithoutSalaryGradeHistoryInput
    upsert?: SalaryGradeUpsertWithoutSalaryGradeHistoryInput
    connect?: SalaryGradeWhereUniqueInput
    update?: XOR<XOR<SalaryGradeUpdateToOneWithWhereWithoutSalaryGradeHistoryInput, SalaryGradeUpdateWithoutSalaryGradeHistoryInput>, SalaryGradeUncheckedUpdateWithoutSalaryGradeHistoryInput>
  }

  export type UserCreateNestedOneWithoutLeaveInput = {
    create?: XOR<UserCreateWithoutLeaveInput, UserUncheckedCreateWithoutLeaveInput>
    connectOrCreate?: UserCreateOrConnectWithoutLeaveInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutLeaveNestedInput = {
    create?: XOR<UserCreateWithoutLeaveInput, UserUncheckedCreateWithoutLeaveInput>
    connectOrCreate?: UserCreateOrConnectWithoutLeaveInput
    upsert?: UserUpsertWithoutLeaveInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLeaveInput, UserUpdateWithoutLeaveInput>, UserUncheckedUpdateWithoutLeaveInput>
  }

  export type UserCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<UserCreateWithoutAnnouncementInput, UserUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnnouncementInput
    connect?: UserWhereUniqueInput
  }

  export type LineCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<LineCreateWithoutAnnouncementInput, LineUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: LineCreateOrConnectWithoutAnnouncementInput
    connect?: LineWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<DepartmentCreateWithoutAnnouncementInput, DepartmentUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutAnnouncementInput
    connect?: DepartmentWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAnnouncementNestedInput = {
    create?: XOR<UserCreateWithoutAnnouncementInput, UserUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnnouncementInput
    upsert?: UserUpsertWithoutAnnouncementInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAnnouncementInput, UserUpdateWithoutAnnouncementInput>, UserUncheckedUpdateWithoutAnnouncementInput>
  }

  export type LineUpdateOneRequiredWithoutAnnouncementNestedInput = {
    create?: XOR<LineCreateWithoutAnnouncementInput, LineUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: LineCreateOrConnectWithoutAnnouncementInput
    upsert?: LineUpsertWithoutAnnouncementInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutAnnouncementInput, LineUpdateWithoutAnnouncementInput>, LineUncheckedUpdateWithoutAnnouncementInput>
  }

  export type DepartmentUpdateOneWithoutAnnouncementNestedInput = {
    create?: XOR<DepartmentCreateWithoutAnnouncementInput, DepartmentUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutAnnouncementInput
    upsert?: DepartmentUpsertWithoutAnnouncementInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutAnnouncementInput, DepartmentUpdateWithoutAnnouncementInput>, DepartmentUncheckedUpdateWithoutAnnouncementInput>
  }

  export type UserCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<UserCreateWithoutPromotionsInput, UserUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPromotionsInput
    connect?: UserWhereUniqueInput
  }

  export type PositionCreateNestedOneWithoutPromotionInput = {
    create?: XOR<PositionCreateWithoutPromotionInput, PositionUncheckedCreateWithoutPromotionInput>
    connectOrCreate?: PositionCreateOrConnectWithoutPromotionInput
    connect?: PositionWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPromotionsNestedInput = {
    create?: XOR<UserCreateWithoutPromotionsInput, UserUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPromotionsInput
    upsert?: UserUpsertWithoutPromotionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPromotionsInput, UserUpdateWithoutPromotionsInput>, UserUncheckedUpdateWithoutPromotionsInput>
  }

  export type PositionUpdateOneRequiredWithoutPromotionNestedInput = {
    create?: XOR<PositionCreateWithoutPromotionInput, PositionUncheckedCreateWithoutPromotionInput>
    connectOrCreate?: PositionCreateOrConnectWithoutPromotionInput
    upsert?: PositionUpsertWithoutPromotionInput
    connect?: PositionWhereUniqueInput
    update?: XOR<XOR<PositionUpdateToOneWithWhereWithoutPromotionInput, PositionUpdateWithoutPromotionInput>, PositionUncheckedUpdateWithoutPromotionInput>
  }

  export type UserCreateNestedOneWithoutBdaySenderInput = {
    create?: XOR<UserCreateWithoutBdaySenderInput, UserUncheckedCreateWithoutBdaySenderInput>
    connectOrCreate?: UserCreateOrConnectWithoutBdaySenderInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBdayRecipientInput = {
    create?: XOR<UserCreateWithoutBdayRecipientInput, UserUncheckedCreateWithoutBdayRecipientInput>
    connectOrCreate?: UserCreateOrConnectWithoutBdayRecipientInput
    connect?: UserWhereUniqueInput
  }

  export type LineCreateNestedOneWithoutBirthdayNoticeResponseInput = {
    create?: XOR<LineCreateWithoutBirthdayNoticeResponseInput, LineUncheckedCreateWithoutBirthdayNoticeResponseInput>
    connectOrCreate?: LineCreateOrConnectWithoutBirthdayNoticeResponseInput
    connect?: LineWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutBdaySenderNestedInput = {
    create?: XOR<UserCreateWithoutBdaySenderInput, UserUncheckedCreateWithoutBdaySenderInput>
    connectOrCreate?: UserCreateOrConnectWithoutBdaySenderInput
    upsert?: UserUpsertWithoutBdaySenderInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBdaySenderInput, UserUpdateWithoutBdaySenderInput>, UserUncheckedUpdateWithoutBdaySenderInput>
  }

  export type UserUpdateOneWithoutBdayRecipientNestedInput = {
    create?: XOR<UserCreateWithoutBdayRecipientInput, UserUncheckedCreateWithoutBdayRecipientInput>
    connectOrCreate?: UserCreateOrConnectWithoutBdayRecipientInput
    upsert?: UserUpsertWithoutBdayRecipientInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBdayRecipientInput, UserUpdateWithoutBdayRecipientInput>, UserUncheckedUpdateWithoutBdayRecipientInput>
  }

  export type LineUpdateOneRequiredWithoutBirthdayNoticeResponseNestedInput = {
    create?: XOR<LineCreateWithoutBirthdayNoticeResponseInput, LineUncheckedCreateWithoutBirthdayNoticeResponseInput>
    connectOrCreate?: LineCreateOrConnectWithoutBirthdayNoticeResponseInput
    upsert?: LineUpsertWithoutBirthdayNoticeResponseInput
    connect?: LineWhereUniqueInput
    update?: XOR<XOR<LineUpdateToOneWithWhereWithoutBirthdayNoticeResponseInput, LineUpdateWithoutBirthdayNoticeResponseInput>, LineUncheckedUpdateWithoutBirthdayNoticeResponseInput>
  }

  export type ProvinceCreateNestedManyWithoutRegionInput = {
    create?: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput> | ProvinceCreateWithoutRegionInput[] | ProvinceUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: ProvinceCreateOrConnectWithoutRegionInput | ProvinceCreateOrConnectWithoutRegionInput[]
    createMany?: ProvinceCreateManyRegionInputEnvelope
    connect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutRegionInput = {
    create?: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput> | UserCreateWithoutRegionInput[] | UserUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRegionInput | UserCreateOrConnectWithoutRegionInput[]
    createMany?: UserCreateManyRegionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedManyWithoutRegionInput = {
    create?: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput> | LineCreateWithoutRegionInput[] | LineUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: LineCreateOrConnectWithoutRegionInput | LineCreateOrConnectWithoutRegionInput[]
    createMany?: LineCreateManyRegionInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type ProvinceUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput> | ProvinceCreateWithoutRegionInput[] | ProvinceUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: ProvinceCreateOrConnectWithoutRegionInput | ProvinceCreateOrConnectWithoutRegionInput[]
    createMany?: ProvinceCreateManyRegionInputEnvelope
    connect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput> | UserCreateWithoutRegionInput[] | UserUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRegionInput | UserCreateOrConnectWithoutRegionInput[]
    createMany?: UserCreateManyRegionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput> | LineCreateWithoutRegionInput[] | LineUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: LineCreateOrConnectWithoutRegionInput | LineCreateOrConnectWithoutRegionInput[]
    createMany?: LineCreateManyRegionInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type ProvinceUpdateManyWithoutRegionNestedInput = {
    create?: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput> | ProvinceCreateWithoutRegionInput[] | ProvinceUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: ProvinceCreateOrConnectWithoutRegionInput | ProvinceCreateOrConnectWithoutRegionInput[]
    upsert?: ProvinceUpsertWithWhereUniqueWithoutRegionInput | ProvinceUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: ProvinceCreateManyRegionInputEnvelope
    set?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    disconnect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    delete?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    connect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    update?: ProvinceUpdateWithWhereUniqueWithoutRegionInput | ProvinceUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: ProvinceUpdateManyWithWhereWithoutRegionInput | ProvinceUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: ProvinceScalarWhereInput | ProvinceScalarWhereInput[]
  }

  export type UserUpdateManyWithoutRegionNestedInput = {
    create?: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput> | UserCreateWithoutRegionInput[] | UserUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRegionInput | UserCreateOrConnectWithoutRegionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRegionInput | UserUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: UserCreateManyRegionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRegionInput | UserUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRegionInput | UserUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateManyWithoutRegionNestedInput = {
    create?: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput> | LineCreateWithoutRegionInput[] | LineUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: LineCreateOrConnectWithoutRegionInput | LineCreateOrConnectWithoutRegionInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutRegionInput | LineUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: LineCreateManyRegionInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutRegionInput | LineUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: LineUpdateManyWithWhereWithoutRegionInput | LineUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type ProvinceUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput> | ProvinceCreateWithoutRegionInput[] | ProvinceUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: ProvinceCreateOrConnectWithoutRegionInput | ProvinceCreateOrConnectWithoutRegionInput[]
    upsert?: ProvinceUpsertWithWhereUniqueWithoutRegionInput | ProvinceUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: ProvinceCreateManyRegionInputEnvelope
    set?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    disconnect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    delete?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    connect?: ProvinceWhereUniqueInput | ProvinceWhereUniqueInput[]
    update?: ProvinceUpdateWithWhereUniqueWithoutRegionInput | ProvinceUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: ProvinceUpdateManyWithWhereWithoutRegionInput | ProvinceUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: ProvinceScalarWhereInput | ProvinceScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput> | UserCreateWithoutRegionInput[] | UserUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRegionInput | UserCreateOrConnectWithoutRegionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRegionInput | UserUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: UserCreateManyRegionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRegionInput | UserUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRegionInput | UserUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput> | LineCreateWithoutRegionInput[] | LineUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: LineCreateOrConnectWithoutRegionInput | LineCreateOrConnectWithoutRegionInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutRegionInput | LineUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: LineCreateManyRegionInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutRegionInput | LineUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: LineUpdateManyWithWhereWithoutRegionInput | LineUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type RegionCreateNestedOneWithoutProvicesInput = {
    create?: XOR<RegionCreateWithoutProvicesInput, RegionUncheckedCreateWithoutProvicesInput>
    connectOrCreate?: RegionCreateOrConnectWithoutProvicesInput
    connect?: RegionWhereUniqueInput
  }

  export type MunicipalCreateNestedManyWithoutProvinceInput = {
    create?: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput> | MunicipalCreateWithoutProvinceInput[] | MunicipalUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: MunicipalCreateOrConnectWithoutProvinceInput | MunicipalCreateOrConnectWithoutProvinceInput[]
    createMany?: MunicipalCreateManyProvinceInputEnvelope
    connect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutProvinceInput = {
    create?: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput> | UserCreateWithoutProvinceInput[] | UserUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinceInput | UserCreateOrConnectWithoutProvinceInput[]
    createMany?: UserCreateManyProvinceInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedManyWithoutProvinceInput = {
    create?: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput> | LineCreateWithoutProvinceInput[] | LineUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: LineCreateOrConnectWithoutProvinceInput | LineCreateOrConnectWithoutProvinceInput[]
    createMany?: LineCreateManyProvinceInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type MunicipalUncheckedCreateNestedManyWithoutProvinceInput = {
    create?: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput> | MunicipalCreateWithoutProvinceInput[] | MunicipalUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: MunicipalCreateOrConnectWithoutProvinceInput | MunicipalCreateOrConnectWithoutProvinceInput[]
    createMany?: MunicipalCreateManyProvinceInputEnvelope
    connect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutProvinceInput = {
    create?: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput> | UserCreateWithoutProvinceInput[] | UserUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinceInput | UserCreateOrConnectWithoutProvinceInput[]
    createMany?: UserCreateManyProvinceInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineUncheckedCreateNestedManyWithoutProvinceInput = {
    create?: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput> | LineCreateWithoutProvinceInput[] | LineUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: LineCreateOrConnectWithoutProvinceInput | LineCreateOrConnectWithoutProvinceInput[]
    createMany?: LineCreateManyProvinceInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type RegionUpdateOneWithoutProvicesNestedInput = {
    create?: XOR<RegionCreateWithoutProvicesInput, RegionUncheckedCreateWithoutProvicesInput>
    connectOrCreate?: RegionCreateOrConnectWithoutProvicesInput
    upsert?: RegionUpsertWithoutProvicesInput
    disconnect?: RegionWhereInput | boolean
    delete?: RegionWhereInput | boolean
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutProvicesInput, RegionUpdateWithoutProvicesInput>, RegionUncheckedUpdateWithoutProvicesInput>
  }

  export type MunicipalUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput> | MunicipalCreateWithoutProvinceInput[] | MunicipalUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: MunicipalCreateOrConnectWithoutProvinceInput | MunicipalCreateOrConnectWithoutProvinceInput[]
    upsert?: MunicipalUpsertWithWhereUniqueWithoutProvinceInput | MunicipalUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: MunicipalCreateManyProvinceInputEnvelope
    set?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    disconnect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    delete?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    connect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    update?: MunicipalUpdateWithWhereUniqueWithoutProvinceInput | MunicipalUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: MunicipalUpdateManyWithWhereWithoutProvinceInput | MunicipalUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: MunicipalScalarWhereInput | MunicipalScalarWhereInput[]
  }

  export type UserUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput> | UserCreateWithoutProvinceInput[] | UserUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinceInput | UserCreateOrConnectWithoutProvinceInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProvinceInput | UserUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: UserCreateManyProvinceInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProvinceInput | UserUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProvinceInput | UserUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput> | LineCreateWithoutProvinceInput[] | LineUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: LineCreateOrConnectWithoutProvinceInput | LineCreateOrConnectWithoutProvinceInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutProvinceInput | LineUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: LineCreateManyProvinceInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutProvinceInput | LineUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: LineUpdateManyWithWhereWithoutProvinceInput | LineUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type MunicipalUncheckedUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput> | MunicipalCreateWithoutProvinceInput[] | MunicipalUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: MunicipalCreateOrConnectWithoutProvinceInput | MunicipalCreateOrConnectWithoutProvinceInput[]
    upsert?: MunicipalUpsertWithWhereUniqueWithoutProvinceInput | MunicipalUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: MunicipalCreateManyProvinceInputEnvelope
    set?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    disconnect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    delete?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    connect?: MunicipalWhereUniqueInput | MunicipalWhereUniqueInput[]
    update?: MunicipalUpdateWithWhereUniqueWithoutProvinceInput | MunicipalUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: MunicipalUpdateManyWithWhereWithoutProvinceInput | MunicipalUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: MunicipalScalarWhereInput | MunicipalScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput> | UserCreateWithoutProvinceInput[] | UserUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinceInput | UserCreateOrConnectWithoutProvinceInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProvinceInput | UserUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: UserCreateManyProvinceInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProvinceInput | UserUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProvinceInput | UserUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUncheckedUpdateManyWithoutProvinceNestedInput = {
    create?: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput> | LineCreateWithoutProvinceInput[] | LineUncheckedCreateWithoutProvinceInput[]
    connectOrCreate?: LineCreateOrConnectWithoutProvinceInput | LineCreateOrConnectWithoutProvinceInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutProvinceInput | LineUpsertWithWhereUniqueWithoutProvinceInput[]
    createMany?: LineCreateManyProvinceInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutProvinceInput | LineUpdateWithWhereUniqueWithoutProvinceInput[]
    updateMany?: LineUpdateManyWithWhereWithoutProvinceInput | LineUpdateManyWithWhereWithoutProvinceInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type ProvinceCreateNestedOneWithoutMunicipalsInput = {
    create?: XOR<ProvinceCreateWithoutMunicipalsInput, ProvinceUncheckedCreateWithoutMunicipalsInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutMunicipalsInput
    connect?: ProvinceWhereUniqueInput
  }

  export type BarangayCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput> | BarangayCreateWithoutMunicipalInput[] | BarangayUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: BarangayCreateOrConnectWithoutMunicipalInput | BarangayCreateOrConnectWithoutMunicipalInput[]
    createMany?: BarangayCreateManyMunicipalInputEnvelope
    connect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput> | UserCreateWithoutMunicipalInput[] | UserUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutMunicipalInput | UserCreateOrConnectWithoutMunicipalInput[]
    createMany?: UserCreateManyMunicipalInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput> | LineCreateWithoutMunicipalInput[] | LineUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: LineCreateOrConnectWithoutMunicipalInput | LineCreateOrConnectWithoutMunicipalInput[]
    createMany?: LineCreateManyMunicipalInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type BarangayUncheckedCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput> | BarangayCreateWithoutMunicipalInput[] | BarangayUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: BarangayCreateOrConnectWithoutMunicipalInput | BarangayCreateOrConnectWithoutMunicipalInput[]
    createMany?: BarangayCreateManyMunicipalInputEnvelope
    connect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput> | UserCreateWithoutMunicipalInput[] | UserUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutMunicipalInput | UserCreateOrConnectWithoutMunicipalInput[]
    createMany?: UserCreateManyMunicipalInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineUncheckedCreateNestedManyWithoutMunicipalInput = {
    create?: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput> | LineCreateWithoutMunicipalInput[] | LineUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: LineCreateOrConnectWithoutMunicipalInput | LineCreateOrConnectWithoutMunicipalInput[]
    createMany?: LineCreateManyMunicipalInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type ProvinceUpdateOneWithoutMunicipalsNestedInput = {
    create?: XOR<ProvinceCreateWithoutMunicipalsInput, ProvinceUncheckedCreateWithoutMunicipalsInput>
    connectOrCreate?: ProvinceCreateOrConnectWithoutMunicipalsInput
    upsert?: ProvinceUpsertWithoutMunicipalsInput
    disconnect?: ProvinceWhereInput | boolean
    delete?: ProvinceWhereInput | boolean
    connect?: ProvinceWhereUniqueInput
    update?: XOR<XOR<ProvinceUpdateToOneWithWhereWithoutMunicipalsInput, ProvinceUpdateWithoutMunicipalsInput>, ProvinceUncheckedUpdateWithoutMunicipalsInput>
  }

  export type BarangayUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput> | BarangayCreateWithoutMunicipalInput[] | BarangayUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: BarangayCreateOrConnectWithoutMunicipalInput | BarangayCreateOrConnectWithoutMunicipalInput[]
    upsert?: BarangayUpsertWithWhereUniqueWithoutMunicipalInput | BarangayUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: BarangayCreateManyMunicipalInputEnvelope
    set?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    disconnect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    delete?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    connect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    update?: BarangayUpdateWithWhereUniqueWithoutMunicipalInput | BarangayUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: BarangayUpdateManyWithWhereWithoutMunicipalInput | BarangayUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: BarangayScalarWhereInput | BarangayScalarWhereInput[]
  }

  export type UserUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput> | UserCreateWithoutMunicipalInput[] | UserUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutMunicipalInput | UserCreateOrConnectWithoutMunicipalInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutMunicipalInput | UserUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: UserCreateManyMunicipalInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutMunicipalInput | UserUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: UserUpdateManyWithWhereWithoutMunicipalInput | UserUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput> | LineCreateWithoutMunicipalInput[] | LineUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: LineCreateOrConnectWithoutMunicipalInput | LineCreateOrConnectWithoutMunicipalInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutMunicipalInput | LineUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: LineCreateManyMunicipalInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutMunicipalInput | LineUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: LineUpdateManyWithWhereWithoutMunicipalInput | LineUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type BarangayUncheckedUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput> | BarangayCreateWithoutMunicipalInput[] | BarangayUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: BarangayCreateOrConnectWithoutMunicipalInput | BarangayCreateOrConnectWithoutMunicipalInput[]
    upsert?: BarangayUpsertWithWhereUniqueWithoutMunicipalInput | BarangayUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: BarangayCreateManyMunicipalInputEnvelope
    set?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    disconnect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    delete?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    connect?: BarangayWhereUniqueInput | BarangayWhereUniqueInput[]
    update?: BarangayUpdateWithWhereUniqueWithoutMunicipalInput | BarangayUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: BarangayUpdateManyWithWhereWithoutMunicipalInput | BarangayUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: BarangayScalarWhereInput | BarangayScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput> | UserCreateWithoutMunicipalInput[] | UserUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutMunicipalInput | UserCreateOrConnectWithoutMunicipalInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutMunicipalInput | UserUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: UserCreateManyMunicipalInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutMunicipalInput | UserUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: UserUpdateManyWithWhereWithoutMunicipalInput | UserUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUncheckedUpdateManyWithoutMunicipalNestedInput = {
    create?: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput> | LineCreateWithoutMunicipalInput[] | LineUncheckedCreateWithoutMunicipalInput[]
    connectOrCreate?: LineCreateOrConnectWithoutMunicipalInput | LineCreateOrConnectWithoutMunicipalInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutMunicipalInput | LineUpsertWithWhereUniqueWithoutMunicipalInput[]
    createMany?: LineCreateManyMunicipalInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutMunicipalInput | LineUpdateWithWhereUniqueWithoutMunicipalInput[]
    updateMany?: LineUpdateManyWithWhereWithoutMunicipalInput | LineUpdateManyWithWhereWithoutMunicipalInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type MunicipalCreateNestedOneWithoutBarangaysInput = {
    create?: XOR<MunicipalCreateWithoutBarangaysInput, MunicipalUncheckedCreateWithoutBarangaysInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutBarangaysInput
    connect?: MunicipalWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutBarangayInput = {
    create?: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput> | UserCreateWithoutBarangayInput[] | UserUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBarangayInput | UserCreateOrConnectWithoutBarangayInput[]
    createMany?: UserCreateManyBarangayInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineCreateNestedManyWithoutBarangayInput = {
    create?: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput> | LineCreateWithoutBarangayInput[] | LineUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: LineCreateOrConnectWithoutBarangayInput | LineCreateOrConnectWithoutBarangayInput[]
    createMany?: LineCreateManyBarangayInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutBarangayInput = {
    create?: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput> | UserCreateWithoutBarangayInput[] | UserUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBarangayInput | UserCreateOrConnectWithoutBarangayInput[]
    createMany?: UserCreateManyBarangayInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type LineUncheckedCreateNestedManyWithoutBarangayInput = {
    create?: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput> | LineCreateWithoutBarangayInput[] | LineUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: LineCreateOrConnectWithoutBarangayInput | LineCreateOrConnectWithoutBarangayInput[]
    createMany?: LineCreateManyBarangayInputEnvelope
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
  }

  export type MunicipalUpdateOneWithoutBarangaysNestedInput = {
    create?: XOR<MunicipalCreateWithoutBarangaysInput, MunicipalUncheckedCreateWithoutBarangaysInput>
    connectOrCreate?: MunicipalCreateOrConnectWithoutBarangaysInput
    upsert?: MunicipalUpsertWithoutBarangaysInput
    disconnect?: MunicipalWhereInput | boolean
    delete?: MunicipalWhereInput | boolean
    connect?: MunicipalWhereUniqueInput
    update?: XOR<XOR<MunicipalUpdateToOneWithWhereWithoutBarangaysInput, MunicipalUpdateWithoutBarangaysInput>, MunicipalUncheckedUpdateWithoutBarangaysInput>
  }

  export type UserUpdateManyWithoutBarangayNestedInput = {
    create?: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput> | UserCreateWithoutBarangayInput[] | UserUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBarangayInput | UserCreateOrConnectWithoutBarangayInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBarangayInput | UserUpsertWithWhereUniqueWithoutBarangayInput[]
    createMany?: UserCreateManyBarangayInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBarangayInput | UserUpdateWithWhereUniqueWithoutBarangayInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBarangayInput | UserUpdateManyWithWhereWithoutBarangayInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUpdateManyWithoutBarangayNestedInput = {
    create?: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput> | LineCreateWithoutBarangayInput[] | LineUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: LineCreateOrConnectWithoutBarangayInput | LineCreateOrConnectWithoutBarangayInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutBarangayInput | LineUpsertWithWhereUniqueWithoutBarangayInput[]
    createMany?: LineCreateManyBarangayInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutBarangayInput | LineUpdateWithWhereUniqueWithoutBarangayInput[]
    updateMany?: LineUpdateManyWithWhereWithoutBarangayInput | LineUpdateManyWithWhereWithoutBarangayInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutBarangayNestedInput = {
    create?: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput> | UserCreateWithoutBarangayInput[] | UserUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBarangayInput | UserCreateOrConnectWithoutBarangayInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBarangayInput | UserUpsertWithWhereUniqueWithoutBarangayInput[]
    createMany?: UserCreateManyBarangayInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBarangayInput | UserUpdateWithWhereUniqueWithoutBarangayInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBarangayInput | UserUpdateManyWithWhereWithoutBarangayInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type LineUncheckedUpdateManyWithoutBarangayNestedInput = {
    create?: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput> | LineCreateWithoutBarangayInput[] | LineUncheckedCreateWithoutBarangayInput[]
    connectOrCreate?: LineCreateOrConnectWithoutBarangayInput | LineCreateOrConnectWithoutBarangayInput[]
    upsert?: LineUpsertWithWhereUniqueWithoutBarangayInput | LineUpsertWithWhereUniqueWithoutBarangayInput[]
    createMany?: LineCreateManyBarangayInputEnvelope
    set?: LineWhereUniqueInput | LineWhereUniqueInput[]
    disconnect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    delete?: LineWhereUniqueInput | LineWhereUniqueInput[]
    connect?: LineWhereUniqueInput | LineWhereUniqueInput[]
    update?: LineUpdateWithWhereUniqueWithoutBarangayInput | LineUpdateWithWhereUniqueWithoutBarangayInput[]
    updateMany?: LineUpdateManyWithWhereWithoutBarangayInput | LineUpdateManyWithWhereWithoutBarangayInput[]
    deleteMany?: LineScalarWhereInput | LineScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccomplishmentInput = {
    create?: XOR<UserCreateWithoutAccomplishmentInput, UserUncheckedCreateWithoutAccomplishmentInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccomplishmentInput
    connect?: UserWhereUniqueInput
  }

  export type AccomplishmentResponseCreateNestedManyWithoutAccomplishmentInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput> | AccomplishmentResponseCreateWithoutAccomplishmentInput[] | AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput | AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput[]
    createMany?: AccomplishmentResponseCreateManyAccomplishmentInputEnvelope
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
  }

  export type AccomplishmentResponseUncheckedCreateNestedManyWithoutAccomplishmentInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput> | AccomplishmentResponseCreateWithoutAccomplishmentInput[] | AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput | AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput[]
    createMany?: AccomplishmentResponseCreateManyAccomplishmentInputEnvelope
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutAccomplishmentNestedInput = {
    create?: XOR<UserCreateWithoutAccomplishmentInput, UserUncheckedCreateWithoutAccomplishmentInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccomplishmentInput
    upsert?: UserUpsertWithoutAccomplishmentInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccomplishmentInput, UserUpdateWithoutAccomplishmentInput>, UserUncheckedUpdateWithoutAccomplishmentInput>
  }

  export type AccomplishmentResponseUpdateManyWithoutAccomplishmentNestedInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput> | AccomplishmentResponseCreateWithoutAccomplishmentInput[] | AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput | AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput[]
    upsert?: AccomplishmentResponseUpsertWithWhereUniqueWithoutAccomplishmentInput | AccomplishmentResponseUpsertWithWhereUniqueWithoutAccomplishmentInput[]
    createMany?: AccomplishmentResponseCreateManyAccomplishmentInputEnvelope
    set?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    disconnect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    delete?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    update?: AccomplishmentResponseUpdateWithWhereUniqueWithoutAccomplishmentInput | AccomplishmentResponseUpdateWithWhereUniqueWithoutAccomplishmentInput[]
    updateMany?: AccomplishmentResponseUpdateManyWithWhereWithoutAccomplishmentInput | AccomplishmentResponseUpdateManyWithWhereWithoutAccomplishmentInput[]
    deleteMany?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
  }

  export type AccomplishmentResponseUncheckedUpdateManyWithoutAccomplishmentNestedInput = {
    create?: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput> | AccomplishmentResponseCreateWithoutAccomplishmentInput[] | AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput[]
    connectOrCreate?: AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput | AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput[]
    upsert?: AccomplishmentResponseUpsertWithWhereUniqueWithoutAccomplishmentInput | AccomplishmentResponseUpsertWithWhereUniqueWithoutAccomplishmentInput[]
    createMany?: AccomplishmentResponseCreateManyAccomplishmentInputEnvelope
    set?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    disconnect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    delete?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    connect?: AccomplishmentResponseWhereUniqueInput | AccomplishmentResponseWhereUniqueInput[]
    update?: AccomplishmentResponseUpdateWithWhereUniqueWithoutAccomplishmentInput | AccomplishmentResponseUpdateWithWhereUniqueWithoutAccomplishmentInput[]
    updateMany?: AccomplishmentResponseUpdateManyWithWhereWithoutAccomplishmentInput | AccomplishmentResponseUpdateManyWithWhereWithoutAccomplishmentInput[]
    deleteMany?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutHeadResponseInput = {
    create?: XOR<UserCreateWithoutHeadResponseInput, UserUncheckedCreateWithoutHeadResponseInput>
    connectOrCreate?: UserCreateOrConnectWithoutHeadResponseInput
    connect?: UserWhereUniqueInput
  }

  export type AccomplishmentCreateNestedOneWithoutAccomplishmentResponseInput = {
    create?: XOR<AccomplishmentCreateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedCreateWithoutAccomplishmentResponseInput>
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutAccomplishmentResponseInput
    connect?: AccomplishmentWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutHeadResponseNestedInput = {
    create?: XOR<UserCreateWithoutHeadResponseInput, UserUncheckedCreateWithoutHeadResponseInput>
    connectOrCreate?: UserCreateOrConnectWithoutHeadResponseInput
    upsert?: UserUpsertWithoutHeadResponseInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHeadResponseInput, UserUpdateWithoutHeadResponseInput>, UserUncheckedUpdateWithoutHeadResponseInput>
  }

  export type AccomplishmentUpdateOneRequiredWithoutAccomplishmentResponseNestedInput = {
    create?: XOR<AccomplishmentCreateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedCreateWithoutAccomplishmentResponseInput>
    connectOrCreate?: AccomplishmentCreateOrConnectWithoutAccomplishmentResponseInput
    upsert?: AccomplishmentUpsertWithoutAccomplishmentResponseInput
    connect?: AccomplishmentWhereUniqueInput
    update?: XOR<XOR<AccomplishmentUpdateToOneWithWhereWithoutAccomplishmentResponseInput, AccomplishmentUpdateWithoutAccomplishmentResponseInput>, AccomplishmentUncheckedUpdateWithoutAccomplishmentResponseInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BarangayCreateWithoutLineInput = {
    id: string
    name: string
    Municipal?: MunicipalCreateNestedOneWithoutBarangaysInput
    User?: UserCreateNestedManyWithoutBarangayInput
  }

  export type BarangayUncheckedCreateWithoutLineInput = {
    id: string
    name: string
    municipalId?: string | null
    User?: UserUncheckedCreateNestedManyWithoutBarangayInput
  }

  export type BarangayCreateOrConnectWithoutLineInput = {
    where: BarangayWhereUniqueInput
    create: XOR<BarangayCreateWithoutLineInput, BarangayUncheckedCreateWithoutLineInput>
  }

  export type MunicipalCreateWithoutLineInput = {
    id: string
    name: string
    Province?: ProvinceCreateNestedOneWithoutMunicipalsInput
    barangays?: BarangayCreateNestedManyWithoutMunicipalInput
    User?: UserCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUncheckedCreateWithoutLineInput = {
    id: string
    name: string
    provinceId?: string | null
    barangays?: BarangayUncheckedCreateNestedManyWithoutMunicipalInput
    User?: UserUncheckedCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalCreateOrConnectWithoutLineInput = {
    where: MunicipalWhereUniqueInput
    create: XOR<MunicipalCreateWithoutLineInput, MunicipalUncheckedCreateWithoutLineInput>
  }

  export type ProvinceCreateWithoutLineInput = {
    id: string
    name: string
    Region?: RegionCreateNestedOneWithoutProvicesInput
    municipals?: MunicipalCreateNestedManyWithoutProvinceInput
    User?: UserCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUncheckedCreateWithoutLineInput = {
    id: string
    name: string
    regionId?: string | null
    municipals?: MunicipalUncheckedCreateNestedManyWithoutProvinceInput
    User?: UserUncheckedCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceCreateOrConnectWithoutLineInput = {
    where: ProvinceWhereUniqueInput
    create: XOR<ProvinceCreateWithoutLineInput, ProvinceUncheckedCreateWithoutLineInput>
  }

  export type RegionCreateWithoutLineInput = {
    id: string
    name: string
    provices?: ProvinceCreateNestedManyWithoutRegionInput
    User?: UserCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutLineInput = {
    id: string
    name: string
    provices?: ProvinceUncheckedCreateNestedManyWithoutRegionInput
    User?: UserUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutLineInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutLineInput, RegionUncheckedCreateWithoutLineInput>
  }

  export type DepartmentCreateWithoutLineInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutLineInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutLineInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput>
  }

  export type DepartmentCreateManyLineInputEnvelope = {
    data: DepartmentCreateManyLineInput | DepartmentCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutLineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    User?: UserCreateNestedOneWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutLineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    User?: UserUncheckedCreateNestedOneWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutLineInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput>
  }

  export type AccountCreateManyLineInputEnvelope = {
    data: AccountCreateManyLineInput | AccountCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutLineInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutLineInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutLineInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput>
  }

  export type UserCreateManyLineInputEnvelope = {
    data: UserCreateManyLineInput | UserCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type PositionCreateWithoutLineInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutLineInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutLineInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput>
  }

  export type PositionCreateManyLineInputEnvelope = {
    data: PositionCreateManyLineInput | PositionCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type SalaryGradeCreateWithoutLineInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateWithoutLineInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionUncheckedCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeCreateOrConnectWithoutLineInput = {
    where: SalaryGradeWhereUniqueInput
    create: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput>
  }

  export type SalaryGradeCreateManyLineInputEnvelope = {
    data: SalaryGradeCreateManyLineInput | SalaryGradeCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type AnnouncementCreateWithoutLineInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    important?: boolean
    author: UserCreateNestedOneWithoutAnnouncementInput
    unit?: DepartmentCreateNestedOneWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutLineInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type AnnouncementCreateOrConnectWithoutLineInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput>
  }

  export type AnnouncementCreateManyLineInputEnvelope = {
    data: AnnouncementCreateManyLineInput | AnnouncementCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type BirthdayNoticeResponseCreateWithoutLineInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    Sender: UserCreateNestedOneWithoutBdaySenderInput
    Recipient?: UserCreateNestedOneWithoutBdayRecipientInput
  }

  export type BirthdayNoticeResponseUncheckedCreateWithoutLineInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    recipientId?: string | null
  }

  export type BirthdayNoticeResponseCreateOrConnectWithoutLineInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    create: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput>
  }

  export type BirthdayNoticeResponseCreateManyLineInputEnvelope = {
    data: BirthdayNoticeResponseCreateManyLineInput | BirthdayNoticeResponseCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type InvitationLinkCreateWithoutLineInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
  }

  export type InvitationLinkUncheckedCreateWithoutLineInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
  }

  export type InvitationLinkCreateOrConnectWithoutLineInput = {
    where: InvitationLinkWhereUniqueInput
    create: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput>
  }

  export type InvitationLinkCreateManyLineInputEnvelope = {
    data: InvitationLinkCreateManyLineInput | InvitationLinkCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesCreateWithoutLineInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutLineInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutLineInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput>
  }

  export type SuppliesCreateManyLineInputEnvelope = {
    data: SuppliesCreateManyLineInput | SuppliesCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type SupplyBatchOrderCreateWithoutLineInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    user?: UserCreateNestedOneWithoutSupplyBatchOrderInput
    order?: SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput
    InventoryBox?: InventoryBoxCreateNestedOneWithoutBatchInput
  }

  export type SupplyBatchOrderUncheckedCreateWithoutLineInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    inventoryBoxId?: string | null
    order?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderCreateOrConnectWithoutLineInput = {
    where: SupplyBatchOrderWhereUniqueInput
    create: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput>
  }

  export type SupplyBatchOrderCreateManyLineInputEnvelope = {
    data: SupplyBatchOrderCreateManyLineInput | SupplyBatchOrderCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type GroupCreateWithoutLineInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    unit: DepartmentCreateNestedOneWithoutGroupInput
    users?: UserCreateNestedManyWithoutGroupInput
    chief?: UserCreateNestedOneWithoutChiefInput
  }

  export type GroupUncheckedCreateWithoutLineInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    userId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutGroupInput
  }

  export type GroupCreateOrConnectWithoutLineInput = {
    where: GroupWhereUniqueInput
    create: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput>
  }

  export type GroupCreateManyLineInputEnvelope = {
    data: GroupCreateManyLineInput | GroupCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type AdminProfileCreateWithoutLineInput = {
    id?: string
    username: string
  }

  export type AdminProfileUncheckedCreateWithoutLineInput = {
    id?: string
    username: string
  }

  export type AdminProfileCreateOrConnectWithoutLineInput = {
    where: AdminProfileWhereUniqueInput
    create: XOR<AdminProfileCreateWithoutLineInput, AdminProfileUncheckedCreateWithoutLineInput>
  }

  export type InventoryBoxCreateWithoutLineInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutLineInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutLineInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput>
  }

  export type InventoryBoxCreateManyLineInputEnvelope = {
    data: InventoryBoxCreateManyLineInput | InventoryBoxCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesDataSetCreateWithoutLineInput = {
    id?: string
    title: string
    timestamp?: Date | string
    unit?: SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput
    container: InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput
    list?: SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateWithoutLineInput = {
    id?: string
    title: string
    timestamp?: Date | string
    inventoryBoxId: string
    unit?: SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    list?: SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetCreateOrConnectWithoutLineInput = {
    where: SuppliesDataSetWhereUniqueInput
    create: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput>
  }

  export type SuppliesDataSetCreateManyLineInputEnvelope = {
    data: SuppliesDataSetCreateManyLineInput | SuppliesDataSetCreateManyLineInput[]
    skipDuplicates?: boolean
  }

  export type BarangayUpsertWithoutLineInput = {
    update: XOR<BarangayUpdateWithoutLineInput, BarangayUncheckedUpdateWithoutLineInput>
    create: XOR<BarangayCreateWithoutLineInput, BarangayUncheckedCreateWithoutLineInput>
    where?: BarangayWhereInput
  }

  export type BarangayUpdateToOneWithWhereWithoutLineInput = {
    where?: BarangayWhereInput
    data: XOR<BarangayUpdateWithoutLineInput, BarangayUncheckedUpdateWithoutLineInput>
  }

  export type BarangayUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Municipal?: MunicipalUpdateOneWithoutBarangaysNestedInput
    User?: UserUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUncheckedUpdateManyWithoutBarangayNestedInput
  }

  export type MunicipalUpsertWithoutLineInput = {
    update: XOR<MunicipalUpdateWithoutLineInput, MunicipalUncheckedUpdateWithoutLineInput>
    create: XOR<MunicipalCreateWithoutLineInput, MunicipalUncheckedCreateWithoutLineInput>
    where?: MunicipalWhereInput
  }

  export type MunicipalUpdateToOneWithWhereWithoutLineInput = {
    where?: MunicipalWhereInput
    data: XOR<MunicipalUpdateWithoutLineInput, MunicipalUncheckedUpdateWithoutLineInput>
  }

  export type MunicipalUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Province?: ProvinceUpdateOneWithoutMunicipalsNestedInput
    barangays?: BarangayUpdateManyWithoutMunicipalNestedInput
    User?: UserUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangays?: BarangayUncheckedUpdateManyWithoutMunicipalNestedInput
    User?: UserUncheckedUpdateManyWithoutMunicipalNestedInput
  }

  export type ProvinceUpsertWithoutLineInput = {
    update: XOR<ProvinceUpdateWithoutLineInput, ProvinceUncheckedUpdateWithoutLineInput>
    create: XOR<ProvinceCreateWithoutLineInput, ProvinceUncheckedCreateWithoutLineInput>
    where?: ProvinceWhereInput
  }

  export type ProvinceUpdateToOneWithWhereWithoutLineInput = {
    where?: ProvinceWhereInput
    data: XOR<ProvinceUpdateWithoutLineInput, ProvinceUncheckedUpdateWithoutLineInput>
  }

  export type ProvinceUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneWithoutProvicesNestedInput
    municipals?: MunicipalUpdateManyWithoutProvinceNestedInput
    User?: UserUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipals?: MunicipalUncheckedUpdateManyWithoutProvinceNestedInput
    User?: UserUncheckedUpdateManyWithoutProvinceNestedInput
  }

  export type RegionUpsertWithoutLineInput = {
    update: XOR<RegionUpdateWithoutLineInput, RegionUncheckedUpdateWithoutLineInput>
    create: XOR<RegionCreateWithoutLineInput, RegionUncheckedCreateWithoutLineInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutLineInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutLineInput, RegionUncheckedUpdateWithoutLineInput>
  }

  export type RegionUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUpdateManyWithoutRegionNestedInput
    User?: UserUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUncheckedUpdateManyWithoutRegionNestedInput
    User?: UserUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type DepartmentUpsertWithWhereUniqueWithoutLineInput = {
    where: DepartmentWhereUniqueInput
    update: XOR<DepartmentUpdateWithoutLineInput, DepartmentUncheckedUpdateWithoutLineInput>
    create: XOR<DepartmentCreateWithoutLineInput, DepartmentUncheckedCreateWithoutLineInput>
  }

  export type DepartmentUpdateWithWhereUniqueWithoutLineInput = {
    where: DepartmentWhereUniqueInput
    data: XOR<DepartmentUpdateWithoutLineInput, DepartmentUncheckedUpdateWithoutLineInput>
  }

  export type DepartmentUpdateManyWithWhereWithoutLineInput = {
    where: DepartmentScalarWhereInput
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyWithoutLineInput>
  }

  export type DepartmentScalarWhereInput = {
    AND?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    OR?: DepartmentScalarWhereInput[]
    NOT?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    id?: StringFilter<"Department"> | string
    name?: StringFilter<"Department"> | string
    description?: StringNullableFilter<"Department"> | string | null
    createdAt?: DateTimeFilter<"Department"> | Date | string
    headId?: StringNullableFilter<"Department"> | string | null
    idCode?: StringNullableFilter<"Department"> | string | null
    lineId?: StringNullableFilter<"Department"> | string | null
  }

  export type AccountUpsertWithWhereUniqueWithoutLineInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutLineInput, AccountUncheckedUpdateWithoutLineInput>
    create: XOR<AccountCreateWithoutLineInput, AccountUncheckedCreateWithoutLineInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutLineInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutLineInput, AccountUncheckedUpdateWithoutLineInput>
  }

  export type AccountUpdateManyWithWhereWithoutLineInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutLineInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    username?: StringFilter<"Account"> | string
    password?: StringFilter<"Account"> | string
    createdAt?: DateTimeFilter<"Account"> | Date | string
    status?: IntFilter<"Account"> | number
    role?: StringFilter<"Account"> | string
    active?: BoolFilter<"Account"> | boolean
    lineId?: StringNullableFilter<"Account"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutLineInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutLineInput, UserUncheckedUpdateWithoutLineInput>
    create: XOR<UserCreateWithoutLineInput, UserUncheckedCreateWithoutLineInput>
  }

  export type UserUpdateWithWhereUniqueWithoutLineInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutLineInput, UserUncheckedUpdateWithoutLineInput>
  }

  export type UserUpdateManyWithWhereWithoutLineInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutLineInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    middleName?: StringNullableFilter<"User"> | string | null
    suffix?: StringNullableFilter<"User"> | string | null
    birthDate?: DateTimeNullableFilter<"User"> | Date | string | null
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    gender?: StringNullableFilter<"User"> | string | null
    profilePicture?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    level?: IntFilter<"User"> | number
    type?: StringFilter<"User"> | string
    step?: IntFilter<"User"> | number
    status?: StringFilter<"User"> | string
    departmentId?: StringNullableFilter<"User"> | string | null
    positionId?: StringNullableFilter<"User"> | string | null
    salaryGradeId?: StringNullableFilter<"User"> | string | null
    accountId?: StringNullableFilter<"User"> | string | null
    regionId?: StringNullableFilter<"User"> | string | null
    municipalId?: StringNullableFilter<"User"> | string | null
    provinceId?: StringNullableFilter<"User"> | string | null
    barangayId?: StringNullableFilter<"User"> | string | null
    lineId?: StringNullableFilter<"User"> | string | null
    privilegeId?: StringNullableFilter<"User"> | string | null
    groupId?: StringNullableFilter<"User"> | string | null
  }

  export type PositionUpsertWithWhereUniqueWithoutLineInput = {
    where: PositionWhereUniqueInput
    update: XOR<PositionUpdateWithoutLineInput, PositionUncheckedUpdateWithoutLineInput>
    create: XOR<PositionCreateWithoutLineInput, PositionUncheckedCreateWithoutLineInput>
  }

  export type PositionUpdateWithWhereUniqueWithoutLineInput = {
    where: PositionWhereUniqueInput
    data: XOR<PositionUpdateWithoutLineInput, PositionUncheckedUpdateWithoutLineInput>
  }

  export type PositionUpdateManyWithWhereWithoutLineInput = {
    where: PositionScalarWhereInput
    data: XOR<PositionUpdateManyMutationInput, PositionUncheckedUpdateManyWithoutLineInput>
  }

  export type PositionScalarWhereInput = {
    AND?: PositionScalarWhereInput | PositionScalarWhereInput[]
    OR?: PositionScalarWhereInput[]
    NOT?: PositionScalarWhereInput | PositionScalarWhereInput[]
    id?: StringFilter<"Position"> | string
    name?: StringFilter<"Position"> | string
    description?: StringNullableFilter<"Position"> | string | null
    max?: IntFilter<"Position"> | number
    createdAt?: DateTimeFilter<"Position"> | Date | string
    itemNumber?: StringNullableFilter<"Position"> | string | null
    salaryGradeId?: StringNullableFilter<"Position"> | string | null
    plantilla?: BoolFilter<"Position"> | boolean
    lineId?: StringNullableFilter<"Position"> | string | null
    departmentId?: StringNullableFilter<"Position"> | string | null
  }

  export type SalaryGradeUpsertWithWhereUniqueWithoutLineInput = {
    where: SalaryGradeWhereUniqueInput
    update: XOR<SalaryGradeUpdateWithoutLineInput, SalaryGradeUncheckedUpdateWithoutLineInput>
    create: XOR<SalaryGradeCreateWithoutLineInput, SalaryGradeUncheckedCreateWithoutLineInput>
  }

  export type SalaryGradeUpdateWithWhereUniqueWithoutLineInput = {
    where: SalaryGradeWhereUniqueInput
    data: XOR<SalaryGradeUpdateWithoutLineInput, SalaryGradeUncheckedUpdateWithoutLineInput>
  }

  export type SalaryGradeUpdateManyWithWhereWithoutLineInput = {
    where: SalaryGradeScalarWhereInput
    data: XOR<SalaryGradeUpdateManyMutationInput, SalaryGradeUncheckedUpdateManyWithoutLineInput>
  }

  export type SalaryGradeScalarWhereInput = {
    AND?: SalaryGradeScalarWhereInput | SalaryGradeScalarWhereInput[]
    OR?: SalaryGradeScalarWhereInput[]
    NOT?: SalaryGradeScalarWhereInput | SalaryGradeScalarWhereInput[]
    id?: StringFilter<"SalaryGrade"> | string
    grade?: IntFilter<"SalaryGrade"> | number
    amount?: FloatFilter<"SalaryGrade"> | number
    createdAt?: DateTimeFilter<"SalaryGrade"> | Date | string
    lineId?: StringNullableFilter<"SalaryGrade"> | string | null
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutLineInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutLineInput, AnnouncementUncheckedUpdateWithoutLineInput>
    create: XOR<AnnouncementCreateWithoutLineInput, AnnouncementUncheckedCreateWithoutLineInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutLineInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutLineInput, AnnouncementUncheckedUpdateWithoutLineInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutLineInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutLineInput>
  }

  export type AnnouncementScalarWhereInput = {
    AND?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
    OR?: AnnouncementScalarWhereInput[]
    NOT?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
    id?: StringFilter<"Announcement"> | string
    title?: StringFilter<"Announcement"> | string
    content?: StringFilter<"Announcement"> | string
    createdAt?: DateTimeFilter<"Announcement"> | Date | string
    authorId?: StringFilter<"Announcement"> | string
    lineId?: StringFilter<"Announcement"> | string
    path?: StringNullableFilter<"Announcement"> | string | null
    important?: BoolFilter<"Announcement"> | boolean
    departmentId?: StringNullableFilter<"Announcement"> | string | null
  }

  export type BirthdayNoticeResponseUpsertWithWhereUniqueWithoutLineInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    update: XOR<BirthdayNoticeResponseUpdateWithoutLineInput, BirthdayNoticeResponseUncheckedUpdateWithoutLineInput>
    create: XOR<BirthdayNoticeResponseCreateWithoutLineInput, BirthdayNoticeResponseUncheckedCreateWithoutLineInput>
  }

  export type BirthdayNoticeResponseUpdateWithWhereUniqueWithoutLineInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    data: XOR<BirthdayNoticeResponseUpdateWithoutLineInput, BirthdayNoticeResponseUncheckedUpdateWithoutLineInput>
  }

  export type BirthdayNoticeResponseUpdateManyWithWhereWithoutLineInput = {
    where: BirthdayNoticeResponseScalarWhereInput
    data: XOR<BirthdayNoticeResponseUpdateManyMutationInput, BirthdayNoticeResponseUncheckedUpdateManyWithoutLineInput>
  }

  export type BirthdayNoticeResponseScalarWhereInput = {
    AND?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
    OR?: BirthdayNoticeResponseScalarWhereInput[]
    NOT?: BirthdayNoticeResponseScalarWhereInput | BirthdayNoticeResponseScalarWhereInput[]
    id?: StringFilter<"BirthdayNoticeResponse"> | string
    message?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    like?: BoolFilter<"BirthdayNoticeResponse"> | boolean
    timestamp?: DateTimeFilter<"BirthdayNoticeResponse"> | Date | string
    senderId?: StringFilter<"BirthdayNoticeResponse"> | string
    recipientId?: StringNullableFilter<"BirthdayNoticeResponse"> | string | null
    lineId?: StringFilter<"BirthdayNoticeResponse"> | string
  }

  export type InvitationLinkUpsertWithWhereUniqueWithoutLineInput = {
    where: InvitationLinkWhereUniqueInput
    update: XOR<InvitationLinkUpdateWithoutLineInput, InvitationLinkUncheckedUpdateWithoutLineInput>
    create: XOR<InvitationLinkCreateWithoutLineInput, InvitationLinkUncheckedCreateWithoutLineInput>
  }

  export type InvitationLinkUpdateWithWhereUniqueWithoutLineInput = {
    where: InvitationLinkWhereUniqueInput
    data: XOR<InvitationLinkUpdateWithoutLineInput, InvitationLinkUncheckedUpdateWithoutLineInput>
  }

  export type InvitationLinkUpdateManyWithWhereWithoutLineInput = {
    where: InvitationLinkScalarWhereInput
    data: XOR<InvitationLinkUpdateManyMutationInput, InvitationLinkUncheckedUpdateManyWithoutLineInput>
  }

  export type InvitationLinkScalarWhereInput = {
    AND?: InvitationLinkScalarWhereInput | InvitationLinkScalarWhereInput[]
    OR?: InvitationLinkScalarWhereInput[]
    NOT?: InvitationLinkScalarWhereInput | InvitationLinkScalarWhereInput[]
    id?: StringFilter<"InvitationLink"> | string
    code?: StringFilter<"InvitationLink"> | string
    createdAt?: DateTimeFilter<"InvitationLink"> | Date | string
    expiresAt?: DateTimeNullableFilter<"InvitationLink"> | Date | string | null
    used?: BoolFilter<"InvitationLink"> | boolean
    url?: StringFilter<"InvitationLink"> | string
    lineId?: StringFilter<"InvitationLink"> | string
  }

  export type SuppliesUpsertWithWhereUniqueWithoutLineInput = {
    where: SuppliesWhereUniqueInput
    update: XOR<SuppliesUpdateWithoutLineInput, SuppliesUncheckedUpdateWithoutLineInput>
    create: XOR<SuppliesCreateWithoutLineInput, SuppliesUncheckedCreateWithoutLineInput>
  }

  export type SuppliesUpdateWithWhereUniqueWithoutLineInput = {
    where: SuppliesWhereUniqueInput
    data: XOR<SuppliesUpdateWithoutLineInput, SuppliesUncheckedUpdateWithoutLineInput>
  }

  export type SuppliesUpdateManyWithWhereWithoutLineInput = {
    where: SuppliesScalarWhereInput
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyWithoutLineInput>
  }

  export type SuppliesScalarWhereInput = {
    AND?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
    OR?: SuppliesScalarWhereInput[]
    NOT?: SuppliesScalarWhereInput | SuppliesScalarWhereInput[]
    id?: StringFilter<"Supplies"> | string
    code?: IntFilter<"Supplies"> | number
    consumable?: BoolFilter<"Supplies"> | boolean
    item?: StringFilter<"Supplies"> | string
    description?: StringNullableFilter<"Supplies"> | string | null
    quantity?: IntFilter<"Supplies"> | number
    notifyAtStockOf?: IntFilter<"Supplies"> | number
    price?: FloatFilter<"Supplies"> | number
    createdAt?: DateTimeFilter<"Supplies"> | Date | string
    updatedAt?: DateTimeFilter<"Supplies"> | Date | string
    lineId?: StringFilter<"Supplies"> | string
    userId?: StringNullableFilter<"Supplies"> | string | null
    condition?: StringNullableFilter<"Supplies"> | string | null
    status?: StringNullableFilter<"Supplies"> | string | null
    suppliesCategoryId?: StringNullableFilter<"Supplies"> | string | null
    suppliesQualityId?: StringNullableFilter<"Supplies"> | string | null
    suppliesDataSetId?: StringNullableFilter<"Supplies"> | string | null
  }

  export type SupplyBatchOrderUpsertWithWhereUniqueWithoutLineInput = {
    where: SupplyBatchOrderWhereUniqueInput
    update: XOR<SupplyBatchOrderUpdateWithoutLineInput, SupplyBatchOrderUncheckedUpdateWithoutLineInput>
    create: XOR<SupplyBatchOrderCreateWithoutLineInput, SupplyBatchOrderUncheckedCreateWithoutLineInput>
  }

  export type SupplyBatchOrderUpdateWithWhereUniqueWithoutLineInput = {
    where: SupplyBatchOrderWhereUniqueInput
    data: XOR<SupplyBatchOrderUpdateWithoutLineInput, SupplyBatchOrderUncheckedUpdateWithoutLineInput>
  }

  export type SupplyBatchOrderUpdateManyWithWhereWithoutLineInput = {
    where: SupplyBatchOrderScalarWhereInput
    data: XOR<SupplyBatchOrderUpdateManyMutationInput, SupplyBatchOrderUncheckedUpdateManyWithoutLineInput>
  }

  export type SupplyBatchOrderScalarWhereInput = {
    AND?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
    OR?: SupplyBatchOrderScalarWhereInput[]
    NOT?: SupplyBatchOrderScalarWhereInput | SupplyBatchOrderScalarWhereInput[]
    id?: StringFilter<"SupplyBatchOrder"> | string
    timestamp?: DateTimeFilter<"SupplyBatchOrder"> | Date | string
    title?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    userId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    status?: IntFilter<"SupplyBatchOrder"> | number
    lineId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
    inventoryBoxId?: StringNullableFilter<"SupplyBatchOrder"> | string | null
  }

  export type GroupUpsertWithWhereUniqueWithoutLineInput = {
    where: GroupWhereUniqueInput
    update: XOR<GroupUpdateWithoutLineInput, GroupUncheckedUpdateWithoutLineInput>
    create: XOR<GroupCreateWithoutLineInput, GroupUncheckedCreateWithoutLineInput>
  }

  export type GroupUpdateWithWhereUniqueWithoutLineInput = {
    where: GroupWhereUniqueInput
    data: XOR<GroupUpdateWithoutLineInput, GroupUncheckedUpdateWithoutLineInput>
  }

  export type GroupUpdateManyWithWhereWithoutLineInput = {
    where: GroupScalarWhereInput
    data: XOR<GroupUpdateManyMutationInput, GroupUncheckedUpdateManyWithoutLineInput>
  }

  export type GroupScalarWhereInput = {
    AND?: GroupScalarWhereInput | GroupScalarWhereInput[]
    OR?: GroupScalarWhereInput[]
    NOT?: GroupScalarWhereInput | GroupScalarWhereInput[]
    id?: StringFilter<"Group"> | string
    departmentId?: StringFilter<"Group"> | string
    name?: StringNullableFilter<"Group"> | string | null
    createdAt?: DateTimeFilter<"Group"> | Date | string
    lineId?: StringNullableFilter<"Group"> | string | null
    userId?: StringNullableFilter<"Group"> | string | null
  }

  export type AdminProfileUpsertWithoutLineInput = {
    update: XOR<AdminProfileUpdateWithoutLineInput, AdminProfileUncheckedUpdateWithoutLineInput>
    create: XOR<AdminProfileCreateWithoutLineInput, AdminProfileUncheckedCreateWithoutLineInput>
    where?: AdminProfileWhereInput
  }

  export type AdminProfileUpdateToOneWithWhereWithoutLineInput = {
    where?: AdminProfileWhereInput
    data: XOR<AdminProfileUpdateWithoutLineInput, AdminProfileUncheckedUpdateWithoutLineInput>
  }

  export type AdminProfileUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type AdminProfileUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryBoxUpsertWithWhereUniqueWithoutLineInput = {
    where: InventoryBoxWhereUniqueInput
    update: XOR<InventoryBoxUpdateWithoutLineInput, InventoryBoxUncheckedUpdateWithoutLineInput>
    create: XOR<InventoryBoxCreateWithoutLineInput, InventoryBoxUncheckedCreateWithoutLineInput>
  }

  export type InventoryBoxUpdateWithWhereUniqueWithoutLineInput = {
    where: InventoryBoxWhereUniqueInput
    data: XOR<InventoryBoxUpdateWithoutLineInput, InventoryBoxUncheckedUpdateWithoutLineInput>
  }

  export type InventoryBoxUpdateManyWithWhereWithoutLineInput = {
    where: InventoryBoxScalarWhereInput
    data: XOR<InventoryBoxUpdateManyMutationInput, InventoryBoxUncheckedUpdateManyWithoutLineInput>
  }

  export type InventoryBoxScalarWhereInput = {
    AND?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
    OR?: InventoryBoxScalarWhereInput[]
    NOT?: InventoryBoxScalarWhereInput | InventoryBoxScalarWhereInput[]
    id?: StringFilter<"InventoryBox"> | string
    name?: StringFilter<"InventoryBox"> | string
    code?: IntFilter<"InventoryBox"> | number
    createdAt?: DateTimeFilter<"InventoryBox"> | Date | string
    lineId?: StringFilter<"InventoryBox"> | string
    userId?: StringFilter<"InventoryBox"> | string
    departmentId?: StringNullableFilter<"InventoryBox"> | string | null
  }

  export type SuppliesDataSetUpsertWithWhereUniqueWithoutLineInput = {
    where: SuppliesDataSetWhereUniqueInput
    update: XOR<SuppliesDataSetUpdateWithoutLineInput, SuppliesDataSetUncheckedUpdateWithoutLineInput>
    create: XOR<SuppliesDataSetCreateWithoutLineInput, SuppliesDataSetUncheckedCreateWithoutLineInput>
  }

  export type SuppliesDataSetUpdateWithWhereUniqueWithoutLineInput = {
    where: SuppliesDataSetWhereUniqueInput
    data: XOR<SuppliesDataSetUpdateWithoutLineInput, SuppliesDataSetUncheckedUpdateWithoutLineInput>
  }

  export type SuppliesDataSetUpdateManyWithWhereWithoutLineInput = {
    where: SuppliesDataSetScalarWhereInput
    data: XOR<SuppliesDataSetUpdateManyMutationInput, SuppliesDataSetUncheckedUpdateManyWithoutLineInput>
  }

  export type SuppliesDataSetScalarWhereInput = {
    AND?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
    OR?: SuppliesDataSetScalarWhereInput[]
    NOT?: SuppliesDataSetScalarWhereInput | SuppliesDataSetScalarWhereInput[]
    id?: StringFilter<"SuppliesDataSet"> | string
    title?: StringFilter<"SuppliesDataSet"> | string
    timestamp?: DateTimeFilter<"SuppliesDataSet"> | Date | string
    lineId?: StringFilter<"SuppliesDataSet"> | string
    inventoryBoxId?: StringFilter<"SuppliesDataSet"> | string
  }

  export type LineCreateWithoutInvitationLinkInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutInvitationLinkInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutInvitationLinkInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutInvitationLinkInput, LineUncheckedCreateWithoutInvitationLinkInput>
  }

  export type LineUpsertWithoutInvitationLinkInput = {
    update: XOR<LineUpdateWithoutInvitationLinkInput, LineUncheckedUpdateWithoutInvitationLinkInput>
    create: XOR<LineCreateWithoutInvitationLinkInput, LineUncheckedCreateWithoutInvitationLinkInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutInvitationLinkInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutInvitationLinkInput, LineUncheckedUpdateWithoutInvitationLinkInput>
  }

  export type LineUpdateWithoutInvitationLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutInvitationLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type SuppliesCreateWithoutAssetInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutAssetInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutAssetInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutAssetInput, SuppliesUncheckedCreateWithoutAssetInput>
  }

  export type ProfilePictureCreateWithoutAssetInput = {
    id?: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutProfilePictureInput
  }

  export type ProfilePictureUncheckedCreateWithoutAssetInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type ProfilePictureCreateOrConnectWithoutAssetInput = {
    where: ProfilePictureWhereUniqueInput
    create: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput>
  }

  export type ProfilePictureCreateManyAssetInputEnvelope = {
    data: ProfilePictureCreateManyAssetInput | ProfilePictureCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type SupplyOrderSupportFileCreateWithoutFileInput = {
    id?: string
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedOneWithoutFilesInput
  }

  export type SupplyOrderSupportFileUncheckedCreateWithoutFileInput = {
    id?: string
    supplyBatchOrderId?: string | null
  }

  export type SupplyOrderSupportFileCreateOrConnectWithoutFileInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    create: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput>
  }

  export type SupplyOrderSupportFileCreateManyFileInputEnvelope = {
    data: SupplyOrderSupportFileCreateManyFileInput | SupplyOrderSupportFileCreateManyFileInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesUpsertWithoutAssetInput = {
    update: XOR<SuppliesUpdateWithoutAssetInput, SuppliesUncheckedUpdateWithoutAssetInput>
    create: XOR<SuppliesCreateWithoutAssetInput, SuppliesUncheckedCreateWithoutAssetInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutAssetInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutAssetInput, SuppliesUncheckedUpdateWithoutAssetInput>
  }

  export type SuppliesUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type ProfilePictureUpsertWithWhereUniqueWithoutAssetInput = {
    where: ProfilePictureWhereUniqueInput
    update: XOR<ProfilePictureUpdateWithoutAssetInput, ProfilePictureUncheckedUpdateWithoutAssetInput>
    create: XOR<ProfilePictureCreateWithoutAssetInput, ProfilePictureUncheckedCreateWithoutAssetInput>
  }

  export type ProfilePictureUpdateWithWhereUniqueWithoutAssetInput = {
    where: ProfilePictureWhereUniqueInput
    data: XOR<ProfilePictureUpdateWithoutAssetInput, ProfilePictureUncheckedUpdateWithoutAssetInput>
  }

  export type ProfilePictureUpdateManyWithWhereWithoutAssetInput = {
    where: ProfilePictureScalarWhereInput
    data: XOR<ProfilePictureUpdateManyMutationInput, ProfilePictureUncheckedUpdateManyWithoutAssetInput>
  }

  export type ProfilePictureScalarWhereInput = {
    AND?: ProfilePictureScalarWhereInput | ProfilePictureScalarWhereInput[]
    OR?: ProfilePictureScalarWhereInput[]
    NOT?: ProfilePictureScalarWhereInput | ProfilePictureScalarWhereInput[]
    id?: StringFilter<"ProfilePicture"> | string
    assetsId?: StringFilter<"ProfilePicture"> | string
    userId?: StringFilter<"ProfilePicture"> | string
    createdAt?: DateTimeFilter<"ProfilePicture"> | Date | string
  }

  export type SupplyOrderSupportFileUpsertWithWhereUniqueWithoutFileInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    update: XOR<SupplyOrderSupportFileUpdateWithoutFileInput, SupplyOrderSupportFileUncheckedUpdateWithoutFileInput>
    create: XOR<SupplyOrderSupportFileCreateWithoutFileInput, SupplyOrderSupportFileUncheckedCreateWithoutFileInput>
  }

  export type SupplyOrderSupportFileUpdateWithWhereUniqueWithoutFileInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    data: XOR<SupplyOrderSupportFileUpdateWithoutFileInput, SupplyOrderSupportFileUncheckedUpdateWithoutFileInput>
  }

  export type SupplyOrderSupportFileUpdateManyWithWhereWithoutFileInput = {
    where: SupplyOrderSupportFileScalarWhereInput
    data: XOR<SupplyOrderSupportFileUpdateManyMutationInput, SupplyOrderSupportFileUncheckedUpdateManyWithoutFileInput>
  }

  export type SupplyOrderSupportFileScalarWhereInput = {
    AND?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
    OR?: SupplyOrderSupportFileScalarWhereInput[]
    NOT?: SupplyOrderSupportFileScalarWhereInput | SupplyOrderSupportFileScalarWhereInput[]
    id?: StringFilter<"SupplyOrderSupportFile"> | string
    assetsId?: StringFilter<"SupplyOrderSupportFile"> | string
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrderSupportFile"> | string | null
  }

  export type AssetsCreateWithoutProfilePictureInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    Supplies?: SuppliesCreateNestedOneWithoutAssetInput
    SupplyOrderSupport?: SupplyOrderSupportFileCreateNestedManyWithoutFileInput
  }

  export type AssetsUncheckedCreateWithoutProfilePictureInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    suppliesId?: string | null
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutFileInput
  }

  export type AssetsCreateOrConnectWithoutProfilePictureInput = {
    where: AssetsWhereUniqueInput
    create: XOR<AssetsCreateWithoutProfilePictureInput, AssetsUncheckedCreateWithoutProfilePictureInput>
  }

  export type UserCreateWithoutProfilePictureInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutProfilePictureInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutProfilePictureInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfilePictureInput, UserUncheckedCreateWithoutProfilePictureInput>
  }

  export type AssetsUpsertWithoutProfilePictureInput = {
    update: XOR<AssetsUpdateWithoutProfilePictureInput, AssetsUncheckedUpdateWithoutProfilePictureInput>
    create: XOR<AssetsCreateWithoutProfilePictureInput, AssetsUncheckedCreateWithoutProfilePictureInput>
    where?: AssetsWhereInput
  }

  export type AssetsUpdateToOneWithWhereWithoutProfilePictureInput = {
    where?: AssetsWhereInput
    data: XOR<AssetsUpdateWithoutProfilePictureInput, AssetsUncheckedUpdateWithoutProfilePictureInput>
  }

  export type AssetsUpdateWithoutProfilePictureInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Supplies?: SuppliesUpdateOneWithoutAssetNestedInput
    SupplyOrderSupport?: SupplyOrderSupportFileUpdateManyWithoutFileNestedInput
  }

  export type AssetsUncheckedUpdateWithoutProfilePictureInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedUpdateManyWithoutFileNestedInput
  }

  export type UserUpsertWithoutProfilePictureInput = {
    update: XOR<UserUpdateWithoutProfilePictureInput, UserUncheckedUpdateWithoutProfilePictureInput>
    create: XOR<UserCreateWithoutProfilePictureInput, UserUncheckedCreateWithoutProfilePictureInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfilePictureInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfilePictureInput, UserUncheckedUpdateWithoutProfilePictureInput>
  }

  export type UserUpdateWithoutProfilePictureInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutProfilePictureInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type SupplyBatchOrderCreateWithoutInventoryBoxInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    user?: UserCreateNestedOneWithoutSupplyBatchOrderInput
    order?: SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput
    line?: LineCreateNestedOneWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
    order?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderCreateOrConnectWithoutInventoryBoxInput = {
    where: SupplyBatchOrderWhereUniqueInput
    create: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput>
  }

  export type SupplyBatchOrderCreateManyInventoryBoxInputEnvelope = {
    data: SupplyBatchOrderCreateManyInventoryBoxInput | SupplyBatchOrderCreateManyInventoryBoxInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutInventoryBoxInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutInventoryBoxInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutInventoryBoxInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutInventoryBoxInput, LineUncheckedCreateWithoutInventoryBoxInput>
  }

  export type UserCreateWithoutInventoryBoxInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutInventoryBoxInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutInventoryBoxInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInventoryBoxInput, UserUncheckedCreateWithoutInventoryBoxInput>
  }

  export type DepartmentCreateWithoutInventoryBoxInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutInventoryBoxInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutInventoryBoxInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutInventoryBoxInput, DepartmentUncheckedCreateWithoutInventoryBoxInput>
  }

  export type InventoryAccessLogsCreateWithoutBoxInput = {
    id?: string
    timestamp: Date | string
    action?: string
    user?: UserCreateNestedOneWithoutInventoryAccessLogsInput
    supply?: SuppliesCreateNestedOneWithoutInventoryAccessLogsInput
  }

  export type InventoryAccessLogsUncheckedCreateWithoutBoxInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    action?: string
    suppliesId?: string | null
  }

  export type InventoryAccessLogsCreateOrConnectWithoutBoxInput = {
    where: InventoryAccessLogsWhereUniqueInput
    create: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput>
  }

  export type InventoryAccessLogsCreateManyBoxInputEnvelope = {
    data: InventoryAccessLogsCreateManyBoxInput | InventoryAccessLogsCreateManyBoxInput[]
    skipDuplicates?: boolean
  }

  export type SupplyBatchCreateWithoutBoxInput = {
    id?: string
    timestamp?: Date | string
    title: string
    SupplyBatchItem?: SupplyBatchItemCreateNestedManyWithoutBatchInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutListInput
  }

  export type SupplyBatchUncheckedCreateWithoutBoxInput = {
    id?: string
    timestamp?: Date | string
    title: string
    suppliesDataSetId?: string | null
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedManyWithoutBatchInput
  }

  export type SupplyBatchCreateOrConnectWithoutBoxInput = {
    where: SupplyBatchWhereUniqueInput
    create: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput>
  }

  export type SupplyBatchCreateManyBoxInputEnvelope = {
    data: SupplyBatchCreateManyBoxInput | SupplyBatchCreateManyBoxInput[]
    skipDuplicates?: boolean
  }

  export type ContainerAllowedUserCreateWithoutContainerInput = {
    id?: string
    timestamp?: Date | string
    user?: UserCreateNestedOneWithoutContainerAllowedUserInput
    grantBy: UserCreateNestedOneWithoutGrantContainerInput
  }

  export type ContainerAllowedUserUncheckedCreateWithoutContainerInput = {
    id?: string
    userId?: string | null
    grantByUserId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserCreateOrConnectWithoutContainerInput = {
    where: ContainerAllowedUserWhereUniqueInput
    create: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput>
  }

  export type ContainerAllowedUserCreateManyContainerInputEnvelope = {
    data: ContainerAllowedUserCreateManyContainerInput | ContainerAllowedUserCreateManyContainerInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesDataSetCreateWithoutContainerInput = {
    id?: string
    title: string
    timestamp?: Date | string
    unit?: SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput
    line: LineCreateNestedOneWithoutSuppliesDataSetInput
    list?: SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateWithoutContainerInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    unit?: SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    list?: SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetCreateOrConnectWithoutContainerInput = {
    where: SuppliesDataSetWhereUniqueInput
    create: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput>
  }

  export type SuppliesDataSetCreateManyContainerInputEnvelope = {
    data: SuppliesDataSetCreateManyContainerInput | SuppliesDataSetCreateManyContainerInput[]
    skipDuplicates?: boolean
  }

  export type SupplyBatchOrderUpsertWithWhereUniqueWithoutInventoryBoxInput = {
    where: SupplyBatchOrderWhereUniqueInput
    update: XOR<SupplyBatchOrderUpdateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedUpdateWithoutInventoryBoxInput>
    create: XOR<SupplyBatchOrderCreateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedCreateWithoutInventoryBoxInput>
  }

  export type SupplyBatchOrderUpdateWithWhereUniqueWithoutInventoryBoxInput = {
    where: SupplyBatchOrderWhereUniqueInput
    data: XOR<SupplyBatchOrderUpdateWithoutInventoryBoxInput, SupplyBatchOrderUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type SupplyBatchOrderUpdateManyWithWhereWithoutInventoryBoxInput = {
    where: SupplyBatchOrderScalarWhereInput
    data: XOR<SupplyBatchOrderUpdateManyMutationInput, SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxInput>
  }

  export type LineUpsertWithoutInventoryBoxInput = {
    update: XOR<LineUpdateWithoutInventoryBoxInput, LineUncheckedUpdateWithoutInventoryBoxInput>
    create: XOR<LineCreateWithoutInventoryBoxInput, LineUncheckedCreateWithoutInventoryBoxInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutInventoryBoxInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutInventoryBoxInput, LineUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type LineUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type UserUpsertWithoutInventoryBoxInput = {
    update: XOR<UserUpdateWithoutInventoryBoxInput, UserUncheckedUpdateWithoutInventoryBoxInput>
    create: XOR<UserCreateWithoutInventoryBoxInput, UserUncheckedCreateWithoutInventoryBoxInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInventoryBoxInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInventoryBoxInput, UserUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type UserUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type DepartmentUpsertWithoutInventoryBoxInput = {
    update: XOR<DepartmentUpdateWithoutInventoryBoxInput, DepartmentUncheckedUpdateWithoutInventoryBoxInput>
    create: XOR<DepartmentCreateWithoutInventoryBoxInput, DepartmentUncheckedCreateWithoutInventoryBoxInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutInventoryBoxInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutInventoryBoxInput, DepartmentUncheckedUpdateWithoutInventoryBoxInput>
  }

  export type DepartmentUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type InventoryAccessLogsUpsertWithWhereUniqueWithoutBoxInput = {
    where: InventoryAccessLogsWhereUniqueInput
    update: XOR<InventoryAccessLogsUpdateWithoutBoxInput, InventoryAccessLogsUncheckedUpdateWithoutBoxInput>
    create: XOR<InventoryAccessLogsCreateWithoutBoxInput, InventoryAccessLogsUncheckedCreateWithoutBoxInput>
  }

  export type InventoryAccessLogsUpdateWithWhereUniqueWithoutBoxInput = {
    where: InventoryAccessLogsWhereUniqueInput
    data: XOR<InventoryAccessLogsUpdateWithoutBoxInput, InventoryAccessLogsUncheckedUpdateWithoutBoxInput>
  }

  export type InventoryAccessLogsUpdateManyWithWhereWithoutBoxInput = {
    where: InventoryAccessLogsScalarWhereInput
    data: XOR<InventoryAccessLogsUpdateManyMutationInput, InventoryAccessLogsUncheckedUpdateManyWithoutBoxInput>
  }

  export type InventoryAccessLogsScalarWhereInput = {
    AND?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
    OR?: InventoryAccessLogsScalarWhereInput[]
    NOT?: InventoryAccessLogsScalarWhereInput | InventoryAccessLogsScalarWhereInput[]
    id?: StringFilter<"InventoryAccessLogs"> | string
    userId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    timestamp?: DateTimeFilter<"InventoryAccessLogs"> | Date | string
    inventoryBoxId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
    action?: StringFilter<"InventoryAccessLogs"> | string
    suppliesId?: StringNullableFilter<"InventoryAccessLogs"> | string | null
  }

  export type SupplyBatchUpsertWithWhereUniqueWithoutBoxInput = {
    where: SupplyBatchWhereUniqueInput
    update: XOR<SupplyBatchUpdateWithoutBoxInput, SupplyBatchUncheckedUpdateWithoutBoxInput>
    create: XOR<SupplyBatchCreateWithoutBoxInput, SupplyBatchUncheckedCreateWithoutBoxInput>
  }

  export type SupplyBatchUpdateWithWhereUniqueWithoutBoxInput = {
    where: SupplyBatchWhereUniqueInput
    data: XOR<SupplyBatchUpdateWithoutBoxInput, SupplyBatchUncheckedUpdateWithoutBoxInput>
  }

  export type SupplyBatchUpdateManyWithWhereWithoutBoxInput = {
    where: SupplyBatchScalarWhereInput
    data: XOR<SupplyBatchUpdateManyMutationInput, SupplyBatchUncheckedUpdateManyWithoutBoxInput>
  }

  export type SupplyBatchScalarWhereInput = {
    AND?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
    OR?: SupplyBatchScalarWhereInput[]
    NOT?: SupplyBatchScalarWhereInput | SupplyBatchScalarWhereInput[]
    id?: StringFilter<"SupplyBatch"> | string
    timestamp?: DateTimeFilter<"SupplyBatch"> | Date | string
    title?: StringFilter<"SupplyBatch"> | string
    inventoryBoxId?: StringFilter<"SupplyBatch"> | string
    suppliesDataSetId?: StringNullableFilter<"SupplyBatch"> | string | null
  }

  export type ContainerAllowedUserUpsertWithWhereUniqueWithoutContainerInput = {
    where: ContainerAllowedUserWhereUniqueInput
    update: XOR<ContainerAllowedUserUpdateWithoutContainerInput, ContainerAllowedUserUncheckedUpdateWithoutContainerInput>
    create: XOR<ContainerAllowedUserCreateWithoutContainerInput, ContainerAllowedUserUncheckedCreateWithoutContainerInput>
  }

  export type ContainerAllowedUserUpdateWithWhereUniqueWithoutContainerInput = {
    where: ContainerAllowedUserWhereUniqueInput
    data: XOR<ContainerAllowedUserUpdateWithoutContainerInput, ContainerAllowedUserUncheckedUpdateWithoutContainerInput>
  }

  export type ContainerAllowedUserUpdateManyWithWhereWithoutContainerInput = {
    where: ContainerAllowedUserScalarWhereInput
    data: XOR<ContainerAllowedUserUpdateManyMutationInput, ContainerAllowedUserUncheckedUpdateManyWithoutContainerInput>
  }

  export type ContainerAllowedUserScalarWhereInput = {
    AND?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
    OR?: ContainerAllowedUserScalarWhereInput[]
    NOT?: ContainerAllowedUserScalarWhereInput | ContainerAllowedUserScalarWhereInput[]
    id?: StringFilter<"ContainerAllowedUser"> | string
    userId?: StringNullableFilter<"ContainerAllowedUser"> | string | null
    inventoryBoxId?: StringFilter<"ContainerAllowedUser"> | string
    grantByUserId?: StringFilter<"ContainerAllowedUser"> | string
    timestamp?: DateTimeFilter<"ContainerAllowedUser"> | Date | string
  }

  export type SuppliesDataSetUpsertWithWhereUniqueWithoutContainerInput = {
    where: SuppliesDataSetWhereUniqueInput
    update: XOR<SuppliesDataSetUpdateWithoutContainerInput, SuppliesDataSetUncheckedUpdateWithoutContainerInput>
    create: XOR<SuppliesDataSetCreateWithoutContainerInput, SuppliesDataSetUncheckedCreateWithoutContainerInput>
  }

  export type SuppliesDataSetUpdateWithWhereUniqueWithoutContainerInput = {
    where: SuppliesDataSetWhereUniqueInput
    data: XOR<SuppliesDataSetUpdateWithoutContainerInput, SuppliesDataSetUncheckedUpdateWithoutContainerInput>
  }

  export type SuppliesDataSetUpdateManyWithWhereWithoutContainerInput = {
    where: SuppliesDataSetScalarWhereInput
    data: XOR<SuppliesDataSetUpdateManyMutationInput, SuppliesDataSetUncheckedUpdateManyWithoutContainerInput>
  }

  export type UserCreateWithoutContainerAllowedUserInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutContainerAllowedUserInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutContainerAllowedUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutContainerAllowedUserInput, UserUncheckedCreateWithoutContainerAllowedUserInput>
  }

  export type InventoryBoxCreateWithoutContainerAllowedUserInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutContainerAllowedUserInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutContainerAllowedUserInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutContainerAllowedUserInput, InventoryBoxUncheckedCreateWithoutContainerAllowedUserInput>
  }

  export type UserCreateWithoutGrantContainerInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGrantContainerInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGrantContainerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGrantContainerInput, UserUncheckedCreateWithoutGrantContainerInput>
  }

  export type UserUpsertWithoutContainerAllowedUserInput = {
    update: XOR<UserUpdateWithoutContainerAllowedUserInput, UserUncheckedUpdateWithoutContainerAllowedUserInput>
    create: XOR<UserCreateWithoutContainerAllowedUserInput, UserUncheckedCreateWithoutContainerAllowedUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutContainerAllowedUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutContainerAllowedUserInput, UserUncheckedUpdateWithoutContainerAllowedUserInput>
  }

  export type UserUpdateWithoutContainerAllowedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutContainerAllowedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type InventoryBoxUpsertWithoutContainerAllowedUserInput = {
    update: XOR<InventoryBoxUpdateWithoutContainerAllowedUserInput, InventoryBoxUncheckedUpdateWithoutContainerAllowedUserInput>
    create: XOR<InventoryBoxCreateWithoutContainerAllowedUserInput, InventoryBoxUncheckedCreateWithoutContainerAllowedUserInput>
    where?: InventoryBoxWhereInput
  }

  export type InventoryBoxUpdateToOneWithWhereWithoutContainerAllowedUserInput = {
    where?: InventoryBoxWhereInput
    data: XOR<InventoryBoxUpdateWithoutContainerAllowedUserInput, InventoryBoxUncheckedUpdateWithoutContainerAllowedUserInput>
  }

  export type InventoryBoxUpdateWithoutContainerAllowedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutContainerAllowedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type UserUpsertWithoutGrantContainerInput = {
    update: XOR<UserUpdateWithoutGrantContainerInput, UserUncheckedUpdateWithoutGrantContainerInput>
    create: XOR<UserCreateWithoutGrantContainerInput, UserUncheckedCreateWithoutGrantContainerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutGrantContainerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutGrantContainerInput, UserUncheckedUpdateWithoutGrantContainerInput>
  }

  export type UserUpdateWithoutGrantContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutGrantContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutInventoryAccessLogsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutInventoryAccessLogsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutInventoryAccessLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInventoryAccessLogsInput, UserUncheckedCreateWithoutInventoryAccessLogsInput>
  }

  export type InventoryBoxCreateWithoutInventoryAccessLogsInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutInventoryAccessLogsInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutInventoryAccessLogsInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedCreateWithoutInventoryAccessLogsInput>
  }

  export type SuppliesCreateWithoutInventoryAccessLogsInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutInventoryAccessLogsInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutInventoryAccessLogsInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutInventoryAccessLogsInput, SuppliesUncheckedCreateWithoutInventoryAccessLogsInput>
  }

  export type UserUpsertWithoutInventoryAccessLogsInput = {
    update: XOR<UserUpdateWithoutInventoryAccessLogsInput, UserUncheckedUpdateWithoutInventoryAccessLogsInput>
    create: XOR<UserCreateWithoutInventoryAccessLogsInput, UserUncheckedCreateWithoutInventoryAccessLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInventoryAccessLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInventoryAccessLogsInput, UserUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type UserUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type InventoryBoxUpsertWithoutInventoryAccessLogsInput = {
    update: XOR<InventoryBoxUpdateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedUpdateWithoutInventoryAccessLogsInput>
    create: XOR<InventoryBoxCreateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedCreateWithoutInventoryAccessLogsInput>
    where?: InventoryBoxWhereInput
  }

  export type InventoryBoxUpdateToOneWithWhereWithoutInventoryAccessLogsInput = {
    where?: InventoryBoxWhereInput
    data: XOR<InventoryBoxUpdateWithoutInventoryAccessLogsInput, InventoryBoxUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type InventoryBoxUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type SuppliesUpsertWithoutInventoryAccessLogsInput = {
    update: XOR<SuppliesUpdateWithoutInventoryAccessLogsInput, SuppliesUncheckedUpdateWithoutInventoryAccessLogsInput>
    create: XOR<SuppliesCreateWithoutInventoryAccessLogsInput, SuppliesUncheckedCreateWithoutInventoryAccessLogsInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutInventoryAccessLogsInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutInventoryAccessLogsInput, SuppliesUncheckedUpdateWithoutInventoryAccessLogsInput>
  }

  export type SuppliesUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutInventoryAccessLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type LineCreateWithoutSuppliesInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutSuppliesInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutSuppliesInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutSuppliesInput, LineUncheckedCreateWithoutSuppliesInput>
  }

  export type UserCreateWithoutSuppliesInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutSuppliesInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutSuppliesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSuppliesInput, UserUncheckedCreateWithoutSuppliesInput>
  }

  export type SuppliesRecordCreateWithoutSuppyIdInput = {
    id?: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    user: UserCreateNestedOneWithoutSuppliesRecordInput
    modified?: SuppliesCreateNestedOneWithoutPartInput
  }

  export type SuppliesRecordUncheckedCreateWithoutSuppyIdInput = {
    id?: string
    timestamp?: Date | string
    userId: string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type SuppliesRecordCreateOrConnectWithoutSuppyIdInput = {
    where: SuppliesRecordWhereUniqueInput
    create: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput>
  }

  export type SuppliesRecordCreateManySuppyIdInputEnvelope = {
    data: SuppliesRecordCreateManySuppyIdInput | SuppliesRecordCreateManySuppyIdInput[]
    skipDuplicates?: boolean
  }

  export type AssetsCreateWithoutSuppliesInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    ProfilePicture?: ProfilePictureCreateNestedManyWithoutAssetInput
    SupplyOrderSupport?: SupplyOrderSupportFileCreateNestedManyWithoutFileInput
  }

  export type AssetsUncheckedCreateWithoutSuppliesInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    ProfilePicture?: ProfilePictureUncheckedCreateNestedManyWithoutAssetInput
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutFileInput
  }

  export type AssetsCreateOrConnectWithoutSuppliesInput = {
    where: AssetsWhereUniqueInput
    create: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput>
  }

  export type AssetsCreateManySuppliesInputEnvelope = {
    data: AssetsCreateManySuppliesInput | AssetsCreateManySuppliesInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesRecordCreateWithoutModifiedInput = {
    id?: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    suppyId: SuppliesCreateNestedOneWithoutSuppliesRecordInput
    user: UserCreateNestedOneWithoutSuppliesRecordInput
  }

  export type SuppliesRecordUncheckedCreateWithoutModifiedInput = {
    id?: string
    suppliesId: string
    timestamp?: Date | string
    userId: string
    action: string
    status?: number
    description?: string | null
  }

  export type SuppliesRecordCreateOrConnectWithoutModifiedInput = {
    where: SuppliesRecordWhereUniqueInput
    create: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
  }

  export type TransferredSuppliesCreateWithoutSupplyInput = {
    id?: string
    timestamp?: Date | string
    condition?: string | null
    user: UserCreateNestedOneWithoutTransferredSuppliesInput
    transferredTo: UserCreateNestedOneWithoutTransferToInput
  }

  export type TransferredSuppliesUncheckedCreateWithoutSupplyInput = {
    id?: string
    userId: string
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesCreateOrConnectWithoutSupplyInput = {
    where: TransferredSuppliesWhereUniqueInput
    create: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput>
  }

  export type TransferredSuppliesCreateManySupplyInputEnvelope = {
    data: TransferredSuppliesCreateManySupplyInput | TransferredSuppliesCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesCategoryCreateWithoutSuppliesInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type SuppliesCategoryUncheckedCreateWithoutSuppliesInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type SuppliesCategoryCreateOrConnectWithoutSuppliesInput = {
    where: SuppliesCategoryWhereUniqueInput
    create: XOR<SuppliesCategoryCreateWithoutSuppliesInput, SuppliesCategoryUncheckedCreateWithoutSuppliesInput>
  }

  export type SupplieRecieveHistoryCreateWithoutSupplyInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
  }

  export type SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
  }

  export type SupplieRecieveHistoryCreateOrConnectWithoutSupplyInput = {
    where: SupplieRecieveHistoryWhereUniqueInput
    create: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput>
  }

  export type SupplieRecieveHistoryCreateManySupplyInputEnvelope = {
    data: SupplieRecieveHistoryCreateManySupplyInput | SupplieRecieveHistoryCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAccessLogsCreateWithoutSupplyInput = {
    id?: string
    timestamp: Date | string
    action?: string
    user?: UserCreateNestedOneWithoutInventoryAccessLogsInput
    box?: InventoryBoxCreateNestedOneWithoutInventoryAccessLogsInput
  }

  export type InventoryAccessLogsUncheckedCreateWithoutSupplyInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
  }

  export type InventoryAccessLogsCreateOrConnectWithoutSupplyInput = {
    where: InventoryAccessLogsWhereUniqueInput
    create: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput>
  }

  export type InventoryAccessLogsCreateManySupplyInputEnvelope = {
    data: InventoryAccessLogsCreateManySupplyInput | InventoryAccessLogsCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type SupplyOrderCreateWithoutSupplyInput = {
    id?: string
    quantity?: number
    status?: string
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedOneWithoutOrderInput
    unit: SuppliesQualityCreateNestedOneWithoutSupplyOrderInput
  }

  export type SupplyOrderUncheckedCreateWithoutSupplyInput = {
    id?: string
    supplyBatchOrderId?: string | null
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyOrderCreateOrConnectWithoutSupplyInput = {
    where: SupplyOrderWhereUniqueInput
    create: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyOrderCreateManySupplyInputEnvelope = {
    data: SupplyOrderCreateManySupplyInput | SupplyOrderCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type SupplyBatchItemCreateWithoutSupplyInput = {
    id?: string
    timestamp?: Date | string
    batch: SupplyBatchCreateNestedOneWithoutSupplyBatchItemInput
  }

  export type SupplyBatchItemUncheckedCreateWithoutSupplyInput = {
    id?: string
    supplyBatchId: string
    timestamp?: Date | string
  }

  export type SupplyBatchItemCreateOrConnectWithoutSupplyInput = {
    where: SupplyBatchItemWhereUniqueInput
    create: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyPriceTrackCreateWithoutSupplyInput = {
    id?: string
    value?: number
    timestamp?: Date | string
  }

  export type SupplyPriceTrackUncheckedCreateWithoutSupplyInput = {
    id?: string
    value?: number
    timestamp?: Date | string
  }

  export type SupplyPriceTrackCreateOrConnectWithoutSupplyInput = {
    where: SupplyPriceTrackWhereUniqueInput
    create: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyPriceTrackCreateManySupplyInputEnvelope = {
    data: SupplyPriceTrackCreateManySupplyInput | SupplyPriceTrackCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesQualityCreateWithoutSuppliesInput = {
    id?: string
    quality: string
    perQuality?: number
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutUnitInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityUncheckedCreateWithoutSuppliesInput = {
    id?: string
    quality: string
    perQuality?: number
    suppliesDataSetId?: string | null
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityCreateOrConnectWithoutSuppliesInput = {
    where: SuppliesQualityWhereUniqueInput
    create: XOR<SuppliesQualityCreateWithoutSuppliesInput, SuppliesQualityUncheckedCreateWithoutSuppliesInput>
  }

  export type SupplyStockTrackCreateWithoutSupplyInput = {
    id?: string
    stock?: number
    timestamp?: Date | string
  }

  export type SupplyStockTrackUncheckedCreateWithoutSupplyInput = {
    id?: string
    stock?: number
    timestamp?: Date | string
  }

  export type SupplyStockTrackCreateOrConnectWithoutSupplyInput = {
    where: SupplyStockTrackWhereUniqueInput
    create: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyStockTrackCreateManySupplyInputEnvelope = {
    data: SupplyStockTrackCreateManySupplyInput | SupplyStockTrackCreateManySupplyInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesDataSetCreateWithoutSuppliesInput = {
    id?: string
    title: string
    timestamp?: Date | string
    unit?: SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput
    line: LineCreateNestedOneWithoutSuppliesDataSetInput
    container: InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput
    list?: SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateWithoutSuppliesInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    inventoryBoxId: string
    unit?: SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    list?: SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetCreateOrConnectWithoutSuppliesInput = {
    where: SuppliesDataSetWhereUniqueInput
    create: XOR<SuppliesDataSetCreateWithoutSuppliesInput, SuppliesDataSetUncheckedCreateWithoutSuppliesInput>
  }

  export type LineUpsertWithoutSuppliesInput = {
    update: XOR<LineUpdateWithoutSuppliesInput, LineUncheckedUpdateWithoutSuppliesInput>
    create: XOR<LineCreateWithoutSuppliesInput, LineUncheckedCreateWithoutSuppliesInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutSuppliesInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutSuppliesInput, LineUncheckedUpdateWithoutSuppliesInput>
  }

  export type LineUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type UserUpsertWithoutSuppliesInput = {
    update: XOR<UserUpdateWithoutSuppliesInput, UserUncheckedUpdateWithoutSuppliesInput>
    create: XOR<UserCreateWithoutSuppliesInput, UserUncheckedCreateWithoutSuppliesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSuppliesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSuppliesInput, UserUncheckedUpdateWithoutSuppliesInput>
  }

  export type UserUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type SuppliesRecordUpsertWithWhereUniqueWithoutSuppyIdInput = {
    where: SuppliesRecordWhereUniqueInput
    update: XOR<SuppliesRecordUpdateWithoutSuppyIdInput, SuppliesRecordUncheckedUpdateWithoutSuppyIdInput>
    create: XOR<SuppliesRecordCreateWithoutSuppyIdInput, SuppliesRecordUncheckedCreateWithoutSuppyIdInput>
  }

  export type SuppliesRecordUpdateWithWhereUniqueWithoutSuppyIdInput = {
    where: SuppliesRecordWhereUniqueInput
    data: XOR<SuppliesRecordUpdateWithoutSuppyIdInput, SuppliesRecordUncheckedUpdateWithoutSuppyIdInput>
  }

  export type SuppliesRecordUpdateManyWithWhereWithoutSuppyIdInput = {
    where: SuppliesRecordScalarWhereInput
    data: XOR<SuppliesRecordUpdateManyMutationInput, SuppliesRecordUncheckedUpdateManyWithoutSuppyIdInput>
  }

  export type SuppliesRecordScalarWhereInput = {
    AND?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
    OR?: SuppliesRecordScalarWhereInput[]
    NOT?: SuppliesRecordScalarWhereInput | SuppliesRecordScalarWhereInput[]
    id?: StringFilter<"SuppliesRecord"> | string
    suppliesId?: StringFilter<"SuppliesRecord"> | string
    timestamp?: DateTimeFilter<"SuppliesRecord"> | Date | string
    userId?: StringFilter<"SuppliesRecord"> | string
    action?: StringFilter<"SuppliesRecord"> | string
    status?: IntFilter<"SuppliesRecord"> | number
    description?: StringNullableFilter<"SuppliesRecord"> | string | null
    modifiedId?: StringNullableFilter<"SuppliesRecord"> | string | null
  }

  export type AssetsUpsertWithWhereUniqueWithoutSuppliesInput = {
    where: AssetsWhereUniqueInput
    update: XOR<AssetsUpdateWithoutSuppliesInput, AssetsUncheckedUpdateWithoutSuppliesInput>
    create: XOR<AssetsCreateWithoutSuppliesInput, AssetsUncheckedCreateWithoutSuppliesInput>
  }

  export type AssetsUpdateWithWhereUniqueWithoutSuppliesInput = {
    where: AssetsWhereUniqueInput
    data: XOR<AssetsUpdateWithoutSuppliesInput, AssetsUncheckedUpdateWithoutSuppliesInput>
  }

  export type AssetsUpdateManyWithWhereWithoutSuppliesInput = {
    where: AssetsScalarWhereInput
    data: XOR<AssetsUpdateManyMutationInput, AssetsUncheckedUpdateManyWithoutSuppliesInput>
  }

  export type AssetsScalarWhereInput = {
    AND?: AssetsScalarWhereInput | AssetsScalarWhereInput[]
    OR?: AssetsScalarWhereInput[]
    NOT?: AssetsScalarWhereInput | AssetsScalarWhereInput[]
    id?: StringFilter<"Assets"> | string
    url?: StringFilter<"Assets"> | string
    fileSize?: StringFilter<"Assets"> | string
    fileType?: StringFilter<"Assets"> | string
    fileName?: StringFilter<"Assets"> | string
    createdAt?: DateTimeFilter<"Assets"> | Date | string
    suppliesId?: StringNullableFilter<"Assets"> | string | null
  }

  export type SuppliesRecordUpsertWithoutModifiedInput = {
    update: XOR<SuppliesRecordUpdateWithoutModifiedInput, SuppliesRecordUncheckedUpdateWithoutModifiedInput>
    create: XOR<SuppliesRecordCreateWithoutModifiedInput, SuppliesRecordUncheckedCreateWithoutModifiedInput>
    where?: SuppliesRecordWhereInput
  }

  export type SuppliesRecordUpdateToOneWithWhereWithoutModifiedInput = {
    where?: SuppliesRecordWhereInput
    data: XOR<SuppliesRecordUpdateWithoutModifiedInput, SuppliesRecordUncheckedUpdateWithoutModifiedInput>
  }

  export type SuppliesRecordUpdateWithoutModifiedInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    suppyId?: SuppliesUpdateOneRequiredWithoutSuppliesRecordNestedInput
    user?: UserUpdateOneRequiredWithoutSuppliesRecordNestedInput
  }

  export type SuppliesRecordUncheckedUpdateWithoutModifiedInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUpsertWithWhereUniqueWithoutSupplyInput = {
    where: TransferredSuppliesWhereUniqueInput
    update: XOR<TransferredSuppliesUpdateWithoutSupplyInput, TransferredSuppliesUncheckedUpdateWithoutSupplyInput>
    create: XOR<TransferredSuppliesCreateWithoutSupplyInput, TransferredSuppliesUncheckedCreateWithoutSupplyInput>
  }

  export type TransferredSuppliesUpdateWithWhereUniqueWithoutSupplyInput = {
    where: TransferredSuppliesWhereUniqueInput
    data: XOR<TransferredSuppliesUpdateWithoutSupplyInput, TransferredSuppliesUncheckedUpdateWithoutSupplyInput>
  }

  export type TransferredSuppliesUpdateManyWithWhereWithoutSupplyInput = {
    where: TransferredSuppliesScalarWhereInput
    data: XOR<TransferredSuppliesUpdateManyMutationInput, TransferredSuppliesUncheckedUpdateManyWithoutSupplyInput>
  }

  export type TransferredSuppliesScalarWhereInput = {
    AND?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
    OR?: TransferredSuppliesScalarWhereInput[]
    NOT?: TransferredSuppliesScalarWhereInput | TransferredSuppliesScalarWhereInput[]
    id?: StringFilter<"TransferredSupplies"> | string
    suppliesId?: StringNullableFilter<"TransferredSupplies"> | string | null
    userId?: StringFilter<"TransferredSupplies"> | string
    transferredToId?: StringFilter<"TransferredSupplies"> | string
    timestamp?: DateTimeFilter<"TransferredSupplies"> | Date | string
    condition?: StringNullableFilter<"TransferredSupplies"> | string | null
  }

  export type SuppliesCategoryUpsertWithoutSuppliesInput = {
    update: XOR<SuppliesCategoryUpdateWithoutSuppliesInput, SuppliesCategoryUncheckedUpdateWithoutSuppliesInput>
    create: XOR<SuppliesCategoryCreateWithoutSuppliesInput, SuppliesCategoryUncheckedCreateWithoutSuppliesInput>
    where?: SuppliesCategoryWhereInput
  }

  export type SuppliesCategoryUpdateToOneWithWhereWithoutSuppliesInput = {
    where?: SuppliesCategoryWhereInput
    data: XOR<SuppliesCategoryUpdateWithoutSuppliesInput, SuppliesCategoryUncheckedUpdateWithoutSuppliesInput>
  }

  export type SuppliesCategoryUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesCategoryUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplieRecieveHistoryUpsertWithWhereUniqueWithoutSupplyInput = {
    where: SupplieRecieveHistoryWhereUniqueInput
    update: XOR<SupplieRecieveHistoryUpdateWithoutSupplyInput, SupplieRecieveHistoryUncheckedUpdateWithoutSupplyInput>
    create: XOR<SupplieRecieveHistoryCreateWithoutSupplyInput, SupplieRecieveHistoryUncheckedCreateWithoutSupplyInput>
  }

  export type SupplieRecieveHistoryUpdateWithWhereUniqueWithoutSupplyInput = {
    where: SupplieRecieveHistoryWhereUniqueInput
    data: XOR<SupplieRecieveHistoryUpdateWithoutSupplyInput, SupplieRecieveHistoryUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplieRecieveHistoryUpdateManyWithWhereWithoutSupplyInput = {
    where: SupplieRecieveHistoryScalarWhereInput
    data: XOR<SupplieRecieveHistoryUpdateManyMutationInput, SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyInput>
  }

  export type SupplieRecieveHistoryScalarWhereInput = {
    AND?: SupplieRecieveHistoryScalarWhereInput | SupplieRecieveHistoryScalarWhereInput[]
    OR?: SupplieRecieveHistoryScalarWhereInput[]
    NOT?: SupplieRecieveHistoryScalarWhereInput | SupplieRecieveHistoryScalarWhereInput[]
    id?: StringFilter<"SupplieRecieveHistory"> | string
    suppliesId?: StringFilter<"SupplieRecieveHistory"> | string
    userId?: StringFilter<"SupplieRecieveHistory"> | string
    timestamp?: DateTimeFilter<"SupplieRecieveHistory"> | Date | string
    quantity?: IntFilter<"SupplieRecieveHistory"> | number
    condition?: StringNullableFilter<"SupplieRecieveHistory"> | string | null
  }

  export type InventoryAccessLogsUpsertWithWhereUniqueWithoutSupplyInput = {
    where: InventoryAccessLogsWhereUniqueInput
    update: XOR<InventoryAccessLogsUpdateWithoutSupplyInput, InventoryAccessLogsUncheckedUpdateWithoutSupplyInput>
    create: XOR<InventoryAccessLogsCreateWithoutSupplyInput, InventoryAccessLogsUncheckedCreateWithoutSupplyInput>
  }

  export type InventoryAccessLogsUpdateWithWhereUniqueWithoutSupplyInput = {
    where: InventoryAccessLogsWhereUniqueInput
    data: XOR<InventoryAccessLogsUpdateWithoutSupplyInput, InventoryAccessLogsUncheckedUpdateWithoutSupplyInput>
  }

  export type InventoryAccessLogsUpdateManyWithWhereWithoutSupplyInput = {
    where: InventoryAccessLogsScalarWhereInput
    data: XOR<InventoryAccessLogsUpdateManyMutationInput, InventoryAccessLogsUncheckedUpdateManyWithoutSupplyInput>
  }

  export type SupplyOrderUpsertWithWhereUniqueWithoutSupplyInput = {
    where: SupplyOrderWhereUniqueInput
    update: XOR<SupplyOrderUpdateWithoutSupplyInput, SupplyOrderUncheckedUpdateWithoutSupplyInput>
    create: XOR<SupplyOrderCreateWithoutSupplyInput, SupplyOrderUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyOrderUpdateWithWhereUniqueWithoutSupplyInput = {
    where: SupplyOrderWhereUniqueInput
    data: XOR<SupplyOrderUpdateWithoutSupplyInput, SupplyOrderUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyOrderUpdateManyWithWhereWithoutSupplyInput = {
    where: SupplyOrderScalarWhereInput
    data: XOR<SupplyOrderUpdateManyMutationInput, SupplyOrderUncheckedUpdateManyWithoutSupplyInput>
  }

  export type SupplyOrderScalarWhereInput = {
    AND?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
    OR?: SupplyOrderScalarWhereInput[]
    NOT?: SupplyOrderScalarWhereInput | SupplyOrderScalarWhereInput[]
    id?: StringFilter<"SupplyOrder"> | string
    supplyBatchOrderId?: StringNullableFilter<"SupplyOrder"> | string | null
    suppliesId?: StringFilter<"SupplyOrder"> | string
    quantity?: IntFilter<"SupplyOrder"> | number
    status?: StringFilter<"SupplyOrder"> | string
    suppliesQualityId?: StringFilter<"SupplyOrder"> | string
  }

  export type SupplyBatchItemUpsertWithoutSupplyInput = {
    update: XOR<SupplyBatchItemUpdateWithoutSupplyInput, SupplyBatchItemUncheckedUpdateWithoutSupplyInput>
    create: XOR<SupplyBatchItemCreateWithoutSupplyInput, SupplyBatchItemUncheckedCreateWithoutSupplyInput>
    where?: SupplyBatchItemWhereInput
  }

  export type SupplyBatchItemUpdateToOneWithWhereWithoutSupplyInput = {
    where?: SupplyBatchItemWhereInput
    data: XOR<SupplyBatchItemUpdateWithoutSupplyInput, SupplyBatchItemUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyBatchItemUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchUpdateOneRequiredWithoutSupplyBatchItemNestedInput
  }

  export type SupplyBatchItemUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyPriceTrackUpsertWithWhereUniqueWithoutSupplyInput = {
    where: SupplyPriceTrackWhereUniqueInput
    update: XOR<SupplyPriceTrackUpdateWithoutSupplyInput, SupplyPriceTrackUncheckedUpdateWithoutSupplyInput>
    create: XOR<SupplyPriceTrackCreateWithoutSupplyInput, SupplyPriceTrackUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyPriceTrackUpdateWithWhereUniqueWithoutSupplyInput = {
    where: SupplyPriceTrackWhereUniqueInput
    data: XOR<SupplyPriceTrackUpdateWithoutSupplyInput, SupplyPriceTrackUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyPriceTrackUpdateManyWithWhereWithoutSupplyInput = {
    where: SupplyPriceTrackScalarWhereInput
    data: XOR<SupplyPriceTrackUpdateManyMutationInput, SupplyPriceTrackUncheckedUpdateManyWithoutSupplyInput>
  }

  export type SupplyPriceTrackScalarWhereInput = {
    AND?: SupplyPriceTrackScalarWhereInput | SupplyPriceTrackScalarWhereInput[]
    OR?: SupplyPriceTrackScalarWhereInput[]
    NOT?: SupplyPriceTrackScalarWhereInput | SupplyPriceTrackScalarWhereInput[]
    id?: StringFilter<"SupplyPriceTrack"> | string
    value?: IntFilter<"SupplyPriceTrack"> | number
    suppliesId?: StringFilter<"SupplyPriceTrack"> | string
    timestamp?: DateTimeFilter<"SupplyPriceTrack"> | Date | string
  }

  export type SuppliesQualityUpsertWithoutSuppliesInput = {
    update: XOR<SuppliesQualityUpdateWithoutSuppliesInput, SuppliesQualityUncheckedUpdateWithoutSuppliesInput>
    create: XOR<SuppliesQualityCreateWithoutSuppliesInput, SuppliesQualityUncheckedCreateWithoutSuppliesInput>
    where?: SuppliesQualityWhereInput
  }

  export type SuppliesQualityUpdateToOneWithWhereWithoutSuppliesInput = {
    where?: SuppliesQualityWhereInput
    data: XOR<SuppliesQualityUpdateWithoutSuppliesInput, SuppliesQualityUncheckedUpdateWithoutSuppliesInput>
  }

  export type SuppliesQualityUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutUnitNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutUnitNestedInput
  }

  export type SuppliesQualityUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type SupplyStockTrackUpsertWithWhereUniqueWithoutSupplyInput = {
    where: SupplyStockTrackWhereUniqueInput
    update: XOR<SupplyStockTrackUpdateWithoutSupplyInput, SupplyStockTrackUncheckedUpdateWithoutSupplyInput>
    create: XOR<SupplyStockTrackCreateWithoutSupplyInput, SupplyStockTrackUncheckedCreateWithoutSupplyInput>
  }

  export type SupplyStockTrackUpdateWithWhereUniqueWithoutSupplyInput = {
    where: SupplyStockTrackWhereUniqueInput
    data: XOR<SupplyStockTrackUpdateWithoutSupplyInput, SupplyStockTrackUncheckedUpdateWithoutSupplyInput>
  }

  export type SupplyStockTrackUpdateManyWithWhereWithoutSupplyInput = {
    where: SupplyStockTrackScalarWhereInput
    data: XOR<SupplyStockTrackUpdateManyMutationInput, SupplyStockTrackUncheckedUpdateManyWithoutSupplyInput>
  }

  export type SupplyStockTrackScalarWhereInput = {
    AND?: SupplyStockTrackScalarWhereInput | SupplyStockTrackScalarWhereInput[]
    OR?: SupplyStockTrackScalarWhereInput[]
    NOT?: SupplyStockTrackScalarWhereInput | SupplyStockTrackScalarWhereInput[]
    id?: StringFilter<"SupplyStockTrack"> | string
    stock?: IntFilter<"SupplyStockTrack"> | number
    suppliesId?: StringFilter<"SupplyStockTrack"> | string
    timestamp?: DateTimeFilter<"SupplyStockTrack"> | Date | string
  }

  export type SuppliesDataSetUpsertWithoutSuppliesInput = {
    update: XOR<SuppliesDataSetUpdateWithoutSuppliesInput, SuppliesDataSetUncheckedUpdateWithoutSuppliesInput>
    create: XOR<SuppliesDataSetCreateWithoutSuppliesInput, SuppliesDataSetUncheckedCreateWithoutSuppliesInput>
    where?: SuppliesDataSetWhereInput
  }

  export type SuppliesDataSetUpdateToOneWithWhereWithoutSuppliesInput = {
    where?: SuppliesDataSetWhereInput
    data: XOR<SuppliesDataSetUpdateWithoutSuppliesInput, SuppliesDataSetUncheckedUpdateWithoutSuppliesInput>
  }

  export type SuppliesDataSetUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput
    line?: LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    unit?: SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type InventoryBoxCreateWithoutSupplyBatchInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutSupplyBatchInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutSupplyBatchInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutSupplyBatchInput, InventoryBoxUncheckedCreateWithoutSupplyBatchInput>
  }

  export type SupplyBatchItemCreateWithoutBatchInput = {
    id?: string
    timestamp?: Date | string
    supply?: SuppliesCreateNestedOneWithoutSupplyBatchItemInput
  }

  export type SupplyBatchItemUncheckedCreateWithoutBatchInput = {
    id?: string
    suppliesId?: string | null
    timestamp?: Date | string
  }

  export type SupplyBatchItemCreateOrConnectWithoutBatchInput = {
    where: SupplyBatchItemWhereUniqueInput
    create: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput>
  }

  export type SupplyBatchItemCreateManyBatchInputEnvelope = {
    data: SupplyBatchItemCreateManyBatchInput | SupplyBatchItemCreateManyBatchInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesDataSetCreateWithoutListInput = {
    id?: string
    title: string
    timestamp?: Date | string
    unit?: SuppliesQualityCreateNestedManyWithoutSuppliesDataSetInput
    line: LineCreateNestedOneWithoutSuppliesDataSetInput
    container: InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput
    supplies?: SuppliesCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateWithoutListInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    inventoryBoxId: string
    unit?: SuppliesQualityUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetCreateOrConnectWithoutListInput = {
    where: SuppliesDataSetWhereUniqueInput
    create: XOR<SuppliesDataSetCreateWithoutListInput, SuppliesDataSetUncheckedCreateWithoutListInput>
  }

  export type InventoryBoxUpsertWithoutSupplyBatchInput = {
    update: XOR<InventoryBoxUpdateWithoutSupplyBatchInput, InventoryBoxUncheckedUpdateWithoutSupplyBatchInput>
    create: XOR<InventoryBoxCreateWithoutSupplyBatchInput, InventoryBoxUncheckedCreateWithoutSupplyBatchInput>
    where?: InventoryBoxWhereInput
  }

  export type InventoryBoxUpdateToOneWithWhereWithoutSupplyBatchInput = {
    where?: InventoryBoxWhereInput
    data: XOR<InventoryBoxUpdateWithoutSupplyBatchInput, InventoryBoxUncheckedUpdateWithoutSupplyBatchInput>
  }

  export type InventoryBoxUpdateWithoutSupplyBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutSupplyBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type SupplyBatchItemUpsertWithWhereUniqueWithoutBatchInput = {
    where: SupplyBatchItemWhereUniqueInput
    update: XOR<SupplyBatchItemUpdateWithoutBatchInput, SupplyBatchItemUncheckedUpdateWithoutBatchInput>
    create: XOR<SupplyBatchItemCreateWithoutBatchInput, SupplyBatchItemUncheckedCreateWithoutBatchInput>
  }

  export type SupplyBatchItemUpdateWithWhereUniqueWithoutBatchInput = {
    where: SupplyBatchItemWhereUniqueInput
    data: XOR<SupplyBatchItemUpdateWithoutBatchInput, SupplyBatchItemUncheckedUpdateWithoutBatchInput>
  }

  export type SupplyBatchItemUpdateManyWithWhereWithoutBatchInput = {
    where: SupplyBatchItemScalarWhereInput
    data: XOR<SupplyBatchItemUpdateManyMutationInput, SupplyBatchItemUncheckedUpdateManyWithoutBatchInput>
  }

  export type SupplyBatchItemScalarWhereInput = {
    AND?: SupplyBatchItemScalarWhereInput | SupplyBatchItemScalarWhereInput[]
    OR?: SupplyBatchItemScalarWhereInput[]
    NOT?: SupplyBatchItemScalarWhereInput | SupplyBatchItemScalarWhereInput[]
    id?: StringFilter<"SupplyBatchItem"> | string
    supplyBatchId?: StringFilter<"SupplyBatchItem"> | string
    suppliesId?: StringNullableFilter<"SupplyBatchItem"> | string | null
    timestamp?: DateTimeFilter<"SupplyBatchItem"> | Date | string
  }

  export type SuppliesDataSetUpsertWithoutListInput = {
    update: XOR<SuppliesDataSetUpdateWithoutListInput, SuppliesDataSetUncheckedUpdateWithoutListInput>
    create: XOR<SuppliesDataSetCreateWithoutListInput, SuppliesDataSetUncheckedCreateWithoutListInput>
    where?: SuppliesDataSetWhereInput
  }

  export type SuppliesDataSetUpdateToOneWithWhereWithoutListInput = {
    where?: SuppliesDataSetWhereInput
    data: XOR<SuppliesDataSetUpdateWithoutListInput, SuppliesDataSetUncheckedUpdateWithoutListInput>
  }

  export type SuppliesDataSetUpdateWithoutListInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput
    line?: LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateWithoutListInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    unit?: SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SupplyBatchCreateWithoutSupplyBatchItemInput = {
    id?: string
    timestamp?: Date | string
    title: string
    box: InventoryBoxCreateNestedOneWithoutSupplyBatchInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutListInput
  }

  export type SupplyBatchUncheckedCreateWithoutSupplyBatchItemInput = {
    id?: string
    timestamp?: Date | string
    title: string
    inventoryBoxId: string
    suppliesDataSetId?: string | null
  }

  export type SupplyBatchCreateOrConnectWithoutSupplyBatchItemInput = {
    where: SupplyBatchWhereUniqueInput
    create: XOR<SupplyBatchCreateWithoutSupplyBatchItemInput, SupplyBatchUncheckedCreateWithoutSupplyBatchItemInput>
  }

  export type SuppliesCreateWithoutSupplyBatchItemInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSupplyBatchItemInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSupplyBatchItemInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSupplyBatchItemInput, SuppliesUncheckedCreateWithoutSupplyBatchItemInput>
  }

  export type SupplyBatchUpsertWithoutSupplyBatchItemInput = {
    update: XOR<SupplyBatchUpdateWithoutSupplyBatchItemInput, SupplyBatchUncheckedUpdateWithoutSupplyBatchItemInput>
    create: XOR<SupplyBatchCreateWithoutSupplyBatchItemInput, SupplyBatchUncheckedCreateWithoutSupplyBatchItemInput>
    where?: SupplyBatchWhereInput
  }

  export type SupplyBatchUpdateToOneWithWhereWithoutSupplyBatchItemInput = {
    where?: SupplyBatchWhereInput
    data: XOR<SupplyBatchUpdateWithoutSupplyBatchItemInput, SupplyBatchUncheckedUpdateWithoutSupplyBatchItemInput>
  }

  export type SupplyBatchUpdateWithoutSupplyBatchItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    box?: InventoryBoxUpdateOneRequiredWithoutSupplyBatchNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutListNestedInput
  }

  export type SupplyBatchUncheckedUpdateWithoutSupplyBatchItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesUpsertWithoutSupplyBatchItemInput = {
    update: XOR<SuppliesUpdateWithoutSupplyBatchItemInput, SuppliesUncheckedUpdateWithoutSupplyBatchItemInput>
    create: XOR<SuppliesCreateWithoutSupplyBatchItemInput, SuppliesUncheckedCreateWithoutSupplyBatchItemInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSupplyBatchItemInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSupplyBatchItemInput, SuppliesUncheckedUpdateWithoutSupplyBatchItemInput>
  }

  export type SuppliesUpdateWithoutSupplyBatchItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSupplyBatchItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type UserCreateWithoutSupplyBatchOrderInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutSupplyBatchOrderInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutSupplyBatchOrderInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSupplyBatchOrderInput, UserUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderCreateWithoutSupplyBatchOrderInput = {
    id?: string
    quantity?: number
    status?: string
    supply: SuppliesCreateNestedOneWithoutSupplyOrderInput
    unit: SuppliesQualityCreateNestedOneWithoutSupplyOrderInput
  }

  export type SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput = {
    id?: string
    suppliesId: string
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyOrderCreateOrConnectWithoutSupplyBatchOrderInput = {
    where: SupplyOrderWhereUniqueInput
    create: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderCreateManySupplyBatchOrderInputEnvelope = {
    data: SupplyOrderCreateManySupplyBatchOrderInput | SupplyOrderCreateManySupplyBatchOrderInput[]
    skipDuplicates?: boolean
  }

  export type SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput = {
    id?: string
    file: AssetsCreateNestedOneWithoutSupplyOrderSupportInput
  }

  export type SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput = {
    id?: string
    assetsId: string
  }

  export type SupplyOrderSupportFileCreateOrConnectWithoutSupplyBatchOrderInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    create: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderSupportFileCreateManySupplyBatchOrderInputEnvelope = {
    data: SupplyOrderSupportFileCreateManySupplyBatchOrderInput | SupplyOrderSupportFileCreateManySupplyBatchOrderInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutSupplyBatchOrderInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutSupplyBatchOrderInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutSupplyBatchOrderInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutSupplyBatchOrderInput, LineUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type InventoryBoxCreateWithoutBatchInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutBatchInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutBatchInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutBatchInput, InventoryBoxUncheckedCreateWithoutBatchInput>
  }

  export type UserUpsertWithoutSupplyBatchOrderInput = {
    update: XOR<UserUpdateWithoutSupplyBatchOrderInput, UserUncheckedUpdateWithoutSupplyBatchOrderInput>
    create: XOR<UserCreateWithoutSupplyBatchOrderInput, UserUncheckedCreateWithoutSupplyBatchOrderInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSupplyBatchOrderInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSupplyBatchOrderInput, UserUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type UserUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type SupplyOrderUpsertWithWhereUniqueWithoutSupplyBatchOrderInput = {
    where: SupplyOrderWhereUniqueInput
    update: XOR<SupplyOrderUpdateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedUpdateWithoutSupplyBatchOrderInput>
    create: XOR<SupplyOrderCreateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderUpdateWithWhereUniqueWithoutSupplyBatchOrderInput = {
    where: SupplyOrderWhereUniqueInput
    data: XOR<SupplyOrderUpdateWithoutSupplyBatchOrderInput, SupplyOrderUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderUpdateManyWithWhereWithoutSupplyBatchOrderInput = {
    where: SupplyOrderScalarWhereInput
    data: XOR<SupplyOrderUpdateManyMutationInput, SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderSupportFileUpsertWithWhereUniqueWithoutSupplyBatchOrderInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    update: XOR<SupplyOrderSupportFileUpdateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedUpdateWithoutSupplyBatchOrderInput>
    create: XOR<SupplyOrderSupportFileCreateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedCreateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderSupportFileUpdateWithWhereUniqueWithoutSupplyBatchOrderInput = {
    where: SupplyOrderSupportFileWhereUniqueInput
    data: XOR<SupplyOrderSupportFileUpdateWithoutSupplyBatchOrderInput, SupplyOrderSupportFileUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type SupplyOrderSupportFileUpdateManyWithWhereWithoutSupplyBatchOrderInput = {
    where: SupplyOrderSupportFileScalarWhereInput
    data: XOR<SupplyOrderSupportFileUpdateManyMutationInput, SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderInput>
  }

  export type LineUpsertWithoutSupplyBatchOrderInput = {
    update: XOR<LineUpdateWithoutSupplyBatchOrderInput, LineUncheckedUpdateWithoutSupplyBatchOrderInput>
    create: XOR<LineCreateWithoutSupplyBatchOrderInput, LineUncheckedCreateWithoutSupplyBatchOrderInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutSupplyBatchOrderInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutSupplyBatchOrderInput, LineUncheckedUpdateWithoutSupplyBatchOrderInput>
  }

  export type LineUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type InventoryBoxUpsertWithoutBatchInput = {
    update: XOR<InventoryBoxUpdateWithoutBatchInput, InventoryBoxUncheckedUpdateWithoutBatchInput>
    create: XOR<InventoryBoxCreateWithoutBatchInput, InventoryBoxUncheckedCreateWithoutBatchInput>
    where?: InventoryBoxWhereInput
  }

  export type InventoryBoxUpdateToOneWithWhereWithoutBatchInput = {
    where?: InventoryBoxWhereInput
    data: XOR<InventoryBoxUpdateWithoutBatchInput, InventoryBoxUncheckedUpdateWithoutBatchInput>
  }

  export type InventoryBoxUpdateWithoutBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type AssetsCreateWithoutSupplyOrderSupportInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    Supplies?: SuppliesCreateNestedOneWithoutAssetInput
    ProfilePicture?: ProfilePictureCreateNestedManyWithoutAssetInput
  }

  export type AssetsUncheckedCreateWithoutSupplyOrderSupportInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
    suppliesId?: string | null
    ProfilePicture?: ProfilePictureUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetsCreateOrConnectWithoutSupplyOrderSupportInput = {
    where: AssetsWhereUniqueInput
    create: XOR<AssetsCreateWithoutSupplyOrderSupportInput, AssetsUncheckedCreateWithoutSupplyOrderSupportInput>
  }

  export type SupplyBatchOrderCreateWithoutFilesInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    user?: UserCreateNestedOneWithoutSupplyBatchOrderInput
    order?: SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput
    line?: LineCreateNestedOneWithoutSupplyBatchOrderInput
    InventoryBox?: InventoryBoxCreateNestedOneWithoutBatchInput
  }

  export type SupplyBatchOrderUncheckedCreateWithoutFilesInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
    order?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderCreateOrConnectWithoutFilesInput = {
    where: SupplyBatchOrderWhereUniqueInput
    create: XOR<SupplyBatchOrderCreateWithoutFilesInput, SupplyBatchOrderUncheckedCreateWithoutFilesInput>
  }

  export type AssetsUpsertWithoutSupplyOrderSupportInput = {
    update: XOR<AssetsUpdateWithoutSupplyOrderSupportInput, AssetsUncheckedUpdateWithoutSupplyOrderSupportInput>
    create: XOR<AssetsCreateWithoutSupplyOrderSupportInput, AssetsUncheckedCreateWithoutSupplyOrderSupportInput>
    where?: AssetsWhereInput
  }

  export type AssetsUpdateToOneWithWhereWithoutSupplyOrderSupportInput = {
    where?: AssetsWhereInput
    data: XOR<AssetsUpdateWithoutSupplyOrderSupportInput, AssetsUncheckedUpdateWithoutSupplyOrderSupportInput>
  }

  export type AssetsUpdateWithoutSupplyOrderSupportInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Supplies?: SuppliesUpdateOneWithoutAssetNestedInput
    ProfilePicture?: ProfilePictureUpdateManyWithoutAssetNestedInput
  }

  export type AssetsUncheckedUpdateWithoutSupplyOrderSupportInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    ProfilePicture?: ProfilePictureUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type SupplyBatchOrderUpsertWithoutFilesInput = {
    update: XOR<SupplyBatchOrderUpdateWithoutFilesInput, SupplyBatchOrderUncheckedUpdateWithoutFilesInput>
    create: XOR<SupplyBatchOrderCreateWithoutFilesInput, SupplyBatchOrderUncheckedCreateWithoutFilesInput>
    where?: SupplyBatchOrderWhereInput
  }

  export type SupplyBatchOrderUpdateToOneWithWhereWithoutFilesInput = {
    where?: SupplyBatchOrderWhereInput
    data: XOR<SupplyBatchOrderUpdateWithoutFilesInput, SupplyBatchOrderUncheckedUpdateWithoutFilesInput>
  }

  export type SupplyBatchOrderUpdateWithoutFilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneWithoutSupplyBatchOrderNestedInput
    order?: SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput
    line?: LineUpdateOneWithoutSupplyBatchOrderNestedInput
    InventoryBox?: InventoryBoxUpdateOneWithoutBatchNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateWithoutFilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    order?: SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderCreateWithoutOrderInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    user?: UserCreateNestedOneWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput
    line?: LineCreateNestedOneWithoutSupplyBatchOrderInput
    InventoryBox?: InventoryBoxCreateNestedOneWithoutBatchInput
  }

  export type SupplyBatchOrderUncheckedCreateWithoutOrderInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
    files?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderCreateOrConnectWithoutOrderInput = {
    where: SupplyBatchOrderWhereUniqueInput
    create: XOR<SupplyBatchOrderCreateWithoutOrderInput, SupplyBatchOrderUncheckedCreateWithoutOrderInput>
  }

  export type SuppliesCreateWithoutSupplyOrderInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSupplyOrderInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSupplyOrderInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSupplyOrderInput, SuppliesUncheckedCreateWithoutSupplyOrderInput>
  }

  export type SuppliesQualityCreateWithoutSupplyOrderInput = {
    id?: string
    quality: string
    perQuality?: number
    supplies?: SuppliesCreateNestedManyWithoutSuppliesQualityInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutUnitInput
  }

  export type SuppliesQualityUncheckedCreateWithoutSupplyOrderInput = {
    id?: string
    quality: string
    perQuality?: number
    suppliesDataSetId?: string | null
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesQualityInput
  }

  export type SuppliesQualityCreateOrConnectWithoutSupplyOrderInput = {
    where: SuppliesQualityWhereUniqueInput
    create: XOR<SuppliesQualityCreateWithoutSupplyOrderInput, SuppliesQualityUncheckedCreateWithoutSupplyOrderInput>
  }

  export type SupplyBatchOrderUpsertWithoutOrderInput = {
    update: XOR<SupplyBatchOrderUpdateWithoutOrderInput, SupplyBatchOrderUncheckedUpdateWithoutOrderInput>
    create: XOR<SupplyBatchOrderCreateWithoutOrderInput, SupplyBatchOrderUncheckedCreateWithoutOrderInput>
    where?: SupplyBatchOrderWhereInput
  }

  export type SupplyBatchOrderUpdateToOneWithWhereWithoutOrderInput = {
    where?: SupplyBatchOrderWhereInput
    data: XOR<SupplyBatchOrderUpdateWithoutOrderInput, SupplyBatchOrderUncheckedUpdateWithoutOrderInput>
  }

  export type SupplyBatchOrderUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput
    line?: LineUpdateOneWithoutSupplyBatchOrderNestedInput
    InventoryBox?: InventoryBoxUpdateOneWithoutBatchNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    files?: SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SuppliesUpsertWithoutSupplyOrderInput = {
    update: XOR<SuppliesUpdateWithoutSupplyOrderInput, SuppliesUncheckedUpdateWithoutSupplyOrderInput>
    create: XOR<SuppliesCreateWithoutSupplyOrderInput, SuppliesUncheckedCreateWithoutSupplyOrderInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSupplyOrderInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSupplyOrderInput, SuppliesUncheckedUpdateWithoutSupplyOrderInput>
  }

  export type SuppliesUpdateWithoutSupplyOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSupplyOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesQualityUpsertWithoutSupplyOrderInput = {
    update: XOR<SuppliesQualityUpdateWithoutSupplyOrderInput, SuppliesQualityUncheckedUpdateWithoutSupplyOrderInput>
    create: XOR<SuppliesQualityCreateWithoutSupplyOrderInput, SuppliesQualityUncheckedCreateWithoutSupplyOrderInput>
    where?: SuppliesQualityWhereInput
  }

  export type SuppliesQualityUpdateToOneWithWhereWithoutSupplyOrderInput = {
    where?: SuppliesQualityWhereInput
    data: XOR<SuppliesQualityUpdateWithoutSupplyOrderInput, SuppliesQualityUncheckedUpdateWithoutSupplyOrderInput>
  }

  export type SuppliesQualityUpdateWithoutSupplyOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    supplies?: SuppliesUpdateManyWithoutSuppliesQualityNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutUnitNestedInput
  }

  export type SuppliesQualityUncheckedUpdateWithoutSupplyOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesQualityNestedInput
  }

  export type SuppliesQualityCreateWithoutSuppliesDataSetInput = {
    id?: string
    quality: string
    perQuality?: number
    supplies?: SuppliesCreateNestedManyWithoutSuppliesQualityInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput = {
    id?: string
    quality: string
    perQuality?: number
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesQualityInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutUnitInput
  }

  export type SuppliesQualityCreateOrConnectWithoutSuppliesDataSetInput = {
    where: SuppliesQualityWhereUniqueInput
    create: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SuppliesQualityCreateManySuppliesDataSetInputEnvelope = {
    data: SuppliesQualityCreateManySuppliesDataSetInput | SuppliesQualityCreateManySuppliesDataSetInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutSuppliesDataSetInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutSuppliesDataSetInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutSuppliesDataSetInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutSuppliesDataSetInput, LineUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type InventoryBoxCreateWithoutSuppliesDataSetInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutSuppliesDataSetInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutSuppliesDataSetInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutSuppliesDataSetInput, InventoryBoxUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SupplyBatchCreateWithoutSuppliesDataSetInput = {
    id?: string
    timestamp?: Date | string
    title: string
    box: InventoryBoxCreateNestedOneWithoutSupplyBatchInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedManyWithoutBatchInput
  }

  export type SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput = {
    id?: string
    timestamp?: Date | string
    title: string
    inventoryBoxId: string
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedManyWithoutBatchInput
  }

  export type SupplyBatchCreateOrConnectWithoutSuppliesDataSetInput = {
    where: SupplyBatchWhereUniqueInput
    create: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SupplyBatchCreateManySuppliesDataSetInputEnvelope = {
    data: SupplyBatchCreateManySuppliesDataSetInput | SupplyBatchCreateManySuppliesDataSetInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesCreateWithoutSuppliesDataSetInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesUncheckedCreateWithoutSuppliesDataSetInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSuppliesDataSetInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SuppliesCreateManySuppliesDataSetInputEnvelope = {
    data: SuppliesCreateManySuppliesDataSetInput | SuppliesCreateManySuppliesDataSetInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesQualityUpsertWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SuppliesQualityWhereUniqueInput
    update: XOR<SuppliesQualityUpdateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedUpdateWithoutSuppliesDataSetInput>
    create: XOR<SuppliesQualityCreateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SuppliesQualityUpdateWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SuppliesQualityWhereUniqueInput
    data: XOR<SuppliesQualityUpdateWithoutSuppliesDataSetInput, SuppliesQualityUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type SuppliesQualityUpdateManyWithWhereWithoutSuppliesDataSetInput = {
    where: SuppliesQualityScalarWhereInput
    data: XOR<SuppliesQualityUpdateManyMutationInput, SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetInput>
  }

  export type SuppliesQualityScalarWhereInput = {
    AND?: SuppliesQualityScalarWhereInput | SuppliesQualityScalarWhereInput[]
    OR?: SuppliesQualityScalarWhereInput[]
    NOT?: SuppliesQualityScalarWhereInput | SuppliesQualityScalarWhereInput[]
    id?: StringFilter<"SuppliesQuality"> | string
    quality?: StringFilter<"SuppliesQuality"> | string
    perQuality?: IntFilter<"SuppliesQuality"> | number
    suppliesDataSetId?: StringNullableFilter<"SuppliesQuality"> | string | null
  }

  export type LineUpsertWithoutSuppliesDataSetInput = {
    update: XOR<LineUpdateWithoutSuppliesDataSetInput, LineUncheckedUpdateWithoutSuppliesDataSetInput>
    create: XOR<LineCreateWithoutSuppliesDataSetInput, LineUncheckedCreateWithoutSuppliesDataSetInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutSuppliesDataSetInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutSuppliesDataSetInput, LineUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type LineUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
  }

  export type InventoryBoxUpsertWithoutSuppliesDataSetInput = {
    update: XOR<InventoryBoxUpdateWithoutSuppliesDataSetInput, InventoryBoxUncheckedUpdateWithoutSuppliesDataSetInput>
    create: XOR<InventoryBoxCreateWithoutSuppliesDataSetInput, InventoryBoxUncheckedCreateWithoutSuppliesDataSetInput>
    where?: InventoryBoxWhereInput
  }

  export type InventoryBoxUpdateToOneWithWhereWithoutSuppliesDataSetInput = {
    where?: InventoryBoxWhereInput
    data: XOR<InventoryBoxUpdateWithoutSuppliesDataSetInput, InventoryBoxUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type InventoryBoxUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type SupplyBatchUpsertWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SupplyBatchWhereUniqueInput
    update: XOR<SupplyBatchUpdateWithoutSuppliesDataSetInput, SupplyBatchUncheckedUpdateWithoutSuppliesDataSetInput>
    create: XOR<SupplyBatchCreateWithoutSuppliesDataSetInput, SupplyBatchUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SupplyBatchUpdateWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SupplyBatchWhereUniqueInput
    data: XOR<SupplyBatchUpdateWithoutSuppliesDataSetInput, SupplyBatchUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type SupplyBatchUpdateManyWithWhereWithoutSuppliesDataSetInput = {
    where: SupplyBatchScalarWhereInput
    data: XOR<SupplyBatchUpdateManyMutationInput, SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetInput>
  }

  export type SuppliesUpsertWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SuppliesWhereUniqueInput
    update: XOR<SuppliesUpdateWithoutSuppliesDataSetInput, SuppliesUncheckedUpdateWithoutSuppliesDataSetInput>
    create: XOR<SuppliesCreateWithoutSuppliesDataSetInput, SuppliesUncheckedCreateWithoutSuppliesDataSetInput>
  }

  export type SuppliesUpdateWithWhereUniqueWithoutSuppliesDataSetInput = {
    where: SuppliesWhereUniqueInput
    data: XOR<SuppliesUpdateWithoutSuppliesDataSetInput, SuppliesUncheckedUpdateWithoutSuppliesDataSetInput>
  }

  export type SuppliesUpdateManyWithWhereWithoutSuppliesDataSetInput = {
    where: SuppliesScalarWhereInput
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyWithoutSuppliesDataSetInput>
  }

  export type SuppliesCreateWithoutSuppliesQualityInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSuppliesQualityInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSuppliesQualityInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput>
  }

  export type SuppliesCreateManySuppliesQualityInputEnvelope = {
    data: SuppliesCreateManySuppliesQualityInput | SuppliesCreateManySuppliesQualityInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesDataSetCreateWithoutUnitInput = {
    id?: string
    title: string
    timestamp?: Date | string
    line: LineCreateNestedOneWithoutSuppliesDataSetInput
    container: InventoryBoxCreateNestedOneWithoutSuppliesDataSetInput
    list?: SupplyBatchCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetUncheckedCreateWithoutUnitInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
    inventoryBoxId: string
    list?: SupplyBatchUncheckedCreateNestedManyWithoutSuppliesDataSetInput
    supplies?: SuppliesUncheckedCreateNestedManyWithoutSuppliesDataSetInput
  }

  export type SuppliesDataSetCreateOrConnectWithoutUnitInput = {
    where: SuppliesDataSetWhereUniqueInput
    create: XOR<SuppliesDataSetCreateWithoutUnitInput, SuppliesDataSetUncheckedCreateWithoutUnitInput>
  }

  export type SupplyOrderCreateWithoutUnitInput = {
    id?: string
    quantity?: number
    status?: string
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedOneWithoutOrderInput
    supply: SuppliesCreateNestedOneWithoutSupplyOrderInput
  }

  export type SupplyOrderUncheckedCreateWithoutUnitInput = {
    id?: string
    supplyBatchOrderId?: string | null
    suppliesId: string
    quantity?: number
    status?: string
  }

  export type SupplyOrderCreateOrConnectWithoutUnitInput = {
    where: SupplyOrderWhereUniqueInput
    create: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput>
  }

  export type SupplyOrderCreateManyUnitInputEnvelope = {
    data: SupplyOrderCreateManyUnitInput | SupplyOrderCreateManyUnitInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesUpsertWithWhereUniqueWithoutSuppliesQualityInput = {
    where: SuppliesWhereUniqueInput
    update: XOR<SuppliesUpdateWithoutSuppliesQualityInput, SuppliesUncheckedUpdateWithoutSuppliesQualityInput>
    create: XOR<SuppliesCreateWithoutSuppliesQualityInput, SuppliesUncheckedCreateWithoutSuppliesQualityInput>
  }

  export type SuppliesUpdateWithWhereUniqueWithoutSuppliesQualityInput = {
    where: SuppliesWhereUniqueInput
    data: XOR<SuppliesUpdateWithoutSuppliesQualityInput, SuppliesUncheckedUpdateWithoutSuppliesQualityInput>
  }

  export type SuppliesUpdateManyWithWhereWithoutSuppliesQualityInput = {
    where: SuppliesScalarWhereInput
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyWithoutSuppliesQualityInput>
  }

  export type SuppliesDataSetUpsertWithoutUnitInput = {
    update: XOR<SuppliesDataSetUpdateWithoutUnitInput, SuppliesDataSetUncheckedUpdateWithoutUnitInput>
    create: XOR<SuppliesDataSetCreateWithoutUnitInput, SuppliesDataSetUncheckedCreateWithoutUnitInput>
    where?: SuppliesDataSetWhereInput
  }

  export type SuppliesDataSetUpdateToOneWithWhereWithoutUnitInput = {
    where?: SuppliesDataSetWhereInput
    data: XOR<SuppliesDataSetUpdateWithoutUnitInput, SuppliesDataSetUncheckedUpdateWithoutUnitInput>
  }

  export type SuppliesDataSetUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    line?: LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    list?: SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SupplyOrderUpsertWithWhereUniqueWithoutUnitInput = {
    where: SupplyOrderWhereUniqueInput
    update: XOR<SupplyOrderUpdateWithoutUnitInput, SupplyOrderUncheckedUpdateWithoutUnitInput>
    create: XOR<SupplyOrderCreateWithoutUnitInput, SupplyOrderUncheckedCreateWithoutUnitInput>
  }

  export type SupplyOrderUpdateWithWhereUniqueWithoutUnitInput = {
    where: SupplyOrderWhereUniqueInput
    data: XOR<SupplyOrderUpdateWithoutUnitInput, SupplyOrderUncheckedUpdateWithoutUnitInput>
  }

  export type SupplyOrderUpdateManyWithWhereWithoutUnitInput = {
    where: SupplyOrderScalarWhereInput
    data: XOR<SupplyOrderUpdateManyMutationInput, SupplyOrderUncheckedUpdateManyWithoutUnitInput>
  }

  export type SuppliesCreateWithoutSupplyPriceTrackInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSupplyPriceTrackInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSupplyPriceTrackInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSupplyPriceTrackInput, SuppliesUncheckedCreateWithoutSupplyPriceTrackInput>
  }

  export type SuppliesUpsertWithoutSupplyPriceTrackInput = {
    update: XOR<SuppliesUpdateWithoutSupplyPriceTrackInput, SuppliesUncheckedUpdateWithoutSupplyPriceTrackInput>
    create: XOR<SuppliesCreateWithoutSupplyPriceTrackInput, SuppliesUncheckedCreateWithoutSupplyPriceTrackInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSupplyPriceTrackInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSupplyPriceTrackInput, SuppliesUncheckedUpdateWithoutSupplyPriceTrackInput>
  }

  export type SuppliesUpdateWithoutSupplyPriceTrackInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSupplyPriceTrackInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesCreateWithoutSupplyStockTrackInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSupplyStockTrackInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSupplyStockTrackInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSupplyStockTrackInput, SuppliesUncheckedCreateWithoutSupplyStockTrackInput>
  }

  export type SuppliesUpsertWithoutSupplyStockTrackInput = {
    update: XOR<SuppliesUpdateWithoutSupplyStockTrackInput, SuppliesUncheckedUpdateWithoutSupplyStockTrackInput>
    create: XOR<SuppliesCreateWithoutSupplyStockTrackInput, SuppliesUncheckedCreateWithoutSupplyStockTrackInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSupplyStockTrackInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSupplyStockTrackInput, SuppliesUncheckedUpdateWithoutSupplyStockTrackInput>
  }

  export type SuppliesUpdateWithoutSupplyStockTrackInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSupplyStockTrackInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesCreateWithoutSuppliesCategoryInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSuppliesCategoryInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSuppliesCategoryInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput>
  }

  export type SuppliesCreateManySuppliesCategoryInputEnvelope = {
    data: SuppliesCreateManySuppliesCategoryInput | SuppliesCreateManySuppliesCategoryInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesUpsertWithWhereUniqueWithoutSuppliesCategoryInput = {
    where: SuppliesWhereUniqueInput
    update: XOR<SuppliesUpdateWithoutSuppliesCategoryInput, SuppliesUncheckedUpdateWithoutSuppliesCategoryInput>
    create: XOR<SuppliesCreateWithoutSuppliesCategoryInput, SuppliesUncheckedCreateWithoutSuppliesCategoryInput>
  }

  export type SuppliesUpdateWithWhereUniqueWithoutSuppliesCategoryInput = {
    where: SuppliesWhereUniqueInput
    data: XOR<SuppliesUpdateWithoutSuppliesCategoryInput, SuppliesUncheckedUpdateWithoutSuppliesCategoryInput>
  }

  export type SuppliesUpdateManyWithWhereWithoutSuppliesCategoryInput = {
    where: SuppliesScalarWhereInput
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyWithoutSuppliesCategoryInput>
  }

  export type SuppliesCreateWithoutSupplieRecieveHistoryInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSupplieRecieveHistoryInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSupplieRecieveHistoryInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedCreateWithoutSupplieRecieveHistoryInput>
  }

  export type SuppliesUpsertWithoutSupplieRecieveHistoryInput = {
    update: XOR<SuppliesUpdateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedUpdateWithoutSupplieRecieveHistoryInput>
    create: XOR<SuppliesCreateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedCreateWithoutSupplieRecieveHistoryInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSupplieRecieveHistoryInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSupplieRecieveHistoryInput, SuppliesUncheckedUpdateWithoutSupplieRecieveHistoryInput>
  }

  export type SuppliesUpdateWithoutSupplieRecieveHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSupplieRecieveHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesCreateWithoutTransferredSuppliesInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutTransferredSuppliesInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutTransferredSuppliesInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutTransferredSuppliesInput, SuppliesUncheckedCreateWithoutTransferredSuppliesInput>
  }

  export type UserCreateWithoutTransferredSuppliesInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutTransferredSuppliesInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutTransferredSuppliesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransferredSuppliesInput, UserUncheckedCreateWithoutTransferredSuppliesInput>
  }

  export type UserCreateWithoutTransferToInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutTransferToInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutTransferToInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransferToInput, UserUncheckedCreateWithoutTransferToInput>
  }

  export type SuppliesUpsertWithoutTransferredSuppliesInput = {
    update: XOR<SuppliesUpdateWithoutTransferredSuppliesInput, SuppliesUncheckedUpdateWithoutTransferredSuppliesInput>
    create: XOR<SuppliesCreateWithoutTransferredSuppliesInput, SuppliesUncheckedCreateWithoutTransferredSuppliesInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutTransferredSuppliesInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutTransferredSuppliesInput, SuppliesUncheckedUpdateWithoutTransferredSuppliesInput>
  }

  export type SuppliesUpdateWithoutTransferredSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutTransferredSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type UserUpsertWithoutTransferredSuppliesInput = {
    update: XOR<UserUpdateWithoutTransferredSuppliesInput, UserUncheckedUpdateWithoutTransferredSuppliesInput>
    create: XOR<UserCreateWithoutTransferredSuppliesInput, UserUncheckedCreateWithoutTransferredSuppliesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransferredSuppliesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransferredSuppliesInput, UserUncheckedUpdateWithoutTransferredSuppliesInput>
  }

  export type UserUpdateWithoutTransferredSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutTransferredSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUpsertWithoutTransferToInput = {
    update: XOR<UserUpdateWithoutTransferToInput, UserUncheckedUpdateWithoutTransferToInput>
    create: XOR<UserCreateWithoutTransferToInput, UserUncheckedCreateWithoutTransferToInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransferToInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransferToInput, UserUncheckedUpdateWithoutTransferToInput>
  }

  export type UserUpdateWithoutTransferToInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutTransferToInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type SuppliesCreateWithoutSuppliesRecordInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutSuppliesRecordInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutSuppliesRecordInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutSuppliesRecordInput, SuppliesUncheckedCreateWithoutSuppliesRecordInput>
  }

  export type UserCreateWithoutSuppliesRecordInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutSuppliesRecordInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutSuppliesRecordInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSuppliesRecordInput, UserUncheckedCreateWithoutSuppliesRecordInput>
  }

  export type SuppliesCreateWithoutPartInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    user?: UserCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutPartInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutPartInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutPartInput, SuppliesUncheckedCreateWithoutPartInput>
  }

  export type SuppliesUpsertWithoutSuppliesRecordInput = {
    update: XOR<SuppliesUpdateWithoutSuppliesRecordInput, SuppliesUncheckedUpdateWithoutSuppliesRecordInput>
    create: XOR<SuppliesCreateWithoutSuppliesRecordInput, SuppliesUncheckedCreateWithoutSuppliesRecordInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutSuppliesRecordInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutSuppliesRecordInput, SuppliesUncheckedUpdateWithoutSuppliesRecordInput>
  }

  export type SuppliesUpdateWithoutSuppliesRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSuppliesRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type UserUpsertWithoutSuppliesRecordInput = {
    update: XOR<UserUpdateWithoutSuppliesRecordInput, UserUncheckedUpdateWithoutSuppliesRecordInput>
    create: XOR<UserCreateWithoutSuppliesRecordInput, UserUncheckedCreateWithoutSuppliesRecordInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSuppliesRecordInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSuppliesRecordInput, UserUncheckedUpdateWithoutSuppliesRecordInput>
  }

  export type UserUpdateWithoutSuppliesRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutSuppliesRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type SuppliesUpsertWithoutPartInput = {
    update: XOR<SuppliesUpdateWithoutPartInput, SuppliesUncheckedUpdateWithoutPartInput>
    create: XOR<SuppliesCreateWithoutPartInput, SuppliesUncheckedCreateWithoutPartInput>
    where?: SuppliesWhereInput
  }

  export type SuppliesUpdateToOneWithWhereWithoutPartInput = {
    where?: SuppliesWhereInput
    data: XOR<SuppliesUpdateWithoutPartInput, SuppliesUncheckedUpdateWithoutPartInput>
  }

  export type SuppliesUpdateWithoutPartInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutPartInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type UserCreateWithoutApplicationInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutApplicationInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutApplicationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApplicationInput, UserUncheckedCreateWithoutApplicationInput>
  }

  export type PositionCreateWithoutApplicationInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutApplicationInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
  }

  export type PositionCreateOrConnectWithoutApplicationInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutApplicationInput, PositionUncheckedCreateWithoutApplicationInput>
  }

  export type UserUpsertWithoutApplicationInput = {
    update: XOR<UserUpdateWithoutApplicationInput, UserUncheckedUpdateWithoutApplicationInput>
    create: XOR<UserCreateWithoutApplicationInput, UserUncheckedCreateWithoutApplicationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApplicationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApplicationInput, UserUncheckedUpdateWithoutApplicationInput>
  }

  export type UserUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type PositionUpsertWithoutApplicationInput = {
    update: XOR<PositionUpdateWithoutApplicationInput, PositionUncheckedUpdateWithoutApplicationInput>
    create: XOR<PositionCreateWithoutApplicationInput, PositionUncheckedCreateWithoutApplicationInput>
    where?: PositionWhereInput
  }

  export type PositionUpdateToOneWithWhereWithoutApplicationInput = {
    where?: PositionWhereInput
    data: XOR<PositionUpdateWithoutApplicationInput, PositionUncheckedUpdateWithoutApplicationInput>
  }

  export type PositionUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
  }

  export type UserCreateWithoutHeadedDepartmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutHeadedDepartmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutHeadedDepartmentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHeadedDepartmentInput, UserUncheckedCreateWithoutHeadedDepartmentInput>
  }

  export type UserCreateWithoutDepartmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutDepartmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput>
  }

  export type UserCreateManyDepartmentInputEnvelope = {
    data: UserCreateManyDepartmentInput | UserCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutDepartmentInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutDepartmentInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutDepartmentInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutDepartmentInput, LineUncheckedCreateWithoutDepartmentInput>
  }

  export type PositionCreateWithoutDepartmentInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutDepartmentInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutDepartmentInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput>
  }

  export type PositionCreateManyDepartmentInputEnvelope = {
    data: PositionCreateManyDepartmentInput | PositionCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type AnnouncementCreateWithoutUnitInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    important?: boolean
    author: UserCreateNestedOneWithoutAnnouncementInput
    line: LineCreateNestedOneWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutUnitInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    lineId: string
    path?: string | null
    important?: boolean
  }

  export type AnnouncementCreateOrConnectWithoutUnitInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput>
  }

  export type AnnouncementCreateManyUnitInputEnvelope = {
    data: AnnouncementCreateManyUnitInput | AnnouncementCreateManyUnitInput[]
    skipDuplicates?: boolean
  }

  export type GroupCreateWithoutUnitInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutGroupInput
    line?: LineCreateNestedOneWithoutGroupInput
    chief?: UserCreateNestedOneWithoutChiefInput
  }

  export type GroupUncheckedCreateWithoutUnitInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    userId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutGroupInput
  }

  export type GroupCreateOrConnectWithoutUnitInput = {
    where: GroupWhereUniqueInput
    create: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput>
  }

  export type GroupCreateManyUnitInputEnvelope = {
    data: GroupCreateManyUnitInput | GroupCreateManyUnitInput[]
    skipDuplicates?: boolean
  }

  export type InventoryBoxCreateWithoutUnitInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    createdBy: UserCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutUnitInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutUnitInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput>
  }

  export type InventoryBoxCreateManyUnitInputEnvelope = {
    data: InventoryBoxCreateManyUnitInput | InventoryBoxCreateManyUnitInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutHeadedDepartmentInput = {
    update: XOR<UserUpdateWithoutHeadedDepartmentInput, UserUncheckedUpdateWithoutHeadedDepartmentInput>
    create: XOR<UserCreateWithoutHeadedDepartmentInput, UserUncheckedCreateWithoutHeadedDepartmentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHeadedDepartmentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHeadedDepartmentInput, UserUncheckedUpdateWithoutHeadedDepartmentInput>
  }

  export type UserUpdateWithoutHeadedDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutHeadedDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutDepartmentInput, UserUncheckedUpdateWithoutDepartmentInput>
    create: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput>
  }

  export type UserUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutDepartmentInput, UserUncheckedUpdateWithoutDepartmentInput>
  }

  export type UserUpdateManyWithWhereWithoutDepartmentInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type LineUpsertWithoutDepartmentInput = {
    update: XOR<LineUpdateWithoutDepartmentInput, LineUncheckedUpdateWithoutDepartmentInput>
    create: XOR<LineCreateWithoutDepartmentInput, LineUncheckedCreateWithoutDepartmentInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutDepartmentInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutDepartmentInput, LineUncheckedUpdateWithoutDepartmentInput>
  }

  export type LineUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type PositionUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: PositionWhereUniqueInput
    update: XOR<PositionUpdateWithoutDepartmentInput, PositionUncheckedUpdateWithoutDepartmentInput>
    create: XOR<PositionCreateWithoutDepartmentInput, PositionUncheckedCreateWithoutDepartmentInput>
  }

  export type PositionUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: PositionWhereUniqueInput
    data: XOR<PositionUpdateWithoutDepartmentInput, PositionUncheckedUpdateWithoutDepartmentInput>
  }

  export type PositionUpdateManyWithWhereWithoutDepartmentInput = {
    where: PositionScalarWhereInput
    data: XOR<PositionUpdateManyMutationInput, PositionUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutUnitInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutUnitInput, AnnouncementUncheckedUpdateWithoutUnitInput>
    create: XOR<AnnouncementCreateWithoutUnitInput, AnnouncementUncheckedCreateWithoutUnitInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutUnitInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutUnitInput, AnnouncementUncheckedUpdateWithoutUnitInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutUnitInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutUnitInput>
  }

  export type GroupUpsertWithWhereUniqueWithoutUnitInput = {
    where: GroupWhereUniqueInput
    update: XOR<GroupUpdateWithoutUnitInput, GroupUncheckedUpdateWithoutUnitInput>
    create: XOR<GroupCreateWithoutUnitInput, GroupUncheckedCreateWithoutUnitInput>
  }

  export type GroupUpdateWithWhereUniqueWithoutUnitInput = {
    where: GroupWhereUniqueInput
    data: XOR<GroupUpdateWithoutUnitInput, GroupUncheckedUpdateWithoutUnitInput>
  }

  export type GroupUpdateManyWithWhereWithoutUnitInput = {
    where: GroupScalarWhereInput
    data: XOR<GroupUpdateManyMutationInput, GroupUncheckedUpdateManyWithoutUnitInput>
  }

  export type InventoryBoxUpsertWithWhereUniqueWithoutUnitInput = {
    where: InventoryBoxWhereUniqueInput
    update: XOR<InventoryBoxUpdateWithoutUnitInput, InventoryBoxUncheckedUpdateWithoutUnitInput>
    create: XOR<InventoryBoxCreateWithoutUnitInput, InventoryBoxUncheckedCreateWithoutUnitInput>
  }

  export type InventoryBoxUpdateWithWhereUniqueWithoutUnitInput = {
    where: InventoryBoxWhereUniqueInput
    data: XOR<InventoryBoxUpdateWithoutUnitInput, InventoryBoxUncheckedUpdateWithoutUnitInput>
  }

  export type InventoryBoxUpdateManyWithWhereWithoutUnitInput = {
    where: InventoryBoxScalarWhereInput
    data: XOR<InventoryBoxUpdateManyMutationInput, InventoryBoxUncheckedUpdateManyWithoutUnitInput>
  }

  export type DepartmentCreateWithoutGroupInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutGroupInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutGroupInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutGroupInput, DepartmentUncheckedCreateWithoutGroupInput>
  }

  export type UserCreateWithoutGroupInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutGroupInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutGroupInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput>
  }

  export type UserCreateManyGroupInputEnvelope = {
    data: UserCreateManyGroupInput | UserCreateManyGroupInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutGroupInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutGroupInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutGroupInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutGroupInput, LineUncheckedCreateWithoutGroupInput>
  }

  export type UserCreateWithoutChiefInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutChiefInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutChiefInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChiefInput, UserUncheckedCreateWithoutChiefInput>
  }

  export type DepartmentUpsertWithoutGroupInput = {
    update: XOR<DepartmentUpdateWithoutGroupInput, DepartmentUncheckedUpdateWithoutGroupInput>
    create: XOR<DepartmentCreateWithoutGroupInput, DepartmentUncheckedCreateWithoutGroupInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutGroupInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutGroupInput, DepartmentUncheckedUpdateWithoutGroupInput>
  }

  export type DepartmentUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutGroupInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutGroupInput, UserUncheckedUpdateWithoutGroupInput>
    create: XOR<UserCreateWithoutGroupInput, UserUncheckedCreateWithoutGroupInput>
  }

  export type UserUpdateWithWhereUniqueWithoutGroupInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutGroupInput, UserUncheckedUpdateWithoutGroupInput>
  }

  export type UserUpdateManyWithWhereWithoutGroupInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutGroupInput>
  }

  export type LineUpsertWithoutGroupInput = {
    update: XOR<LineUpdateWithoutGroupInput, LineUncheckedUpdateWithoutGroupInput>
    create: XOR<LineCreateWithoutGroupInput, LineUncheckedCreateWithoutGroupInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutGroupInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutGroupInput, LineUncheckedUpdateWithoutGroupInput>
  }

  export type LineUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type UserUpsertWithoutChiefInput = {
    update: XOR<UserUpdateWithoutChiefInput, UserUncheckedUpdateWithoutChiefInput>
    create: XOR<UserCreateWithoutChiefInput, UserUncheckedCreateWithoutChiefInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChiefInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChiefInput, UserUncheckedUpdateWithoutChiefInput>
  }

  export type UserUpdateWithoutChiefInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutChiefInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type LineCreateWithoutAdminProfileInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutAdminProfileInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutAdminProfileInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput>
  }

  export type LineCreateManyAdminProfileInputEnvelope = {
    data: LineCreateManyAdminProfileInput | LineCreateManyAdminProfileInput[]
    skipDuplicates?: boolean
  }

  export type LineUpsertWithWhereUniqueWithoutAdminProfileInput = {
    where: LineWhereUniqueInput
    update: XOR<LineUpdateWithoutAdminProfileInput, LineUncheckedUpdateWithoutAdminProfileInput>
    create: XOR<LineCreateWithoutAdminProfileInput, LineUncheckedCreateWithoutAdminProfileInput>
  }

  export type LineUpdateWithWhereUniqueWithoutAdminProfileInput = {
    where: LineWhereUniqueInput
    data: XOR<LineUpdateWithoutAdminProfileInput, LineUncheckedUpdateWithoutAdminProfileInput>
  }

  export type LineUpdateManyWithWhereWithoutAdminProfileInput = {
    where: LineScalarWhereInput
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyWithoutAdminProfileInput>
  }

  export type LineScalarWhereInput = {
    AND?: LineScalarWhereInput | LineScalarWhereInput[]
    OR?: LineScalarWhereInput[]
    NOT?: LineScalarWhereInput | LineScalarWhereInput[]
    id?: StringFilter<"Line"> | string
    name?: StringFilter<"Line"> | string
    password?: StringNullableFilter<"Line"> | string | null
    barangayId?: StringFilter<"Line"> | string
    municipalId?: StringFilter<"Line"> | string
    provinceId?: StringFilter<"Line"> | string
    regionId?: StringFilter<"Line"> | string
    createdAt?: DateTimeFilter<"Line"> | Date | string
    status?: IntFilter<"Line"> | number
    adminProfileId?: StringNullableFilter<"Line"> | string | null
  }

  export type UserCreateWithoutAccountInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutAccountInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutAccountInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
  }

  export type LineCreateWithoutAccountInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutAccountInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutAccountInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutAccountInput, LineUncheckedCreateWithoutAccountInput>
  }

  export type UserUpsertWithoutAccountInput = {
    update: XOR<UserUpdateWithoutAccountInput, UserUncheckedUpdateWithoutAccountInput>
    create: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountInput, UserUncheckedUpdateWithoutAccountInput>
  }

  export type UserUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type LineUpsertWithoutAccountInput = {
    update: XOR<LineUpdateWithoutAccountInput, LineUncheckedUpdateWithoutAccountInput>
    create: XOR<LineCreateWithoutAccountInput, LineUncheckedCreateWithoutAccountInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutAccountInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutAccountInput, LineUncheckedUpdateWithoutAccountInput>
  }

  export type LineUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type UserCreateWithoutPrivilegeInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutPrivilegeInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutPrivilegeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
  }

  export type UserUpsertWithoutPrivilegeInput = {
    update: XOR<UserUpdateWithoutPrivilegeInput, UserUncheckedUpdateWithoutPrivilegeInput>
    create: XOR<UserCreateWithoutPrivilegeInput, UserUncheckedCreateWithoutPrivilegeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPrivilegeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPrivilegeInput, UserUncheckedUpdateWithoutPrivilegeInput>
  }

  export type UserUpdateWithoutPrivilegeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutPrivilegeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type NotificationCreateWithoutSenderInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    isRead?: boolean
    recipient: UserCreateNestedOneWithoutReceivedNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutSenderInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    recipientId: string
    path?: string | null
    isRead?: boolean
  }

  export type NotificationCreateOrConnectWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationCreateManySenderInputEnvelope = {
    data: NotificationCreateManySenderInput | NotificationCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRecipientInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    isRead?: boolean
    sender: UserCreateNestedOneWithoutSentNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRecipientInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    senderId: string
    path?: string | null
    isRead?: boolean
  }

  export type NotificationCreateOrConnectWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationCreateManyRecipientInputEnvelope = {
    data: NotificationCreateManyRecipientInput | NotificationCreateManyRecipientInput[]
    skipDuplicates?: boolean
  }

  export type DepartmentCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutUsersInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
  }

  export type DepartmentCreateWithoutHeadInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutHeadInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutHeadInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
  }

  export type PositionCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutUsersInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutUsersInput, PositionUncheckedCreateWithoutUsersInput>
  }

  export type SalaryGradeCreateWithoutUsersInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    SalaryGradeHistory?: SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutSalaryGradeInput
    line?: LineCreateNestedOneWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateWithoutUsersInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionUncheckedCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeCreateOrConnectWithoutUsersInput = {
    where: SalaryGradeWhereUniqueInput
    create: XOR<SalaryGradeCreateWithoutUsersInput, SalaryGradeUncheckedCreateWithoutUsersInput>
  }

  export type LeaveCreateWithoutUserInput = {
    id?: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
  }

  export type LeaveUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
  }

  export type LeaveCreateOrConnectWithoutUserInput = {
    where: LeaveWhereUniqueInput
    create: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput>
  }

  export type LeaveCreateManyUserInputEnvelope = {
    data: LeaveCreateManyUserInput | LeaveCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AnnouncementCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    path?: string | null
    important?: boolean
    line: LineCreateNestedOneWithoutAnnouncementInput
    unit?: DepartmentCreateNestedOneWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    lineId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type AnnouncementCreateOrConnectWithoutAuthorInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput>
  }

  export type AnnouncementCreateManyAuthorInputEnvelope = {
    data: AnnouncementCreateManyAuthorInput | AnnouncementCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    line?: LineCreateNestedOneWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
    lineId?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type PromotionCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    postion: PositionCreateNestedOneWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    positionId: string
  }

  export type PromotionCreateOrConnectWithoutUserInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput>
  }

  export type PromotionCreateManyUserInputEnvelope = {
    data: PromotionCreateManyUserInput | PromotionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BirthdayNoticeResponseCreateWithoutSenderInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    Recipient?: UserCreateNestedOneWithoutBdayRecipientInput
    line: LineCreateNestedOneWithoutBirthdayNoticeResponseInput
  }

  export type BirthdayNoticeResponseUncheckedCreateWithoutSenderInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    recipientId?: string | null
    lineId: string
  }

  export type BirthdayNoticeResponseCreateOrConnectWithoutSenderInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    create: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput>
  }

  export type BirthdayNoticeResponseCreateManySenderInputEnvelope = {
    data: BirthdayNoticeResponseCreateManySenderInput | BirthdayNoticeResponseCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type BirthdayNoticeResponseCreateWithoutRecipientInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    Sender: UserCreateNestedOneWithoutBdaySenderInput
    line: LineCreateNestedOneWithoutBirthdayNoticeResponseInput
  }

  export type BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    lineId: string
  }

  export type BirthdayNoticeResponseCreateOrConnectWithoutRecipientInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    create: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput>
  }

  export type BirthdayNoticeResponseCreateManyRecipientInputEnvelope = {
    data: BirthdayNoticeResponseCreateManyRecipientInput | BirthdayNoticeResponseCreateManyRecipientInput[]
    skipDuplicates?: boolean
  }

  export type RegionCreateWithoutUserInput = {
    id: string
    name: string
    provices?: ProvinceCreateNestedManyWithoutRegionInput
    Line?: LineCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    provices?: ProvinceUncheckedCreateNestedManyWithoutRegionInput
    Line?: LineUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutUserInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutUserInput, RegionUncheckedCreateWithoutUserInput>
  }

  export type ProvinceCreateWithoutUserInput = {
    id: string
    name: string
    Region?: RegionCreateNestedOneWithoutProvicesInput
    municipals?: MunicipalCreateNestedManyWithoutProvinceInput
    Line?: LineCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    regionId?: string | null
    municipals?: MunicipalUncheckedCreateNestedManyWithoutProvinceInput
    Line?: LineUncheckedCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceCreateOrConnectWithoutUserInput = {
    where: ProvinceWhereUniqueInput
    create: XOR<ProvinceCreateWithoutUserInput, ProvinceUncheckedCreateWithoutUserInput>
  }

  export type MunicipalCreateWithoutUserInput = {
    id: string
    name: string
    Province?: ProvinceCreateNestedOneWithoutMunicipalsInput
    barangays?: BarangayCreateNestedManyWithoutMunicipalInput
    Line?: LineCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    provinceId?: string | null
    barangays?: BarangayUncheckedCreateNestedManyWithoutMunicipalInput
    Line?: LineUncheckedCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalCreateOrConnectWithoutUserInput = {
    where: MunicipalWhereUniqueInput
    create: XOR<MunicipalCreateWithoutUserInput, MunicipalUncheckedCreateWithoutUserInput>
  }

  export type BarangayCreateWithoutUserInput = {
    id: string
    name: string
    Municipal?: MunicipalCreateNestedOneWithoutBarangaysInput
    Line?: LineCreateNestedManyWithoutBarangayInput
  }

  export type BarangayUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    municipalId?: string | null
    Line?: LineUncheckedCreateNestedManyWithoutBarangayInput
  }

  export type BarangayCreateOrConnectWithoutUserInput = {
    where: BarangayWhereUniqueInput
    create: XOR<BarangayCreateWithoutUserInput, BarangayUncheckedCreateWithoutUserInput>
  }

  export type PositionSlotCreateWithoutUserInput = {
    id?: string
    pos: PositionCreateNestedOneWithoutPositionSlotInput
    salaryGrade: SalaryGradeCreateNestedOneWithoutPositionSlotInput
  }

  export type PositionSlotUncheckedCreateWithoutUserInput = {
    id?: string
    positionId: string
    salaryGradeId: string
  }

  export type PositionSlotCreateOrConnectWithoutUserInput = {
    where: PositionSlotWhereUniqueInput
    create: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
  }

  export type AccomplishmentCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    start: Date | string
    end: Date | string
    task: string
    AccomplishmentResponse?: AccomplishmentResponseCreateNestedManyWithoutAccomplishmentInput
  }

  export type AccomplishmentUncheckedCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    start: Date | string
    end: Date | string
    task: string
    AccomplishmentResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutAccomplishmentInput
  }

  export type AccomplishmentCreateOrConnectWithoutUserInput = {
    where: AccomplishmentWhereUniqueInput
    create: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput>
  }

  export type AccomplishmentCreateManyUserInputEnvelope = {
    data: AccomplishmentCreateManyUserInput | AccomplishmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccomplishmentResponseCreateWithoutHeadInput = {
    id?: string
    message: string
    timestamp?: Date | string
    accomplishment: AccomplishmentCreateNestedOneWithoutAccomplishmentResponseInput
  }

  export type AccomplishmentResponseUncheckedCreateWithoutHeadInput = {
    id?: string
    accomplishmentId: string
    message: string
    timestamp?: Date | string
  }

  export type AccomplishmentResponseCreateOrConnectWithoutHeadInput = {
    where: AccomplishmentResponseWhereUniqueInput
    create: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput>
  }

  export type AccomplishmentResponseCreateManyHeadInputEnvelope = {
    data: AccomplishmentResponseCreateManyHeadInput | AccomplishmentResponseCreateManyHeadInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutUserInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutUserInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutUserInput, LineUncheckedCreateWithoutUserInput>
  }

  export type SuppliesCreateWithoutUserInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    condition?: string | null
    status?: string | null
    line: LineCreateNestedOneWithoutSuppliesInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutSupplyInput
    SuppliesCategory?: SuppliesCategoryCreateNestedOneWithoutSuppliesInput
    SupplieRecieveHistory?: SupplieRecieveHistoryCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackCreateNestedManyWithoutSupplyInput
    SuppliesQuality?: SuppliesQualityCreateNestedOneWithoutSuppliesInput
    SupplyStockTrack?: SupplyStockTrackCreateNestedManyWithoutSupplyInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedOneWithoutSuppliesInput
  }

  export type SuppliesUncheckedCreateWithoutUserInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutSuppyIdInput
    asset?: AssetsUncheckedCreateNestedManyWithoutSuppliesInput
    Part?: SuppliesRecordUncheckedCreateNestedOneWithoutModifiedInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutSupplyInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedCreateNestedManyWithoutSupplyInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutSupplyInput
    SupplyOrder?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyInput
    SupplyBatchItem?: SupplyBatchItemUncheckedCreateNestedOneWithoutSupplyInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedCreateNestedManyWithoutSupplyInput
    SupplyStockTrack?: SupplyStockTrackUncheckedCreateNestedManyWithoutSupplyInput
  }

  export type SuppliesCreateOrConnectWithoutUserInput = {
    where: SuppliesWhereUniqueInput
    create: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput>
  }

  export type SuppliesCreateManyUserInputEnvelope = {
    data: SuppliesCreateManyUserInput | SuppliesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SuppliesRecordCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    suppyId: SuppliesCreateNestedOneWithoutSuppliesRecordInput
    modified?: SuppliesCreateNestedOneWithoutPartInput
  }

  export type SuppliesRecordUncheckedCreateWithoutUserInput = {
    id?: string
    suppliesId: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type SuppliesRecordCreateOrConnectWithoutUserInput = {
    where: SuppliesRecordWhereUniqueInput
    create: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput>
  }

  export type SuppliesRecordCreateManyUserInputEnvelope = {
    data: SuppliesRecordCreateManyUserInput | SuppliesRecordCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type LogRecordCreateWithoutUserInput = {
    id?: string
    action: string
    timestamp?: Date | string
  }

  export type LogRecordUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    timestamp?: Date | string
  }

  export type LogRecordCreateOrConnectWithoutUserInput = {
    where: LogRecordWhereUniqueInput
    create: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput>
  }

  export type LogRecordCreateManyUserInputEnvelope = {
    data: LogRecordCreateManyUserInput | LogRecordCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TransferredSuppliesCreateWithoutTransferredToInput = {
    id?: string
    timestamp?: Date | string
    condition?: string | null
    supply?: SuppliesCreateNestedOneWithoutTransferredSuppliesInput
    user: UserCreateNestedOneWithoutTransferredSuppliesInput
  }

  export type TransferredSuppliesUncheckedCreateWithoutTransferredToInput = {
    id?: string
    suppliesId?: string | null
    userId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesCreateOrConnectWithoutTransferredToInput = {
    where: TransferredSuppliesWhereUniqueInput
    create: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput>
  }

  export type TransferredSuppliesCreateManyTransferredToInputEnvelope = {
    data: TransferredSuppliesCreateManyTransferredToInput | TransferredSuppliesCreateManyTransferredToInput[]
    skipDuplicates?: boolean
  }

  export type TransferredSuppliesCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    condition?: string | null
    supply?: SuppliesCreateNestedOneWithoutTransferredSuppliesInput
    transferredTo: UserCreateNestedOneWithoutTransferToInput
  }

  export type TransferredSuppliesUncheckedCreateWithoutUserInput = {
    id?: string
    suppliesId?: string | null
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesCreateOrConnectWithoutUserInput = {
    where: TransferredSuppliesWhereUniqueInput
    create: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput>
  }

  export type TransferredSuppliesCreateManyUserInputEnvelope = {
    data: TransferredSuppliesCreateManyUserInput | TransferredSuppliesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProfilePictureCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    asset: AssetsCreateNestedOneWithoutProfilePictureInput
  }

  export type ProfilePictureUncheckedCreateWithoutUserInput = {
    id?: string
    assetsId: string
    createdAt?: Date | string
  }

  export type ProfilePictureCreateOrConnectWithoutUserInput = {
    where: ProfilePictureWhereUniqueInput
    create: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
  }

  export type ApplicationCreateWithoutUserInput = {
    id?: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    position: PositionCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    positionId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateOrConnectWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput>
  }

  export type ApplicationCreateManyUserInputEnvelope = {
    data: ApplicationCreateManyUserInput | ApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PrivilegeCreateWithoutUserInput = {
    id?: string
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }

  export type PrivilegeUncheckedCreateWithoutUserInput = {
    id?: string
    humanResources?: boolean
    inventory?: boolean
    super?: boolean
  }

  export type PrivilegeCreateOrConnectWithoutUserInput = {
    where: PrivilegeWhereUniqueInput
    create: XOR<PrivilegeCreateWithoutUserInput, PrivilegeUncheckedCreateWithoutUserInput>
  }

  export type SupplyBatchOrderCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    order?: SupplyOrderCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileCreateNestedManyWithoutSupplyBatchOrderInput
    line?: LineCreateNestedOneWithoutSupplyBatchOrderInput
    InventoryBox?: InventoryBoxCreateNestedOneWithoutBatchInput
  }

  export type SupplyBatchOrderUncheckedCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
    order?: SupplyOrderUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
    files?: SupplyOrderSupportFileUncheckedCreateNestedManyWithoutSupplyBatchOrderInput
  }

  export type SupplyBatchOrderCreateOrConnectWithoutUserInput = {
    where: SupplyBatchOrderWhereUniqueInput
    create: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput>
  }

  export type SupplyBatchOrderCreateManyUserInputEnvelope = {
    data: SupplyBatchOrderCreateManyUserInput | SupplyBatchOrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type GroupCreateWithoutUsersInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    unit: DepartmentCreateNestedOneWithoutGroupInput
    line?: LineCreateNestedOneWithoutGroupInput
    chief?: UserCreateNestedOneWithoutChiefInput
  }

  export type GroupUncheckedCreateWithoutUsersInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    userId?: string | null
  }

  export type GroupCreateOrConnectWithoutUsersInput = {
    where: GroupWhereUniqueInput
    create: XOR<GroupCreateWithoutUsersInput, GroupUncheckedCreateWithoutUsersInput>
  }

  export type GroupCreateWithoutChiefInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    unit: DepartmentCreateNestedOneWithoutGroupInput
    users?: UserCreateNestedManyWithoutGroupInput
    line?: LineCreateNestedOneWithoutGroupInput
  }

  export type GroupUncheckedCreateWithoutChiefInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutGroupInput
  }

  export type GroupCreateOrConnectWithoutChiefInput = {
    where: GroupWhereUniqueInput
    create: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput>
  }

  export type GroupCreateManyChiefInputEnvelope = {
    data: GroupCreateManyChiefInput | GroupCreateManyChiefInput[]
    skipDuplicates?: boolean
  }

  export type InventoryBoxCreateWithoutCreatedByInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    batch?: SupplyBatchOrderCreateNestedManyWithoutInventoryBoxInput
    line: LineCreateNestedOneWithoutInventoryBoxInput
    unit?: DepartmentCreateNestedOneWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxUncheckedCreateWithoutCreatedByInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    departmentId?: string | null
    batch?: SupplyBatchOrderUncheckedCreateNestedManyWithoutInventoryBoxInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutBoxInput
    SupplyBatch?: SupplyBatchUncheckedCreateNestedManyWithoutBoxInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutContainerInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutContainerInput
  }

  export type InventoryBoxCreateOrConnectWithoutCreatedByInput = {
    where: InventoryBoxWhereUniqueInput
    create: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput>
  }

  export type InventoryBoxCreateManyCreatedByInputEnvelope = {
    data: InventoryBoxCreateManyCreatedByInput | InventoryBoxCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type InventoryAccessLogsCreateWithoutUserInput = {
    id?: string
    timestamp: Date | string
    action?: string
    box?: InventoryBoxCreateNestedOneWithoutInventoryAccessLogsInput
    supply?: SuppliesCreateNestedOneWithoutInventoryAccessLogsInput
  }

  export type InventoryAccessLogsUncheckedCreateWithoutUserInput = {
    id?: string
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
    suppliesId?: string | null
  }

  export type InventoryAccessLogsCreateOrConnectWithoutUserInput = {
    where: InventoryAccessLogsWhereUniqueInput
    create: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput>
  }

  export type InventoryAccessLogsCreateManyUserInputEnvelope = {
    data: InventoryAccessLogsCreateManyUserInput | InventoryAccessLogsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ContainerAllowedUserCreateWithoutUserInput = {
    id?: string
    timestamp?: Date | string
    container: InventoryBoxCreateNestedOneWithoutContainerAllowedUserInput
    grantBy: UserCreateNestedOneWithoutGrantContainerInput
  }

  export type ContainerAllowedUserUncheckedCreateWithoutUserInput = {
    id?: string
    inventoryBoxId: string
    grantByUserId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserCreateOrConnectWithoutUserInput = {
    where: ContainerAllowedUserWhereUniqueInput
    create: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput>
  }

  export type ContainerAllowedUserCreateManyUserInputEnvelope = {
    data: ContainerAllowedUserCreateManyUserInput | ContainerAllowedUserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ContainerAllowedUserCreateWithoutGrantByInput = {
    id?: string
    timestamp?: Date | string
    user?: UserCreateNestedOneWithoutContainerAllowedUserInput
    container: InventoryBoxCreateNestedOneWithoutContainerAllowedUserInput
  }

  export type ContainerAllowedUserUncheckedCreateWithoutGrantByInput = {
    id?: string
    userId?: string | null
    inventoryBoxId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserCreateOrConnectWithoutGrantByInput = {
    where: ContainerAllowedUserWhereUniqueInput
    create: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput>
  }

  export type ContainerAllowedUserCreateManyGrantByInputEnvelope = {
    data: ContainerAllowedUserCreateManyGrantByInput | ContainerAllowedUserCreateManyGrantByInput[]
    skipDuplicates?: boolean
  }

  export type NotificationUpsertWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
  }

  export type NotificationUpdateManyWithWhereWithoutSenderInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutSenderInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    content?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    recipientId?: StringFilter<"Notification"> | string
    senderId?: StringFilter<"Notification"> | string
    path?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
  }

  export type NotificationUpsertWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRecipientInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRecipientInput>
  }

  export type DepartmentUpsertWithoutUsersInput = {
    update: XOR<DepartmentUpdateWithoutUsersInput, DepartmentUncheckedUpdateWithoutUsersInput>
    create: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutUsersInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutUsersInput, DepartmentUncheckedUpdateWithoutUsersInput>
  }

  export type DepartmentUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUpsertWithoutHeadInput = {
    update: XOR<DepartmentUpdateWithoutHeadInput, DepartmentUncheckedUpdateWithoutHeadInput>
    create: XOR<DepartmentCreateWithoutHeadInput, DepartmentUncheckedCreateWithoutHeadInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutHeadInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutHeadInput, DepartmentUncheckedUpdateWithoutHeadInput>
  }

  export type DepartmentUpdateWithoutHeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutHeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type PositionUpsertWithoutUsersInput = {
    update: XOR<PositionUpdateWithoutUsersInput, PositionUncheckedUpdateWithoutUsersInput>
    create: XOR<PositionCreateWithoutUsersInput, PositionUncheckedCreateWithoutUsersInput>
    where?: PositionWhereInput
  }

  export type PositionUpdateToOneWithWhereWithoutUsersInput = {
    where?: PositionWhereInput
    data: XOR<PositionUpdateWithoutUsersInput, PositionUncheckedUpdateWithoutUsersInput>
  }

  export type PositionUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type SalaryGradeUpsertWithoutUsersInput = {
    update: XOR<SalaryGradeUpdateWithoutUsersInput, SalaryGradeUncheckedUpdateWithoutUsersInput>
    create: XOR<SalaryGradeCreateWithoutUsersInput, SalaryGradeUncheckedCreateWithoutUsersInput>
    where?: SalaryGradeWhereInput
  }

  export type SalaryGradeUpdateToOneWithWhereWithoutUsersInput = {
    where?: SalaryGradeWhereInput
    data: XOR<SalaryGradeUpdateWithoutUsersInput, SalaryGradeUncheckedUpdateWithoutUsersInput>
  }

  export type SalaryGradeUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    SalaryGradeHistory?: SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutSalaryGradeNestedInput
    line?: LineUpdateOneWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type LeaveUpsertWithWhereUniqueWithoutUserInput = {
    where: LeaveWhereUniqueInput
    update: XOR<LeaveUpdateWithoutUserInput, LeaveUncheckedUpdateWithoutUserInput>
    create: XOR<LeaveCreateWithoutUserInput, LeaveUncheckedCreateWithoutUserInput>
  }

  export type LeaveUpdateWithWhereUniqueWithoutUserInput = {
    where: LeaveWhereUniqueInput
    data: XOR<LeaveUpdateWithoutUserInput, LeaveUncheckedUpdateWithoutUserInput>
  }

  export type LeaveUpdateManyWithWhereWithoutUserInput = {
    where: LeaveScalarWhereInput
    data: XOR<LeaveUpdateManyMutationInput, LeaveUncheckedUpdateManyWithoutUserInput>
  }

  export type LeaveScalarWhereInput = {
    AND?: LeaveScalarWhereInput | LeaveScalarWhereInput[]
    OR?: LeaveScalarWhereInput[]
    NOT?: LeaveScalarWhereInput | LeaveScalarWhereInput[]
    id?: StringFilter<"Leave"> | string
    userId?: StringFilter<"Leave"> | string
    type?: StringFilter<"Leave"> | string
    startDate?: DateTimeFilter<"Leave"> | Date | string
    endDate?: DateTimeFilter<"Leave"> | Date | string
    reason?: StringNullableFilter<"Leave"> | string | null
    status?: StringFilter<"Leave"> | string
    createdAt?: DateTimeFilter<"Leave"> | Date | string
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutAuthorInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutAuthorInput, AnnouncementUncheckedUpdateWithoutAuthorInput>
    create: XOR<AnnouncementCreateWithoutAuthorInput, AnnouncementUncheckedCreateWithoutAuthorInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutAuthorInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutAuthorInput, AnnouncementUncheckedUpdateWithoutAuthorInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutAuthorInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutAuthorInput>
  }

  export type AccountUpsertWithoutUserInput = {
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
    where?: AccountWhereInput
  }

  export type AccountUpdateToOneWithWhereWithoutUserInput = {
    where?: AccountWhereInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    line?: LineUpdateOneWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionUpsertWithWhereUniqueWithoutUserInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutUserInput, PromotionUncheckedUpdateWithoutUserInput>
    create: XOR<PromotionCreateWithoutUserInput, PromotionUncheckedCreateWithoutUserInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutUserInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutUserInput, PromotionUncheckedUpdateWithoutUserInput>
  }

  export type PromotionUpdateManyWithWhereWithoutUserInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutUserInput>
  }

  export type PromotionScalarWhereInput = {
    AND?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    OR?: PromotionScalarWhereInput[]
    NOT?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    id?: StringFilter<"Promotion"> | string
    userId?: StringFilter<"Promotion"> | string
    timestamp?: DateTimeFilter<"Promotion"> | Date | string
    positionId?: StringFilter<"Promotion"> | string
  }

  export type BirthdayNoticeResponseUpsertWithWhereUniqueWithoutSenderInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    update: XOR<BirthdayNoticeResponseUpdateWithoutSenderInput, BirthdayNoticeResponseUncheckedUpdateWithoutSenderInput>
    create: XOR<BirthdayNoticeResponseCreateWithoutSenderInput, BirthdayNoticeResponseUncheckedCreateWithoutSenderInput>
  }

  export type BirthdayNoticeResponseUpdateWithWhereUniqueWithoutSenderInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    data: XOR<BirthdayNoticeResponseUpdateWithoutSenderInput, BirthdayNoticeResponseUncheckedUpdateWithoutSenderInput>
  }

  export type BirthdayNoticeResponseUpdateManyWithWhereWithoutSenderInput = {
    where: BirthdayNoticeResponseScalarWhereInput
    data: XOR<BirthdayNoticeResponseUpdateManyMutationInput, BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderInput>
  }

  export type BirthdayNoticeResponseUpsertWithWhereUniqueWithoutRecipientInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    update: XOR<BirthdayNoticeResponseUpdateWithoutRecipientInput, BirthdayNoticeResponseUncheckedUpdateWithoutRecipientInput>
    create: XOR<BirthdayNoticeResponseCreateWithoutRecipientInput, BirthdayNoticeResponseUncheckedCreateWithoutRecipientInput>
  }

  export type BirthdayNoticeResponseUpdateWithWhereUniqueWithoutRecipientInput = {
    where: BirthdayNoticeResponseWhereUniqueInput
    data: XOR<BirthdayNoticeResponseUpdateWithoutRecipientInput, BirthdayNoticeResponseUncheckedUpdateWithoutRecipientInput>
  }

  export type BirthdayNoticeResponseUpdateManyWithWhereWithoutRecipientInput = {
    where: BirthdayNoticeResponseScalarWhereInput
    data: XOR<BirthdayNoticeResponseUpdateManyMutationInput, BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientInput>
  }

  export type RegionUpsertWithoutUserInput = {
    update: XOR<RegionUpdateWithoutUserInput, RegionUncheckedUpdateWithoutUserInput>
    create: XOR<RegionCreateWithoutUserInput, RegionUncheckedCreateWithoutUserInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutUserInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutUserInput, RegionUncheckedUpdateWithoutUserInput>
  }

  export type RegionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUpdateManyWithoutRegionNestedInput
    Line?: LineUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provices?: ProvinceUncheckedUpdateManyWithoutRegionNestedInput
    Line?: LineUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type ProvinceUpsertWithoutUserInput = {
    update: XOR<ProvinceUpdateWithoutUserInput, ProvinceUncheckedUpdateWithoutUserInput>
    create: XOR<ProvinceCreateWithoutUserInput, ProvinceUncheckedCreateWithoutUserInput>
    where?: ProvinceWhereInput
  }

  export type ProvinceUpdateToOneWithWhereWithoutUserInput = {
    where?: ProvinceWhereInput
    data: XOR<ProvinceUpdateWithoutUserInput, ProvinceUncheckedUpdateWithoutUserInput>
  }

  export type ProvinceUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneWithoutProvicesNestedInput
    municipals?: MunicipalUpdateManyWithoutProvinceNestedInput
    Line?: LineUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipals?: MunicipalUncheckedUpdateManyWithoutProvinceNestedInput
    Line?: LineUncheckedUpdateManyWithoutProvinceNestedInput
  }

  export type MunicipalUpsertWithoutUserInput = {
    update: XOR<MunicipalUpdateWithoutUserInput, MunicipalUncheckedUpdateWithoutUserInput>
    create: XOR<MunicipalCreateWithoutUserInput, MunicipalUncheckedCreateWithoutUserInput>
    where?: MunicipalWhereInput
  }

  export type MunicipalUpdateToOneWithWhereWithoutUserInput = {
    where?: MunicipalWhereInput
    data: XOR<MunicipalUpdateWithoutUserInput, MunicipalUncheckedUpdateWithoutUserInput>
  }

  export type MunicipalUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Province?: ProvinceUpdateOneWithoutMunicipalsNestedInput
    barangays?: BarangayUpdateManyWithoutMunicipalNestedInput
    Line?: LineUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangays?: BarangayUncheckedUpdateManyWithoutMunicipalNestedInput
    Line?: LineUncheckedUpdateManyWithoutMunicipalNestedInput
  }

  export type BarangayUpsertWithoutUserInput = {
    update: XOR<BarangayUpdateWithoutUserInput, BarangayUncheckedUpdateWithoutUserInput>
    create: XOR<BarangayCreateWithoutUserInput, BarangayUncheckedCreateWithoutUserInput>
    where?: BarangayWhereInput
  }

  export type BarangayUpdateToOneWithWhereWithoutUserInput = {
    where?: BarangayWhereInput
    data: XOR<BarangayUpdateWithoutUserInput, BarangayUncheckedUpdateWithoutUserInput>
  }

  export type BarangayUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Municipal?: MunicipalUpdateOneWithoutBarangaysNestedInput
    Line?: LineUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    Line?: LineUncheckedUpdateManyWithoutBarangayNestedInput
  }

  export type PositionSlotUpsertWithoutUserInput = {
    update: XOR<PositionSlotUpdateWithoutUserInput, PositionSlotUncheckedUpdateWithoutUserInput>
    create: XOR<PositionSlotCreateWithoutUserInput, PositionSlotUncheckedCreateWithoutUserInput>
    where?: PositionSlotWhereInput
  }

  export type PositionSlotUpdateToOneWithWhereWithoutUserInput = {
    where?: PositionSlotWhereInput
    data: XOR<PositionSlotUpdateWithoutUserInput, PositionSlotUncheckedUpdateWithoutUserInput>
  }

  export type PositionSlotUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    pos?: PositionUpdateOneRequiredWithoutPositionSlotNestedInput
    salaryGrade?: SalaryGradeUpdateOneRequiredWithoutPositionSlotNestedInput
  }

  export type PositionSlotUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
  }

  export type AccomplishmentUpsertWithWhereUniqueWithoutUserInput = {
    where: AccomplishmentWhereUniqueInput
    update: XOR<AccomplishmentUpdateWithoutUserInput, AccomplishmentUncheckedUpdateWithoutUserInput>
    create: XOR<AccomplishmentCreateWithoutUserInput, AccomplishmentUncheckedCreateWithoutUserInput>
  }

  export type AccomplishmentUpdateWithWhereUniqueWithoutUserInput = {
    where: AccomplishmentWhereUniqueInput
    data: XOR<AccomplishmentUpdateWithoutUserInput, AccomplishmentUncheckedUpdateWithoutUserInput>
  }

  export type AccomplishmentUpdateManyWithWhereWithoutUserInput = {
    where: AccomplishmentScalarWhereInput
    data: XOR<AccomplishmentUpdateManyMutationInput, AccomplishmentUncheckedUpdateManyWithoutUserInput>
  }

  export type AccomplishmentScalarWhereInput = {
    AND?: AccomplishmentScalarWhereInput | AccomplishmentScalarWhereInput[]
    OR?: AccomplishmentScalarWhereInput[]
    NOT?: AccomplishmentScalarWhereInput | AccomplishmentScalarWhereInput[]
    id?: StringFilter<"Accomplishment"> | string
    timestamp?: DateTimeFilter<"Accomplishment"> | Date | string
    userId?: StringNullableFilter<"Accomplishment"> | string | null
    start?: DateTimeFilter<"Accomplishment"> | Date | string
    end?: DateTimeFilter<"Accomplishment"> | Date | string
    task?: StringFilter<"Accomplishment"> | string
  }

  export type AccomplishmentResponseUpsertWithWhereUniqueWithoutHeadInput = {
    where: AccomplishmentResponseWhereUniqueInput
    update: XOR<AccomplishmentResponseUpdateWithoutHeadInput, AccomplishmentResponseUncheckedUpdateWithoutHeadInput>
    create: XOR<AccomplishmentResponseCreateWithoutHeadInput, AccomplishmentResponseUncheckedCreateWithoutHeadInput>
  }

  export type AccomplishmentResponseUpdateWithWhereUniqueWithoutHeadInput = {
    where: AccomplishmentResponseWhereUniqueInput
    data: XOR<AccomplishmentResponseUpdateWithoutHeadInput, AccomplishmentResponseUncheckedUpdateWithoutHeadInput>
  }

  export type AccomplishmentResponseUpdateManyWithWhereWithoutHeadInput = {
    where: AccomplishmentResponseScalarWhereInput
    data: XOR<AccomplishmentResponseUpdateManyMutationInput, AccomplishmentResponseUncheckedUpdateManyWithoutHeadInput>
  }

  export type AccomplishmentResponseScalarWhereInput = {
    AND?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
    OR?: AccomplishmentResponseScalarWhereInput[]
    NOT?: AccomplishmentResponseScalarWhereInput | AccomplishmentResponseScalarWhereInput[]
    id?: StringFilter<"AccomplishmentResponse"> | string
    headId?: StringFilter<"AccomplishmentResponse"> | string
    accomplishmentId?: StringFilter<"AccomplishmentResponse"> | string
    message?: StringFilter<"AccomplishmentResponse"> | string
    timestamp?: DateTimeFilter<"AccomplishmentResponse"> | Date | string
  }

  export type LineUpsertWithoutUserInput = {
    update: XOR<LineUpdateWithoutUserInput, LineUncheckedUpdateWithoutUserInput>
    create: XOR<LineCreateWithoutUserInput, LineUncheckedCreateWithoutUserInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutUserInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutUserInput, LineUncheckedUpdateWithoutUserInput>
  }

  export type LineUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type SuppliesUpsertWithWhereUniqueWithoutUserInput = {
    where: SuppliesWhereUniqueInput
    update: XOR<SuppliesUpdateWithoutUserInput, SuppliesUncheckedUpdateWithoutUserInput>
    create: XOR<SuppliesCreateWithoutUserInput, SuppliesUncheckedCreateWithoutUserInput>
  }

  export type SuppliesUpdateWithWhereUniqueWithoutUserInput = {
    where: SuppliesWhereUniqueInput
    data: XOR<SuppliesUpdateWithoutUserInput, SuppliesUncheckedUpdateWithoutUserInput>
  }

  export type SuppliesUpdateManyWithWhereWithoutUserInput = {
    where: SuppliesScalarWhereInput
    data: XOR<SuppliesUpdateManyMutationInput, SuppliesUncheckedUpdateManyWithoutUserInput>
  }

  export type SuppliesRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: SuppliesRecordWhereUniqueInput
    update: XOR<SuppliesRecordUpdateWithoutUserInput, SuppliesRecordUncheckedUpdateWithoutUserInput>
    create: XOR<SuppliesRecordCreateWithoutUserInput, SuppliesRecordUncheckedCreateWithoutUserInput>
  }

  export type SuppliesRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: SuppliesRecordWhereUniqueInput
    data: XOR<SuppliesRecordUpdateWithoutUserInput, SuppliesRecordUncheckedUpdateWithoutUserInput>
  }

  export type SuppliesRecordUpdateManyWithWhereWithoutUserInput = {
    where: SuppliesRecordScalarWhereInput
    data: XOR<SuppliesRecordUpdateManyMutationInput, SuppliesRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type LogRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: LogRecordWhereUniqueInput
    update: XOR<LogRecordUpdateWithoutUserInput, LogRecordUncheckedUpdateWithoutUserInput>
    create: XOR<LogRecordCreateWithoutUserInput, LogRecordUncheckedCreateWithoutUserInput>
  }

  export type LogRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: LogRecordWhereUniqueInput
    data: XOR<LogRecordUpdateWithoutUserInput, LogRecordUncheckedUpdateWithoutUserInput>
  }

  export type LogRecordUpdateManyWithWhereWithoutUserInput = {
    where: LogRecordScalarWhereInput
    data: XOR<LogRecordUpdateManyMutationInput, LogRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type LogRecordScalarWhereInput = {
    AND?: LogRecordScalarWhereInput | LogRecordScalarWhereInput[]
    OR?: LogRecordScalarWhereInput[]
    NOT?: LogRecordScalarWhereInput | LogRecordScalarWhereInput[]
    id?: StringFilter<"LogRecord"> | string
    userId?: StringFilter<"LogRecord"> | string
    action?: StringFilter<"LogRecord"> | string
    timestamp?: DateTimeFilter<"LogRecord"> | Date | string
  }

  export type TransferredSuppliesUpsertWithWhereUniqueWithoutTransferredToInput = {
    where: TransferredSuppliesWhereUniqueInput
    update: XOR<TransferredSuppliesUpdateWithoutTransferredToInput, TransferredSuppliesUncheckedUpdateWithoutTransferredToInput>
    create: XOR<TransferredSuppliesCreateWithoutTransferredToInput, TransferredSuppliesUncheckedCreateWithoutTransferredToInput>
  }

  export type TransferredSuppliesUpdateWithWhereUniqueWithoutTransferredToInput = {
    where: TransferredSuppliesWhereUniqueInput
    data: XOR<TransferredSuppliesUpdateWithoutTransferredToInput, TransferredSuppliesUncheckedUpdateWithoutTransferredToInput>
  }

  export type TransferredSuppliesUpdateManyWithWhereWithoutTransferredToInput = {
    where: TransferredSuppliesScalarWhereInput
    data: XOR<TransferredSuppliesUpdateManyMutationInput, TransferredSuppliesUncheckedUpdateManyWithoutTransferredToInput>
  }

  export type TransferredSuppliesUpsertWithWhereUniqueWithoutUserInput = {
    where: TransferredSuppliesWhereUniqueInput
    update: XOR<TransferredSuppliesUpdateWithoutUserInput, TransferredSuppliesUncheckedUpdateWithoutUserInput>
    create: XOR<TransferredSuppliesCreateWithoutUserInput, TransferredSuppliesUncheckedCreateWithoutUserInput>
  }

  export type TransferredSuppliesUpdateWithWhereUniqueWithoutUserInput = {
    where: TransferredSuppliesWhereUniqueInput
    data: XOR<TransferredSuppliesUpdateWithoutUserInput, TransferredSuppliesUncheckedUpdateWithoutUserInput>
  }

  export type TransferredSuppliesUpdateManyWithWhereWithoutUserInput = {
    where: TransferredSuppliesScalarWhereInput
    data: XOR<TransferredSuppliesUpdateManyMutationInput, TransferredSuppliesUncheckedUpdateManyWithoutUserInput>
  }

  export type ProfilePictureUpsertWithoutUserInput = {
    update: XOR<ProfilePictureUpdateWithoutUserInput, ProfilePictureUncheckedUpdateWithoutUserInput>
    create: XOR<ProfilePictureCreateWithoutUserInput, ProfilePictureUncheckedCreateWithoutUserInput>
    where?: ProfilePictureWhereInput
  }

  export type ProfilePictureUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfilePictureWhereInput
    data: XOR<ProfilePictureUpdateWithoutUserInput, ProfilePictureUncheckedUpdateWithoutUserInput>
  }

  export type ProfilePictureUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetsUpdateOneRequiredWithoutProfilePictureNestedInput
  }

  export type ProfilePictureUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutUserInput, ApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutUserInput, ApplicationUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutUserInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type ApplicationScalarWhereInput = {
    AND?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    OR?: ApplicationScalarWhereInput[]
    NOT?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    id?: StringFilter<"Application"> | string
    userId?: StringFilter<"Application"> | string
    positionId?: StringFilter<"Application"> | string
    status?: StringFilter<"Application"> | string
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
  }

  export type PrivilegeUpsertWithoutUserInput = {
    update: XOR<PrivilegeUpdateWithoutUserInput, PrivilegeUncheckedUpdateWithoutUserInput>
    create: XOR<PrivilegeCreateWithoutUserInput, PrivilegeUncheckedCreateWithoutUserInput>
    where?: PrivilegeWhereInput
  }

  export type PrivilegeUpdateToOneWithWhereWithoutUserInput = {
    where?: PrivilegeWhereInput
    data: XOR<PrivilegeUpdateWithoutUserInput, PrivilegeUncheckedUpdateWithoutUserInput>
  }

  export type PrivilegeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PrivilegeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    humanResources?: BoolFieldUpdateOperationsInput | boolean
    inventory?: BoolFieldUpdateOperationsInput | boolean
    super?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SupplyBatchOrderUpsertWithWhereUniqueWithoutUserInput = {
    where: SupplyBatchOrderWhereUniqueInput
    update: XOR<SupplyBatchOrderUpdateWithoutUserInput, SupplyBatchOrderUncheckedUpdateWithoutUserInput>
    create: XOR<SupplyBatchOrderCreateWithoutUserInput, SupplyBatchOrderUncheckedCreateWithoutUserInput>
  }

  export type SupplyBatchOrderUpdateWithWhereUniqueWithoutUserInput = {
    where: SupplyBatchOrderWhereUniqueInput
    data: XOR<SupplyBatchOrderUpdateWithoutUserInput, SupplyBatchOrderUncheckedUpdateWithoutUserInput>
  }

  export type SupplyBatchOrderUpdateManyWithWhereWithoutUserInput = {
    where: SupplyBatchOrderScalarWhereInput
    data: XOR<SupplyBatchOrderUpdateManyMutationInput, SupplyBatchOrderUncheckedUpdateManyWithoutUserInput>
  }

  export type GroupUpsertWithoutUsersInput = {
    update: XOR<GroupUpdateWithoutUsersInput, GroupUncheckedUpdateWithoutUsersInput>
    create: XOR<GroupCreateWithoutUsersInput, GroupUncheckedCreateWithoutUsersInput>
    where?: GroupWhereInput
  }

  export type GroupUpdateToOneWithWhereWithoutUsersInput = {
    where?: GroupWhereInput
    data: XOR<GroupUpdateWithoutUsersInput, GroupUncheckedUpdateWithoutUsersInput>
  }

  export type GroupUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: DepartmentUpdateOneRequiredWithoutGroupNestedInput
    line?: LineUpdateOneWithoutGroupNestedInput
    chief?: UserUpdateOneWithoutChiefNestedInput
  }

  export type GroupUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GroupUpsertWithWhereUniqueWithoutChiefInput = {
    where: GroupWhereUniqueInput
    update: XOR<GroupUpdateWithoutChiefInput, GroupUncheckedUpdateWithoutChiefInput>
    create: XOR<GroupCreateWithoutChiefInput, GroupUncheckedCreateWithoutChiefInput>
  }

  export type GroupUpdateWithWhereUniqueWithoutChiefInput = {
    where: GroupWhereUniqueInput
    data: XOR<GroupUpdateWithoutChiefInput, GroupUncheckedUpdateWithoutChiefInput>
  }

  export type GroupUpdateManyWithWhereWithoutChiefInput = {
    where: GroupScalarWhereInput
    data: XOR<GroupUpdateManyMutationInput, GroupUncheckedUpdateManyWithoutChiefInput>
  }

  export type InventoryBoxUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: InventoryBoxWhereUniqueInput
    update: XOR<InventoryBoxUpdateWithoutCreatedByInput, InventoryBoxUncheckedUpdateWithoutCreatedByInput>
    create: XOR<InventoryBoxCreateWithoutCreatedByInput, InventoryBoxUncheckedCreateWithoutCreatedByInput>
  }

  export type InventoryBoxUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: InventoryBoxWhereUniqueInput
    data: XOR<InventoryBoxUpdateWithoutCreatedByInput, InventoryBoxUncheckedUpdateWithoutCreatedByInput>
  }

  export type InventoryBoxUpdateManyWithWhereWithoutCreatedByInput = {
    where: InventoryBoxScalarWhereInput
    data: XOR<InventoryBoxUpdateManyMutationInput, InventoryBoxUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type InventoryAccessLogsUpsertWithWhereUniqueWithoutUserInput = {
    where: InventoryAccessLogsWhereUniqueInput
    update: XOR<InventoryAccessLogsUpdateWithoutUserInput, InventoryAccessLogsUncheckedUpdateWithoutUserInput>
    create: XOR<InventoryAccessLogsCreateWithoutUserInput, InventoryAccessLogsUncheckedCreateWithoutUserInput>
  }

  export type InventoryAccessLogsUpdateWithWhereUniqueWithoutUserInput = {
    where: InventoryAccessLogsWhereUniqueInput
    data: XOR<InventoryAccessLogsUpdateWithoutUserInput, InventoryAccessLogsUncheckedUpdateWithoutUserInput>
  }

  export type InventoryAccessLogsUpdateManyWithWhereWithoutUserInput = {
    where: InventoryAccessLogsScalarWhereInput
    data: XOR<InventoryAccessLogsUpdateManyMutationInput, InventoryAccessLogsUncheckedUpdateManyWithoutUserInput>
  }

  export type ContainerAllowedUserUpsertWithWhereUniqueWithoutUserInput = {
    where: ContainerAllowedUserWhereUniqueInput
    update: XOR<ContainerAllowedUserUpdateWithoutUserInput, ContainerAllowedUserUncheckedUpdateWithoutUserInput>
    create: XOR<ContainerAllowedUserCreateWithoutUserInput, ContainerAllowedUserUncheckedCreateWithoutUserInput>
  }

  export type ContainerAllowedUserUpdateWithWhereUniqueWithoutUserInput = {
    where: ContainerAllowedUserWhereUniqueInput
    data: XOR<ContainerAllowedUserUpdateWithoutUserInput, ContainerAllowedUserUncheckedUpdateWithoutUserInput>
  }

  export type ContainerAllowedUserUpdateManyWithWhereWithoutUserInput = {
    where: ContainerAllowedUserScalarWhereInput
    data: XOR<ContainerAllowedUserUpdateManyMutationInput, ContainerAllowedUserUncheckedUpdateManyWithoutUserInput>
  }

  export type ContainerAllowedUserUpsertWithWhereUniqueWithoutGrantByInput = {
    where: ContainerAllowedUserWhereUniqueInput
    update: XOR<ContainerAllowedUserUpdateWithoutGrantByInput, ContainerAllowedUserUncheckedUpdateWithoutGrantByInput>
    create: XOR<ContainerAllowedUserCreateWithoutGrantByInput, ContainerAllowedUserUncheckedCreateWithoutGrantByInput>
  }

  export type ContainerAllowedUserUpdateWithWhereUniqueWithoutGrantByInput = {
    where: ContainerAllowedUserWhereUniqueInput
    data: XOR<ContainerAllowedUserUpdateWithoutGrantByInput, ContainerAllowedUserUncheckedUpdateWithoutGrantByInput>
  }

  export type ContainerAllowedUserUpdateManyWithWhereWithoutGrantByInput = {
    where: ContainerAllowedUserScalarWhereInput
    data: XOR<ContainerAllowedUserUpdateManyMutationInput, ContainerAllowedUserUncheckedUpdateManyWithoutGrantByInput>
  }

  export type UserCreateWithoutLogRecordInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutLogRecordInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutLogRecordInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLogRecordInput, UserUncheckedCreateWithoutLogRecordInput>
  }

  export type UserUpsertWithoutLogRecordInput = {
    update: XOR<UserUpdateWithoutLogRecordInput, UserUncheckedUpdateWithoutLogRecordInput>
    create: XOR<UserCreateWithoutLogRecordInput, UserUncheckedCreateWithoutLogRecordInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLogRecordInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLogRecordInput, UserUncheckedUpdateWithoutLogRecordInput>
  }

  export type UserUpdateWithoutLogRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutLogRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserCreateWithoutSentNotificationsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutSentNotificationsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutSentNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentNotificationsInput, UserUncheckedCreateWithoutSentNotificationsInput>
  }

  export type UserCreateWithoutReceivedNotificationsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutReceivedNotificationsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutReceivedNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedNotificationsInput, UserUncheckedCreateWithoutReceivedNotificationsInput>
  }

  export type UserUpsertWithoutSentNotificationsInput = {
    update: XOR<UserUpdateWithoutSentNotificationsInput, UserUncheckedUpdateWithoutSentNotificationsInput>
    create: XOR<UserCreateWithoutSentNotificationsInput, UserUncheckedCreateWithoutSentNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentNotificationsInput, UserUncheckedUpdateWithoutSentNotificationsInput>
  }

  export type UserUpdateWithoutSentNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutSentNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUpsertWithoutReceivedNotificationsInput = {
    update: XOR<UserUpdateWithoutReceivedNotificationsInput, UserUncheckedUpdateWithoutReceivedNotificationsInput>
    create: XOR<UserCreateWithoutReceivedNotificationsInput, UserUncheckedCreateWithoutReceivedNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedNotificationsInput, UserUncheckedUpdateWithoutReceivedNotificationsInput>
  }

  export type UserUpdateWithoutReceivedNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserCreateWithoutPositionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutPositionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutPositionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput>
  }

  export type UserCreateManyPositionInputEnvelope = {
    data: UserCreateManyPositionInput | UserCreateManyPositionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionCreateWithoutPostionInput = {
    id?: string
    timestamp?: Date | string
    User: UserCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutPostionInput = {
    id?: string
    userId: string
    timestamp?: Date | string
  }

  export type PromotionCreateOrConnectWithoutPostionInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput>
  }

  export type PromotionCreateManyPostionInputEnvelope = {
    data: PromotionCreateManyPostionInput | PromotionCreateManyPostionInput[]
    skipDuplicates?: boolean
  }

  export type SalaryGradeCreateWithoutPositionsInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutSalaryGradeInput
    line?: LineCreateNestedOneWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateWithoutPositionsInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeCreateOrConnectWithoutPositionsInput = {
    where: SalaryGradeWhereUniqueInput
    create: XOR<SalaryGradeCreateWithoutPositionsInput, SalaryGradeUncheckedCreateWithoutPositionsInput>
  }

  export type PositionSlotCreateWithoutPosInput = {
    id?: string
    salaryGrade: SalaryGradeCreateNestedOneWithoutPositionSlotInput
    user?: UserCreateNestedOneWithoutPositionSlotInput
  }

  export type PositionSlotUncheckedCreateWithoutPosInput = {
    id?: string
    salaryGradeId: string
    userId?: string | null
  }

  export type PositionSlotCreateOrConnectWithoutPosInput = {
    where: PositionSlotWhereUniqueInput
    create: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput>
  }

  export type PositionSlotCreateManyPosInputEnvelope = {
    data: PositionSlotCreateManyPosInput | PositionSlotCreateManyPosInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutPositionInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutPositionInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutPositionInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutPositionInput, LineUncheckedCreateWithoutPositionInput>
  }

  export type DepartmentCreateWithoutPositionInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Announcement?: AnnouncementCreateNestedManyWithoutUnitInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutPositionInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutUnitInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutPositionInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutPositionInput, DepartmentUncheckedCreateWithoutPositionInput>
  }

  export type ApplicationCreateWithoutPositionInput = {
    id?: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutPositionInput = {
    id?: string
    userId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateOrConnectWithoutPositionInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput>
  }

  export type ApplicationCreateManyPositionInputEnvelope = {
    data: ApplicationCreateManyPositionInput | ApplicationCreateManyPositionInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutPositionInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPositionInput, UserUncheckedUpdateWithoutPositionInput>
    create: XOR<UserCreateWithoutPositionInput, UserUncheckedCreateWithoutPositionInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPositionInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPositionInput, UserUncheckedUpdateWithoutPositionInput>
  }

  export type UserUpdateManyWithWhereWithoutPositionInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPositionInput>
  }

  export type PromotionUpsertWithWhereUniqueWithoutPostionInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutPostionInput, PromotionUncheckedUpdateWithoutPostionInput>
    create: XOR<PromotionCreateWithoutPostionInput, PromotionUncheckedCreateWithoutPostionInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutPostionInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutPostionInput, PromotionUncheckedUpdateWithoutPostionInput>
  }

  export type PromotionUpdateManyWithWhereWithoutPostionInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutPostionInput>
  }

  export type SalaryGradeUpsertWithoutPositionsInput = {
    update: XOR<SalaryGradeUpdateWithoutPositionsInput, SalaryGradeUncheckedUpdateWithoutPositionsInput>
    create: XOR<SalaryGradeCreateWithoutPositionsInput, SalaryGradeUncheckedCreateWithoutPositionsInput>
    where?: SalaryGradeWhereInput
  }

  export type SalaryGradeUpdateToOneWithWhereWithoutPositionsInput = {
    where?: SalaryGradeWhereInput
    data: XOR<SalaryGradeUpdateWithoutPositionsInput, SalaryGradeUncheckedUpdateWithoutPositionsInput>
  }

  export type SalaryGradeUpdateWithoutPositionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutSalaryGradeNestedInput
    line?: LineUpdateOneWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateWithoutPositionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type PositionSlotUpsertWithWhereUniqueWithoutPosInput = {
    where: PositionSlotWhereUniqueInput
    update: XOR<PositionSlotUpdateWithoutPosInput, PositionSlotUncheckedUpdateWithoutPosInput>
    create: XOR<PositionSlotCreateWithoutPosInput, PositionSlotUncheckedCreateWithoutPosInput>
  }

  export type PositionSlotUpdateWithWhereUniqueWithoutPosInput = {
    where: PositionSlotWhereUniqueInput
    data: XOR<PositionSlotUpdateWithoutPosInput, PositionSlotUncheckedUpdateWithoutPosInput>
  }

  export type PositionSlotUpdateManyWithWhereWithoutPosInput = {
    where: PositionSlotScalarWhereInput
    data: XOR<PositionSlotUpdateManyMutationInput, PositionSlotUncheckedUpdateManyWithoutPosInput>
  }

  export type PositionSlotScalarWhereInput = {
    AND?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
    OR?: PositionSlotScalarWhereInput[]
    NOT?: PositionSlotScalarWhereInput | PositionSlotScalarWhereInput[]
    id?: StringFilter<"PositionSlot"> | string
    positionId?: StringFilter<"PositionSlot"> | string
    salaryGradeId?: StringFilter<"PositionSlot"> | string
    userId?: StringNullableFilter<"PositionSlot"> | string | null
  }

  export type LineUpsertWithoutPositionInput = {
    update: XOR<LineUpdateWithoutPositionInput, LineUncheckedUpdateWithoutPositionInput>
    create: XOR<LineCreateWithoutPositionInput, LineUncheckedCreateWithoutPositionInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutPositionInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutPositionInput, LineUncheckedUpdateWithoutPositionInput>
  }

  export type LineUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type DepartmentUpsertWithoutPositionInput = {
    update: XOR<DepartmentUpdateWithoutPositionInput, DepartmentUncheckedUpdateWithoutPositionInput>
    create: XOR<DepartmentCreateWithoutPositionInput, DepartmentUncheckedCreateWithoutPositionInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutPositionInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutPositionInput, DepartmentUncheckedUpdateWithoutPositionInput>
  }

  export type DepartmentUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type ApplicationUpsertWithWhereUniqueWithoutPositionInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutPositionInput, ApplicationUncheckedUpdateWithoutPositionInput>
    create: XOR<ApplicationCreateWithoutPositionInput, ApplicationUncheckedCreateWithoutPositionInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutPositionInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutPositionInput, ApplicationUncheckedUpdateWithoutPositionInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutPositionInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutPositionInput>
  }

  export type PositionCreateWithoutPositionSlotInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutPositionSlotInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutPositionSlotInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutPositionSlotInput, PositionUncheckedCreateWithoutPositionSlotInput>
  }

  export type SalaryGradeCreateWithoutPositionSlotInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionCreateNestedManyWithoutSalaryGradeInput
    line?: LineCreateNestedOneWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateWithoutPositionSlotInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutSalaryGradeInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeCreateOrConnectWithoutPositionSlotInput = {
    where: SalaryGradeWhereUniqueInput
    create: XOR<SalaryGradeCreateWithoutPositionSlotInput, SalaryGradeUncheckedCreateWithoutPositionSlotInput>
  }

  export type UserCreateWithoutPositionSlotInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutPositionSlotInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutPositionSlotInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPositionSlotInput, UserUncheckedCreateWithoutPositionSlotInput>
  }

  export type PositionUpsertWithoutPositionSlotInput = {
    update: XOR<PositionUpdateWithoutPositionSlotInput, PositionUncheckedUpdateWithoutPositionSlotInput>
    create: XOR<PositionCreateWithoutPositionSlotInput, PositionUncheckedCreateWithoutPositionSlotInput>
    where?: PositionWhereInput
  }

  export type PositionUpdateToOneWithWhereWithoutPositionSlotInput = {
    where?: PositionWhereInput
    data: XOR<PositionUpdateWithoutPositionSlotInput, PositionUncheckedUpdateWithoutPositionSlotInput>
  }

  export type PositionUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type SalaryGradeUpsertWithoutPositionSlotInput = {
    update: XOR<SalaryGradeUpdateWithoutPositionSlotInput, SalaryGradeUncheckedUpdateWithoutPositionSlotInput>
    create: XOR<SalaryGradeCreateWithoutPositionSlotInput, SalaryGradeUncheckedCreateWithoutPositionSlotInput>
    where?: SalaryGradeWhereInput
  }

  export type SalaryGradeUpdateToOneWithWhereWithoutPositionSlotInput = {
    where?: SalaryGradeWhereInput
    data: XOR<SalaryGradeUpdateWithoutPositionSlotInput, SalaryGradeUncheckedUpdateWithoutPositionSlotInput>
  }

  export type SalaryGradeUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUpdateManyWithoutSalaryGradeNestedInput
    line?: LineUpdateOneWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type UserUpsertWithoutPositionSlotInput = {
    update: XOR<UserUpdateWithoutPositionSlotInput, UserUncheckedUpdateWithoutPositionSlotInput>
    create: XOR<UserCreateWithoutPositionSlotInput, UserUncheckedCreateWithoutPositionSlotInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPositionSlotInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPositionSlotInput, UserUncheckedUpdateWithoutPositionSlotInput>
  }

  export type UserUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutPositionSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserCreateWithoutSalaryGradeInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutSalaryGradeInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutSalaryGradeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput>
  }

  export type UserCreateManySalaryGradeInputEnvelope = {
    data: UserCreateManySalaryGradeInput | UserCreateManySalaryGradeInput[]
    skipDuplicates?: boolean
  }

  export type SalaryGradeHistoryCreateWithoutSalaryGradeInput = {
    id?: string
    userId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
  }

  export type SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput = {
    id?: string
    userId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
  }

  export type SalaryGradeHistoryCreateOrConnectWithoutSalaryGradeInput = {
    where: SalaryGradeHistoryWhereUniqueInput
    create: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput>
  }

  export type SalaryGradeHistoryCreateManySalaryGradeInputEnvelope = {
    data: SalaryGradeHistoryCreateManySalaryGradeInput | SalaryGradeHistoryCreateManySalaryGradeInput[]
    skipDuplicates?: boolean
  }

  export type PositionCreateWithoutSalaryGradeInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    Promotion?: PromotionCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutSalaryGradeInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    Promotion?: PromotionUncheckedCreateNestedManyWithoutPostionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutSalaryGradeInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput>
  }

  export type PositionCreateManySalaryGradeInputEnvelope = {
    data: PositionCreateManySalaryGradeInput | PositionCreateManySalaryGradeInput[]
    skipDuplicates?: boolean
  }

  export type PositionSlotCreateWithoutSalaryGradeInput = {
    id?: string
    pos: PositionCreateNestedOneWithoutPositionSlotInput
    user?: UserCreateNestedOneWithoutPositionSlotInput
  }

  export type PositionSlotUncheckedCreateWithoutSalaryGradeInput = {
    id?: string
    positionId: string
    userId?: string | null
  }

  export type PositionSlotCreateOrConnectWithoutSalaryGradeInput = {
    where: PositionSlotWhereUniqueInput
    create: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput>
  }

  export type PositionSlotCreateManySalaryGradeInputEnvelope = {
    data: PositionSlotCreateManySalaryGradeInput | PositionSlotCreateManySalaryGradeInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutSalaryGradeInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutSalaryGradeInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutSalaryGradeInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutSalaryGradeInput, LineUncheckedCreateWithoutSalaryGradeInput>
  }

  export type UserUpsertWithWhereUniqueWithoutSalaryGradeInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutSalaryGradeInput, UserUncheckedUpdateWithoutSalaryGradeInput>
    create: XOR<UserCreateWithoutSalaryGradeInput, UserUncheckedCreateWithoutSalaryGradeInput>
  }

  export type UserUpdateWithWhereUniqueWithoutSalaryGradeInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutSalaryGradeInput, UserUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type UserUpdateManyWithWhereWithoutSalaryGradeInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutSalaryGradeInput>
  }

  export type SalaryGradeHistoryUpsertWithWhereUniqueWithoutSalaryGradeInput = {
    where: SalaryGradeHistoryWhereUniqueInput
    update: XOR<SalaryGradeHistoryUpdateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedUpdateWithoutSalaryGradeInput>
    create: XOR<SalaryGradeHistoryCreateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedCreateWithoutSalaryGradeInput>
  }

  export type SalaryGradeHistoryUpdateWithWhereUniqueWithoutSalaryGradeInput = {
    where: SalaryGradeHistoryWhereUniqueInput
    data: XOR<SalaryGradeHistoryUpdateWithoutSalaryGradeInput, SalaryGradeHistoryUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type SalaryGradeHistoryUpdateManyWithWhereWithoutSalaryGradeInput = {
    where: SalaryGradeHistoryScalarWhereInput
    data: XOR<SalaryGradeHistoryUpdateManyMutationInput, SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeInput>
  }

  export type SalaryGradeHistoryScalarWhereInput = {
    AND?: SalaryGradeHistoryScalarWhereInput | SalaryGradeHistoryScalarWhereInput[]
    OR?: SalaryGradeHistoryScalarWhereInput[]
    NOT?: SalaryGradeHistoryScalarWhereInput | SalaryGradeHistoryScalarWhereInput[]
    id?: StringFilter<"SalaryGradeHistory"> | string
    userId?: StringFilter<"SalaryGradeHistory"> | string
    salaryGradeId?: StringFilter<"SalaryGradeHistory"> | string
    effectiveDate?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    createdAt?: DateTimeFilter<"SalaryGradeHistory"> | Date | string
    amount?: IntFilter<"SalaryGradeHistory"> | number
  }

  export type PositionUpsertWithWhereUniqueWithoutSalaryGradeInput = {
    where: PositionWhereUniqueInput
    update: XOR<PositionUpdateWithoutSalaryGradeInput, PositionUncheckedUpdateWithoutSalaryGradeInput>
    create: XOR<PositionCreateWithoutSalaryGradeInput, PositionUncheckedCreateWithoutSalaryGradeInput>
  }

  export type PositionUpdateWithWhereUniqueWithoutSalaryGradeInput = {
    where: PositionWhereUniqueInput
    data: XOR<PositionUpdateWithoutSalaryGradeInput, PositionUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type PositionUpdateManyWithWhereWithoutSalaryGradeInput = {
    where: PositionScalarWhereInput
    data: XOR<PositionUpdateManyMutationInput, PositionUncheckedUpdateManyWithoutSalaryGradeInput>
  }

  export type PositionSlotUpsertWithWhereUniqueWithoutSalaryGradeInput = {
    where: PositionSlotWhereUniqueInput
    update: XOR<PositionSlotUpdateWithoutSalaryGradeInput, PositionSlotUncheckedUpdateWithoutSalaryGradeInput>
    create: XOR<PositionSlotCreateWithoutSalaryGradeInput, PositionSlotUncheckedCreateWithoutSalaryGradeInput>
  }

  export type PositionSlotUpdateWithWhereUniqueWithoutSalaryGradeInput = {
    where: PositionSlotWhereUniqueInput
    data: XOR<PositionSlotUpdateWithoutSalaryGradeInput, PositionSlotUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type PositionSlotUpdateManyWithWhereWithoutSalaryGradeInput = {
    where: PositionSlotScalarWhereInput
    data: XOR<PositionSlotUpdateManyMutationInput, PositionSlotUncheckedUpdateManyWithoutSalaryGradeInput>
  }

  export type LineUpsertWithoutSalaryGradeInput = {
    update: XOR<LineUpdateWithoutSalaryGradeInput, LineUncheckedUpdateWithoutSalaryGradeInput>
    create: XOR<LineCreateWithoutSalaryGradeInput, LineUncheckedCreateWithoutSalaryGradeInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutSalaryGradeInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutSalaryGradeInput, LineUncheckedUpdateWithoutSalaryGradeInput>
  }

  export type LineUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type SalaryGradeCreateWithoutSalaryGradeHistoryInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    users?: UserCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutSalaryGradeInput
    line?: LineCreateNestedOneWithoutSalaryGradeInput
  }

  export type SalaryGradeUncheckedCreateWithoutSalaryGradeHistoryInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutSalaryGradeInput
    positions?: PositionUncheckedCreateNestedManyWithoutSalaryGradeInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutSalaryGradeInput
  }

  export type SalaryGradeCreateOrConnectWithoutSalaryGradeHistoryInput = {
    where: SalaryGradeWhereUniqueInput
    create: XOR<SalaryGradeCreateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedCreateWithoutSalaryGradeHistoryInput>
  }

  export type SalaryGradeUpsertWithoutSalaryGradeHistoryInput = {
    update: XOR<SalaryGradeUpdateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedUpdateWithoutSalaryGradeHistoryInput>
    create: XOR<SalaryGradeCreateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedCreateWithoutSalaryGradeHistoryInput>
    where?: SalaryGradeWhereInput
  }

  export type SalaryGradeUpdateToOneWithWhereWithoutSalaryGradeHistoryInput = {
    where?: SalaryGradeWhereInput
    data: XOR<SalaryGradeUpdateWithoutSalaryGradeHistoryInput, SalaryGradeUncheckedUpdateWithoutSalaryGradeHistoryInput>
  }

  export type SalaryGradeUpdateWithoutSalaryGradeHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutSalaryGradeNestedInput
    line?: LineUpdateOneWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateWithoutSalaryGradeHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type UserCreateWithoutLeaveInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutLeaveInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutLeaveInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLeaveInput, UserUncheckedCreateWithoutLeaveInput>
  }

  export type UserUpsertWithoutLeaveInput = {
    update: XOR<UserUpdateWithoutLeaveInput, UserUncheckedUpdateWithoutLeaveInput>
    create: XOR<UserCreateWithoutLeaveInput, UserUncheckedCreateWithoutLeaveInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLeaveInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLeaveInput, UserUncheckedUpdateWithoutLeaveInput>
  }

  export type UserUpdateWithoutLeaveInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutLeaveInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserCreateWithoutAnnouncementInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutAnnouncementInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAnnouncementInput, UserUncheckedCreateWithoutAnnouncementInput>
  }

  export type LineCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutAnnouncementInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutAnnouncementInput, LineUncheckedCreateWithoutAnnouncementInput>
  }

  export type DepartmentCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    idCode?: string | null
    head?: UserCreateNestedOneWithoutHeadedDepartmentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    line?: LineCreateNestedOneWithoutDepartmentInput
    Position?: PositionCreateNestedManyWithoutDepartmentInput
    Group?: GroupCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutUnitInput
  }

  export type DepartmentUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
    lineId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    Position?: PositionUncheckedCreateNestedManyWithoutDepartmentInput
    Group?: GroupUncheckedCreateNestedManyWithoutUnitInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutUnitInput
  }

  export type DepartmentCreateOrConnectWithoutAnnouncementInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutAnnouncementInput, DepartmentUncheckedCreateWithoutAnnouncementInput>
  }

  export type UserUpsertWithoutAnnouncementInput = {
    update: XOR<UserUpdateWithoutAnnouncementInput, UserUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<UserCreateWithoutAnnouncementInput, UserUncheckedCreateWithoutAnnouncementInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAnnouncementInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAnnouncementInput, UserUncheckedUpdateWithoutAnnouncementInput>
  }

  export type UserUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type LineUpsertWithoutAnnouncementInput = {
    update: XOR<LineUpdateWithoutAnnouncementInput, LineUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<LineCreateWithoutAnnouncementInput, LineUncheckedCreateWithoutAnnouncementInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutAnnouncementInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutAnnouncementInput, LineUncheckedUpdateWithoutAnnouncementInput>
  }

  export type LineUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type DepartmentUpsertWithoutAnnouncementInput = {
    update: XOR<DepartmentUpdateWithoutAnnouncementInput, DepartmentUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<DepartmentCreateWithoutAnnouncementInput, DepartmentUncheckedCreateWithoutAnnouncementInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutAnnouncementInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutAnnouncementInput, DepartmentUncheckedUpdateWithoutAnnouncementInput>
  }

  export type DepartmentUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    line?: LineUpdateOneWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type UserCreateWithoutPromotionsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutPromotionsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutPromotionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPromotionsInput, UserUncheckedCreateWithoutPromotionsInput>
  }

  export type PositionCreateWithoutPromotionInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    users?: UserCreateNestedManyWithoutPositionInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutPositionsInput
    PositionSlot?: PositionSlotCreateNestedManyWithoutPosInput
    line?: LineCreateNestedOneWithoutPositionInput
    department?: DepartmentCreateNestedOneWithoutPositionInput
    Application?: ApplicationCreateNestedManyWithoutPositionInput
  }

  export type PositionUncheckedCreateWithoutPromotionInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPositionInput
    PositionSlot?: PositionSlotUncheckedCreateNestedManyWithoutPosInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutPositionInput
  }

  export type PositionCreateOrConnectWithoutPromotionInput = {
    where: PositionWhereUniqueInput
    create: XOR<PositionCreateWithoutPromotionInput, PositionUncheckedCreateWithoutPromotionInput>
  }

  export type UserUpsertWithoutPromotionsInput = {
    update: XOR<UserUpdateWithoutPromotionsInput, UserUncheckedUpdateWithoutPromotionsInput>
    create: XOR<UserCreateWithoutPromotionsInput, UserUncheckedCreateWithoutPromotionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPromotionsInput, UserUncheckedUpdateWithoutPromotionsInput>
  }

  export type UserUpdateWithoutPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type PositionUpsertWithoutPromotionInput = {
    update: XOR<PositionUpdateWithoutPromotionInput, PositionUncheckedUpdateWithoutPromotionInput>
    create: XOR<PositionCreateWithoutPromotionInput, PositionUncheckedCreateWithoutPromotionInput>
    where?: PositionWhereInput
  }

  export type PositionUpdateToOneWithWhereWithoutPromotionInput = {
    where?: PositionWhereInput
    data: XOR<PositionUpdateWithoutPromotionInput, PositionUncheckedUpdateWithoutPromotionInput>
  }

  export type PositionUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type UserCreateWithoutBdaySenderInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutBdaySenderInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutBdaySenderInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBdaySenderInput, UserUncheckedCreateWithoutBdaySenderInput>
  }

  export type UserCreateWithoutBdayRecipientInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutBdayRecipientInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutBdayRecipientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBdayRecipientInput, UserUncheckedCreateWithoutBdayRecipientInput>
  }

  export type LineCreateWithoutBirthdayNoticeResponseInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutBirthdayNoticeResponseInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutBirthdayNoticeResponseInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutBirthdayNoticeResponseInput, LineUncheckedCreateWithoutBirthdayNoticeResponseInput>
  }

  export type UserUpsertWithoutBdaySenderInput = {
    update: XOR<UserUpdateWithoutBdaySenderInput, UserUncheckedUpdateWithoutBdaySenderInput>
    create: XOR<UserCreateWithoutBdaySenderInput, UserUncheckedCreateWithoutBdaySenderInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBdaySenderInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBdaySenderInput, UserUncheckedUpdateWithoutBdaySenderInput>
  }

  export type UserUpdateWithoutBdaySenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutBdaySenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUpsertWithoutBdayRecipientInput = {
    update: XOR<UserUpdateWithoutBdayRecipientInput, UserUncheckedUpdateWithoutBdayRecipientInput>
    create: XOR<UserCreateWithoutBdayRecipientInput, UserUncheckedCreateWithoutBdayRecipientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBdayRecipientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBdayRecipientInput, UserUncheckedUpdateWithoutBdayRecipientInput>
  }

  export type UserUpdateWithoutBdayRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutBdayRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type LineUpsertWithoutBirthdayNoticeResponseInput = {
    update: XOR<LineUpdateWithoutBirthdayNoticeResponseInput, LineUncheckedUpdateWithoutBirthdayNoticeResponseInput>
    create: XOR<LineCreateWithoutBirthdayNoticeResponseInput, LineUncheckedCreateWithoutBirthdayNoticeResponseInput>
    where?: LineWhereInput
  }

  export type LineUpdateToOneWithWhereWithoutBirthdayNoticeResponseInput = {
    where?: LineWhereInput
    data: XOR<LineUpdateWithoutBirthdayNoticeResponseInput, LineUncheckedUpdateWithoutBirthdayNoticeResponseInput>
  }

  export type LineUpdateWithoutBirthdayNoticeResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutBirthdayNoticeResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type ProvinceCreateWithoutRegionInput = {
    id: string
    name: string
    municipals?: MunicipalCreateNestedManyWithoutProvinceInput
    User?: UserCreateNestedManyWithoutProvinceInput
    Line?: LineCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUncheckedCreateWithoutRegionInput = {
    id: string
    name: string
    municipals?: MunicipalUncheckedCreateNestedManyWithoutProvinceInput
    User?: UserUncheckedCreateNestedManyWithoutProvinceInput
    Line?: LineUncheckedCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceCreateOrConnectWithoutRegionInput = {
    where: ProvinceWhereUniqueInput
    create: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput>
  }

  export type ProvinceCreateManyRegionInputEnvelope = {
    data: ProvinceCreateManyRegionInput | ProvinceCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutRegionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutRegionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutRegionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput>
  }

  export type UserCreateManyRegionInputEnvelope = {
    data: UserCreateManyRegionInput | UserCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutRegionInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutRegionInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutRegionInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput>
  }

  export type LineCreateManyRegionInputEnvelope = {
    data: LineCreateManyRegionInput | LineCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type ProvinceUpsertWithWhereUniqueWithoutRegionInput = {
    where: ProvinceWhereUniqueInput
    update: XOR<ProvinceUpdateWithoutRegionInput, ProvinceUncheckedUpdateWithoutRegionInput>
    create: XOR<ProvinceCreateWithoutRegionInput, ProvinceUncheckedCreateWithoutRegionInput>
  }

  export type ProvinceUpdateWithWhereUniqueWithoutRegionInput = {
    where: ProvinceWhereUniqueInput
    data: XOR<ProvinceUpdateWithoutRegionInput, ProvinceUncheckedUpdateWithoutRegionInput>
  }

  export type ProvinceUpdateManyWithWhereWithoutRegionInput = {
    where: ProvinceScalarWhereInput
    data: XOR<ProvinceUpdateManyMutationInput, ProvinceUncheckedUpdateManyWithoutRegionInput>
  }

  export type ProvinceScalarWhereInput = {
    AND?: ProvinceScalarWhereInput | ProvinceScalarWhereInput[]
    OR?: ProvinceScalarWhereInput[]
    NOT?: ProvinceScalarWhereInput | ProvinceScalarWhereInput[]
    id?: StringFilter<"Province"> | string
    name?: StringFilter<"Province"> | string
    regionId?: StringNullableFilter<"Province"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutRegionInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRegionInput, UserUncheckedUpdateWithoutRegionInput>
    create: XOR<UserCreateWithoutRegionInput, UserUncheckedCreateWithoutRegionInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRegionInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRegionInput, UserUncheckedUpdateWithoutRegionInput>
  }

  export type UserUpdateManyWithWhereWithoutRegionInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRegionInput>
  }

  export type LineUpsertWithWhereUniqueWithoutRegionInput = {
    where: LineWhereUniqueInput
    update: XOR<LineUpdateWithoutRegionInput, LineUncheckedUpdateWithoutRegionInput>
    create: XOR<LineCreateWithoutRegionInput, LineUncheckedCreateWithoutRegionInput>
  }

  export type LineUpdateWithWhereUniqueWithoutRegionInput = {
    where: LineWhereUniqueInput
    data: XOR<LineUpdateWithoutRegionInput, LineUncheckedUpdateWithoutRegionInput>
  }

  export type LineUpdateManyWithWhereWithoutRegionInput = {
    where: LineScalarWhereInput
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyWithoutRegionInput>
  }

  export type RegionCreateWithoutProvicesInput = {
    id: string
    name: string
    User?: UserCreateNestedManyWithoutRegionInput
    Line?: LineCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutProvicesInput = {
    id: string
    name: string
    User?: UserUncheckedCreateNestedManyWithoutRegionInput
    Line?: LineUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutProvicesInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutProvicesInput, RegionUncheckedCreateWithoutProvicesInput>
  }

  export type MunicipalCreateWithoutProvinceInput = {
    id: string
    name: string
    barangays?: BarangayCreateNestedManyWithoutMunicipalInput
    User?: UserCreateNestedManyWithoutMunicipalInput
    Line?: LineCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUncheckedCreateWithoutProvinceInput = {
    id: string
    name: string
    barangays?: BarangayUncheckedCreateNestedManyWithoutMunicipalInput
    User?: UserUncheckedCreateNestedManyWithoutMunicipalInput
    Line?: LineUncheckedCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalCreateOrConnectWithoutProvinceInput = {
    where: MunicipalWhereUniqueInput
    create: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput>
  }

  export type MunicipalCreateManyProvinceInputEnvelope = {
    data: MunicipalCreateManyProvinceInput | MunicipalCreateManyProvinceInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutProvinceInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutProvinceInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutProvinceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput>
  }

  export type UserCreateManyProvinceInputEnvelope = {
    data: UserCreateManyProvinceInput | UserCreateManyProvinceInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutProvinceInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    municipal: MunicipalCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutProvinceInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutProvinceInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput>
  }

  export type LineCreateManyProvinceInputEnvelope = {
    data: LineCreateManyProvinceInput | LineCreateManyProvinceInput[]
    skipDuplicates?: boolean
  }

  export type RegionUpsertWithoutProvicesInput = {
    update: XOR<RegionUpdateWithoutProvicesInput, RegionUncheckedUpdateWithoutProvicesInput>
    create: XOR<RegionCreateWithoutProvicesInput, RegionUncheckedCreateWithoutProvicesInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutProvicesInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutProvicesInput, RegionUncheckedUpdateWithoutProvicesInput>
  }

  export type RegionUpdateWithoutProvicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateManyWithoutRegionNestedInput
    Line?: LineUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutProvicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    User?: UserUncheckedUpdateManyWithoutRegionNestedInput
    Line?: LineUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type MunicipalUpsertWithWhereUniqueWithoutProvinceInput = {
    where: MunicipalWhereUniqueInput
    update: XOR<MunicipalUpdateWithoutProvinceInput, MunicipalUncheckedUpdateWithoutProvinceInput>
    create: XOR<MunicipalCreateWithoutProvinceInput, MunicipalUncheckedCreateWithoutProvinceInput>
  }

  export type MunicipalUpdateWithWhereUniqueWithoutProvinceInput = {
    where: MunicipalWhereUniqueInput
    data: XOR<MunicipalUpdateWithoutProvinceInput, MunicipalUncheckedUpdateWithoutProvinceInput>
  }

  export type MunicipalUpdateManyWithWhereWithoutProvinceInput = {
    where: MunicipalScalarWhereInput
    data: XOR<MunicipalUpdateManyMutationInput, MunicipalUncheckedUpdateManyWithoutProvinceInput>
  }

  export type MunicipalScalarWhereInput = {
    AND?: MunicipalScalarWhereInput | MunicipalScalarWhereInput[]
    OR?: MunicipalScalarWhereInput[]
    NOT?: MunicipalScalarWhereInput | MunicipalScalarWhereInput[]
    id?: StringFilter<"Municipal"> | string
    name?: StringFilter<"Municipal"> | string
    provinceId?: StringNullableFilter<"Municipal"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutProvinceInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutProvinceInput, UserUncheckedUpdateWithoutProvinceInput>
    create: XOR<UserCreateWithoutProvinceInput, UserUncheckedCreateWithoutProvinceInput>
  }

  export type UserUpdateWithWhereUniqueWithoutProvinceInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutProvinceInput, UserUncheckedUpdateWithoutProvinceInput>
  }

  export type UserUpdateManyWithWhereWithoutProvinceInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutProvinceInput>
  }

  export type LineUpsertWithWhereUniqueWithoutProvinceInput = {
    where: LineWhereUniqueInput
    update: XOR<LineUpdateWithoutProvinceInput, LineUncheckedUpdateWithoutProvinceInput>
    create: XOR<LineCreateWithoutProvinceInput, LineUncheckedCreateWithoutProvinceInput>
  }

  export type LineUpdateWithWhereUniqueWithoutProvinceInput = {
    where: LineWhereUniqueInput
    data: XOR<LineUpdateWithoutProvinceInput, LineUncheckedUpdateWithoutProvinceInput>
  }

  export type LineUpdateManyWithWhereWithoutProvinceInput = {
    where: LineScalarWhereInput
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyWithoutProvinceInput>
  }

  export type ProvinceCreateWithoutMunicipalsInput = {
    id: string
    name: string
    Region?: RegionCreateNestedOneWithoutProvicesInput
    User?: UserCreateNestedManyWithoutProvinceInput
    Line?: LineCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceUncheckedCreateWithoutMunicipalsInput = {
    id: string
    name: string
    regionId?: string | null
    User?: UserUncheckedCreateNestedManyWithoutProvinceInput
    Line?: LineUncheckedCreateNestedManyWithoutProvinceInput
  }

  export type ProvinceCreateOrConnectWithoutMunicipalsInput = {
    where: ProvinceWhereUniqueInput
    create: XOR<ProvinceCreateWithoutMunicipalsInput, ProvinceUncheckedCreateWithoutMunicipalsInput>
  }

  export type BarangayCreateWithoutMunicipalInput = {
    id: string
    name: string
    User?: UserCreateNestedManyWithoutBarangayInput
    Line?: LineCreateNestedManyWithoutBarangayInput
  }

  export type BarangayUncheckedCreateWithoutMunicipalInput = {
    id: string
    name: string
    User?: UserUncheckedCreateNestedManyWithoutBarangayInput
    Line?: LineUncheckedCreateNestedManyWithoutBarangayInput
  }

  export type BarangayCreateOrConnectWithoutMunicipalInput = {
    where: BarangayWhereUniqueInput
    create: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput>
  }

  export type BarangayCreateManyMunicipalInputEnvelope = {
    data: BarangayCreateManyMunicipalInput | BarangayCreateManyMunicipalInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutMunicipalInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutMunicipalInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutMunicipalInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput>
  }

  export type UserCreateManyMunicipalInputEnvelope = {
    data: UserCreateManyMunicipalInput | UserCreateManyMunicipalInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutMunicipalInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    barangay: BarangayCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutMunicipalInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutMunicipalInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput>
  }

  export type LineCreateManyMunicipalInputEnvelope = {
    data: LineCreateManyMunicipalInput | LineCreateManyMunicipalInput[]
    skipDuplicates?: boolean
  }

  export type ProvinceUpsertWithoutMunicipalsInput = {
    update: XOR<ProvinceUpdateWithoutMunicipalsInput, ProvinceUncheckedUpdateWithoutMunicipalsInput>
    create: XOR<ProvinceCreateWithoutMunicipalsInput, ProvinceUncheckedCreateWithoutMunicipalsInput>
    where?: ProvinceWhereInput
  }

  export type ProvinceUpdateToOneWithWhereWithoutMunicipalsInput = {
    where?: ProvinceWhereInput
    data: XOR<ProvinceUpdateWithoutMunicipalsInput, ProvinceUncheckedUpdateWithoutMunicipalsInput>
  }

  export type ProvinceUpdateWithoutMunicipalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneWithoutProvicesNestedInput
    User?: UserUpdateManyWithoutProvinceNestedInput
    Line?: LineUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateWithoutMunicipalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUncheckedUpdateManyWithoutProvinceNestedInput
    Line?: LineUncheckedUpdateManyWithoutProvinceNestedInput
  }

  export type BarangayUpsertWithWhereUniqueWithoutMunicipalInput = {
    where: BarangayWhereUniqueInput
    update: XOR<BarangayUpdateWithoutMunicipalInput, BarangayUncheckedUpdateWithoutMunicipalInput>
    create: XOR<BarangayCreateWithoutMunicipalInput, BarangayUncheckedCreateWithoutMunicipalInput>
  }

  export type BarangayUpdateWithWhereUniqueWithoutMunicipalInput = {
    where: BarangayWhereUniqueInput
    data: XOR<BarangayUpdateWithoutMunicipalInput, BarangayUncheckedUpdateWithoutMunicipalInput>
  }

  export type BarangayUpdateManyWithWhereWithoutMunicipalInput = {
    where: BarangayScalarWhereInput
    data: XOR<BarangayUpdateManyMutationInput, BarangayUncheckedUpdateManyWithoutMunicipalInput>
  }

  export type BarangayScalarWhereInput = {
    AND?: BarangayScalarWhereInput | BarangayScalarWhereInput[]
    OR?: BarangayScalarWhereInput[]
    NOT?: BarangayScalarWhereInput | BarangayScalarWhereInput[]
    id?: StringFilter<"Barangay"> | string
    name?: StringFilter<"Barangay"> | string
    municipalId?: StringNullableFilter<"Barangay"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutMunicipalInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutMunicipalInput, UserUncheckedUpdateWithoutMunicipalInput>
    create: XOR<UserCreateWithoutMunicipalInput, UserUncheckedCreateWithoutMunicipalInput>
  }

  export type UserUpdateWithWhereUniqueWithoutMunicipalInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutMunicipalInput, UserUncheckedUpdateWithoutMunicipalInput>
  }

  export type UserUpdateManyWithWhereWithoutMunicipalInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutMunicipalInput>
  }

  export type LineUpsertWithWhereUniqueWithoutMunicipalInput = {
    where: LineWhereUniqueInput
    update: XOR<LineUpdateWithoutMunicipalInput, LineUncheckedUpdateWithoutMunicipalInput>
    create: XOR<LineCreateWithoutMunicipalInput, LineUncheckedCreateWithoutMunicipalInput>
  }

  export type LineUpdateWithWhereUniqueWithoutMunicipalInput = {
    where: LineWhereUniqueInput
    data: XOR<LineUpdateWithoutMunicipalInput, LineUncheckedUpdateWithoutMunicipalInput>
  }

  export type LineUpdateManyWithWhereWithoutMunicipalInput = {
    where: LineScalarWhereInput
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyWithoutMunicipalInput>
  }

  export type MunicipalCreateWithoutBarangaysInput = {
    id: string
    name: string
    Province?: ProvinceCreateNestedOneWithoutMunicipalsInput
    User?: UserCreateNestedManyWithoutMunicipalInput
    Line?: LineCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalUncheckedCreateWithoutBarangaysInput = {
    id: string
    name: string
    provinceId?: string | null
    User?: UserUncheckedCreateNestedManyWithoutMunicipalInput
    Line?: LineUncheckedCreateNestedManyWithoutMunicipalInput
  }

  export type MunicipalCreateOrConnectWithoutBarangaysInput = {
    where: MunicipalWhereUniqueInput
    create: XOR<MunicipalCreateWithoutBarangaysInput, MunicipalUncheckedCreateWithoutBarangaysInput>
  }

  export type UserCreateWithoutBarangayInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutBarangayInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutBarangayInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput>
  }

  export type UserCreateManyBarangayInputEnvelope = {
    data: UserCreateManyBarangayInput | UserCreateManyBarangayInput[]
    skipDuplicates?: boolean
  }

  export type LineCreateWithoutBarangayInput = {
    id?: string
    name: string
    password?: string | null
    createdAt?: Date | string
    status?: number
    municipal: MunicipalCreateNestedOneWithoutLineInput
    province: ProvinceCreateNestedOneWithoutLineInput
    region: RegionCreateNestedOneWithoutLineInput
    Department?: DepartmentCreateNestedManyWithoutLineInput
    Account?: AccountCreateNestedManyWithoutLineInput
    User?: UserCreateNestedManyWithoutLineInput
    Position?: PositionCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkCreateNestedManyWithoutLineInput
    Supplies?: SuppliesCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutLineInput
    Group?: GroupCreateNestedManyWithoutLineInput
    AdminProfile?: AdminProfileCreateNestedOneWithoutLineInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetCreateNestedManyWithoutLineInput
  }

  export type LineUncheckedCreateWithoutBarangayInput = {
    id?: string
    name: string
    password?: string | null
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
    Department?: DepartmentUncheckedCreateNestedManyWithoutLineInput
    Account?: AccountUncheckedCreateNestedManyWithoutLineInput
    User?: UserUncheckedCreateNestedManyWithoutLineInput
    Position?: PositionUncheckedCreateNestedManyWithoutLineInput
    SalaryGrade?: SalaryGradeUncheckedCreateNestedManyWithoutLineInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutLineInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutLineInput
    InvitationLink?: InvitationLinkUncheckedCreateNestedManyWithoutLineInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutLineInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutLineInput
    Group?: GroupUncheckedCreateNestedManyWithoutLineInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutLineInput
    SuppliesDataSet?: SuppliesDataSetUncheckedCreateNestedManyWithoutLineInput
  }

  export type LineCreateOrConnectWithoutBarangayInput = {
    where: LineWhereUniqueInput
    create: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput>
  }

  export type LineCreateManyBarangayInputEnvelope = {
    data: LineCreateManyBarangayInput | LineCreateManyBarangayInput[]
    skipDuplicates?: boolean
  }

  export type MunicipalUpsertWithoutBarangaysInput = {
    update: XOR<MunicipalUpdateWithoutBarangaysInput, MunicipalUncheckedUpdateWithoutBarangaysInput>
    create: XOR<MunicipalCreateWithoutBarangaysInput, MunicipalUncheckedCreateWithoutBarangaysInput>
    where?: MunicipalWhereInput
  }

  export type MunicipalUpdateToOneWithWhereWithoutBarangaysInput = {
    where?: MunicipalWhereInput
    data: XOR<MunicipalUpdateWithoutBarangaysInput, MunicipalUncheckedUpdateWithoutBarangaysInput>
  }

  export type MunicipalUpdateWithoutBarangaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    Province?: ProvinceUpdateOneWithoutMunicipalsNestedInput
    User?: UserUpdateManyWithoutMunicipalNestedInput
    Line?: LineUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateWithoutBarangaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UserUncheckedUpdateManyWithoutMunicipalNestedInput
    Line?: LineUncheckedUpdateManyWithoutMunicipalNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutBarangayInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutBarangayInput, UserUncheckedUpdateWithoutBarangayInput>
    create: XOR<UserCreateWithoutBarangayInput, UserUncheckedCreateWithoutBarangayInput>
  }

  export type UserUpdateWithWhereUniqueWithoutBarangayInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutBarangayInput, UserUncheckedUpdateWithoutBarangayInput>
  }

  export type UserUpdateManyWithWhereWithoutBarangayInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutBarangayInput>
  }

  export type LineUpsertWithWhereUniqueWithoutBarangayInput = {
    where: LineWhereUniqueInput
    update: XOR<LineUpdateWithoutBarangayInput, LineUncheckedUpdateWithoutBarangayInput>
    create: XOR<LineCreateWithoutBarangayInput, LineUncheckedCreateWithoutBarangayInput>
  }

  export type LineUpdateWithWhereUniqueWithoutBarangayInput = {
    where: LineWhereUniqueInput
    data: XOR<LineUpdateWithoutBarangayInput, LineUncheckedUpdateWithoutBarangayInput>
  }

  export type LineUpdateManyWithWhereWithoutBarangayInput = {
    where: LineScalarWhereInput
    data: XOR<LineUpdateManyMutationInput, LineUncheckedUpdateManyWithoutBarangayInput>
  }

  export type UserCreateWithoutAccomplishmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    headResponse?: AccomplishmentResponseCreateNestedManyWithoutHeadInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutAccomplishmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    headResponse?: AccomplishmentResponseUncheckedCreateNestedManyWithoutHeadInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutAccomplishmentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccomplishmentInput, UserUncheckedCreateWithoutAccomplishmentInput>
  }

  export type AccomplishmentResponseCreateWithoutAccomplishmentInput = {
    id?: string
    message: string
    timestamp?: Date | string
    head: UserCreateNestedOneWithoutHeadResponseInput
  }

  export type AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput = {
    id?: string
    headId: string
    message: string
    timestamp?: Date | string
  }

  export type AccomplishmentResponseCreateOrConnectWithoutAccomplishmentInput = {
    where: AccomplishmentResponseWhereUniqueInput
    create: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput>
  }

  export type AccomplishmentResponseCreateManyAccomplishmentInputEnvelope = {
    data: AccomplishmentResponseCreateManyAccomplishmentInput | AccomplishmentResponseCreateManyAccomplishmentInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAccomplishmentInput = {
    update: XOR<UserUpdateWithoutAccomplishmentInput, UserUncheckedUpdateWithoutAccomplishmentInput>
    create: XOR<UserCreateWithoutAccomplishmentInput, UserUncheckedCreateWithoutAccomplishmentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccomplishmentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccomplishmentInput, UserUncheckedUpdateWithoutAccomplishmentInput>
  }

  export type UserUpdateWithoutAccomplishmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutAccomplishmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type AccomplishmentResponseUpsertWithWhereUniqueWithoutAccomplishmentInput = {
    where: AccomplishmentResponseWhereUniqueInput
    update: XOR<AccomplishmentResponseUpdateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedUpdateWithoutAccomplishmentInput>
    create: XOR<AccomplishmentResponseCreateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedCreateWithoutAccomplishmentInput>
  }

  export type AccomplishmentResponseUpdateWithWhereUniqueWithoutAccomplishmentInput = {
    where: AccomplishmentResponseWhereUniqueInput
    data: XOR<AccomplishmentResponseUpdateWithoutAccomplishmentInput, AccomplishmentResponseUncheckedUpdateWithoutAccomplishmentInput>
  }

  export type AccomplishmentResponseUpdateManyWithWhereWithoutAccomplishmentInput = {
    where: AccomplishmentResponseScalarWhereInput
    data: XOR<AccomplishmentResponseUpdateManyMutationInput, AccomplishmentResponseUncheckedUpdateManyWithoutAccomplishmentInput>
  }

  export type UserCreateWithoutHeadResponseInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    sentNotifications?: NotificationCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationCreateNestedManyWithoutRecipientInput
    department?: DepartmentCreateNestedOneWithoutUsersInput
    headedDepartment?: DepartmentCreateNestedOneWithoutHeadInput
    Position?: PositionCreateNestedOneWithoutUsersInput
    SalaryGrade?: SalaryGradeCreateNestedOneWithoutUsersInput
    Leave?: LeaveCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementCreateNestedManyWithoutAuthorInput
    account?: AccountCreateNestedOneWithoutUserInput
    Promotions?: PromotionCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseCreateNestedManyWithoutRecipientInput
    region?: RegionCreateNestedOneWithoutUserInput
    province?: ProvinceCreateNestedOneWithoutUserInput
    municipal?: MunicipalCreateNestedOneWithoutUserInput
    barangay?: BarangayCreateNestedOneWithoutUserInput
    PositionSlot?: PositionSlotCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentCreateNestedManyWithoutUserInput
    line?: LineCreateNestedOneWithoutUserInput
    Supplies?: SuppliesCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureCreateNestedOneWithoutUserInput
    Application?: ApplicationCreateNestedManyWithoutUserInput
    privilege?: PrivilegeCreateNestedOneWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderCreateNestedManyWithoutUserInput
    Group?: GroupCreateNestedOneWithoutUsersInput
    chief?: GroupCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserCreateNestedManyWithoutGrantByInput
  }

  export type UserUncheckedCreateWithoutHeadResponseInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
    sentNotifications?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifications?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    headedDepartment?: DepartmentUncheckedCreateNestedOneWithoutHeadInput
    Leave?: LeaveUncheckedCreateNestedManyWithoutUserInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutAuthorInput
    Promotions?: PromotionUncheckedCreateNestedManyWithoutUserInput
    bdaySender?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutSenderInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedCreateNestedManyWithoutRecipientInput
    PositionSlot?: PositionSlotUncheckedCreateNestedOneWithoutUserInput
    Accomplishment?: AccomplishmentUncheckedCreateNestedManyWithoutUserInput
    Supplies?: SuppliesUncheckedCreateNestedManyWithoutUserInput
    SuppliesRecord?: SuppliesRecordUncheckedCreateNestedManyWithoutUserInput
    LogRecord?: LogRecordUncheckedCreateNestedManyWithoutUserInput
    transferTo?: TransferredSuppliesUncheckedCreateNestedManyWithoutTransferredToInput
    TransferredSupplies?: TransferredSuppliesUncheckedCreateNestedManyWithoutUserInput
    ProfilePicture?: ProfilePictureUncheckedCreateNestedOneWithoutUserInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedCreateNestedManyWithoutUserInput
    chief?: GroupUncheckedCreateNestedManyWithoutChiefInput
    InventoryBox?: InventoryBoxUncheckedCreateNestedManyWithoutCreatedByInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedCreateNestedManyWithoutUserInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedCreateNestedManyWithoutUserInput
    GrantContainer?: ContainerAllowedUserUncheckedCreateNestedManyWithoutGrantByInput
  }

  export type UserCreateOrConnectWithoutHeadResponseInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHeadResponseInput, UserUncheckedCreateWithoutHeadResponseInput>
  }

  export type AccomplishmentCreateWithoutAccomplishmentResponseInput = {
    id?: string
    timestamp?: Date | string
    start: Date | string
    end: Date | string
    task: string
    user?: UserCreateNestedOneWithoutAccomplishmentInput
  }

  export type AccomplishmentUncheckedCreateWithoutAccomplishmentResponseInput = {
    id?: string
    timestamp?: Date | string
    userId?: string | null
    start: Date | string
    end: Date | string
    task: string
  }

  export type AccomplishmentCreateOrConnectWithoutAccomplishmentResponseInput = {
    where: AccomplishmentWhereUniqueInput
    create: XOR<AccomplishmentCreateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedCreateWithoutAccomplishmentResponseInput>
  }

  export type UserUpsertWithoutHeadResponseInput = {
    update: XOR<UserUpdateWithoutHeadResponseInput, UserUncheckedUpdateWithoutHeadResponseInput>
    create: XOR<UserCreateWithoutHeadResponseInput, UserUncheckedCreateWithoutHeadResponseInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHeadResponseInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHeadResponseInput, UserUncheckedUpdateWithoutHeadResponseInput>
  }

  export type UserUpdateWithoutHeadResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutHeadResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type AccomplishmentUpsertWithoutAccomplishmentResponseInput = {
    update: XOR<AccomplishmentUpdateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedUpdateWithoutAccomplishmentResponseInput>
    create: XOR<AccomplishmentCreateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedCreateWithoutAccomplishmentResponseInput>
    where?: AccomplishmentWhereInput
  }

  export type AccomplishmentUpdateToOneWithWhereWithoutAccomplishmentResponseInput = {
    where?: AccomplishmentWhereInput
    data: XOR<AccomplishmentUpdateWithoutAccomplishmentResponseInput, AccomplishmentUncheckedUpdateWithoutAccomplishmentResponseInput>
  }

  export type AccomplishmentUpdateWithoutAccomplishmentResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutAccomplishmentNestedInput
  }

  export type AccomplishmentUncheckedUpdateWithoutAccomplishmentResponseInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
  }

  export type DepartmentCreateManyLineInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    headId?: string | null
    idCode?: string | null
  }

  export type AccountCreateManyLineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string
    status?: number
    role?: string
    active?: boolean
  }

  export type UserCreateManyLineInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type PositionCreateManyLineInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    departmentId?: string | null
  }

  export type SalaryGradeCreateManyLineInput = {
    id?: string
    grade: number
    amount: number
    createdAt?: Date | string
  }

  export type AnnouncementCreateManyLineInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type BirthdayNoticeResponseCreateManyLineInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    recipientId?: string | null
  }

  export type InvitationLinkCreateManyLineInput = {
    id?: string
    code: string
    createdAt?: Date | string
    expiresAt?: Date | string | null
    used?: boolean
    url: string
  }

  export type SuppliesCreateManyLineInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
  }

  export type SupplyBatchOrderCreateManyLineInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    inventoryBoxId?: string | null
  }

  export type GroupCreateManyLineInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    userId?: string | null
  }

  export type InventoryBoxCreateManyLineInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    userId: string
    departmentId?: string | null
  }

  export type SuppliesDataSetCreateManyLineInput = {
    id?: string
    title: string
    timestamp?: Date | string
    inventoryBoxId: string
  }

  export type DepartmentUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    head?: UserUpdateOneWithoutHeadedDepartmentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUpdateManyWithoutUnitNestedInput
    Group?: GroupUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    Position?: PositionUncheckedUpdateManyWithoutDepartmentNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutUnitNestedInput
    Group?: GroupUncheckedUpdateManyWithoutUnitNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type DepartmentUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    headId?: NullableStringFieldUpdateOperationsInput | string | null
    idCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUncheckedUpdateOneWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalaryGradeUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutSalaryGradeNestedInput
    SalaryGradeHistory?: SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeNestedInput
    positions?: PositionUncheckedUpdateManyWithoutSalaryGradeNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutSalaryGradeNestedInput
  }

  export type SalaryGradeUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    grade?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AnnouncementUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAnnouncementNestedInput
    unit?: DepartmentUpdateOneWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnnouncementUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BirthdayNoticeResponseUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Sender?: UserUpdateOneRequiredWithoutBdaySenderNestedInput
    Recipient?: UserUpdateOneWithoutBdayRecipientNestedInput
  }

  export type BirthdayNoticeResponseUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationLinkUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationLinkUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationLinkUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyBatchOrderUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneWithoutSupplyBatchOrderNestedInput
    order?: SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput
    InventoryBox?: InventoryBoxUpdateOneWithoutBatchNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    order?: SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GroupUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: DepartmentUpdateOneRequiredWithoutGroupNestedInput
    users?: UserUpdateManyWithoutGroupNestedInput
    chief?: UserUpdateOneWithoutChiefNestedInput
  }

  export type GroupUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutGroupNestedInput
  }

  export type GroupUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryBoxUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesDataSetUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    unit?: SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateManyWithoutLineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
  }

  export type ProfilePictureCreateManyAssetInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type SupplyOrderSupportFileCreateManyFileInput = {
    id?: string
    supplyBatchOrderId?: string | null
  }

  export type ProfilePictureUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfilePictureNestedInput
  }

  export type ProfilePictureUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfilePictureUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyOrderSupportFileUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    SupplyBatchOrder?: SupplyBatchOrderUpdateOneWithoutFilesNestedInput
  }

  export type SupplyOrderSupportFileUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyOrderSupportFileUncheckedUpdateManyWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyBatchOrderCreateManyInventoryBoxInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    userId?: string | null
    status?: number
    lineId?: string | null
  }

  export type InventoryAccessLogsCreateManyBoxInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    action?: string
    suppliesId?: string | null
  }

  export type SupplyBatchCreateManyBoxInput = {
    id?: string
    timestamp?: Date | string
    title: string
    suppliesDataSetId?: string | null
  }

  export type ContainerAllowedUserCreateManyContainerInput = {
    id?: string
    userId?: string | null
    grantByUserId: string
    timestamp?: Date | string
  }

  export type SuppliesDataSetCreateManyContainerInput = {
    id?: string
    title: string
    timestamp?: Date | string
    lineId: string
  }

  export type SupplyBatchOrderUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneWithoutSupplyBatchOrderNestedInput
    order?: SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput
    line?: LineUpdateOneWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    order?: SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsUpdateWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutInventoryAccessLogsNestedInput
    supply?: SuppliesUpdateOneWithoutInventoryAccessLogsNestedInput
  }

  export type InventoryAccessLogsUncheckedUpdateWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyBatchUpdateWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    SupplyBatchItem?: SupplyBatchItemUpdateManyWithoutBatchNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutListNestedInput
  }

  export type SupplyBatchUncheckedUpdateWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateManyWithoutBatchNestedInput
  }

  export type SupplyBatchUncheckedUpdateManyWithoutBoxInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContainerAllowedUserUpdateWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutContainerAllowedUserNestedInput
    grantBy?: UserUpdateOneRequiredWithoutGrantContainerNestedInput
  }

  export type ContainerAllowedUserUncheckedUpdateWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesDataSetUpdateWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: SuppliesQualityUpdateManyWithoutSuppliesDataSetNestedInput
    line?: LineUpdateOneRequiredWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    unit?: SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    list?: SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesDataSetNestedInput
  }

  export type SuppliesDataSetUncheckedUpdateManyWithoutContainerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesRecordCreateManySuppyIdInput = {
    id?: string
    timestamp?: Date | string
    userId: string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type AssetsCreateManySuppliesInput = {
    id?: string
    url: string
    fileSize: string
    fileType: string
    fileName: string
    createdAt?: Date | string
  }

  export type TransferredSuppliesCreateManySupplyInput = {
    id?: string
    userId: string
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type SupplieRecieveHistoryCreateManySupplyInput = {
    id?: string
    userId: string
    timestamp?: Date | string
    quantity?: number
    condition?: string | null
  }

  export type InventoryAccessLogsCreateManySupplyInput = {
    id?: string
    userId?: string | null
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
  }

  export type SupplyOrderCreateManySupplyInput = {
    id?: string
    supplyBatchOrderId?: string | null
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyPriceTrackCreateManySupplyInput = {
    id?: string
    value?: number
    timestamp?: Date | string
  }

  export type SupplyStockTrackCreateManySupplyInput = {
    id?: string
    stock?: number
    timestamp?: Date | string
  }

  export type SuppliesRecordUpdateWithoutSuppyIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutSuppliesRecordNestedInput
    modified?: SuppliesUpdateOneWithoutPartNestedInput
  }

  export type SuppliesRecordUncheckedUpdateWithoutSuppyIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordUncheckedUpdateManyWithoutSuppyIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetsUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProfilePicture?: ProfilePictureUpdateManyWithoutAssetNestedInput
    SupplyOrderSupport?: SupplyOrderSupportFileUpdateManyWithoutFileNestedInput
  }

  export type AssetsUncheckedUpdateWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProfilePicture?: ProfilePictureUncheckedUpdateManyWithoutAssetNestedInput
    SupplyOrderSupport?: SupplyOrderSupportFileUncheckedUpdateManyWithoutFileNestedInput
  }

  export type AssetsUncheckedUpdateManyWithoutSuppliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    fileSize?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferredSuppliesUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutTransferredSuppliesNestedInput
    transferredTo?: UserUpdateOneRequiredWithoutTransferToNestedInput
  }

  export type TransferredSuppliesUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplieRecieveHistoryUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplieRecieveHistoryUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: IntFieldUpdateOperationsInput | number
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutInventoryAccessLogsNestedInput
    box?: InventoryBoxUpdateOneWithoutInventoryAccessLogsNestedInput
  }

  export type InventoryAccessLogsUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    SupplyBatchOrder?: SupplyBatchOrderUpdateOneWithoutOrderNestedInput
    unit?: SuppliesQualityUpdateOneRequiredWithoutSupplyOrderNestedInput
  }

  export type SupplyOrderUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyPriceTrackUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyPriceTrackUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyPriceTrackUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackUncheckedUpdateWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyStockTrackUncheckedUpdateManyWithoutSupplyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchItemCreateManyBatchInput = {
    id?: string
    suppliesId?: string | null
    timestamp?: Date | string
  }

  export type SupplyBatchItemUpdateWithoutBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    supply?: SuppliesUpdateOneWithoutSupplyBatchItemNestedInput
  }

  export type SupplyBatchItemUncheckedUpdateWithoutBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchItemUncheckedUpdateManyWithoutBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyOrderCreateManySupplyBatchOrderInput = {
    id?: string
    suppliesId: string
    quantity?: number
    status?: string
    suppliesQualityId: string
  }

  export type SupplyOrderSupportFileCreateManySupplyBatchOrderInput = {
    id?: string
    assetsId: string
  }

  export type SupplyOrderUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    supply?: SuppliesUpdateOneRequiredWithoutSupplyOrderNestedInput
    unit?: SuppliesQualityUpdateOneRequiredWithoutSupplyOrderNestedInput
  }

  export type SupplyOrderUncheckedUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    suppliesQualityId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderSupportFileUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    file?: AssetsUpdateOneRequiredWithoutSupplyOrderSupportNestedInput
  }

  export type SupplyOrderSupportFileUncheckedUpdateWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetsId?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesQualityCreateManySuppliesDataSetInput = {
    id?: string
    quality: string
    perQuality?: number
  }

  export type SupplyBatchCreateManySuppliesDataSetInput = {
    id?: string
    timestamp?: Date | string
    title: string
    inventoryBoxId: string
  }

  export type SuppliesCreateManySuppliesDataSetInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
  }

  export type SuppliesQualityUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    supplies?: SuppliesUpdateManyWithoutSuppliesQualityNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutUnitNestedInput
  }

  export type SuppliesQualityUncheckedUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
    supplies?: SuppliesUncheckedUpdateManyWithoutSuppliesQualityNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type SuppliesQualityUncheckedUpdateManyWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    quality?: StringFieldUpdateOperationsInput | string
    perQuality?: IntFieldUpdateOperationsInput | number
  }

  export type SupplyBatchUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    box?: InventoryBoxUpdateOneRequiredWithoutSupplyBatchNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateManyWithoutBatchNestedInput
  }

  export type SupplyBatchUncheckedUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateManyWithoutBatchNestedInput
  }

  export type SupplyBatchUncheckedUpdateManyWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesDataSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesCreateManySuppliesQualityInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesDataSetId?: string | null
  }

  export type SupplyOrderCreateManyUnitInput = {
    id?: string
    supplyBatchOrderId?: string | null
    suppliesId: string
    quantity?: number
    status?: string
  }

  export type SuppliesUpdateWithoutSuppliesQualityInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSuppliesQualityInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesQualityInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupplyOrderUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    SupplyBatchOrder?: SupplyBatchOrderUpdateOneWithoutOrderNestedInput
    supply?: SuppliesUpdateOneRequiredWithoutSupplyOrderNestedInput
  }

  export type SupplyOrderUncheckedUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type SupplyOrderUncheckedUpdateManyWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplyBatchOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type SuppliesCreateManySuppliesCategoryInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    userId?: string | null
    condition?: string | null
    status?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
  }

  export type SuppliesUpdateWithoutSuppliesCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    user?: UserUpdateOneWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutSuppliesCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateManyWithoutSuppliesCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyDepartmentInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type PositionCreateManyDepartmentInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    salaryGradeId?: string | null
    plantilla?: boolean
    lineId?: string | null
  }

  export type AnnouncementCreateManyUnitInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    authorId: string
    lineId: string
    path?: string | null
    important?: boolean
  }

  export type GroupCreateManyUnitInput = {
    id?: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
    userId?: string | null
  }

  export type InventoryBoxCreateManyUnitInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    userId: string
  }

  export type UserUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutPositionsNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateManyWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnnouncementUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAnnouncementNestedInput
    line?: LineUpdateOneRequiredWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AnnouncementUncheckedUpdateManyWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
  }

  export type GroupUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutGroupNestedInput
    line?: LineUpdateOneWithoutGroupNestedInput
    chief?: UserUpdateOneWithoutChiefNestedInput
  }

  export type GroupUncheckedUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutGroupNestedInput
  }

  export type GroupUncheckedUpdateManyWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryBoxUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    createdBy?: UserUpdateOneRequiredWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateManyWithoutUnitInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateManyGroupInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
  }

  export type UserUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LineCreateManyAdminProfileInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
  }

  export type LineUpdateWithoutAdminProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutAdminProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateManyWithoutAdminProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
  }

  export type NotificationCreateManySenderInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    recipientId: string
    path?: string | null
    isRead?: boolean
  }

  export type NotificationCreateManyRecipientInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    senderId: string
    path?: string | null
    isRead?: boolean
  }

  export type LeaveCreateManyUserInput = {
    id?: string
    type: string
    startDate: Date | string
    endDate: Date | string
    reason?: string | null
    status?: string
    createdAt?: Date | string
  }

  export type AnnouncementCreateManyAuthorInput = {
    id?: string
    title: string
    content: string
    createdAt?: Date | string
    lineId: string
    path?: string | null
    important?: boolean
    departmentId?: string | null
  }

  export type PromotionCreateManyUserInput = {
    id?: string
    timestamp?: Date | string
    positionId: string
  }

  export type BirthdayNoticeResponseCreateManySenderInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    recipientId?: string | null
    lineId: string
  }

  export type BirthdayNoticeResponseCreateManyRecipientInput = {
    id?: string
    message?: string | null
    like?: boolean
    timestamp?: Date | string
    senderId: string
    lineId: string
  }

  export type AccomplishmentCreateManyUserInput = {
    id?: string
    timestamp?: Date | string
    start: Date | string
    end: Date | string
    task: string
  }

  export type AccomplishmentResponseCreateManyHeadInput = {
    id?: string
    accomplishmentId: string
    message: string
    timestamp?: Date | string
  }

  export type SuppliesCreateManyUserInput = {
    id?: string
    code?: number
    consumable?: boolean
    item: string
    description?: string | null
    quantity?: number
    notifyAtStockOf?: number
    price?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lineId: string
    condition?: string | null
    status?: string | null
    suppliesCategoryId?: string | null
    suppliesQualityId?: string | null
    suppliesDataSetId?: string | null
  }

  export type SuppliesRecordCreateManyUserInput = {
    id?: string
    suppliesId: string
    timestamp?: Date | string
    action: string
    status?: number
    description?: string | null
    modifiedId?: string | null
  }

  export type LogRecordCreateManyUserInput = {
    id?: string
    action: string
    timestamp?: Date | string
  }

  export type TransferredSuppliesCreateManyTransferredToInput = {
    id?: string
    suppliesId?: string | null
    userId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type TransferredSuppliesCreateManyUserInput = {
    id?: string
    suppliesId?: string | null
    transferredToId: string
    timestamp?: Date | string
    condition?: string | null
  }

  export type ApplicationCreateManyUserInput = {
    id?: string
    positionId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SupplyBatchOrderCreateManyUserInput = {
    id?: string
    timestamp?: Date | string
    title?: string | null
    status?: number
    lineId?: string | null
    inventoryBoxId?: string | null
  }

  export type GroupCreateManyChiefInput = {
    id?: string
    departmentId: string
    name?: string | null
    createdAt?: Date | string
    lineId?: string | null
  }

  export type InventoryBoxCreateManyCreatedByInput = {
    id?: string
    name: string
    code: number
    createdAt?: Date | string
    lineId: string
    departmentId?: string | null
  }

  export type InventoryAccessLogsCreateManyUserInput = {
    id?: string
    timestamp: Date | string
    inventoryBoxId?: string | null
    action?: string
    suppliesId?: string | null
  }

  export type ContainerAllowedUserCreateManyUserInput = {
    id?: string
    inventoryBoxId: string
    grantByUserId: string
    timestamp?: Date | string
  }

  export type ContainerAllowedUserCreateManyGrantByInput = {
    id?: string
    userId?: string | null
    inventoryBoxId: string
    timestamp?: Date | string
  }

  export type NotificationUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    recipient?: UserUpdateOneRequiredWithoutReceivedNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    sender?: UserUpdateOneRequiredWithoutSentNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LeaveUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeaveUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeaveUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AnnouncementUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    line?: LineUpdateOneRequiredWithoutAnnouncementNestedInput
    unit?: DepartmentUpdateOneWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnnouncementUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    path?: NullableStringFieldUpdateOperationsInput | string | null
    important?: BoolFieldUpdateOperationsInput | boolean
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    postion?: PositionUpdateOneRequiredWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    positionId?: StringFieldUpdateOperationsInput | string
  }

  export type PromotionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    positionId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Recipient?: UserUpdateOneWithoutBdayRecipientNestedInput
    line?: LineUpdateOneRequiredWithoutBirthdayNoticeResponseNestedInput
  }

  export type BirthdayNoticeResponseUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    recipientId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Sender?: UserUpdateOneRequiredWithoutBdaySenderNestedInput
    line?: LineUpdateOneRequiredWithoutBirthdayNoticeResponseNestedInput
  }

  export type BirthdayNoticeResponseUncheckedUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    like?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    senderId?: StringFieldUpdateOperationsInput | string
    lineId?: StringFieldUpdateOperationsInput | string
  }

  export type AccomplishmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
    AccomplishmentResponse?: AccomplishmentResponseUpdateManyWithoutAccomplishmentNestedInput
  }

  export type AccomplishmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
    AccomplishmentResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutAccomplishmentNestedInput
  }

  export type AccomplishmentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    task?: StringFieldUpdateOperationsInput | string
  }

  export type AccomplishmentResponseUpdateWithoutHeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    accomplishment?: AccomplishmentUpdateOneRequiredWithoutAccomplishmentResponseNestedInput
  }

  export type AccomplishmentResponseUncheckedUpdateWithoutHeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    accomplishmentId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccomplishmentResponseUncheckedUpdateManyWithoutHeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    accomplishmentId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SuppliesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    line?: LineUpdateOneRequiredWithoutSuppliesNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutSupplyNestedInput
    SuppliesCategory?: SuppliesCategoryUpdateOneWithoutSuppliesNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUpdateManyWithoutSupplyNestedInput
    SuppliesQuality?: SuppliesQualityUpdateOneWithoutSuppliesNestedInput
    SupplyStockTrack?: SupplyStockTrackUpdateManyWithoutSupplyNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateOneWithoutSuppliesNestedInput
  }

  export type SuppliesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutSuppyIdNestedInput
    asset?: AssetsUncheckedUpdateManyWithoutSuppliesNestedInput
    Part?: SuppliesRecordUncheckedUpdateOneWithoutModifiedNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutSupplyNestedInput
    SupplieRecieveHistory?: SupplieRecieveHistoryUncheckedUpdateManyWithoutSupplyNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyOrder?: SupplyOrderUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyBatchItem?: SupplyBatchItemUncheckedUpdateOneWithoutSupplyNestedInput
    SupplyPriceTrack?: SupplyPriceTrackUncheckedUpdateManyWithoutSupplyNestedInput
    SupplyStockTrack?: SupplyStockTrackUncheckedUpdateManyWithoutSupplyNestedInput
  }

  export type SuppliesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    consumable?: BoolFieldUpdateOperationsInput | boolean
    item?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    notifyAtStockOf?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesCategoryId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesQualityId?: NullableStringFieldUpdateOperationsInput | string | null
    suppliesDataSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    suppyId?: SuppliesUpdateOneRequiredWithoutSuppliesRecordNestedInput
    modified?: SuppliesUpdateOneWithoutPartNestedInput
  }

  export type SuppliesRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SuppliesRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LogRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferredSuppliesUpdateWithoutTransferredToInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    supply?: SuppliesUpdateOneWithoutTransferredSuppliesNestedInput
    user?: UserUpdateOneRequiredWithoutTransferredSuppliesNestedInput
  }

  export type TransferredSuppliesUncheckedUpdateWithoutTransferredToInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutTransferredToInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    supply?: SuppliesUpdateOneWithoutTransferredSuppliesNestedInput
    transferredTo?: UserUpdateOneRequiredWithoutTransferToNestedInput
  }

  export type TransferredSuppliesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferredSuppliesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
    transferredToId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    condition?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    position?: PositionUpdateOneRequiredWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupplyBatchOrderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    order?: SupplyOrderUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUpdateManyWithoutSupplyBatchOrderNestedInput
    line?: LineUpdateOneWithoutSupplyBatchOrderNestedInput
    InventoryBox?: InventoryBoxUpdateOneWithoutBatchNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    order?: SupplyOrderUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
    files?: SupplyOrderSupportFileUncheckedUpdateManyWithoutSupplyBatchOrderNestedInput
  }

  export type SupplyBatchOrderUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GroupUpdateWithoutChiefInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    unit?: DepartmentUpdateOneRequiredWithoutGroupNestedInput
    users?: UserUpdateManyWithoutGroupNestedInput
    line?: LineUpdateOneWithoutGroupNestedInput
  }

  export type GroupUncheckedUpdateWithoutChiefInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutGroupNestedInput
  }

  export type GroupUncheckedUpdateManyWithoutChiefInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryBoxUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    batch?: SupplyBatchOrderUpdateManyWithoutInventoryBoxNestedInput
    line?: LineUpdateOneRequiredWithoutInventoryBoxNestedInput
    unit?: DepartmentUpdateOneWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    batch?: SupplyBatchOrderUncheckedUpdateManyWithoutInventoryBoxNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutBoxNestedInput
    SupplyBatch?: SupplyBatchUncheckedUpdateManyWithoutBoxNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutContainerNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutContainerNestedInput
  }

  export type InventoryBoxUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineId?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    action?: StringFieldUpdateOperationsInput | string
    box?: InventoryBoxUpdateOneWithoutInventoryAccessLogsNestedInput
    supply?: SuppliesUpdateOneWithoutInventoryAccessLogsNestedInput
  }

  export type InventoryAccessLogsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InventoryAccessLogsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    inventoryBoxId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    suppliesId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContainerAllowedUserUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    container?: InventoryBoxUpdateOneRequiredWithoutContainerAllowedUserNestedInput
    grantBy?: UserUpdateOneRequiredWithoutGrantContainerNestedInput
  }

  export type ContainerAllowedUserUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    grantByUserId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserUpdateWithoutGrantByInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutContainerAllowedUserNestedInput
    container?: InventoryBoxUpdateOneRequiredWithoutContainerAllowedUserNestedInput
  }

  export type ContainerAllowedUserUncheckedUpdateWithoutGrantByInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContainerAllowedUserUncheckedUpdateManyWithoutGrantByInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    inventoryBoxId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyPositionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type PromotionCreateManyPostionInput = {
    id?: string
    userId: string
    timestamp?: Date | string
  }

  export type PositionSlotCreateManyPosInput = {
    id?: string
    salaryGradeId: string
    userId?: string | null
  }

  export type ApplicationCreateManyPositionInput = {
    id?: string
    userId: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionUpdateWithoutPostionInput = {
    id?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutPostionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionUncheckedUpdateManyWithoutPostionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PositionSlotUpdateWithoutPosInput = {
    id?: StringFieldUpdateOperationsInput | string
    salaryGrade?: SalaryGradeUpdateOneRequiredWithoutPositionSlotNestedInput
    user?: UserUpdateOneWithoutPositionSlotNestedInput
  }

  export type PositionSlotUncheckedUpdateWithoutPosInput = {
    id?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionSlotUncheckedUpdateManyWithoutPosInput = {
    id?: StringFieldUpdateOperationsInput | string
    salaryGradeId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUncheckedUpdateManyWithoutPositionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManySalaryGradeInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type SalaryGradeHistoryCreateManySalaryGradeInput = {
    id?: string
    userId: string
    effectiveDate: Date | string
    createdAt?: Date | string
    amount: number
  }

  export type PositionCreateManySalaryGradeInput = {
    id?: string
    name: string
    description?: string | null
    max?: number
    createdAt?: Date | string
    itemNumber?: string | null
    plantilla?: boolean
    lineId?: string | null
    departmentId?: string | null
  }

  export type PositionSlotCreateManySalaryGradeInput = {
    id?: string
    positionId: string
    userId?: string | null
  }

  export type UserUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalaryGradeHistoryUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type SalaryGradeHistoryUncheckedUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type SalaryGradeHistoryUncheckedUpdateManyWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type PositionUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUpdateManyWithoutPosNestedInput
    line?: LineUpdateOneWithoutPositionNestedInput
    department?: DepartmentUpdateOneWithoutPositionNestedInput
    Application?: ApplicationUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPositionNestedInput
    Promotion?: PromotionUncheckedUpdateManyWithoutPostionNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateManyWithoutPosNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutPositionNestedInput
  }

  export type PositionUncheckedUpdateManyWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    max?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    itemNumber?: NullableStringFieldUpdateOperationsInput | string | null
    plantilla?: BoolFieldUpdateOperationsInput | boolean
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionSlotUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    pos?: PositionUpdateOneRequiredWithoutPositionSlotNestedInput
    user?: UserUpdateOneWithoutPositionSlotNestedInput
  }

  export type PositionSlotUncheckedUpdateWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PositionSlotUncheckedUpdateManyWithoutSalaryGradeInput = {
    id?: StringFieldUpdateOperationsInput | string
    positionId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProvinceCreateManyRegionInput = {
    id: string
    name: string
  }

  export type UserCreateManyRegionInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type LineCreateManyRegionInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    provinceId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
  }

  export type ProvinceUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipals?: MunicipalUpdateManyWithoutProvinceNestedInput
    User?: UserUpdateManyWithoutProvinceNestedInput
    Line?: LineUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    municipals?: MunicipalUncheckedUpdateManyWithoutProvinceNestedInput
    User?: UserUncheckedUpdateManyWithoutProvinceNestedInput
    Line?: LineUncheckedUpdateManyWithoutProvinceNestedInput
  }

  export type ProvinceUncheckedUpdateManyWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LineUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateManyWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MunicipalCreateManyProvinceInput = {
    id: string
    name: string
  }

  export type UserCreateManyProvinceInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type LineCreateManyProvinceInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    municipalId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
  }

  export type MunicipalUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    barangays?: BarangayUpdateManyWithoutMunicipalNestedInput
    User?: UserUpdateManyWithoutMunicipalNestedInput
    Line?: LineUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    barangays?: BarangayUncheckedUpdateManyWithoutMunicipalNestedInput
    User?: UserUncheckedUpdateManyWithoutMunicipalNestedInput
    Line?: LineUncheckedUpdateManyWithoutMunicipalNestedInput
  }

  export type MunicipalUncheckedUpdateManyWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LineUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateManyWithoutProvinceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    municipalId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BarangayCreateManyMunicipalInput = {
    id: string
    name: string
  }

  export type UserCreateManyMunicipalInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    provinceId?: string | null
    barangayId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type LineCreateManyMunicipalInput = {
    id?: string
    name: string
    password?: string | null
    barangayId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
  }

  export type BarangayUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateManyWithoutBarangayNestedInput
    Line?: LineUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayUncheckedUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    User?: UserUncheckedUpdateManyWithoutBarangayNestedInput
    Line?: LineUncheckedUpdateManyWithoutBarangayNestedInput
  }

  export type BarangayUncheckedUpdateManyWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    barangay?: BarangayUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LineUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    barangay?: BarangayUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateManyWithoutMunicipalInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    barangayId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyBarangayInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    suffix?: string | null
    birthDate?: Date | string | null
    email: string
    username: string
    gender?: string | null
    profilePicture?: string | null
    createdAt?: Date | string
    level?: number
    type?: string
    step?: number
    status?: string
    departmentId?: string | null
    positionId?: string | null
    salaryGradeId?: string | null
    accountId?: string | null
    regionId?: string | null
    municipalId?: string | null
    provinceId?: string | null
    lineId?: string | null
    privilegeId?: string | null
    groupId?: string | null
  }

  export type LineCreateManyBarangayInput = {
    id?: string
    name: string
    password?: string | null
    municipalId: string
    provinceId: string
    regionId: string
    createdAt?: Date | string
    status?: number
    adminProfileId?: string | null
  }

  export type UserUpdateWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentNotifications?: NotificationUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUpdateManyWithoutRecipientNestedInput
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    headedDepartment?: DepartmentUpdateOneWithoutHeadNestedInput
    Position?: PositionUpdateOneWithoutUsersNestedInput
    SalaryGrade?: SalaryGradeUpdateOneWithoutUsersNestedInput
    Leave?: LeaveUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUpdateManyWithoutAuthorNestedInput
    account?: AccountUpdateOneWithoutUserNestedInput
    Promotions?: PromotionUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUpdateManyWithoutRecipientNestedInput
    region?: RegionUpdateOneWithoutUserNestedInput
    province?: ProvinceUpdateOneWithoutUserNestedInput
    municipal?: MunicipalUpdateOneWithoutUserNestedInput
    PositionSlot?: PositionSlotUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUpdateManyWithoutHeadNestedInput
    line?: LineUpdateOneWithoutUserNestedInput
    Supplies?: SuppliesUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUpdateOneWithoutUserNestedInput
    Application?: ApplicationUpdateManyWithoutUserNestedInput
    privilege?: PrivilegeUpdateOneWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutUserNestedInput
    Group?: GroupUpdateOneWithoutUsersNestedInput
    chief?: GroupUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
    sentNotifications?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifications?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    headedDepartment?: DepartmentUncheckedUpdateOneWithoutHeadNestedInput
    Leave?: LeaveUncheckedUpdateManyWithoutUserNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutAuthorNestedInput
    Promotions?: PromotionUncheckedUpdateManyWithoutUserNestedInput
    bdaySender?: BirthdayNoticeResponseUncheckedUpdateManyWithoutSenderNestedInput
    bdayRecipient?: BirthdayNoticeResponseUncheckedUpdateManyWithoutRecipientNestedInput
    PositionSlot?: PositionSlotUncheckedUpdateOneWithoutUserNestedInput
    Accomplishment?: AccomplishmentUncheckedUpdateManyWithoutUserNestedInput
    headResponse?: AccomplishmentResponseUncheckedUpdateManyWithoutHeadNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutUserNestedInput
    SuppliesRecord?: SuppliesRecordUncheckedUpdateManyWithoutUserNestedInput
    LogRecord?: LogRecordUncheckedUpdateManyWithoutUserNestedInput
    transferTo?: TransferredSuppliesUncheckedUpdateManyWithoutTransferredToNestedInput
    TransferredSupplies?: TransferredSuppliesUncheckedUpdateManyWithoutUserNestedInput
    ProfilePicture?: ProfilePictureUncheckedUpdateOneWithoutUserNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutUserNestedInput
    chief?: GroupUncheckedUpdateManyWithoutChiefNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutCreatedByNestedInput
    InventoryAccessLogs?: InventoryAccessLogsUncheckedUpdateManyWithoutUserNestedInput
    ContainerAllowedUser?: ContainerAllowedUserUncheckedUpdateManyWithoutUserNestedInput
    GrantContainer?: ContainerAllowedUserUncheckedUpdateManyWithoutGrantByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    suffix?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    departmentId?: NullableStringFieldUpdateOperationsInput | string | null
    positionId?: NullableStringFieldUpdateOperationsInput | string | null
    salaryGradeId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    lineId?: NullableStringFieldUpdateOperationsInput | string | null
    privilegeId?: NullableStringFieldUpdateOperationsInput | string | null
    groupId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LineUpdateWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    municipal?: MunicipalUpdateOneRequiredWithoutLineNestedInput
    province?: ProvinceUpdateOneRequiredWithoutLineNestedInput
    region?: RegionUpdateOneRequiredWithoutLineNestedInput
    Department?: DepartmentUpdateManyWithoutLineNestedInput
    Account?: AccountUpdateManyWithoutLineNestedInput
    User?: UserUpdateManyWithoutLineNestedInput
    Position?: PositionUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUpdateManyWithoutLineNestedInput
    Group?: GroupUpdateManyWithoutLineNestedInput
    AdminProfile?: AdminProfileUpdateOneWithoutLineNestedInput
    InventoryBox?: InventoryBoxUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    Department?: DepartmentUncheckedUpdateManyWithoutLineNestedInput
    Account?: AccountUncheckedUpdateManyWithoutLineNestedInput
    User?: UserUncheckedUpdateManyWithoutLineNestedInput
    Position?: PositionUncheckedUpdateManyWithoutLineNestedInput
    SalaryGrade?: SalaryGradeUncheckedUpdateManyWithoutLineNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutLineNestedInput
    BirthdayNoticeResponse?: BirthdayNoticeResponseUncheckedUpdateManyWithoutLineNestedInput
    InvitationLink?: InvitationLinkUncheckedUpdateManyWithoutLineNestedInput
    Supplies?: SuppliesUncheckedUpdateManyWithoutLineNestedInput
    SupplyBatchOrder?: SupplyBatchOrderUncheckedUpdateManyWithoutLineNestedInput
    Group?: GroupUncheckedUpdateManyWithoutLineNestedInput
    InventoryBox?: InventoryBoxUncheckedUpdateManyWithoutLineNestedInput
    SuppliesDataSet?: SuppliesDataSetUncheckedUpdateManyWithoutLineNestedInput
  }

  export type LineUncheckedUpdateManyWithoutBarangayInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    municipalId?: StringFieldUpdateOperationsInput | string
    provinceId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    adminProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccomplishmentResponseCreateManyAccomplishmentInput = {
    id?: string
    headId: string
    message: string
    timestamp?: Date | string
  }

  export type AccomplishmentResponseUpdateWithoutAccomplishmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    head?: UserUpdateOneRequiredWithoutHeadResponseNestedInput
  }

  export type AccomplishmentResponseUncheckedUpdateWithoutAccomplishmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    headId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccomplishmentResponseUncheckedUpdateManyWithoutAccomplishmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    headId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}